3256	28526339	"NACK. Use getrawtransaction &lt;txid&gt; true  to get decoded transactions. If you want them all, you can bundle up multiple getrawtransaction requests in one JSON-2.0 ""batch"" request (see http://www.jsonrpc.org/specification#batch ). "	Clarify
3255	28513284	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/309f796b39d4ae7694c3f37a681c1ebcd1f58eda for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3254	28513896	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/249570b44af09d56eba244e0b0a3adf48e05f2e4 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3254	28515712	"@laanwj Any idea what is causing this build error, I don't understand the problem. "	nAnswer
3253	28488330	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6a86c24db146d9ca5d1d5c83099d935c3feb63bb for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3253	28507891	"Regarding watch-only addresses:  I would suggest to merge watch-only first, then I could maybe add watch-only-support to coin control.  Depending on whether this is an easy change or not,  I would like to have watch-only also visible in coin control. Maybe with a checkbox ""show watch-only"". I would "	Clarify
3252	28489076	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/22d1ac44dc57fa4e1f9cad3512cc139986b4f3fe for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3252	28519438	ACK of course (we need to ensure this time we push another master file update before RC phase starts). 	Clarify
3250	28482631	"If it's going to be in the mainline client, why not follow the same implementation of BIP0032 as Electrum or Armory? Interoperability between a very lightweight client (Electrum) and the heavy reference client would specifically be of a great advantage to users. There's both a python and a javascrip"	Clarify
3250	28483008	"We already have the implementation (merged with #2829), we're just not using it yet.   BIP0032 is a standard, so in principle it should be inter-operable. HOWEVER it's very much discouraged to have the same keys in multiple wallets in different programs (bitcoin-qt copes with double spends very badl"	Clarify
3249	28473284	"Personally I don't like this. The 10^-8 is an implementation detail. It makes sense to use it internally in programs, but I don't like exposing it on interfaces.  Changing this now also leaves open the way to disaster, imagine what could happen if a site used the wrong unit in RPC.  We had a similar"	Clarify
3249	28474200	"Yes, and also we can now be sure implementations can deal with fractional numbers. If we had started with Satoshis, everyone would have used integers and the switch to fractions of Satoshis would be more prone to errors. "	yAnswer
3249	28479591	"Given all the problems with existing floating point implementations, and existing JSON implementations, and how use of floating point has already lead to incorrect values following a multiplication or division etc. I have always supported the use of satoshis -- all integer -- in the RPC interface.  "	Clarify
3249	28480535	"@jgarzik That's a completely different discussion. JSON always represents numbers as doubles (well that's not strictly true I should say *almost all implementations do*). Moving the decimal point around does not solve that.   But I'd be all for ""send coin amounts as strings instead of numbers"" optio"	Clarify
3248	28468498	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/79afdd1869b71060481f92284f6e01dd1010516f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3248	28519484	ACK 	Clarify
3247	28514712	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6ad44f569335d57a56e5b28582255439980f9b73 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3245	28393994	"@diapolo Can you please check if the same happens on windows7/8 whatever you're running, I only have XP VMs "	Clarify
3245	28519615	"AFAIK XP has no IPv6 stack, I'm not sure why the test fail though... I ran them also on Win7 x64 and got no errors. "	nAnswer
3243	28388109	"Your probably experiencing the effects of the Mavericks App Nap feature. You'll need to right click the Bitcoin app and choose Get Info, then Prevent App Nap. See #3182 for a further explanation. "	Clarify
3243	28388861	"bitcoind in my case is running as a daemon, and they're not affected by App Nap.   Good call though, it's something I've been running into quite often with other apps. Useful feature, but not when you're doing something intentionally CPU intensive.  "	Clarify
3242	28334203	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/123d36bf95aeb9b73b7b0f189456fe22c0382626 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3239	28261928	The verbose flag seems needlessly redundant with getblocktemplate... 	Statement
3239	28261988	@luke-jr getblocktemplate always produces a subset of mempool  	Statement
3239	28262223	Not always...? Wouldn't the goal of a good mempool be to only keep transactions you'd be putting in templates? 	Statement
3239	28262901	"@luke-jr Yes, always.  Sometimes subset == set, but usually not.  The mempool will always store more than **one** block's worth of transactions.  getblocktemplate only returns up to 1MB, etc. "	Clarify
3239	28264035	"Could just add some non-standard extensions to bitcoind getblocktemplate to request more, but meh. "	Statement
3239	28273393	Nit: CTxMemPoolEntrys should be CTxMemPoolEntries 	Statement
3239	28300218	Remove EraseTransaction() while we're at it; only tx replacement uses that code. I don't see any way it could have gotten much if any testing in the past. 	Clarify
3239	28300759	It'd be better if ComputePriority() was not a part of CTransaction - priority calculations are node policy rather than consensus critical and we'd be better off if such code was kept out of the core data structures to make code review easier in the future. 	Clarify
3239	28455681	"Rebased, extended the help, and tweaked to rename verbose output 'dependson' to 'depends' to be more consistent with getblocktemplate, and to always output a 'depends' key (will be an empty array if no dependencies).  RE: getblocktemplate: I seem to remember having the same argument when getrawmempo"	Clarify
3239	28456371	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/767cf3f9a0280786c2d20a92beb164281200222f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3234	28208823	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c9b7f9c116e7d993b3026c7d2155674086f3d56a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3234	28243866	"If wallettools folder is empty, that should also be removed, didn't look into it ^^. "	Reject
3234	28255590	"I believe it has, or at least in my repo it is.  "	Statement
3234	28274669	"I'm fine with removing them.  Indeed, bitrpc.py provides the same functionality with regard to `walletpassphrase` / `walletpassphrasechange`.                  pwd = raw_input(""Enter wallet passphrase: "")                 access.walletpassphrase(pwd, 60)  IMO what would be nice functionality is parsin"	Clarify
3234	28274932	@laanwj Noted. Will take a look at that when I throw in my bitrpc changes.  	Statement
3234	28405174	"I wonder how many people are using these utilities actively, and if they know they can use bitrpc.py for the same.  I find only one mention of the utilities in a 2011 topic on bitcointalk, by Gavin: https://bitcointalk.org/index.php?topic=54671.10  See also issue #2318 "	Clarify
3229	28165258	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b0c2b169a2fef4655f617bede0d2486cc00658dd for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3229	28190386	"I'd propose to implement this slightly differently, more straightforward: set the default to invalid values (such as `-1` or MAXINT or `0`, whatever is most useless) then check for valid values in IsMiningSetup() instead of probing the arguments.  "	Clarify
3229	28230109	"That'd probably make it clearer too, okay... "	Accept
3229	28233487	@laanwj That'd need making the variables globals again.. so maybe this is better after all? 	whQuestion
3229	28236085	"Ugh, yes I now see that CreateNewBlock also queries and parse the arguments every time. That's the same as using globals, just in a hidden way. At least I now understand your reasoning for doing it that way in IsMiningSetup. "	Clarify
3229	28314793	"The obvious downside of this approach being ..... once a miner has set them, we lose the ability to select smarter defaults, because whatever they pick could end up being used indefinitely. "	Clarify
3229	28320534	We shouldn't be setting defaults anyway. That's the point. 	Statement
3229	28321718	If we think that the common settings become wrong for an option there is always the possibility of just renaming the option to force resetting it. 	Clarify
3228	28144873	"@gthiruva Which version of Boost are you using, 1.54.0 ? "	whQuestion
3228	28203365	Did you do a make clean / and or make sure all the object files were gone before building?  	Clarify
3228	28434383	"@fanquake Yep, 1.50.0 from macports: ```shell The following ports are currently installed:   boost @1.54.0_0+no_single+no_static+python27 (active) ``` @laanwj And, yes. `make clean` and even `make distclean`. "	Clarify
3227	28146310	Anything weird in debug.log?  	ynQuestion
3227	28153413	"debug.log is 24MB and hangs Notepad when I try and open it.  After terminating Bitcoin-QT,  I converted it to Word and I get a 10,000+ page document.  Nothing weird that I saw and the file was being updated the whole time.   "	Clarify
3227	28157638	Can you zip the debug.log file and upload it somewhere? I'd still like to have a look at it. 	Statement
3226	28129641	"+1  From BitPay's perspective (vendor hat: on), this sort of feature is important for achieving privacy of routine business transactions.  Big Businesses(tm) will not like their private transactions being subject to trivial graph analysis.  Talks with folks in Washington, DC have also raised the iss"	Clarify
3226	28387412	"This is a large project, especially if you want a standardised P2P protocol. Satoshi used to be very hard-core about there being no central servers at all, not even behind Tor. It's unclear to me how important that principle is for things like rendezvous servers.  Also, to me CoinJoin is not a no-br"	Clarify
3226	28389079	"At least initially I'm fine with centralized rendezvous servers. Sure, a standardized P2P protocol would be better (and very difficult) but one step at a time. As @gmaxwell describes in the mentioned topic, the server can learn only very little. It's never worse than the current state in terms of pr"	Clarify
3226	28389331	".... which people either don't do, because of the lack of deterministic wallets, or do and get burned. Using a fresh address each time as you're supposed to with the current client is a quick way to discover your backups were silently invalidated behind your back, which is scary.  Also, regard what "	Clarify
3226	28389755	"Yes that is scary. Personally I really don't like the automatic keypool refill, and would prefer if it was manual (#2841) so that care can be taken to make a new backup when needed.  Indeed, doing coin fragmentation would further increase privacy. Vendors would have to cooperate with this by providi"	Clarify
3226	28390186	"Yeah. The nice thing about coin fragmentation is that (beyond it having fewer moving pieces), it avoids outputs ever being linked in the first place.  Consider a business that pays its employees a salary at the end of the month. To do this it builds a giant transaction that pays to the employees add"	Clarify
3226	28472311	This needs to be moved up to high priority.   http://www.forbes.com/sites/kashmirhill/2013/11/13/sanitizing-bitcoin-coin-validation/ 	Clarify
3226	28538271	"but unless there happen to be a huge number of users online simultaneously waiting to do a CoinJoin with big inputs, it's very likely to result in a failed mix  put a (small) fee in the transaction to pay the other(s) participants and there will not be any lack of users or any lack of big inputs. "	Clarify
3226	28538837	I suggested a possible approach to implementing which allows an incremental implementation and guides how the UI might work at https://bitcointalk.org/index.php?topic=279249.msg3443288#msg3443288  The idea is to add support for queued transactions: Instead of immediately making a payment you could a	Clarify
3225	28120679	That's weird. I thought that we check transactions for validity before broadcasting them?  	Emphasis
3225	28132084	There was no issue for this yet? :o 	nAnswer
3225	28136729	"Yea, thats why I created one. This was _well_ known on IRC. "	nAnswer
3225	28304792	May be a duplicate of #3190 	Statement
3225	28310085	It is. 	Statement
3224	28119509	An added advantage of switching to github for releases would be https downloads. I don't really see a drawback. 	Statement
3224	28120853	I think we'd lose download statistics? 	ynQuestion
3224	28121096	I'd trade that for simplicity and security. Think that is not really important anymore since we have a handful of alternate wallets too. I just pinged @github to see if download stats are possible.  	Reject
3224	28121135	"@luke-jr Looks like there are download statistics on releases posted to github (in contrast to ""source tarballs""):  https://github.com/jhclark/multeval/downloads  "	Statement
3224	28121993	"Only reason we were still at SourceForge for downloads was because github wasn't supporting big binary downloads, switching to github for the 0.9 release sounds like a fine idea to me.  "	Clarify
3224	28122304	"Agreed @gavinandresen . Here the process of creating github releases is described, seems pretty straightforward: https://github.com/blog/1547-release-your-software  I did hear there are some limits with regard to file sizes and total storage, but I can't find definitive numbers, and as the releases "	Clarify
3224	28123123	"Did GitHub re-introduce downloads? Last I heard, they were retiring them and they'd be disabled entirely at some future time... "	Clarify
3224	28123164	"@luke-jr Yeah they depreciated downloads a while back, but recently they introduced releases which is what @laanwj and I linked to.  "	Reject
3224	28124119	"The problem is that it's pretty hard for users that are not used to GPG to check the current signatures. I suppose we could package gitian downloader but that won't help initial downloaders.  Both Windows and MacOSX provide ways to sign downloaded packages/executables, maybe we should look into that"	Clarify
3224	28208046	Releasing on github could also solve #2476 (no separate source tarball download available) as github automatically packs up the state of the tree when generating a release. 	Clarify
3224	28210283	"Ok. Well I guess we will do this for 0.9 then. If we encounter any unseen problems, we can just fallback to Sourceforge. Should we also post the previous releases on Github as well, or just post 0.9? "	Clarify
3220	27981081	And a stretch goal: there should be some functionality to query a raw transaction from the wallet rather than the blockchain. 	Statement
3220	27982431	"More than a stretch goal, IMO, a requirement.  I know of several softwares used internally that rely on 'getrawtransaction' working without txindex=1.  At a minimum, there **must** be a compatible replacement.  I get the confusion angle and agree -- but people are using this feature actively, even w"	Clarify
3220	27986922	"I understand the confusion but I don't think removing functionality is a good response, wouldn't it be better to improve the error message to be less confusing? (maybe even mention -txindex in the message...)  Making it possible to query raw transactions from the wallet sounds like a good idea. Mayb"	Clarify
3220	27991442	"@jgarzik I think you may be misinformed. `getrawtransaction` currently does not work for wallet transactions. It works for transactions that are either in the mempool or not entirely spent (=in the UTXO set). This may overlap with wallet transactions of course, but is not guaranteed. I think that fu"	Clarify
3220	27993328	"@sipa No reason it couldn't work for wallet transactions - the raw data is all in the wallet too, IIRC. "	Reject
3220	27995259	"We could just have another RPC that works on wallet transactions. I have had people pull txn that they have stuck many times using get rawtransactions, so I think we need to at least preserve the wallet behavior.  Any opinion on adding a getblockrawtransaction <block> <txid> ? which would replace th"	Other
3220	27995921	"@luke-jr Sure, my main concern is not further confusing wallet operations with blockchain operations.  We could of course extend `getrawtransaction` with wallet functionality, and at the same time deprecate it in favor of a `getwalletrawtransaction` and `getblockchainrawtransaction` (the latter name"	Clarify
3220	28043409	If we're going to deprecate `getrawtransaction` let's not make it more powerful first :)  Maybe even split it into three commands: - `getwalletrawtransaction`  -> only active of not in nowallet mode - `getblockchainrawtransaction` -> only active when txindex=1 - `getmempoolrawtransaction` -> always 	Clarify
3219	27979715	:+1:  (personally) confirmed.  	Emotion
3219	27985960	How does it not work? Does it generate an error message during runtime or compilation? If so which one? 	ynQuestion
3219	27986251	@laanwj  it prevents compilation  ```console checking for boostlib >= 1.20.0... yes checking whether the Boost::System library is available... yes configure: error: Could not find a version of the library! ``` 	Emphasis
3219	27987933	Can you pastebin the config.log somewhere? 	ynQuestion
3219	27988511	"@laanwj  I think it's too late, if config.log is not appended each time configure is exec, then mine only have the logs *after* installing proper packages sipa said and there fore it compiled properly (except for bdb too which was throwing an error). "	Clarify
3219	28045983	I just upgraded my laptop to Ubuntu 13.10 (Salamander Sauce). This indeed installed boost 1.53:      libboost-chrono1.53-dev:amd64            install     libboost-date-time1.53-dev:amd64        install     libboost-dev:amd64                install     libboost-filesystem-dev:amd64            install	Clarify
3219	28054728	"I did libboost-all-dev and no luck.  What I did not find was anything in /usr/lib about boost after installing all packages.  Sent from my iPhone  > On Nov 8, 2013, at 6:27 AM, ""Wladimir J. van der Laan"" <notifications@github.com> wrote: > > libboost-XXX-dev "	Other
3219	28055203	"Ok, I'm assuming it was a fluke or you were missing some package. There is no way to find this out anymore, so closing this issue. "	nAnswer
3219	28057777	I can confirm this is not a fluke.  @laanwj I just personally mailed you my config.log after I ran ./configure with libboost-all-dev installed but none of the boost 1.54 packages. I was able to run the script with the 1.54 packages. 	nAnswer
3219	28058288	"Hmm that's not much more illuminating:      configure:10381: $? = 0     configure:10396: result: yes     configure:10555: error: Could not find a version of the library!  likely we need to update the README to specify the packages separately instead of libboost-all-dev, as that's what I did, I never"	Clarify
3219	28058724	+1 specifying packages separately. libboost-all-dev installs a crapload of packages that are apparently not needed by bitcoin. Still I think the console output is misleading:  ``` checking whether the Boost::System library is available... yes configure: error: Could not find a version of the library	Clarify
3219	28059839	"Yes, the output is misleading. I have no clue what library it's complaining about, and  there doesn't seem to be a way to find out except for diving into tons of autogenerated neigh-unreadable bash script.  I see the problem with specifying the packages separately is that some packages such as libbo"	Reject
3219	28060348	"I understand versionless aliases is exactly what we *don't* want, since bitcoin works with boost 1.54 and not with boost 1.53. When I was still running Ubuntu 13.04, libboost-all-dev included all needed boost deps (and a lot more), so I assume under 13.10 it can work also if it included the necessar"	Clarify
3219	28062230	"Please read my post above, I did get it to work with boost 1.53.  If you install exactly the boost dev packages mentioned it should work. "	Clarify
3219	28065906	"I was compiling it under a new, clean, Ubuntu 13.10 virtual machine in Azure. "	Statement
3219	28180137	"I've been able to reproduce this in a VM. The problem is that the configure script looks for boost libraries in `/usr/lib64` (the value of BOOSTLIBDIR). However, they are not installed there but in `/usr/lib/x86_64-linux-gnu/`.  A temporary fix is to use `./configure --with-boost-libdir=/usr/lib/x86"	Clarify
3218	27958492	"This is intentional, as the wallet only considers multisig addresses where it has all keys to be owned by itself. This is to prevent multiple wallets from considering the same coins spendable.  I won't close this bug, however, as I think this requirement isn't necessary for the raw transaction API. "	Clarify
3214	27912132	"In addition to this, a way to set or change the directories in the setup and settings would be convenient. Dealing with moving and merging files like the wallet file might be tricky. "	nAnswer
3212	27844054	Depends on HD wallets. 	Statement
3212	27850411	"Paper backup would be nice. But it indeed depends on HD wallets, otherwise you keep printing new backups...  "	nAnswer
3207	27799039	"Nice work, but I tend to disagree storing in QSettings, as this is at least on Windows stored in the registry. Would be ugly and bad practise to do this IMHO. "	Clarify
3207	27834202	"I don't see why this would not be stored in the wallet?  EDIT: misread, this is about requested payments - not sent ones. "	Reject
3207	27842886	"The wallet stores both ""from"" and ""to"" transactions, so storing both ""from"" and ""to"" payment requests makes sense to me (I believe we're storing neither right now).  "	Clarify
3207	27847653	"@sipa I guess it could be stored in the wallet, but that means there will need to be a core interface for storing arbitrary data (that the core doesn't know the format of) in the wallet.  @gavinandresen Yes, storing incoming payment requests would make sense too, and could be done in a similar way b"	Clarify
3207	27864089	"@gavinandresen Thinking about it, we should store *incoming* payment requests in the transaction metadata and simply show them in the transactions list.  We can't do the same for *outgoing* payment requests at least until the recipient pays them, maybe they could be correlated and stored in the tran"	Clarify
3207	28200119	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/42a4614789f3406ea0e0d39cc58361a67ea6caf7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3203	27784466	"Bitcoin-the-system has always been abbreviated as 'bc', not 'bt' - wouldn't 'bccore'* make more sense here?  I think it would be better to keep Bitcoin-Qt and bitcoind more distinct. After all, someone may develop another GUI client sharing the same codebase someday as well. "	Clarify
3203	27786150	"Well I found the fun thing about btcore that the first three letters are BTC. Apart from that, I don't really mind, bc, bt, even xbcore has been proposed.   IMO if someone else wants to develop another GUI client sharing the same codebase let him/her think of their own name. This is our project. (.."	Clarify
3203	27787010	"Due to the nature of the codebase right now, any other GUI would obviously need to share the same repository as B-Qt and bitcoind have been. I'm certainly a fan of Qt and B-Qt, but I don't think another GUI that could pop up should be treated as some kind of ""second-class"" client.  On the other hand"	Clarify
3203	27847209	"Perfect is the enemy of better, @luke-jr   Someday maybe we'll have a libbtcore.a and separate projects for the GUI btcore and btcored/btcore-cli (and maybe there will be a gazillion other wallets that use libbtcore.a).  Now is a good time to change names, lets do it.  "	Clarify
3203	27849018	"@AllThingsBitcoin This issue is about the name and not about your personal pet peeves, or discussing whose peeve is more important. Take it somewhere else. For the Mac leveldb corruption issue see #2770. "	Clarify
3203	27850616	"@AllThingsBitcoin nothing personal, sorry for getting a bit annoyed, but it's distracting when people post in completely unrelated issues about new/other problems. Try to use the ""new issue"" button next time, or in this case refer to the existing issue (#2770). "	Clarify
3203	27851513	"If you want to help, please contribute code. We indeed could use someone helping out with Mac development at the moment. "	Clarify
3203	27852067	"@AllThingsBitcoin We do not generally use the ""assignment"" feature in Github. The number of active participants here is small enough that software coordination of who is working on what isn't terribly helpful. "	Reject
3203	28043076	"``Bitcoin-Qt -->  btcore (full name 'Bitcoin Core')``  I'm not sure if I like that new name, even ``Bitcoin-Qt -->  btcore-gui (full name 'Bitcoin Core GUI')`` doesn't yet make it feel more acceptable ^^. "	Clarify
3203	28043517	"@diapolo we're open to suggestions, but mind that there have been many discussions about a new name and the time to shedpaint about is limited - at a certain point we should simply make a decision  Edit: and I don't want to add -gui, at least not to the full name, a lot of users have no clue what ""G"	Clarify
3203	28044519	"``btcore`` neither feels like something cool to use nor tells me what it is. Only lowercase is also weird for a (GUI) application, at least on Windows. I have no fucking good idea either currently, sorry ^^. "	Clarify
3203	28044697	"That's only the **executable name**. Capitalization doesn't matter. Let's not discuss that but the user visible name in menus and dialogs.  ""Bitcoin Core"" is cooler than ""Bitcoin Reference Client"" right?  "	Reject
3203	28106243	I agree on the rebranding. +1 what @laanwj said about doing this in one swift move instead of drawn out. I think the name is subjective. Perhaps we should go to the community about this to come up with a name everyone likes. 	Clarify
3203	28132015	"To add my own shed paint: * btccore: ""Bitcoin Core client"" * btccored: ""Bitcoin Core daemon"" * btccore-cli: ""Bitcoin Core remote client""  (btcore sounds to me like it's a BitTorrent client)  "	Statement
3203	28133803	No strong opinions from me. This is okay and I don't think I've ever heard an alternative I would consider really fantastic. 	nAnswer
3203	28387634	"We're not in any danger of running out of letters, I'd prefer something explicit like the binary names being ""bitcoin-core"" or ""bitcoin-core-daemon"" because then it's immediately apparent what something is if you do a process listing on an unfamiliar box.  However this is practically a Gaudi-inspire"	Clarify
3203	28388800	I tend to agree with @mikehearn here. 	nAnswer
3203	28403635	@mikehearn Disagree. I've had to type in bitcoind many many times. I think brevity is key.  	Clarify
3195	27663301	"To avoid splitting the network on un-banning, we'll need a new block message... "	Statement
3195	27663524	"The plan could be:  + Release 0.9 that does not ban on invalid transaction-in-block. + Wait until super-majority (e.g. 75%? 95%?) of network has upgraded, then do the relay-first-check-transactions-later thing.  An attacker could then try to split off a minority of the network by broadcasting a vali"	Clarify
3195	27696701	"I don't think we should relay these as the same as validated blocks. Even with the DoS stuff out of the way, SPV nodes depend on full nodes to validate the blocks they've been handed.  Luke implemented the block_that_might_possibly_be_invalid approach a while back in a long since closed pull request"	Clarify
3195	28387167	"You could name the new message  ""block?""  ;) "	Clarify
3194	27641779	![Uploading BTC.jpg . . .]() i was used old version is  bitcoin-0.3.24-win32 ![btcerror](https://f.cloud.github.com/assets/5842727/1460778/9f94c874-446f-11e3-846a-4945aeac495f.JPG)  	Clarify
3194	27644414	Can you try to start it with -upgradewallet (and be sure to have/make a backup of your wallet.dat). 	Statement
3194	27686361	"At first glance this appears to be a block problem not a wallet problem. Try starting with -reindex to rebuild the block index. If that doesn't work (0.3.x is really ancient, so I have no idea what incompatibility issues may arise here), delete everything from your bitcoin directory **except for wal"	Clarify
3182	27296093	Seems that we need even more mac-specific code :)  	Clarify
3182	27356713	App Nap sounds like the friendly name for compressed memory described here: http://appleinsider.com/articles/13/06/12/compressed-memory-in-os-x-109-mavericks-aims-to-free-ram-extend-battery-life 	Clarify
3182	27796648	App Nap and compressed memory are orthogonal technologies. They really don't have much to do with one another. 	Reject
3182	28387492	"The core problem here is that running highly intensive background processes on battery powered devices is a stupid thing to do, which is why Apple has been ""cracking down"" on it.   At some point we need to bite this bullet. Until it gets an SPV mode, Bitcoin-Qt does not make sense to run on laptops."	Clarify
3181	27275464	"The problem is a bitflip *making* the transaction, not broadcasting it (where there is already multiple checksums in place). If you bitflip during creation, your checksum will account for the bitflip, not detect it! "	Reject
3181	27277309	So is it better to send multiple smaller outputs rather than a single large one when sending a large amount?  The last time I tried to use bitcoind to send multiple outputs to a single address it didn't allow it.  Or is it better to make a lot of separate transactions rather than a single transactio	Clarify
3181	27284793	bitcoind verifies the signature after signing.  I don't see any need to do multiple smaller outputs.  	Statement
3181	27319038	It seems like there's a different of opinion here.  Does 'bitflip' pose a risk of fund loss or not?  It would be good to get some agreement on this point so we're not accidentally either spreading FUD or being complacent. 	Clarify
3181	27320469	"@jgarzik  Verifying the signature does nothing relevant here, alas, as it's not a concern about ecdsa leaking the private key.  The risk is an error can cause the change addresses to be wrong or cause the values to be wrong. Nothing currently guards against this (though, obviously, it's unlikely). T"	Clarify
3178	28312917	"This should be rather uncontroversial, no? "	Reject
3178	28509890	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8bc4e0288be05d7fd91c8d94ceff624671d179d0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3178	28511577	ACK 	Clarify
3172	27196609	Can you change that label to uppercase :-P. 	Statement
3168	27192440	This is a known issue and it exists in multiple places.  For fatal errors that are impossible to handle normally (for example because it implies some internal state was corrupted) we should add a sanity check function that cannot be disabled instead of asserts. 	Clarify
3168	27689000	This seems to be rather important then... 	Clarify
3168	27696629	We don't support building with NDEBUG at all at the moment.  	Reject
3168	27701212	I think we could use a ``` bool fAssertsEnabled = false; assert((fAssertsEnabled = true)); if (!fAssertsEnabled)    exit in some fatal way; ```  	Clarify
3166	27170200	+1  	Statement
3166	28210147	"To be clear: the sighash flags are the `nHashType` byte (enumeration SIGHASH_*), which is stored in the last byte of vchSig?  As this value is pushed to the stack in a prior op, this would require a non-trivial change to transaction decodes (which I suppose means those in Script::ToString https://gi"	Clarify
3157	27153603	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f2949a9c3f26f84c4611c8dde44d5567605700a7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3157	27468012	"As I mentioned somewhere else: AddressBookPage is supposed to be a standalone dialog that can be launched from anywhere, so I'd prefer not making it dependent on connecting signals.  "	nAnswer
3157	27502703	"Yeah, I'm going to rework this, to not use ``mesage()``, that way as it seems impossible to do it in a clean way and it's a standalone dialog, as you also said. It's a tad sad that my invention breaks the coding-rules somehow, but I'm happy you appreciated this :-).  What about a ``message()`` funct"	Clarify
3157	28200589	"@Diapolo I suppose what could work is pass in the Notificator object, and move the message() function/slot there. A global function in GUIUtil would not work, it wouldn't have access to the Notificator.  "	nAnswer
3157	28411342	"@laanwj How should I access the notificator pointer, it's included in BitcoinGUI also :-/. "	Clarify
3147	27037944	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/fa94a2ee7a3610c285ba57e02938aa05172cf5dd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3147	27041594	"Looks pretty good, based on a 60-second, untested review ;p  "	Statement
3147	27079808	"Agree with the first two commits; --with-system-leveldb is a bit controversial, as it may nudge distro packagers the wrong way. There's a good reason that we include our own copy of leveldb.  "	Clarify
3147	27124773	I have to agree that --with-system-leveldb sends the wrong message to distributions. 	Reject
3147	27127144	Perhaps an AC_WARN would be appropriate. 	Statement
3147	27192595	@luke-jr you know just as well as us that they'll just ignore that  	Emphasis
3141	26979583	"There is no easy solution for this, see https://qt-project.org/wiki/Delay_action_to_wait_for_user_interaction. It could be changed to require a key press perhaps, dunno if that is an option... I currently have no preference. "	nAnswer
3141	26979738	"@Diapolo The solution is to add a timer, and only execute the action when the timer hit. Postpone the timer every time the user changes the query. "	nAnswer
3140	26987998	"AFAIK this is a known problem or at least ""how it works"". "	Clarify
3140	26988350	"Yes, but I couldn't find a duplicate issue for it. In principle nowadays we store three dates for a transaction. The creation date, the block chain date, and a ""smart date"" that's sometimes the one sometimes the other. Not sure which one -qt shows actually. "	Clarify
3136	27192563	"I can't reproduce this (on linux). I've had a problem with my testnet wallet so needed to rebuild a few times yesterday. When I clicked ""abort"" there was no crash. I'm not using -txindex though.  "	nAnswer
3136	27192815	Perhaps you can give it a try with -txindex then? 	ynQuestion
3136	28519132	"I tried to debug this, but failed badly... I get a segfault related to ``path.hpp``, which is from Boost filesystem. This happens after ``2013-11-14 20:09:45 Shutdown : done``. I just see that the object contains the correct path to my testnet3 datadir and is unrelated to our datadir caching (as I d"	Clarify
3132	26862500	"If it can be of any help: after relinking SSL in homebrew, the version kept being 0.9.something instead of 1.0.1... "	nAnswer
3132	26883683	Did you install berkeley db? ```brew install boost miniupnpc openssl berkeley-db4``` I'm using macports instead of homebrew and it works fine for me.  	Reject
3132	26954272	"Thanks for the reaction, but I already had it installed form the former working installation.  Your command gives `Warning: berkeley-db4-4.8.30 already installed`  Any other suggestions? "	Clarify
3132	27655200	"You are getting an error about /opt/local/lib/db48, but homebrew uses /usr/local/opt/berkeley-db4  You can see a mostly working patch at the bottom of https://github.com/WyseNynja/homebrew-bitcoin/blob/master/bitcoind.rb.  It is a rebased version of the one that comes in contrib/homebrew/makefile.os"	nAnswer
3132	27655357	"After resolving the db4 error, I get: https://gist.github.com/WyseNynja/7295209 and https://gist.github.com/WyseNynja/7295275 "	Statement
3132	27658410	How do I use those brew things? I never really used brew more than for installing dependencies from given commands. 	Clarify
3132	27664065	"@stevenroose If you wanted to install bitcoind using WyseNynja's [formula]([https://github.com/WyseNynja/homebrew-bitcoin), you would       brew tap WyseNynja/bitcoin     brew install bitcoind  Tapping that repository will let you install any of the formula inside it. "	Clarify
3132	27746281	"Well those steps __should__ work, but they fail for me on Mavericks.  Do they work for you @fanquake or @stevenroose ? "	Statement
3132	28146275	@WyseNynja After upgrading to Mavericks I haven't been able to build 0.8.5 from your tap.   Building with current master is also failing from the boost sleep error in #3003 	Clarify
3132	28159268	@fanquake can you build 0.8.5 without my tap?  I can't even do that :( 	Clarify
3122	26806434	"What kind of interactivity are you aiming at? The simplest implementation would connect, load the RPC proxy object into the context and drop to the Python shell. "	whQuestion
3122	26809107	Yes but I mean do you want an interactive Python interpreter? Or make your own mini-language?  For example there are tab completion implementations for the Python interactive shell that you can just use (see http://docs.python.org/2/library/rlcompleter.html) so you essentially would have to do nothi	Clarify
3122	26811510	Ipython + some hooks to make it easier to use the rpc with less typing would be pretty great (e.g. importing the rpc functions at the top level)... maybe some hooks to give node status at the prompt... also an input method for walletpassphrase that doesn't log the passphrase.  It would be sad if we 	Clarify
3122	26812763	From some Google Fu it seems like it would be possible to plug the script into the QT console. For the password it looks like Python has something usable(see http://docs.python.org/2/library/getpass.html).  Could you expand upon what node status should look like? 	Clarify
3122	26812880	"E.g. blocks count and number of peers.  Defined as a user replaceable function, so if the user wants it to show their balance there it would be easy to add it.  "	Clarify
3122	26814215	"So basically just let them rip fields from `getinfo`. Should this be embedded in the prompt line?       Peers: 8 | Balance: 1.234 BTC > addnode 127.0.0.1 add      Peers: 9 | Balance: 1.234 BTC >   Something like that? Now, what what be awesome is if argument fields were automatically shown when you "	Other
3120	28480680	"Its been so much time since I stop coding in C++ and Qt. these days I'm going to start reviewing, and trying to understand the code of the project.  An example of how you could solve part of the problem:  ```  dnl  dnl QT  dnl  AC_ARG_ENABLE(qt, [    AS_HELP_STRING([--disable-qt], [Qt UI support (de"	Clarify
3120	28519690	"There needs to be Qt5 support, before I'm trying autotools... so I whished there would be some patches for it :). "	Statement
3118	26704510	"In that issue it is mentioned that the problem is solved, so are you sure that this is the same issue?  If you are sure please post there, notify me and I'll reopen the issue. Having an issue referring to another issue in the title is not optimal.  "	Clarify
3113	26650805	"There have been pull requests in this direction, see #2124, #2407 Please help testing or development there if you care a lot about this. "	Clarify
3113	26743216	"If you are looking for this functionality, [Bitcoin Armory](http://bitcoinarmory.com/) has already implemented multiple wallets.   "	Clarify
3095	26363065	"I guess this is not because of non BIP0070-conformance, but because an ``IsDust(CTransaction::nMinRelayTxFee)`` is applied to the amount. "	nAnswer
3095	26835854	#3130 will clear up the message a bit. 	Clarify
3095	26886708	"I believe the ""isDust"" check should not be done for zero amount payment requests until the user has been able to change the amount. Might be part of the confirmation message box that pops up just before sending the bitcoins.  Which would allow what the BIP states: ""If the sum of outputs.amount is ze"	Clarify
3088	26229349	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a851bf84f6a2ff95bd86b23e55bb0647f5f47188 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3088	26229726	This seems like a priority because of the privacy and reliability implications. Will donate boxes and/or cloud time for testing. Is there anything in the request that let's the service know that its a Bitcoin node asking for an IP?  What will happen if both of the listed services 'checkip.dyndns.org	Clarify
3088	26229849	"Bitcoind advertizes as 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)', so no - it doesn't really let the site know anything. Of course, there could be other data that gives it away (combination with http protocol, closing of connections, timings, ...).  If the external ip services are down, th"	Clarify
3088	26230098	"Well since these seem to be well used services that should make it fairly difficult. Volunteer services won't help either because they will only be used Bitcoin (which makes it easy to just run some honeypot nodes), and will require maintaining some sort of list of available look-up services.   Seem"	Clarify
3088	26230868	"@super3  We haven't considered it super high priority in the past because there are many other signals that give away a Bitcoin node on the network... and if you turn off listening or switch to using tor you turn off most (all in the case of Tor, hopefully) of them as as well as this one.  There wer"	Clarify
3088	26230885	"I need to look closer at the code changes, but I have little doubt this will be ready for 0.9. "	Clarify
3088	26327878	"This is nice to have, if we don't need to depend on centralized services we shouldn't.  "	Statement
3088	26386367	Approach sounds good. Can you write a test plan?  	Clarify
3088	26507993	"Lying about a user-agent isn't gonna help anyway (trust me, I spent years shooting ua-forging fish in a barrel). The decentralisation aspects are more important. "	Clarify
3088	26526820	ACK on approach.  Though it's worth considering how we could have had a system of signed per-node identities where you would sign your advertisement - including what you think is your IP/tor/whatever - and in addition to that nodes that relayed your advertisement could sign their own messages saying	Clarify
3088	26596329	"Why would one want signed per-node identities? For what would nodes want to identify themselves at all, isn't the idea that nodes are as indistinguishable and exchangeable as possible?  "	whQuestion
3088	26607973	"@laanwj One example is for anti-sybil protection by associating an identity with p2pool proofs-of-work, or by simply purchasing a fidelity bond. Once you make the identity expensive to obtain, you can then use fraud proofs - for instance rather than having an expensive UTXO commitment system and ass"	Clarify
3088	27144211	Would this be more informative if it logged when it transmits an advertisement?  Otherwise it is difficult to tell if it is working at all.  The log could also be informative in showing you if a peer lied to you.  Does bitcoin currently handle multi-homing?  The logging would also be informative her	Clarify
3088	27159683	"```receive version message: version 70001, blocks=266272, us=XX.XX.XX.XX:8333, them=0.0.0.0:0, peer=YY.YY.YY.YY:60127```  The ```0.0.0.0``` is expected and seemingly harmless when the remote host is using the externalip patch.  But if they explicitly set their own public address with externalip= it "	Other
3088	27159709	Both. The design here is specifically to not start advertising whatever addresses untrusted peers give us to other peers. 	nAnswer
3088	27354043	"https://bitcointalk.org/index.php?topic=320695.0 If end-users want to help testing of this patch, a backport is included in this build of Bitcoin 0.8.5 "	ynQuestion
3075	26705377	I always connect through proxy and it works fine for me. Are you trying to use Tor? If so: there are only very few testnet nodes available on Tor.  	Clarify
3070	26034357	make clean works because it regenerates the makefiles from scratch.  https://www.flameeyes.eu/autotools-mythbuster/automake/maintainer.html This may be relevant.  It sounds like you want make to detect that it needs to regenerate its own rules.  I'm uncertain if that will play nice with faketime i	Clarify
3063	25818542	"I suppose the priority rule should be to prefer *any* moc in the qt-bindir directory above any moc elsewhere. Looking at the configure script it does the following      for ac_prog in moc-qt4 moc4 moc         <search for program named ac_prog> in qt_binpath, then rest of path         -> if found, se"	Other
3063	26875861	"This was my main argument against https://github.com/bitcoin/bitcoin/commit/9a09c0091c33a8f22f48b5e6e5b8f3b400c43ff3 . This is working ""as intended"" unfortunately.  Should be fixed with the qt5 support. I'll try to get a PR pushed up this week.   "	Clarify
3062	26705555	I've added libprotobuf-dev to that file recently. Mind that it is a GUI-only dependency.  The other two don't really fit into the 'dependency' as they're not libraries and only needed for the build system. But mentioning them in the doc in some other way may be nice...    	Clarify
3062	26707984	"Well they are built-time dependencies, and afaik we only list built-time dependencies, not run-time ones. For example libdb5.1++-dev (the corresponding runtime dependency is libdb5.1++). "	Statement
3062	26708666	"Yes, but what I mean, for example see the initial list of build-unit.md under ""Dependencies"":      Library     Purpose           Description     -------     -------           -----------     libssl      SSL Support       Secure communications     libdb4.8    Berkeley DB       Blockchain & wallet sto"	Clarify
3030	25294843	"Fine with me... would remove some of the awful complication from the code, too.   "	Statement
3030	25318037	"I could incorporate that change into #2612, which still needs code-review and feedback. "	Clarify
3030	25318066	"@Diapolo Yes, that would be great. Make sense to address it in your pull #2612 "	yAnswer
3030	25684573	This is now integreated in #2612. 	Statement
3025	24959971	"This would constitute a soft-fork, as IsPushOnly is called by P2SH VerifyScript. Closing until I find a workaround. "	Statement
3025	24962556	"Why not make a generic ""IsCanonicalPushDatas"" that just checks arbitrary scripts for pushdata canonicality and apply it to both scriptPubKey and scriptSig? "	whQuestion
3025	24962718	"@petertodd You basically mean applying the canonicality test to output scripts as well, without enforcing it being push-only. Sounds reasonable. "	Clarify
3025	24962988	"Yup, and the same function can be used for scriptSigs because other mechanisms force them to be only pushdata's anyway. "	nAnswer
3025	25044403	@petertodd Done. 	System
3025	25045309	"@petertodd Nice catch. I removed it while investigating a tester error, that lead to discovering IsPushOnly() was used in P2SH VerifyScript. I shouldn't have left that change in, though. Removed. "	nAnswer
3025	25046914	@sipa Cool. Fix the OP_n case and add more tests and I think this is done. 	Clarify
3025	25320576	"@petertodd If we both allow OP_n and single-byte pushes, malleability will remain (at least for non-P2SH multisigs with less than 17 keys). Is it really a problem? "	Other
3025	25321242	"@sipa As I said in my comment before IsStandard() tests that OP_n is used where appropriate, so there isn't any way to use a non-standard pushdata anyway. Just leave that decision until later - mark it with a ""TODO"" for now, and do note in that comment that OP_1NEGATE and OP_RESERVED would have to b"	Clarify
3025	25679118	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/930491c2cf5089e1ca348614ceee11f7c0e1382b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3025	26673298	"@petertodd Right now, this is just an IsStandard() test as a first step, but my intention is certainly to try to get this (or something similar) as a network rule (requiring a soft fork). Together with a few other changes, I believe it's possible to kill malleability entirely (only for transactions "	Clarify
3025	26685857	"I know that, I'm just saying that in this case the rule is meaningless for now because it's a case that can't happen in a standard transaction scriptSig, and we should at least update the rest of the reference client source code to follow this new standard first. "	Clarify
3025	26761908	"Trying to implement a ""pushing a byte between 0x00 and 0x10 uses OP_n, rather than 1-byte data pushes"" rule, I hit an odd problem: the coinbase genesis is non-canonical... "	Clarify
3025	26834021	"Heh, I was waiting for you to notice that. :) "	Clarify
3005	24557386	"Summary fail. This attempts to fix an issue in bitcoin-qt where checking or unchecking the ""Connect through SOCKS proxy"" box does not work as expected. It's easily reproduced by enabling/disabling and clicking 'apply'. "	Clarify
3005	24558368	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b07659bf46deb7e81428aea64ac600975a6360ed for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3005	24565713	"That whole proxy stuff in current Bitcoin-Qt settings is IMHO a mess, because we try to change it on the fly, which doesn't even work for bitcoind, you may want to take a lookt at #2612. "	Clarify
3003	24536037	"I remember having the same issues some days ago. While looking at my config.log, i just saw that i gave the --libdir. Try ```./configure --without-qt --disable-tests --disable-debug --libdir=/opt/local/lib/``` "	Clarify
3003	24536691	"That didn't fix anything. I think libdir would only help if it couldn't find any of the macports libs, but you can see from the previous line in the error that it did indeed find libboost_chrono-mt. "	nAnswer
3003	24538647	hmm... just freshly checkout the master and runned into the same issue. Played arround with add/remove ```--disable-tests --disable-debug``` and ```--with-qt``` and it disappeared somehow... 	Clarify
3003	24539324	Please paste a copy of your config.log on pastebin (it'll be way too big for here) and we'll have a look. 	Clarify
3003	24539463	configure session: http://pastebin.com/z7uLf69x config.log: http://pastebin.com/d3MXjzR6 	System
3003	24539653	"Ok. Your problem is that you're using --disable-debug. That has a special meaning in OSX (force i386). We're currently discussing how to fix that, as it's pretty broken behavior.  Until we get the debug/release stuff straightened out in the next few days, just don't use --disable-debug. "	Clarify
3003	24539657	config.log: http://pastebin.com/TkkNfm8S 	System
3003	24539690	cool beans. thanks 	Statement
3003	24539787	"@BugAndNewsReporter yep, your log shows the same. "	Accept
3003	27172970	"Nope. I'm not using that flag, and I see the same error. All I have is ./configure --without-qt  This is OS X Mavericks. The problem appears to be that the custom AC_TRY_LINK stuff for boost sleep isn't include BOOST_INCLUDES so it can't find the header files. "	Clarify
3003	27175790	"The first problem was with linking. If yours is with includes, could you please paste the config.log?  I'm not updating to Mavericks on my dev macbook so that I can still have a 10.6 install to reference. "	Statement
3003	28159253	"Does boost maybe name the library differently in OSX/windows?  For example, ""boost_thread"" is ""boost_thread-mt"" in osx.  I see that this is checking for ""boost_chrono-mt"" so maybe its something related to that? "	Statement
3003	28159408	config.log of the failed run:  http://pastebin.com/Y1PzbcNj 	nAnswer
3003	28238730	"Yep, the m4's find the path and store it, but we don't use it when doing our own checks. Exactly as @mikehearn said.  Fix is to store the good cppflags before the chrono check and add boost's includes: ``` TEMP_CPPFLAGS=""$CPPFLAGS"" CPPFLAGS=""$CPPFLAGS $BOOST_INCLUDES"" ``` and reset it after the slee"	Clarify
3002	24523503	"Getbalance is returning the default account """", if you want all accounts use the argument ""*"". It's possible for an account to have a negative balance if you've spent more from it than you have assigned to that account.  "	Emphasis
3002	24523933	I didn't assigned anything to accounts. This was done automatically by regular bitcoin-qt usage.  How can I recalculate balances? 	ynQuestion
3002	24524100	"Just use the move command to move the funds from the accounts back to """". "	Statement
3002	24524581	"Thanks. This helped. But anyway I didn't use ""move"" ever. This mess in accounts appeared by itself. "	Clarify
3002	24524872	Assigning labels to addresses in the gui attributes their funds to the various accounts. 	Statement
3002	24524978	Right. But seems it do it wrong. 	Reject
3002	24545282	Should accounts match the label everytime? They don't match for me either... 	Reject
3002	24545502	"bitcoind accounts and Bitcoin-Qt labels are not designed to be consistent with each other. Use one or the other, not both at the same time.  "	Clarify
3002	24545776	"@gavinandresen Well it's at least intersting to have accounts, with names I never set by using Bitcoin-Qt, no? I have no clue about the concept of labels, just asking :). "	Clarify
3002	26709374	"No, they don't need to match. For historical purposes labels and accounts use the same underlying information in the database but in different ways. I guess that should be changed some day, but doing that and keeping backwards compatibility (neither losing your labels nor accounts) will at least req"	Clarify
2998	24474530	This path should already be searched if /usr/pkg/include is in your include path... Can you post a config.log? 	ynQuestion
2998	25126133	Same issue here:  CentOS running on a virtual machine.  > \> locate db_cxx.h /usr/include/db_cxx.h /usr/include/db4/db_cxx.h /usr/share/doc/db4-devel-4.7.25/ref/upgrade.3.0/db_cxx.html \> _ >  Contents of config.log: http://pastebin.com/N1jW9GuF 	Other
2998	25684220	Still an issue with latest master? AFAIK there were changes with the new autotools system so perhaps you can try again. 	Clarify
2998	26410333	Same problem on ubuntu 13.04. 	Statement
2998	26411455	sudo apt-get install libdb++-dev solves my problem. 	Statement
2998	26412605	"Obviously you get that error if libdb is not installed... if you read carefully, the original poster has the library installed but it is not detected, so it is not the same problem.   "	Clarify
2990	24396584	http://support.microsoft.com/kb/2800213  Workaround registry setting to force UTC hardware clock caused at least one bug as recently as Feb 2013 ... this sort of thing really isn't supported by microsoft. 	Clarify
2990	24399524	https://github.com/bitcoin/bitcoin/commit/8686f6467c9db2606706baca33842c97ff7621f8  Current version as found in 0.8.5 assumes:  ``` static int64 nTimeOffset = 0; ```  followed immediately by dummy function which returns that hardcoded value:  ``` int64 GetTimeOffset() {     return nTimeOffset; } ```	Clarify
2990	24428668	"nTimeOffset is not a hardcoded value, it is adjusted based on the time reported by your network peers.  And I don't think this is a Windows issue-- I saw the same thing happen on my OSX machine yesterday when I first connected, most likely caused by connecting to peers that either have their time se"	Clarify
2990	24431803	See my comments on #bitcoin-dev around 11:43 pacific. 	Clarify
2984	24157226	The headers-first sync being implemented by @sipa should help with this issue.  	Clarify
2983	26783289	"Looks like the blocks data became corrupted somehow.  Can you try to remove all the data files except for wallet.dat and restart?  If that doesn't work, please post any information from debug.log that can help debug the issue.  "	Clarify
2983	26785370	"@laanwj Since 0.8, there is no need to advise people to wipe their data directories, `-reindex` has the same effect, but can reuse blocks that aren't damaged. "	nAnswer
2975	23810843	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e71d6f4147d39c209e54c6769c6791880027fe6e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2975	24034666	"Note that @gmaxwell was unable to get this PR to work for him, so there is a bug in there somewher.  @gavinandresen CTransaction method works  "	Emphasis
2974	23801246	This isn't correct. We do support backported/stable versions in a separate git repository:     https://gitorious.org/bitcoin/bitcoind-stable/  Debian is welcome to choose a branch and I will do what I can to ensure it receives long-term support. I would recommend using the latest release (currently 	Clarify
2971	24264922	might be fixed (half fixed) with #2987. @Mezrin do you talk about RPC (API)? I could also try give some info the RPC response whether the fee was voluntary or not 	Clarify
2971	24266795	"Seems, that your commit generally makes what I meant when creating this issue.  And yes - I meant RPC API. If you are able to enhance RPC - it will be amazing )  I do not use C++ much, creating new commit will be hard for me. "	Reject
2971	24272326	The rpc api could of cours be enhanced with that. But now the ```sendtoaddress``` (and others) will normally response with a transaction-id. I think we break compatibility if we would give other/more information back.  Any ideas? 	Clarify
2971	24287019	This is solved by #1645 aka #570 aka #557 	Other
2966	23631269	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a80864e8c8fe19101e54287a770769784ddafd17 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2966	25320852	"@pstratem I've forgotten what we've discussed related to this. Do you remember, and is this still the suggested change? "	Emphasis
2966	25677418	"Can you elaborate on ""For various reasons it doesn't actually accomplish this goal"" ?  I worry that this pull will break a coinjoin implementation that uses the raw transactions API, but from your comment it sounds like that might be broken anyway ( @gmaxwell : have you done any testing with using o"	Clarify
2966	25683726	"@pstratem, @gmaxwell and I discussed this prior to this pull request.  It seems that currently, vtxPrev is only ever pulled from your wallet, meaning there is no way that something in vtxPrev is something you don't already have. After some digging, we found out this was likely because of the origina"	Clarify
2966	25683876	"@sipa this is still the suggested change, however at least one bug was revealed and there are likely more that I have not noticed  getbalance conf=0 can be negative if you have transactions which pay to an IsMine address "	Clarify
2966	26006682	I just noticed that bug above is actually currently possible to trigger if you happen to have a wallet where vtxPrev has at least one correct entry.  Assuming this worked correctly at some point that would be something to fix also. 	Clarify
2966	27571913	> mental note: the payment protocol could use this too  The payment protocol was designed with this in mind from the start :) That's why you are allowed to submit multiple transactions in a Payment message submission. 	Clarify
2964	23623187	Pulltester where are you? 	whQuestion
2964	23624496	"Dang. @TheBlueMatt: how does pulltester send/announce blocks, does it answer getheaders, and how does it know a block was received? "	whQuestion
2964	23743916	"Currently block-tester doesnt support getheaders requests, so that needs fixed "	Other
2964	24288529	"@sipa fyi, now you can easily run the same scripts as pull-tester to check locally, in case you're looking into fixing up the block-tester. Just add --with-comparison-tool to your configure, and this test will be enabled during 'make check': ``` ./configure --with-comparison-tool=/tmp/BitcoindCompar"	Clarify
2964	24387506	"Rebased, though I haven't investigated the pulltester failure further.  I assume it has to do with actually changed semantics, as the best known not-known-to-be-invalid header chain is always considered the main chain, and pindexBest is always within this chain. As the decision is not just made per-"	Clarify
2964	24443561	@TheBlueMatt Any help decoding pulltester's output? 	ynQuestion
2964	24452034	Have you tried the latest comparison tool jar from https://github.com/TheBlueMatt/test-scripts ? 	ynQuestion
2964	24623948	"@TheBlueMatt (as discussed on IRC) Yes, this gets us further already, but it seems the getheaders implementation in the comparison tool is too incomplete to do a successful multi-block reorg with headers-first. So this means fixing that becomes sort of a blocker for this; unfortunately, I don't have"	Clarify
2964	25679852	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/bd49d084540ebd15c19b3dcb660802aa40da5f2d for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2962	23615774	"I can't reproduce this bug, `bitcoind addnode xx.onion onetry` seems to work fine with a blank peers.dat.    If I let the client sit, it'll fail asking for the DNS seed and fall back to a ""fixed seed node"", whatever that is.   Do the seed nodes return .onion addresses though?  "	Clarify
2962	23633634	"63 well all I can say that @gmaxwell had concerns and I was also able to add a .onion address that way. What didn't work was to remove it via ``addnode <onion> remove``. Also I have no answer for your raised question, perhaps we can get @sipa into the boat here? "	Other
2962	23635199	"@Diapolo I can't seem to replicate that one either, at least, removing a .onion address doesn't result in a failure, and attempting to remove an address a second time does (implying that it has been removed).   "	Clarify
2960	23590380	"Ultimately it is an internal control interface for bitcoind.  Spec compliance for the sake of spec compliance is a nice side project for someone, but we don't just want to add code for little value.  Of course anywhere that we produce code that breaks other implementations, absolutely, let's fix tha"	Clarify
2960	23591217	"ok, I hope that there is a man who knows C + + and ready to implement 2.0 support ))  Now, if it's possible - let's stop to throw 500 http error for every internal exception. It will be the step toward JSON-RPC 2.0 ))  For example, if you call method ""getreceivedbyaddress"" and provide wrong address "	Clarify
2960	23591461	Changing '500' HTTP status to something else seems like a reasonable request.  	Clarify
2960	23598113	"Addressing your issue #2 (including only one of result vs error) breaks python-bitcoinrpc at least, as well as JSON-RPC 1.0 compatibility. I propose we upgrade to full JSON-RPC 2.0 at the same time as we switch to using integer Numbers for all amounts. :) "	Clarify
2960	23601806	"ok, result vs error could be fixed some later :) 500 http error code have much higher priority for Java clients "	Other
2960	23604220	"Agree with @jgarzik. Not breaking compability with current clients is more important IMO. I'm fine with an optional JSON-RPC 2.0 mode if anyone is so inclined (and it doesn't result in much more code), but let's not randomly break old clients. "	Clarify
2960	23604716	"yes, optional JSON-RPC 2.0 mode, that is set via the bitcoin.conf, is the best solution.  About breaking compatibility - switch from 500 http error code to 200 http response is break any existing client or not? "	Clarify
2960	23605690	"@laanwj When multiple RPC versions have been proposed in the past, the conclusion at the end was that we should just break compatibility at some 'Y' (as in x.y.z) release since the client is beta anyway. "	Clarify
2960	23607390	"IMO ""it's beta anyway"" is a bad excuse, a lot of software is relying on the interface as it is now. Better have a very good reason to break compatibility.  "	Clarify
2960	23607434	"I had no clue we were using HTTP 500 status to report RPC errors, but it does explain why some JSON-RPC libraries don't deal well with bitcoind error conditions. Fixing this seems very reasonable, unless there is actually software relying on this.  How about fixing this for 0.9rc, and if people comp"	Clarify
2954	23606595	"Sometimes shutdown time is normal, sometimes it's slow as hell :-/. "	Statement
2954	23616533	I'm seeing this behaviour with a latent proxy too. Minutes for the threads to terminate.  	Statement
2954	23633727	@63 What OS are you using? Any special configuration? 	whQuestion
2954	23635271	"@Diapolo Last build from github, OSX, proxying through Tor, not listening.  "	nAnswer
2954	23926569	Can any of the core devs take a look please? @gmaxwell @gavinandresen @jgarzik 	ynQuestion
2954	24643363	Sad that most core-devs seem to currently do fancy things and have no time for such bug reports... 	nAnswer
2954	24644598	Shutdown is slow when I'm using a proxy is not high on the priority list of things to fix.  	Clarify
2954	24650204	"Sometimes I whish, we would prefer fixing things before inventing new ones... I mean there are quite some unanswered bug reports here, which are old. I will report them in the future, but currently it's not motivating. At least IMHO all bugs should get reviewed and tagged! "	Clarify
2954	24717488	"Fwiw, a quick backtrace shows this waiting on the recv() in Socks5(). "	Statement
2954	28302427	I've recently seen this problem as well. It appears that threads waiting for the proxy to reply can hang shutdown. Next time I encounter this issue I'll investigate further. 	Clarify
2954	28311652	"I also intent to debug this, when I've built a Qt debug build :). "	Clarify
2936	26336291	"Receiving an unsigned payment request with a1, b1, and c1 amounts for three addresses and modifying them to a2, b2 and c2 would result in sending a1+b1+c1+b2+c2 (a2 is not sent) while the confirmation box before sending the payment shows a2+b2+c2 (as would be expected to be sent).  I believe unsigne"	Clarify
2936	26350766	@jherrerob Is that behaviour with current master? I introduced some small changes and fixes in that area over the past days and more pull-requests are open that are related to payment-requests in general. 	Clarify
2936	26351571	The version I'm using I would say it's less than 2 weeks old.  Bitcoin-QT shows this version: v0.8.2-469-gacb3ebc-beta  And git log -1 returns this:  commit acb3ebc45506701fdb7e060d8b941a5ba6a1b5ac Merge: d922c85 bf3a20a Author: Gavin Andresen <gavinandresen@gmail.com> Date:   Thu Oct 3 22:52:38 201	Clarify
2936	26351827	"I'm not sure it's fixed, just wanted to be sure... "	Statement
2936	26354216	"@gavinandresen I need your help to investigate the reported problems.  Consider an insecure payment-request, this is a request, which doesn't contain an auth-merchant, right? It is otherwiese a normal payment-request, which can contain multiple send-to-addresses, right?  Currently GUI code different"	Clarify
2936	26382900	"@Diapolo:  As I said, I think payment requests need a GUI redesign-- I don't think wedging them into the ""one sendcoinsentry per destination address"" works.  The design should drive the coding, not the other way around. ""We"" need to figure out the correct user experience; perhaps payment requests sh"	Clarify
2936	26395214	"To be honest I think it was an excellent idea to make payment requests appear on the send tab. This keeps sending in one place, which is safe and recognizable.  But IMO it should always be one sendcoins entry per payment request, even for non-signed/secure one, so that they can be removed in one go."	Clarify
2936	26395455	"@laanwj What you propose shouldn't be that hard (except some detailed display), I can take a look in the next days, as I'm quite im that part of the code now. But if you are already working on that area too, I'm waiting for your input. Can you take a look at the other related pulls and merge the sma"	Clarify
2936	26395567	"@diapolo, yes I'll take another look  As for the interaction with the address book, I agree there should be as little as possible. And we should really get rid of the address book as it is and change it to ""historical addresses"". But that's a different topic (#2429).  Also we need to introduce per-t"	Clarify
2936	26663165	"I'm working on a fix currently, which fixes wrong amounts for insecure payment requests and also allows insecure requests to be able to expire and much more... "	Clarify
2927	23225947	"If using Bitcoin-Qt make sure to unset the UPnP option. For using bitcoind, I'm looking into a little patch currently. "	Clarify
2927	23226338	"@63 Thanks for the report!  A lot of the developers build with UPNP much of the time (or, well, at least I do), unfortunate that this slipped through.  @Diapolo we should not UPNP if listen=0, and separately, we should not UPNP if onlynet=tor. "	Clarify
2927	23228203	"As far as I can see, -listen=0 should already disable UPnP by default. Only if you enable it explicitly through -upnp (or upnp=1), or the GUI should it be enabled. If that's not the case, it's a bug. "	Clarify
2927	23393408	@sipa Reproduced in the latest master.   `bitcoin.conf`: ![](https://f.cloud.github.com/assets/5250052/1040007/00088eb8-0fa8-11e3-8c4c-3322daa47c3b.png)  active UPNP mappings on the router:  ![](https://f.cloud.github.com/assets/5250052/1040014/3e42dc92-0fa8-11e3-9dc9-da36f90be40a.png)  	Emphasis
2927	27956622	"My reasoning would be that the bind=XXX re-enables listen, and hence upnp is not disabled.  Edit: does it work if you explicitly add upnp=0 to the config?  "	Statement
2927	27958594	"If you explicitly set listen to false, bind shouldn't re-enable it.  "	Statement
2910	22871772	"This is my first time doing a patch for bitcoin, so please scrutinise and tell me if I've done something wrong :)  Thanks "	Emphasis
2910	22874576	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/720d7a084dfa7a303ad6ea187087b17a0e06ac35 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2910	22876870	"NACK, this makes Bitcoin centralized.  Edit: Nevermind, misread. "	Statement
2910	22877260	"Isn't there a rule already that prevents storing blocks before the last checkpoint?  Luke: if the rule was ""Do not send blocks in a forked chain more than 2016 blocks behind the main chain"", would that also be 'centralized'? "	Other
2910	22877843	"Nevermind, I misread this. Thought it was non-sending/storing pre-checkpoint blocks *even in* the main chain. "	Statement
2910	22878172	"There is no prevention to stop the storing of blocks prior to last checkpoint.  The closest thing is a check to see if the block's proof-of-work could possibly be valid given the time elapsed since last checkpoint, which allows for a worst case 4x dropoff in difficulty for every 2 weeks since the ch"	Clarify
2910	22879387	"I have done a test and confirmed that you can send a min difficulty block of height 1001 to a node who is on block 167000 and it will store it.  For a fully synced node, it looks like you would need to generate a block of difficulty ~68000, and they would accept it at height 1001 also, but I haven't"	Clarify
2910	22879582	"PS. another way to test this is to set your clock forward a few years, and then your client will happily store a min difficult block prior to checkpoints (if the block's timestamp is also in the future). "	Clarify
2910	22879755	"Regarding storing blocks, that problem will disappear once we switch to headers-first syncing (where only blocks along the known best header chain are fetched anyway).  I have no objection to not serving pre-checkpoint sidechain blocks, though. I prefer decreasing the reliance on checkpoints, but th"	Clarify
2910	22880300	+1 @sipa  	System
2910	22882230	"Something else that may be of relevance here:  currently a node does not need to first request a block in order to store it.  You can just connect to it and send a 'block' message and it will process it and store it as if it asked for it.  Likewise, in response to a getdata request, you can send a d"	Clarify
2910	22892973	"@ashleyholman It is relevant, and right now, that's perhaps unwanted (though in case of a freshly-mined block, it is even distributed that way). But again headers-first sync will solve that, as any block received that is not part of the known best chain, is just dropped. "	Clarify
2910	23220699	ACK  	Clarify
2910	23240834	@sipa: patch now amended to use CBlockIndex::IsInMainChain() 	Statement
2910	23241696	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/898d96670bd04222c95a8f2a8bcf36cbb3aa1cc7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2910	24474736	@sipa anything else you need from me on this one? 	ynQuestion
2910	24964031	"I'd like to postpone this until after headers-first is merged, as: * The problem with storing blocks will be solved in a very natural way then already (by only fetching blocks we already know we want) * My current headers-first patch (#2964) removes GetLastCheckpoint, and I'd like to keep it that wa"	Clarify
2906	22977179	This is highly desirable. 	Statement
2906	23220737	ACK.  Please collapse last commit into previous one.  	Statement
2906	23225251	ACK after the aforementioned squash. 	Clarify
2906	24138710	What do we need for this to move forward? 	whQuestion
2906	24552596	"Either the help should make it clear that the banned list is cleared on restart, or the banned list should be saved at clean shutdown and read in at startup (either is OK with me, saving/restoring could be a future pull request). "	Clarify
2906	24556034	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/562a909aa6cd909a67f58a47e3854039aa6a5408 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2906	26237259	"Is this even working?  I see it add IP addresses to listbannednode, but I now realize that the IP address remains connected. "	nAnswer
2906	26689466	"Needs rebase, test plan, and somebody to run through the test plan to make sure it works for somebody other than CodeShark.  "	Clarify
2900	22710734	"The alert tests are protocol version specific; what would be best way to work around this? I'd say just set PROTOCOL_VERSION for testing, but it's a #define rather than a mutable variable. "	Clarify
2900	22712679	"What DoS attacks? Why not post them to the security list so we can look at how to fix them (ignoring for now the fact that bitcoin is full of DoS attacks so this would not make much difference).  Anyway, I think this pull request is a bad idea. I do not wish to have to support this in bitcoinj as it"	Clarify
2900	22714363	"For instance this one posted to the email list: http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02490.html All of the devs, including you, are aware of a second and more serious non-public vulnerability.  bitcoinj added a protocol version test to find bloom capable peers in "	Clarify
2900	22720055	"Keep in mind that if an alternative node implementation doesn't want to put in the relatively small amount of effort to implement bloom filters, what makes you think they are going to put in the much larger amount of effort required to really get Bitcoin semantics exactly right regarding convergence"	Clarify
2900	22723770	"So the argument is that because you can ask a peer to use *less* bandwidth, that makes dos attacks *worse*?  You can't fix a denial of service by denying service. That's backwards, especially as I don't recall the last time I saw a DoS attacker who actually paid for his own bandwidth. The only way t"	Clarify
2900	22728664	"@mikehearn As you know the DoS attacks identified are not attacks on bandwidth, but rather other resources. Those attacks are significantly easier to pull off if the attacker can reduce the amount of data the targets send back to them; bloom filters do exactly that by reducing the INV messages the a"	Clarify
2900	22740077	"ACK NODE_BLOOM and ACK the entire patch, though myself, I probably wouldn't have added an option to disable bloom filters in the reference impl  A minor BIP would be nice (like to document every protocol change in a BIP, even though this is terribly minor) "	Clarify
2900	22742635	@jgarzik Good idea re: BIP. 	Statement
2900	22746389	"Note: When you bump the protocol version it breaks the alert tests. Your options are then to either generate new signed test data every time the protocol version is bumped, or rather fix the alert tests so the protocol version does not matter.  https://github.com/litecoin-project/litecoin/commit/dbc"	Clarify
2900	22746762	"I'm curious to see what @SergioDemianLerner thinks of this patch.  My concern is that if there IS a valid DoS attack on bloom-filter nodes (the ""attack"", as I understand it, is supposed to cause excessive disk seeking looking for transactions, yes?  ""meh"" -- worst case is ""node gets slow"" if it isn'"	Clarify
2900	22749513	"We only have 64 service bits. It would make sense to only use them when nodes benefit from not implementing features. On the other hand, having a separate service bit means notes can support bloom filters, but *not* NODE_NETWORK... "	nAnswer
2900	22752833	    uint64 nServices;  We've got 64 of them - I don't think we're about to run out... 	Clarify
2900	22753140	"@gavinandresen ""node gets slow"" is a potentially serious problem. ""making it easier for attackers to find them"": Serving SPV nodes is far less important to the health of the network than ensuring relaying works and consensus is maintained.  Next time I'd suggest letting people finish exploring the i"	Clarify
2900	22759172	"Can we cut it out with ""revealing the exploit"" stuff? It's trivial to find DoS attacks on bitcoind. I did it for fun last time this came up and it took about 45 minutes. I was going to post about it (it's a memory bloat issue) and then got distracted with the RNG stuff.  Why would we make bloom filt"	Clarify
2900	22761634	"Mike, enough with the overheated rhetoric.  Occasionally nodes will have reasons not to offer the bloom filter service, while still having block data. (NODE_NETWORK) Right now the protocol doesn't give any way to say that, adding the NODE_BLOOM service bit lets you do that.  Of course, if you are go"	Clarify
2900	22761718	"@wtogami I suggested awhile back to make it easy to set the alert keys locally for testing - maybe that's the way to handle testing them? You'd still have to regenerate the test cases every time the protocol version was changed, but that could be turned into a simple script using a known privkey.  M"	Clarify
2900	22776227	"I don't have access to the DoS report of  issue it's been discussed, but I can imagine.  Any tool (or NODE_ bit) that gives the users the ability to mitigate an eventual DoS attack would be welcomed by the community. Bitcoin network protocol is not ""fair"", peers do not send the exact amount of usefu"	Clarify
2900	22776705	"Regarding using the bit NODE_BLOOM maliciously to detect ""vulnerable"" nodes, I don't think this ease much an attack, since bloom enabled nodes can been detected by many different ways indirectly. (e.g. connecting to the victim with two peers, and testing if txs are filtered or not).  "	Clarify
2900	22776898	"Another way of looking at it is Gavin is worried about NODE_BLOOM making it easier to detect ""vulnerable"" nodes, and his solution is to make all nodes vulnerable. "	Clarify
2900	22810433	"ACK to NODE_BLOOM and this particular patch.  We will however need a solution for the broken alert tests, preferably one that does not require the alert key signer to have de facto centralized control over any protocol version bumps. "	Clarify
2900	22810556	@wtogami change your test to run with a throwaway key which is only used in testing mode if thats your concern. 	Clarify
2900	22810585	@gmaxwell Does that mean you suggest that be added as a second commit to this PR? 	Clarify
2900	22810860	"@wtogami  No, I don't care, updating the protocol version is infrequent enough that we can just fix the test after doing so. ""Defacto centeral control"" is not a concern there, if you are having trouble getting the test updated you just make the change I suggested, remove the test, or remove the aler"	Clarify
2900	23229946	"@gavinandresen I don't really follow your reasoning; assuming an attack exists (ignoring whether it does or not for now), then forcing everyone to be vulnerable is certainly worse than making it optional and advertizing it (perhaps combining it with stronger anti-DoS measures, knowing that it may re"	Clarify
2900	23274616	"A good example where the very different requirements of the different types of nodes matters is for anyone with a lot of bandwidth available to them, but not a lot of disk io or memory, a common scenario for servers in datacenters.  The most efficient way to push blocks over the wire for such a serv"	Clarify
2900	23276995	"Also, here is my draft BIP: http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02751.html "	Emphasis
2900	26689385	Needs rebase and a test plan. But I still think this is a bad idea....  	Clarify
2900	26690423	"@gavinandresen rebased  Current test plan and results has been as follows:  1) Bloom filters enabled, NODE_BLOOM set, protocol version bump (default settings)  Peers connect normally, no observed changes: PASS Android Bitcoin Wallet connects successfully: PASS Android Bitcoin Wallet connects as only"	Clarify
2900	26690505	"Note that the alert tests need to be fixed because the protocol version was incremented, as discussed above; if disabled manually all other tests run fine. "	Clarify
2900	26706681	https://code.google.com/p/bitcoinj/source/detail?r=2c44a4fad7faccfe9b1392c67f60d21b25703bde The current Android Wallet logic is to determine if a peer does bloom only from the protocol version.  bitcoinj would need to learn how to to read service bits. 	Clarify
2900	26706931	"@wtogami Sure, but that's not something that prevents merging this patch; it's compatible with older SPV implementations. More to the point, those implementations aren't going to change until this patch is merged. "	Clarify
2900	26707029	"Sorry, I didn't mean that is a blocker for this patch, it was meant as a FYI. "	Statement
2900	26716129	"Um, old SPV implementations are not compatible with this patch - it is inherently impossible for them to be so. A node that opts out of a previously mandatory feature will still be expected to provide it by old software. If an old client connects to a new server that has the feature disabled, it wil"	Clarify
2900	26717023	"@mikehearn Read the patch prior to commenting about it; it automatically kicks older peers so they won't waste their bandwidth and my draft BIP says that behavior is a must.  Also, the requirements of serving archival and bloomfilter-using nodes are very different and can productively be optimized d"	Clarify
2900	26717448	"Yes, I read that comment. That's why I suggested serving the chain torrent if you have lots of bandwidth and not much CPU. Or heck, just serve snapshots of the chain via HTTP. Then you have a piece of software and protocol actually designed for serving large files, instead of bitcoin+p2p protocol wh"	Clarify
2900	26718181	"So you agree that it's backwards compatible with older SPV implementations? Any other issues?  I don't see why we want to depend on a clunky system of requiring separate manual torrent/HTTP downloads, especially given ideas like partial UTXO mode to transparently bring nodes from SPV security to ful"	Clarify
2900	26719432	"Your patch is ""backwards compatible"" as long as most nodes don't use it, which is not the meaning most people would associate with the term. Worse, you implemented this by DoS banning the IP address, which fails to take into account that many users (especially on mobile) sit behind giant NAT boxes. "	Clarify
2900	26721635	"Ah good, finally you looked at the code. Anyone have any comments re: the DoS behavior? I could potentially change it to simply close the associated connection.  Service bits are meant to advertise services, and performing computations on behalf of clients who don't serve other clients sounds very m"	Clarify
2900	26721860	I think it may make more sense to start advertising NODE_BLOOM before we add a (even undocumented) option to disable it. That could ease the transition significantly 	Clarify
2900	26723942	"@TheBlueMatt If the sticking point for people is the fact that there is that option, I'll remove it. "	Clarify
2900	26744037	"> our patch is ""backwards compatible"" as long as most nodes don't use it  NODE_BLOOM enabled-by-default with 0.9 combined with always-enabled with 0.8.x means most nodes will use it.  > I think it may make more sense to start advertising NODE_BLOOM before we add a (even undocumented) option to disab"	Clarify
2900	26762842	"The ""sticking point"" for me is practical:  every service bit adds complication-- another possible configuration that should be tested, but probably won't be (which makes attacks more likely).  I have seen zero evidence that requiring that every NODE_NETWORK node support bloom filters causes anything"	Clarify
2900	26771832	"On Mon, 2013-10-21 at 11:39 -0700, Warren Togami wrote: >         I think it may make more sense to start advertising NODE_BLOOM >         before we add a (even undocumented) option to disable it. That >         could ease the transition significantly >          >  > Please. No. Removing the option "	Clarify
2900	27140402	"Updated to use CloseSocketDisconnect() rather than a 24-hour DoS-ban.  Tested with my Android wallet, which happily successfully connects then is disconnected about five times a second forever...  Off-topic here, but @schildbach I'd suggest some kind of back-off algorithm, or at least waiting a seco"	Clarify
2900	27140472	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/e7a64af74fee5734620e91e0045075c97197153a for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2900	27141167	"@petertodd Yes, that's a well known regression in bitcoinj: http://code.google.com/p/bitcoinj/issues/detail?id=296 "	whQuestion
2893	28401798	"Looks like this was fixed, I at least cannot reproduce this:      $ ./bitcoind -testnet -datadir=/tmp/bla     Error: Specified data directory ""/tmp/bla"" does not exist.     $ ./bitcoind  -datadir=/tmp/bla     Error: Specified data directory ""/tmp/bla"" does not exist.  "	Clarify
2889	22428463	"After further tests, it seems to have nothing to do with blocks at all, but even a simple command like ""getdifficulty"" will cause the RPC server to stop sending responses after about 28,000 requests:  ```javascript var rpc=require('json-rpc2'); var bitcoind=rpc.Client.create(8332, ""localhost"",   ""bi"	Clarify
2889	22438885	Perhaps there is a memory leak in the RPC server we didn't yet catch? Does bitcoind consume a weird amount of memory after 28000 requests? 	ynQuestion
2889	22438947	"How long is ""temporarily""?  EDIT: a few seconds, apparently. That can just be a new block that arrives and is being processed, I think. RPC commands (and pretty much everything) stops working then. A few seconds sounds long though. "	Clarify
2889	22449518	"> Perhaps there is a memory leak in the RPC server we didn't yet catch? Does bitcoind consume a weird amount of memory after 28000 requests?  No, the memory usage is low. It does use a lot of CPU though - about 50% CPU usage according to top.  > How long is ""temporarily""?  It depends. Sometimes it l"	Clarify
2887	28312860	This should be tried out with my rework pull... #2612 (need to rebase it). 	Statement
2862	26706021	This is still the case.  	Statement
2861	21591431	Note: untested for now. 	Statement
2861	21601833	"**THANK YOU SO MUCH!** @sipa you are my hero (and probably a bunch of other people's too)!  I will pull this and test it tomorrow, and try to do a more extensive test this weekend. I'll report back if I find any issues.  Again, you are awesome, and I think this is hugely important for bitcoin. Thank"	Clarify
2861	21601944	"@sipa is there any chance this could make it into master for the next release? I'm not sure if it's out of scope for the next release or not, just curious on timing so I can plan accordingly. I would love to see in the next release of course, but I don't want to derail all the other important stuff "	Clarify
2861	21608666	"Thanks for giving this pull request some love, sipa!  I think having both spendable and watch-only accounts in the same wallet is problematic. For instance, how do we deal with getbalance, account labels, etc...?  I had delayed attempting this merge until multiwallet capability had been merged, wher"	Clarify
2861	21611891	"@CodeShark The approach that this pullreq takes is that for almost everything, watch-only is considered equal to normal keys. You'll see it in getbalance, in listtransactions, in listunspent, ...  However, these are not considered when creating a transaction. Presumably we'll need a getspendablebala"	Clarify
2861	21708762	Thanks @sipa and others who have contributed to this!  I am so insanely happy to see this functionality get added. 	Emphasis
2861	21791384	"I have tested this patch by importing an address with`importaddress`, and `getbalance`, `listtransactions`, `getreceivedbyaddress`, `listreceivedbyaddress` work as expected (and they agree with blockchain.info).  `sendtoaddress` from a wallet that contains only a single watch-only address fails grac"	Clarify
2861	21793339	"One interesting thing to test would be having a mixed wallet, and checking that you can spend the amount in normal keys, but not more. "	Clarify
2861	21794114	Summarizing IRC review comments:  * AvailableCoins() needs an additional arg.  It now takes two optional bool args. * Would be nice if 'listunspent' indicated watch-only or not * Agree that testing a mixed wallet would be useful  ACK once issues are fixed   	Clarify
2861	21824880	"Significant changes, re-testing would be welcome :)  Instead of fRequireSpendable, the IsMine family of functions now return MINE_NO, MINE_WATCH_ONLY or MINE_SPENDABLE (instead of a boolean). `listunspend` should show whether a coin is spendable. "	Clarify
2861	21832372	"Overall ACK of updated code.  Did not test, just code review.  Minor taste-based nits:  * RPC: 'true' seems a better return value than 'null' * perhaps due to my b/g I prefer the ""_t"" suffix to the more verbose ""type"".  POSIX standard naming for such situations.  "	Clarify
2861	21930967	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/02e10bf92bcb693288740ff7af0422d4fa0572d8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2861	21935228	Some changes: * Fixed a bug that caused rescans to sometimes be skipped. * Adapt the output of validateaddress for watch-only addresses. 	Clarify
2861	21937206	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/80f264464ff2f424cc65e6c910411b7ba059f893 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2861	22244904	"I just tested the new changes and now re-scanning works both on testnet and mainnet for me. I can send and receive on testnet, and I get a      error: {""code"":-4,""message"":""Insufficient funds""}  error message when I try to send more than I have in spendable funds (according to `listunspent`) but les"	Clarify
2861	22257253	"@gavinandresen You've voiced some objections to this on IRC, and prefer watch-only wallets over individual watch-only addresses IIRC, care to mention them here?  I don't feel like working on this further if it is controversial, but I think it's extremely useful and pretty much necessary to enable ma"	Clarify
2861	22257476	"IMO there is a strong user-based case for merging.  There is clear user interest.  People are building websites based on this branch, among other things. "	Other
2861	22258333	"I'd like to add that it increases decentralization, thus increasing the resilience of the Bitcoin ecosystem. Instead of having to rely on blockchain.info to get information about addresses not owned by myself, I can monitor these addresses using my own node. The same goes for other Bitcoin services."	Clarify
2861	22259075	It might be useful to have 'getinfo' or another RPC return a boolean indication of watch-only addresses in the wallet. 	Continuer
2861	22260388	We'd love to have this feature. It is nonsense that we have to rely on blockexplorer.com and blockchain.info while having the entire blockchain stored on our own node.  Currently bitcoind doesn't have a friendly API for merchants and payment services providers. It is crucial to be able to handle ten	Clarify
2861	22261093	"It also seems opportune, with mentions of blockexplorer/blockchain, to plug my related pull request,  ""Add unauthenticated HTTP REST interface"" (req #2844 ) "	Other
2861	22284428	"@sipa is the importaddress code expected to update the account balance when a transaction goes out? I just dropped a generated raw transaction onto blockchain.info's tx send with one of the unspent transactions, and it removed the unspent from `listunspent`, but it didn't change the balance for the "	Clarify
2861	22285171	"@kyledrake Accounts are not addresses, and do not have _anything_ to do with the coins available to an address. The abstraction provided by the reference client has at no point any concept of a ""balance of an address"", only ""balance of a wallet"".  Addresses are associated with accounts, and coins re"	Clarify
2861	22285332	"I'll be happy with watch-only addresses in the wallet if their meaning is clear and that meaning doesn't break people's existing code.  If I understand, as implemented their meaning is ""Exactly like any other address in your wallet (shown as part of total balance, shown in listtransactions, ??shown "	Clarify
2861	22286490	"They are included in listtransactions, listreceivedbyaddress, and balances. They are also included in listunspent, but marked as watch-only there. Adding a flag to balance, or a separate RPC to query only spendable / watch-only addresses is probably useful.   "	Clarify
2861	22293831	"More thoughts:  I agree that there is consensus that SOME solution is needed.  I'll (grudgingly) go along with a watch-only address breaking the ""getbalance == coins you can spend"" assumption, as long as that is well documented.  RE: flag to balance or separate RPC:  ""meh""  -- if people want to keep"	Clarify
2861	22294149	"One more random thought:  Will the typical use case be a merchant importing a bunch of addresses?  If yes, maybe this should be:   importaddresses [address1,address2,...] &lt;label&gt; &lt;rescan&gt;  "	Other
2861	22297093	"six of one, half-dozen of the other -- JSON-RPC 2.0 batches work just as well, for multiple importaddress.  "	Emphasis
2861	22297719	"@jgarzik Do they? (considering imports rescan the blockchain..)  Reminder that the original author of this pull request has abandoned it in favour of watch-only wallets. IMO, it makes a lot more sense to approach this after HD wallets are merged, as then there's a clear use-case that doesn't violate"	Clarify
2861	22311416	"@luke-jr `importaddress` doesn't do a rescan if you pass ""false"" as the third (rescan) parameter. So the approach for batch imports of watch-only addresses would be to add all your addresses except the last one with rescan=false, and add the last one with rescan=true.  Thinking about my use cases, I"	Clarify
2861	22344871	"FYI I have worked around the `getbalance` issue by calling `listunspent` for the addresses I am watching and looping to calculate the balance.  The wiki page on raw transactions doesn't yet document this, but there's an optional array of addresses you can add to the end:  ``` listunspent [minconf=1]"	Clarify
2861	22348369	"Another issue I'm running into is that `listtransactions ACCOUNT` doesn't show sent transactions anymore when I send via `sendrawtransaction`. I can use `listtransactions` to see them, but I can't filter it on bitcoind itself using an array of addresses, so I would have scaling issues after a certai"	Clarify
2861	22368905	"The _only_ way to have a transaction debit an account, is by using sendfrom. I'm not sure how you'd expect sendrawtransaction to interact with this. Accounts are not about address balances, and any application that tries to do so will likely have a hard time working around the abstraction that the w"	Clarify
2861	22990583	"Just wanted to chime in to say I'd love watch-only functionality. IMO, it's the best way to go for server security, and I'd love to be able to do this without using a 3rd party service like blockchain.info. For me, it doesn't matter whether it's a separate watch-only wallet or integrated into the re"	Clarify
2861	24471648	"I'm also coming in with a +1 on this. Echoing earlier comments, for merchants this feature is an absolute must.  Having the ability to listunspent for a watch only address is IMO, essential for merchants and developers of BTC applications.  Currently the only way to get unspent is with blockchain.in"	nAnswer
2861	24632095	I have been using this in testing for Coinpunk and haven't run into any problems yet. Would love to see it get merged to master! 	Emphasis
2861	24636856	"@kyledrake You know, the P2SH support @sipa just added could work well with Coinpunk: store funds in a 2-of-2 multisig P2SH addresses (including change) and have both the server and the user's client-side wallet sign transactions. Because both parties need to be involved you'd be able to implement u"	Clarify
2861	24806243	What's the safest (least amount of changes compared to a stable version) version containing this patch? Are there any binaries available? I tried getting them from jenkins from last auto sanity check but it returns 404. 	Clarify
2861	25215075	very quiet here.. How far is this from going into the 0.9 release ?  	Clarify
2861	25579094	"Would also like to see this merged in for an upcoming release! Let me know if I can help.  I have been using this functionality extensively with Coinpunk. I have refactored the service so that it now depends on nothing but the watch only address functionality, and have figured out how to deal with t"	Clarify
2861	25972349	"I'll try merging this into master and doing some testing.  Edit: though on second thought I'd prefer a solution in which an entire wallet is made watch-only, instead of adding watch-only keys to an existing wallet and creating two classes of IsMine. This feels error prone somehow.  "	Clarify
2861	25980110	"A recent suggestion by gmaxwell is to make coins received through watch-only function as if they were automatically (and irreverisbly) marked locked. Not much would change in practice, though. "	nAnswer
2861	26014195	"@sipa I'm not sure what the benefits are of using this over the current implementation (which appears to work very well under testing), but I'll defer to the experts.  How long do you think it will take to make that change? Is it a candidate for making it into 0.9?  Not trying to pushy, just need to"	Clarify
2861	26016778	"@kyledrake It's not about implementation - I expect that little would change. The reason to suggest it, is because the main controversy seems to be what the semantics of unspendable coins would be. If they behave identically to an already existing concept (lockunspent), the semantics are clear.  And"	Clarify
2861	26661566	"@laanwj I do agree that having entire wallets be watch-only or not would certainly be an easier abstraction, but IMHO that means we need multiwallet as well. "	Clarify
2861	26661771	"Just want to give my love to @sipa, thanks for the feature! Hope it gets merged soon. +1 "	Emphasis
2861	26710932	"@sipa Yes, let's just go ahead with this. Even with watch-only wallets we'll need ""importaddress"" and unspendable outputs.  ACK; tested and it works as expected  "	Clarify
2861	26719836	"@laanwj  +1  That's the bottom line  ACK, did a quick test and re-review  "	nAnswer
2861	26745272	"Just to add to the testing reports: I haven't found a single error using importaddress and listunspent using this code so far, and I've used it quite a bit. It's been working great in testnet and production for me. "	Clarify
2861	26758690	"@keo It seems I never replied to your comment, but what may seem as overcomplication is rather the opposite.  Being able to always query information about any address's history, requires a rather large index to be maintained (multiple gigabytes). Using that for a simple wallet service means you beco"	Clarify
2861	27273212	"It doesn't really make sense for address-watching to add outputs to the wallet in the first place, since the outputs aren't really related beyond the receive notification. "	Reject
2861	27464246	"My testing indicates that Coin Control #2343 and Watch Only operate fine independently, but the combination has issues.  https://github.com/litecoin-project/bitcoinomg/commits/bitcoin-omg-0.8 Here is my branch of Bitcoin 0.8.5 where I initially tried to add watchonly to coin control by filtering out"	Clarify
2861	27477678	"I forgot to mention, Coin Control + Watch Only exhibits this strange erroneously large transaction behavior even if you have zero watchonly addresses. "	Clarify
2861	27671538	@kyledrake  Would Coinpunk be usable with a fully watch-only wallet?  It would be a lot safer and less confusing to allow watch-only addresses only if a wallet does not mix with privkey addresses.  I have to admit while testing this earlier that the user experience with the current watchonly impleme	Clarify
2861	27703385	"@wtogami Coinpunk would be usable with a watch-only wallet, correct. I'm not sure if others would like to have the private key addresses for other purposes, but for me, private key addresses are not needed. "	Reject
2861	27874594	@kyledrake  Given the current conflict Watch Only will not improve until Coin Control #2343 is first merged.  CC is pretty much done except people need to step through the Test Plan in that ticket.  Could you please direct people to participate in that? 	Clarify
2861	27964917	"I fully agree that having a mixed wallet, with both spendable keys and other unspendable addresses, leads to a more complex and potentially confusing interface. However:  * As long as we don't have multiwallet, I believe that forcing an entire wallet to be spendable or not makes this less useful. Th"	Clarify
2861	27966370	@sipa I agree. IMO the complication of the current solution would be less if it was more visible to the user through the interface; for example if getinfo and such were to return two balances: a spendable and a watch-only balance.   Internally this could be implemented by making GetBalance take an I	Clarify
2861	27967829	@sipa +1  	System
2861	28142876	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a13f1e8f61f2c4f32c72c72409ea591228557434 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2853	21470927	"Chronological order is a bit ambiguous when it comes to Bitcoin transactions, which don't have timestamps! Where is this documentation? listtransactions should stick to the order transactions were seen in, and try to guess a reasonable time partially based on that. "	Emphasis
2853	21625038	"I completely understand that, but it does not sort them even by received timestamp. I've already figured outworkaround: listtransactions ""*"" 1000 0 instead of listtransactions """" 1000 0 does what expected. But i've spent several hours googling and experimenting, so i suggest fixing default behavior."	Clarify
2846	27418965	"I had the same problem after I tried to delete unconfirmed transactions with pywallet.  Some transactions that I didn't delete weren't showing up.  I tried the -rescan, -txindex, and -reindex flags, but nothing worked.  I eventually had to delete all transactions with pywallet and THEN do a -rescan "	nAnswer
2844	21370296	"I don't see the need for a non-standard ""bitcoin-format"" header...  Accept: application/x-bitcoin-block, application/json Accept-Encoding: hex "	nAnswer
2844	21371668	"@luke-jr I agree, and make the default for Accept: \*/\* be to output json so curl usually works the way people expect. "	Clarify
2844	21374823	"I think passing the requested format as an HTTP header is awkward and hard to use. I'd say either a /rest/tx/<txid>/<format> or ?format=<format>. This also allows us to for example at some point build a minimal HTML interface that links to it, without breaking compatibility or changing the earlier i"	Clarify
2844	21376342	"Yes, please don't invent a new HTTP header: this is exactly what the `Accept` is for. Allowing a `?format=` GET parameter alternative covers cases where specifying headers is inconvenient or impossible.  Using Accept-Encoding for 'hex' struck me as a little weird, but having read the spec again it a"	Clarify
2844	21376404	"Also, I would suggest using the base url `/api/v1/`, for hopefully obvious reasons. "	Clarify
2844	21386251	"The Accept/Accept-Encoding feedback seems to be in line with HTTP spec, and widely requested.  On the version number in API:  it's already there, in one sense.  The API *major* version number will change very infrequently -- perhaps once a decade, if the bitcoind JSON-RPC compatibility is any guide."	Clarify
2844	21388441	"Added:  In the past, /api/v1 has been suggested for the *RPC* interface.  At this point, ""api"" is too generic I think.  "	Clarify
2844	21417535	"@sipa makes a fair point about requiring a header being a bit more difficult.  Software such as dumb browsers do not permit easy HTTP header modification.  However, query strings are bloody ugly.  github.com-style clean URLs seem like a smart way to go, e.g. ```     GET /rest/tx/TX-HASH/json ```  to"	Clarify
2844	21419762	"Updated commits and pull req description to indicate use of ""clean"" URLs. Non-standard header ""Bitcoin-Format"" removed.  "	Clarify
2844	21432492	"> GET /rest/tx/TX-HASH/json  Is that actually how github does it? `TX-HASH.json` might be a better choice, I think. Dumb clients which ignore the headers will assume it's json from the extension. "	Other
2844	22262030	"@jgarzik thank you! This is the beginning of a usable, clean API which appeals to merchants and PSPs.  @maaku agree on providing .json instead of /json - seems to be the way everyone does it (without saying anything about whether this is good or bad). "	Clarify
2844	22262583	"Excuse me if this is out of place, but why implement this in bitcoind?  Writing an external program that wraps bitcoind RPC calls and allows HTTP querying makes much more sense to me. As far as I can see this adds no new information retrievable from bitcoind, it only changes the protocol/format. A s"	nAnswer
2844	22446819	"Just for fun, I created a simple Python script that does this: https://github.com/runeksvendsen/btchttp/blob/master/btchttp.py  It only supports JSON right now, but should easily extensible. "	nAnswer
2844	22447903	+1 for @runeksvendsen : I'd rather ship a version of his btchttp.py in contrib/ than make core bitcoind bigger.  	Statement
2844	22454377	"@rebroad This is not an interface intended to be exposed to the internet. You can do so of course, but it's not a replacement for the P2P system (it's more an addition to RPC). It's just an interface to ease debugging, or help other local applications that need access to raw block/transaction data. "	Clarify
2844	22459961	"I fear several commenters here read the pull request title, and did not examine what the code actually *does*.  Some salient points: * Dramatically easier interface for developers and general queries * Out of the box SSL support, already built into bitcoind * This pull adds functionality not availab"	Clarify
2844	22460346	"@jgarzik It's clearly a compromise between usability and bloat, which may or may not be worth it (see my other comment regarding that), however, there IS a getrawblock, it's called getblock [hash] false. "	Clarify
2844	23218677	"Rebased.  The first commit is a cleanup candidate for immediate inclusion, too.  "	Statement
2844	23220357	"Updated for @maaku 's suggestion of HASH.EXTENSION, where the extension (.json, .txt, .dat) selects the format.  Updated OP examples.  "	Clarify
2844	23230413	ACK 	Clarify
2844	23241002	Rebased for CreateNewBlock() update. 	Statement
2844	23241581	"JFYI:  Since it was easy, I implemented the following on a side branch: ```      GET /rest/block/template.(dat|txt) ```  to download the binary (/hex) encoding of a miner block template.  No fee or sigop information is provided, just straight CBlock and nothing else.  It seems nice and efficient for"	Clarify
2844	23310170	Merge-ready  	Statement
2844	25549364	"Rebased.  Merge-ready.  Note: I also have a HTTP REST interface for ""getblocktemplate"" on a local side branch.  "	Clarify
2844	26310428	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/009ca574d83af47f8ff4c4cd7b17e052fe1737de for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2844	26310500	"Pull-tester error: rest.h is mentioned in the Makefile.am, but there ain't no rest.h committed.  Also, when testing:  Is it supposed to be ...TXHASH.json or TXHSAH/json  ?  The former complains ""invalid hash"", the latter works.  "	nAnswer
2844	26315587	"I like the interface.  Regarding bloat/redundancy, is this going to deprecate the JSON API calls for doing non-authenticated, non-wallet queries eventually?  "	whQuestion
2844	26697462	"It also makes sense to have a different interface for block chain data if we want to split the wallet off into another executable eventually. The ""block chain daemon"" part wouldn't need a JSON RPC interface at all.   "	Clarify
2841	21348723	1) Feature request seems sane.  30 second glance did not turn up any bugaboos.  2) Mild conflict with #2776 but easily resolved.  3) Waiting to see if pulltesters likes these new commits.  A bit worried that the first commit breaks git bisect?  	Clarify
2841	22747391	needs rebase 	Statement
2841	24572269	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/4ec0d1d99554e4109bfcef1970b1354e89cc6a97 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2841	25493614	needs rebase again 	Statement
2841	26689264	"I ain't never seen a double-negative I didn't disapprove of.  Option should be -autofillkeypool, default should be 1, set it to 0 to turn it off.  And needs rebase and a test plan.  "	Clarify
2841	26783720	"I like this feature, as I'd like to have more control over when and whether it refills the key pool, so that I know exactly when there are new keys in the wallet and I need to make a new backup. It just feels safer.  "	Clarify
2841	26784884	Maybe I/someone should just implement very basic BIP32 key generation instead :) 	Clarify
2841	26789927	That'd be a good option too. But as long as we have a keypool option (and I don't think it's wise to completely do away with the keypool as soon as introducing deterministic wallet support) having more explicit control over it would be useful. And this code is already written...  	Clarify
2841	27010572	"I wonder if it should be -generatekeys=0/1 instead, so it covers any future cases where keys might be created. "	Clarify
2841	27014361	"@CodeShark I've rebased it: https://github.com/laanwj/bitcoin/tree/2013_10_noautorefillkeypool_rebase  @luke-jr yes, it should block all the cases in which keys are added to the wallet automatically. But in the (future) case of HD wallets it could ""generate"" new keys from the seed even with this opt"	Clarify
2839	21302121	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9fe9d788a9eaf40cc5dd1171807b24c9bd170104 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2839	21302247	"Could also be used for whitebox test instrumentation: E.g. have a table with the proper utxo state for every height, and use blacklisting to walk all the way back while checking it. "	Clarify
2839	21347973	ACK  	Clarify
2839	21793211	I was thinking it'd be better to allow tx hash blacklisting. To blacklist a block you'd blacklist its coinbase.  TX blacklisting would allow app developers to more easily test double spend and reorg handling in regtest mode. 	Clarify
2839	21794032	"@mikehearn Makes sense, but that'd be more work, as there is no transaction index (and the optional one isn't used for validation). For blocks, there is already a mechanism for marking them invalid in the block index db. "	nAnswer
2839	21873450	"Bitcoin already re-validates the last N hundred blocks on startup, right? Do you imagine your patch ever being used to blacklist a block more than a few hundred blocks deep? If not, then it would still seem to be possible. "	Clarify
2839	21938028	"Not sure how that is related. This is not something that happens at startup - it can mark a block invalid during execution, and it will reorganize away from it instantly. If anything, this is very useful to test edge cases in the block connection logic.  For blacklisting transactions that are in the"	Clarify
2839	22095477	Just to clarify: blacklistblock permanently blacklists a block; the only way to undo it is to -reindex the block chain.  I think that should go in the blacklistblock help message; people might assume that the blacklist state is memory-only and can be reset by restarting.  Otherwise: ACK. 	Clarify
2839	22233193	"ACK (even it isnt up to me), this could save us alot of time if we run in the same trouble again "	Clarify
2839	23380430	It sounds like people are in favor of this but only want the help message to more explicitly explain what it does and the danger of misusing it? 	ynQuestion
2839	24918412	"@mikehearn I wrote this pull request as preparation for headers-first sync, and the current headers-first sync pull request still includes it, but most of the code touched here (except the actual RPC implementations) is rewritten for headers-first anyway. "	Clarify
2839	24918661	Maybe it should be closed then. 	Statement
2839	26237871	Close? 	whQuestion
2834	21210309	Any ideas on how this could be usefully automatically tested?  	ynQuestion
2834	21229609	- Fetch a template with getblocktemplate() - Spawn a second thread which simulates a new block on the network after 5 seconds - Time a request to getblocktemplate with longpollid set to the value provided by previous reply - Ensure time is within 4-6 seconds. - Spawn a second thread which increments	nAnswer
2834	22233078	@luke-jr how about making changes so you can specify after which time X you get a new template? 	Clarify
2834	22234309	@K1773R That might make sense for a future pull request. 	Clarify
2834	23220849	Quick review seems OK... wants testing and additional review at a minimum  	Statement
2834	26689128	Rebase needed.  	Statement
2834	27043633	Rebased. 	System
2834	27045376	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d8d173f128d7021cc14c31f3261ed5b6807ee725 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2833	21079663	"About 3 hour  I am in the East Coast, USA its currently 6:41 PM GMT -5 "	Clarify
2833	21080129	"It's just unconfirmed, I see it on my node:  bitcoind getrawmempool | grep af597cc34afd03f0b6935     ""af597cc34afd03f0b6935846d3504fe24058f98f5c390d2aa5ec74f82b87aef4"",  It's also, on my node at least, a candidate for the next block: bitcoind getblocktemplate | grep af597cc34afd03f0b6935            "	Clarify
2819	20702135	"I think we should go the opposite way, and not ship any sources with the Windows setup.exe.  My rationale: nobody is getting the setup.exe and then building from source  "	nAnswer
2819	20703834	@gavinandresen ACK  	Clarify
2819	20704903	"Fine by me, probably shouldnt include partial sources, though. "	nAnswer
2819	20705600	"Agree about not including the sources in the Windows zip/install, but we should include the documents, which is what this issue is about.  "	whQuestion
2819	20723579	"Right it's the wrong way around, it should include the docs but not the source, now it includes the source but not the docs. "	Reject
2819	20870893	What I like about inclusion of the src is I can easily do a diff between my current version and a new version and see changes in source. Perhaps I'm the only Win-user doing this ;). 	Clarify
2811	20712410	"@subSTRATA Even if the older version of OpenSSL is:  > known to have multiple issues (at least 3 bugs, as explained bellow)  ... It probably doesn't hurt anything.  Last I checked, bitcoin **mostly** is only using the randomizer from openssl and probably one or more hashing functions which are **not"	Clarify
2811	20713976	CVE-2013-0169 isn't high priority because it affects approximately zero people (you must be using -rpcssl and you must set an -allowip that lets an attacker connect to your rpc port).  CVE-2012-2686 isn't high priority for similar reasons.  And the last bugfix doesn't affect us (we don't use OCSP...	Clarify
2811	20870284	#2399 ;) 	System
2800	20127733	"Looks like the same error as #2674 and #2405  As suggested, running with -reindex should fix the problem.  edit: Also #2426 "	Other
2800	20462026	I had the same issue. Running reindex solved it. ```bash /Applications/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt -reindex ``` 	Clarify
2800	23519014	"Somebody reported this occuring on windows xp also with 0.8.3  http://bitcoin.stackexchange.com/questions/12997/assertion-failed-when-i-try-to-open-bitcoin-wallet  He added that he's trying to open it from multiple user accounts, so I'm wondering what the expected behavior for that is? "	Emphasis
2790	19930665	What OS? 	whQuestion
2790	19930878	"Sorry... Mac OS 10.8.2, Bitcoin-Qt 0.8.2-beta. "	Statement
2790	19970040	"So there is NO en_GB translation, but AFAIK our language setting has nothing todo with time formats. Where do you see the wrong format, everywhere or just in the debug Window for example? "	nAnswer
2790	19970374	"Indeed @diapolo. Date formatting is determined by the qt system locale, not the language. I guess it'd be possible to change the locale with the language though. "	nAnswer
2790	19970468	"I see them in at least the following places:  * On the Overview tab, Recent transactions panel on the right * Transactions tab, Date column * Transaction details dialog  I think that the date format does need to be controlled by the language setting, which should actually be more general, i.e. the u"	Clarify
2785	21026851	"Same issue again. This time I've opened Qt to see the corruption message, and chosen to not rebuild. I then opened Qt again to be certain that there was corruption, and again chosen to not rebuild.   I've then shutdown my computer, and when I opened Qt the next day with the intent of starting the re"	Clarify
2785	28297341	"Very strange, this is an error coming from inside leveldb. Could this be some kind of transient disk/memory corruption issue?      LevelDB read failure: Corruption: block checksum mismatch  I suppose it's related to the other MacOSX leveldb corruption issues "	Clarify
2784	19861397	@mikehearn Would this interact badly with BitcoinJ wallets? How frequently do they send pings? (or anyone with an alternate implementation) 	ynQuestion
2784	19874318	"bitcoinj sends pings every two seconds, it's much more aggressive than this patch. We could certainly reduce it. Ping times are used to pick which peer to download from. "	Clarify
2784	19879931	The disconnect logic seems like it would negatively impact testnet. 	Statement
2784	19882740	"Inverted the logic, so it now becomes a ping if nothing has been received for a while, rather than sent.  Tested that it indeed detects broken connections within one minute. "	Clarify
2784	20512785	"Change looks good to me, although it will have the effect of disconnecting any nodes that don't respond to pings with pongs (or some other message). As pong messages were added in protocol version 60000 it would effectively EOL clients older than that and this may deserve an announcement somewhere. "	Clarify
2784	20603317	"It would be easy to adjust the timeout for onion addresses, but really, I'm not sure we want nodes in the network that can't respond within a minute. Slow nodes can have terrible effects on the user experience for SPV wallets. They will automatically drop to the bottom of the preference list in bitc"	Clarify
2784	23220987	"How about a 5-minute timeout, and get this merged?  Maybe 1 minute is too short, but 90 is far too long.  "	Other
2784	26230542	"Suggestion: send pings _every_ 2 minutes (even in case something was received recently, with the new ping-response-time-measurement that means we always get some useful latency information), and disconnect after receiving nothing for 5 minutes. "	Clarify
2784	26272177	@sipa  ACK unconditional 2 minute ping plus 5 minute disconnect. 	Clarify
2784	26295067	Rebased & updated. 	Reject
2784	26296509	ACK. 	Clarify
2784	26297069	There may be a bug in this code; will investigate later.  EDIT: fixed. 	Clarify
2784	26304885	"ACK  Optional nit:  ""5 * 60"" is more self-documenting than ""300"", and the previous code used the ""M * 60"" notation.  All modern compilers will automatically convert the more human-readable M*60 at compile time, so there is no added runtime cost.   "	Other
2784	26367710	"Moved/added the ping/timeout constants to net.h (where they can be accessed by both net & main), and changed the timeout logic a bit: either there is an unanswered ping >5 minutes old, or there has been no message received at all for 5 minutes. "	Other
2784	26375968	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f9eeb06c10d826a56389b8473ec48549d4d57787 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2784	26444184	"Currently running this patch myself on bitcoin.sipa.be. I see a surprisingly high number of ping timeouts and inactivity timeouts (every 10 minutes or so, very irregularly). I'll investigate whether these are actual connections that go dead (in which case this patch is actually useful...) or a probl"	Clarify
2773	19857665	the Proxy-function is still Broken / unusable 1! 	Emphasis
2773	19857683	"It looks like there is a node out there that tries to connect to your through Tor, which doesn't support the extra bool flag in the version message. I don't think there's a fault on your side. Running through tor works fine for me. "	Reject
2773	19864415	since this Pullrequest it conflics with  -discover parameter .  without the parametr all is ok 	Statement
2773	20109021	What works okay? 	whQuestion
2770	19517272	"I am also still having this problem again with 0.8.2.  Previously I had the problem with prior 0.8 builds and had to downgrade.  0.8.2 looked good for a while, but I've once again gotten this.   "	Clarify
2770	19522952	Might this also explain why I am being the main chain identified as an invalid chain? 	Clarify
2770	19523114	@rebroad you're using a mac? 	whQuestion
2770	19523427	I don't believe you've ever previously disclosed that you were running it on truecrypt. Can you reproduce your failures with it not on truecrypt? 	Reject
2770	20692754	Bump. I am also getting this issue. OS X 0.8.3 	Clarify
2770	20870191	I still think it's time to upgrade to the latest LevelDB code and see if that helps. 	Statement
2770	20870287	"...  @Diapolo  If a new version of LevelDB has changed in ways we don't understand, then those changes could result in chain forking.  If we understand how its changed we could reason about how they may or may not have helped OSX/Windows and there is no need to just guess. "	nAnswer
2770	20870672	"@gmaxwell You are most likely correct in what you say, but doing nothing about the crashes seems to just bring people away from bitcoind or Bitcoin-Qt in the end :-/. "	Clarify
2770	22474152	"I got a chainstate corruption this morning on my Mac, and have spent most of the day debugging. @sipa @gmaxwell @jgarzik : here is what I've found so far:  My MANIFEST- file is corrupted (corrupted file: http://skypaint.com/bitcoin/MANIFEST-076191 ). I wrote a little python tool to dump the log reco"	Clarify
2770	22474213	"...or not written, as mmap'd pages often default to all-zero.  Gah. "	Clarify
2770	22474814	This looks like the same issue:  https://code.google.com/p/leveldb/issues/detail?id=197  	Clarify
2770	22476681	"@gavinandresen Did this happen with a build, which includes the recent LevelDB update? "	whQuestion
2770	22534779	"@Diapolo: yes, I got corruption running git HEAD which includes latest LevelDB.  I've reached the edge of my LevelDB/filesystem knowledge, so I'm done debugging this for now and moving on to other things. "	Clarify
2770	22534982	@gavinandresen Were you able to reliably reproduce the corruption?  	whQuestion
2770	22535566	"Guys, thanks again for finally looking into this and acknowledging that something is seriously amiss.  Given that it seems we have a fairly serious and profound bug to squash here, and we've apparently (momentarily?) reached the edge of your time/knowledge to debug this, would it make sense as a sto"	Clarify
2770	22535988	"@toffoo I am not comfortable releasing a 0.7.3 final until the May15 hardfork has actually split from the older clients and the backport has proven reliable. I also don't have a Mac, so I cannot even build v0.7.3rc3 for it. "	nAnswer
2770	22538532	@toffoo : I'd rather drop Bitcoin-Qt on OSX than recommend an old release; we don't have the resources to support multiple releases.  Whether this bug is serious enough to drop the OSX release until somebody figures out what is wrong and fixes it is debatable-- I've had two corruptions in the last s	Clarify
2770	22686426	"Could this be a result of relying on fsync on Mac OSX for write guarantees?   https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man2/fsync.2.html  > Note that while fsync() will flush all data from the host to the drive (i.e. the ""permanent storage > device""), the drive"	Clarify
2770	22690135	"I think we should try that patch. The fact that fsync doesn't fsync is ... unfortunate. I guess if writes can arrive to disk out of order and at some arbitrary later time could would line up with what I've seen which is that the corruptions only happen when something goes wrong at the OS level, like"	Clarify
2770	23056448	Please try:   https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/test/ ... and let us know if the corruption issues disappear.  	Clarify
2770	23228811	"I gave 0.8.4 a try but I am still getting the same error.  I am just one user though, and not a programmer, so better wait for another response to confirm.  "	nAnswer
2770	23230494	"@medicinebottle Did you restart from scratch? (start with -reindex option, or wiped your blocks + chainstate directories). "	whQuestion
2770	23232783	"Hi, yes I would also like to try out this new test release, but I was curious which would be the most scientific method of indexing the block data:  1. reindex my existing v0.7.2 blockchain 2. download jgarzik's blockchain bittorrent bootstrap.dat  https://bitcointalk.org/index.php?topic=145386.0 3."	Clarify
2770	23545508	"As per sipa's suggestion, I've gone with #1 above and reindexed my existing v0.7.2 blockchain.  Almost 3 days now running v0.8.4rc2 here and: zero corruption  Thanks again guys for all this Mac client attention.  Whatever you did seems to be working. "	Clarify
2770	23549676	"@toffoo If you're up for another experiment to make sure the 0.8.4 changes are the cause here: can you try doing a reindex with 0.8.3 again, and see whether it fails? "	Emphasis
2770	23643151	"Okay, done.  This afternoon I reindexed with 0.8.3 no problem and it has continued to run (on/off several times) tonight with no crashes or corruption.  When I started this Issue it was 0.8.2 that had corrupted 6 times on me.  I don't think I ever tried 0.8.3 when it came out, because I understood t"	Clarify
2770	23644146	::sigh:: we fixed a file descriptor exhaustion bug that caused corruption on OSX previously.  	Clarify
2770	23798884	"Ok, experiment complete: 0.8.3 just corrupted on me.  Reindexing worked fine and ran perfect for about 2 days, now upon restart today it opened with ""Database corrupted"", closed ""unexpectedly"", and didn't offer to reindex.  Like before, this was the only interesting line in debug.log:  LevelDB read "	Clarify
2770	23801257	"Ok, now things are getting interesting.  With the newly installed 0.8.4, first it came up saying my wallet.dat is corrupted (that's a first) but fortunately I have a backup copy.  With restored wallet.dat in place, now it offers to re-index, but now actually crashes/corrupts during re-index (at leas"	Clarify
2770	24437169	"I just tried out the new 0.8.5 Mac release by reindexing my good 0.7.2 blockchain.  It reindexed fine in about 3 hours and I left it running with no problems for several hours.  Upon the first restart I got the ""Corrupted block database detected.  Do you want to rebuilt the block database now?"" mess"	Clarify
2770	24437678	"block.ReadFromDisk failed is what it sounds like: it tried to read block data from disk and it couldn't.  That sounds very much like bad hardware to me, the block-writing code is incredibly straightforward (blocks are written as received in append-only fashion to the blk*.dat files).  "	Clarify
2770	24437987	"Yes, in my decidedly amateur capacity, that's what I figured ReadFromDisk might mean.  But do you really believe this could be a hardware issue?  I remain skeptical.  Let's recap the facts here:  1.) running 0.7.2 client since release (and all previous Mac client releases) on this same machine has N"	Clarify
2770	24460981	"Ok, I managed to just eye-ball this and see that my new 0.8.5 blk00005.dat file is a few megabytes smaller than the corresponding blk0006.dat file in my original 0.7.2 directory from before the reindex/upgrade.  All the other block files are identical pre/post upgrade.  Also, doing a 'diff' (or any "	Clarify
2770	24749630	@toffoo  Any chance to test with my fix from pull 3000 in git?  I'd like to have some confirmation that it makes a visible improvement for people who were previously having issues.  If it does then perhaps we should do a 0.8.5.1 for OSX only. (wouldn't be the first time we respun OSX for a small fix	Clarify
2770	24756647	"Hey @gmaxwell sure I'd be happy to test it here if someone can build me a binary?  I've never actually tried to compile a bitcoin-qt binary, nor do I have a built environment set up here, and I understand that it isn't exactly straightforward for a novice to get the Mac client built. "	Clarify
2770	24878173	"Aloha @toffoo.   I'm the Mac developer for Litecoin.    Here is a build of Bitcoin 0.8.5 + pull 3000:  http://myutil.com/test/  I think it is built the same way as official builds (32bit, 10.5 support, built with Xcode 3.2.6 as that was the last Xcode with official support from Apple for OSX 10.5). "	Clarify
2770	24878937	"Please verify the integrity of his .dmg.asc with GPG.  His GPG key is signed by my GPG key, which is available here among many other places: https://github.com/bitcoin/bitcoin/blob/master/contrib/gitian-downloader/wtogami-key.pgp "	nAnswer
2770	24890676	"I use OSX 10.6.8 and Xcode 3.2.4 on a 32-bit machine, with everything compiled -arch i386 -mmacosx_version=10.5 to create release builds.  "	nAnswer
2770	24904678	"Thanks @gavinandresen, I'll downgrade Xcode to 3.2.4 for all future builds (and then I think I have everything else the same, except perhaps for macports minor versions of dependencies).      We had a support issue with OSX 10.5 and the Xcode version could definitely be the culprit. "	Clarify
2770	24908172	"Well, we don't know for sure if our builds have problems on 10.5.  We have only one report from a user who said the client would mysteriously just stop sometime after sync is complete and it is idle. "	Reject
2770	25250712	@toffoo Any results? 	ynQuestion
2770	25287191	"When my Bitcoin-Qt 0.8.5-beta gets to ""Loading Wallet"", the program quits unexpectedly. The violating thread is:  Thread 0 Crashed:: Dispatch queue: com.apple.main-thread 0   libsystem_kernel.dylib            0x93a11a6a __pthread_kill + 10 1   libsystem_c.dylib                 0x943ecb2f pthread_kil"	Other
2770	25294214	"@face thank you for the binary  @gmaxwell using face's Bitcoin 0.8.5 + pull 3000 Mac binary, I've just gone and re-indexed my ""still working like a charm"" v0.7.2 blockchain.  It chugged away for about 2.5 hours with no problems and seemed to finish and run with no issue.  I then let it run for a whi"	Clarify
2770	27296568	@toffoo  https://bitcointalk.org/index.php?topic=320695 Please test the Bitcoin OMG build here that includes both Mac OS X fsync patches and an upgrade to leveldb 1.13.  We are very curious to learn if this solves the corruption that some Mac users experience. 	Clarify
2770	27562573	@toffoo @jgarzik https://bitcointalk.org/index.php?topic=320695.msg3456344#msg3456344 	System
2770	27669022	"@wtogami Thank you for your efforts, I'm so glad to see this issue receive the attention it deserves.  This weekend I got a chance to try your latest binary.  I downloaded and installed your Bitcoin-Qt-0.8.5-OMG3.dmg on my MacbookPro Retina, now running OSX Mavericks v10.9.  Once again I reindexed m"	Clarify
2770	27669890	"Have you tried 0.8.5-OMG3 with a clean sync, not an upgrade?  Do you have access to a very fast upload pipe somewhere?  If your 0.7.2 blocks are 100% reproducible in causing this error then one of the Mac devs likely will want to see your actual files.  Use tar and xz to compress them to a smaller s"	Clarify
2770	28173510	Some updates here: I've been in contact with @wtogami on IRC and he concluded that my bitcoin-0.7.2 blockchain data is bad in a unique way that breaks upon update to bitcoin-0.8.  I added that my blockchain has been continually synced since v0.3ish and agree with his conclusion.  He suggested: 1.) a	Clarify
2770	28214157	"I tried running 0.8.5-OMG3 for a week with no corruption problems. When I first opened it, it did complain about my block database so I let it rebuild. Now it's complaining about the block database again. I guess I will try a completely fresh blockchain like @toffoo did. "	Clarify
2770	28444479	Another update: I had forgotten that I'd read Gavin's advice regarding App Nap on Mavericks https://github.com/bitcoin/bitcoin/issues/3182 after almost 4 days doing the fresh full sync.  Even then when I ticked it off it isn't clear if the executable is run directly from the command line if the OS r	Clarify
2770	28445628	"I'm trying the same thing, a fresh blockchain using @wtogami 's 0.8.5-OMG3 beta. So far, so good, but I definitely need a few more days of testing. Although, your results don't give me much hope of this working now.  @toffoo Any chance you're hopping between networks/locations, such as home vs. work"	Clarify
2770	28446545	"@KaosMcRage interesting theory, I can certainly appreciate the temptation to search for patterns in the corruption.  But in my case, I have only ever run bitcoin-qt on the same home network ... BUT my external IP does change on occasion.  So I'm not sure if that data point supports your theory or no"	Clarify
2770	28448652	Changing the network doesn't make sense as the cause of corruption.  More testing of OMG3+ would be good on Mac as it matches the leveldb currently in Bitcoin 0.9.  It is possible it fixed other corruption issues and something else remains here.  Quite frustrating that we can't figure out a reliable	Clarify
2770	28453222	"@toffoo If your external IP changes match up with some/all of your re-corruption instances... _maybe_ it supports or at least contributes to the theory. I know it's a stretch, though, and probably nonsense.  @wtogami I completely agree, it's a bit absurd. I've resisted saying anything for quite a wh"	Clarify
2757	22478632	"Hi Jeff,  I am interested in trying to help with the bitcoin project, and this issue looks like an interesting one to start with since it is a privacy issue that would be good to fix.  If I were to work on a patch, should I post it here for review?  Thanks Ash "	Clarify
2757	22557564	"Just a note to say that I've had a chat with @gmaxwell and he's given me some pointers on how I can get started with reproducing this as a test case.  This will take me a while to get familiar with the various testing tools, but I'll post back here once I've got a test case. "	Clarify
2757	22806338	"I have done some investigation and testing of this issue and here are my findings:  - The minimum work required to fingerprint a node is based on the GetLastCheckpoint() block, by calculating ComputeMinWork() on that block and factoring in the maximum difficulty drops possible in the time elapsed si"	Clarify
2757	22808327	"Does anyone see a problem with just ignoring requests for blocks that are not in the main chain, unless they are very recent? "	ynQuestion
2757	22809423	@sipa The only problem I see is that it could make life harder for a fancy pruned node trying to reorg off a side chain.  Limiting it to very recent (/during this runtime) / blocks that were in our best chain previously shouldn't break that too awfully at least. 	Clarify
2757	22871655	"I have issued a pull request with a proposed patch.  The fix is along the lines that were discussed here, except it is erring on the conservative side, in that I interpreted ""recent"" to mean ""since last checkpoint"".  The behaviour doesn't change for any blocks that come after the last checkpoint.  T"	Clarify
2745	19021900	"Looks like the same error as #2550 and #2664, except they were on OS X "	Other
2745	19470966	"@fanquake yes, but this is with 0.8.2 "	yAnswer
2745	19913338	@gruez #2664 was on 0.8.2 also 	Emphasis
2739	18952773	"The thread code plays nicely with boost::asio.  I would guess any solution that keeps the calls to std::getline() will be problematic, because they don't get interrupted by boost::thread::interrupt. "	Clarify
2737	18935586	There is a standard for this format. It would be a shame to not use it. 	Statement
2737	18965628	Can you put a link to that standard? 	ynQuestion
2737	19307013	I think its a standard format. Everybody can apply it.http://www.coinsigner.com 	nAnswer
2737	23009233	@luke-jr ping?  	whQuestion
2737	23012219	"[RFC 4880](http://tools.ietf.org/html/rfc4880) describes many things, including signature formats. "	Other
2736	27214434	@gavinandresen Perhaps you should take look at this? 	whQuestion
2729	18835902	"addnode IP add seems to connect to that IP immediately? ""addnode IP remove"" should disconnect from that IP immediately for consistency.  The reason to want to disconnect is not important.  "	Clarify
2729	19107850	"addnode IP remove with 0.8.2 QT returns ""Error: Node has not been added. (code -24)"" unless node was added using ""addnode IP add"" command previously and that is true even for nodes that were connected the usual way prior to using ""addnode IP remove"". In other words, if node X is already connected,"	Clarify
2726	18801296	The hash of block 228388 is 00000000000000821df4084902335c1736e715c1d2fa62e5655bbdb9276e6604 	Statement
2726	18801663	"ok, so what does this mean? Why do I still continue to get invalid blocks, even today? e.g.:-  2013-06-02 03:40:03 received block 000000000000014400eae885c5d28444caff6910d2d863728d527f530e47e563 2013-06-02 03:40:03 InvalidChainFound: invalid block=000000000000014400eae885c5d28444caff6910d2d863728d52"	ynQuestion
2726	18801710	"Ah, I just noticed the typo in the issue title. It is block 228338, not block 228388. Now corrected the title. "	nAnswer
2726	18804846	@rebroad I assume you chainstate database got corrupted. You can rebuild it by starting with the -reindex command-line option. 	Clarify
2726	18820271	"I will try this, but I literally just did a reindex before this issue occurred as part of an upgrade from 0.6.3 to 0.8.2, so I#m skeptical, plus I think perhaps it gets too easily corrupted given this. "	Clarify
2726	18953914	"@sipa ok, I have done the reindex now, but the problem still exists, although the block it got stuck at is different (it managed a further 3 days and is stuck at 1st April 2013 now). Does this mean i need to keep reindexing each time? if so, this will take forever! "	Clarify
2726	18955390	@rebroad You wouldn't happen to be near a train yard? (http://jakepoz.com/soviet_debugging.html) 	Clarify
2726	19143793	Another potential issue with this is that no warning is displayed in the GUI - only in the debug.log. 	nAnswer
2726	19160629	"I have tried reindexing again, and using the latest downloadable bitcoin client for windows, but it's still stuck.  2013-06-08 08:52:18 SetBestChain: new best=00000000000001abe4ec1d257b30edb23b3e5d05397cc01089ff4a5750266347  height=229659  log2_work=69.694998  tx=15516508  date=2013-04-04 13:47:29 p"	Statement
2726	19161717	"@rebroad Can you try reindexing again, with par=1 in your bitcoin.conf file, or with -par=1 on the command line? I just want to rule out this is an issue caused by multithreaded verification, but my best guess is still that this is a hardware problem. "	Clarify
2726	19165095	"@sipa i will try that next. Just to also clarify. I've also tried removing the database entirely and redownloading the blockchain previously. i've now just tried another reindex, and this time it's stuck again, but again on a more recent block:-  2013-06-09 07:57:18 SetBestChain: new best=0000000000"	Clarify
2726	19165137	@sipa what sort of hardware problem would cause this? and surely if I had such a hardware problem wouldn't other applications crash and it'd be unlikely I'd have a system uptime of several weeks. 	Clarify
2726	19382376	"I've re-run bitcoin-qt 0.8.2 with the -par=1 option and after completely removing the database so that it downloaded the blockchain from the genesis block. This time it got stuck on 23rd March 2013, marking that as in invalid block. I've had enough of this, so I'm reverting back to 0.6.3 and will se"	nAnswer
2726	19851366	0.6.3 is also having the same problem now. I've deleted the database and re-run the latest version:  SetBestChain: new best=000000000000022f951a82f1e2d8fe06378edd5cef926d39c09d44ac25c5e5d5  height=231305  log2_work=69.773668  tx=16119387  date=2013-04-14 12:15:08 progress=0.533195 init message: Load	Clarify
2726	20548864	"I am now running bitcoin-qt 0.8.3 on a different machine, and a different OS (ubuntu 64bit rather than Windows XP), and I am still seeing this problem. Am only I getting this?! "	Clarify
2726	21368520	"I had exactly this issue.  I tried running `bitcoind -daemon -reindex` more times than I can count.  I even tried deleting my whole `~/.bitcoin` directory twice.  Every time I got to about April 2013 and then the ""InvalidChainFound"" errors appear in `debug.log`.  From this point onwards, `bitcoind g"	Clarify
2726	21378396	"@edam Interesting. This is a case of database error that goes undetected likely, so incorrect data is read back at some point, which mismatches the chain spends.  I'd very much like to know whether it is consistently the same block that triggers it (and if so, which). Can you try to reproduce the pr"	Clarify
2726	21379622	"@sipa: I don't think it was the same place, but I'll have to re-run it to find out.  I'll report back with some logfile text after a couple of failed attempts. "	nAnswer
2726	21435623	"Here are the results of two separate runs, each taking approx. 6+ hrs before `InvalidChainFound` error messages started appearing in the logs.  The following is the first occurrence of those errors in the logs for each run...  First run:      SetBestChain: new best=000000000000012a2ebbc76eb1bcdeffce"	Clarify
2726	21450986	"@edam To exclude the possibility that the Debian patches were the cause, could you try the same thing with the released bitcoind binaries on sourceforge? "	whQuestion
2726	21518130	"@sipa: OK, built from `bitcoin-0.8.3-linux.tar.gz`, obtained from sourceforge (against DB5.1, as there is no `libdb4.8-dev` package in Debain unstable). I started getting `InvalidChainFound` in `debug.log` after about 5hrs.  First occurrence is shown below:      SetBestChain: new best=00000000000002"	Clarify
2726	21518428	"@edam  Can you try running the binaries in that tar?  They are statically linked and will isolate out weirdness with your compiler and system libraries.  If you're concerned about the provenance of random binaries, they're built using a determinist build process which you can run yourself (needs an "	Clarify
2726	21573321	"@gmaxwell: thanks, I was concerned about that, yes (gitian's a clever idea, though!).  Anyway, I've run the pre-built binary now and I still get the same results:      SetBestChain: new best=000000000000019a6cd4b53febbe8c0521496c9cd1015b089fdcc1c78d920a77  height=228172  log2_work=69.628947  tx=1501"	Clarify
2726	21573542	Just to be clear; you restarted from scratch with the pre-built binary?  May I ask you to run memtest86 for a few hours on your system? 	Clarify
2726	21622639	"@sipa: that is correct.  I deleted (renamed, actually) `~/.bitcoin`, re-ran `bitcoind -daemon` using the pre-built binary in the tarball (and again, after setting the `rpcuser`/`rcppassword`), left it running for several hours and then checked `bitcoind getinfo` and the logs for errors.  The machine"	Clarify
2726	22090602	Memtest86+ can run for many hours before showing faulty RAM. 	Clarify
2726	22220134	"Exactly the same problem here. Debian Squeeze amd64 using precompiled bitcoind 8.3 binary.  Yesterday, it randomly started to show (in getinfo): >Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade  Removed the whole .bitcoin folder, but du"	Clarify
2726	22255338	@sipa Does this mean we may have a problem with the parallel verification code? 	Clarify
2726	22264042	"Sorry for my lack of response -- I'm on holiday at the moment.  @gmaxwell: I can test that, just in case.  But it will be at least a week before I can.  In the meantime I'm also re-trying verification with `par=1`, just to be sure that it wasn't a fluke.  @Diapolo: If it helps, I am a developer, so "	Clarify
2726	23539677	We'd really like to get this fixed! Has anyone experiencing this had a chance to try the above test? 	Clarify
2726	23623921	"@gmaxwell: I've re-run bitcoind another 3 times, using a fresh `~/.bitcoin` directory each time, with `par=1` in the config file and I haven't received any errors.  So, it looks like I'm getting a fairly reliable 100% failure rate when *not* using `par=1` and 100% success rate when using it.  I'll t"	Clarify
2726	23625726	"Hi!  I have the same error on block 254354. Tried it with 0.8.2, 0.8.3 and 0.8.4RC2 win32 (cleaned ./bitcoin-dir befor everytime) - no way! Tried  -par=1 (on all versions obove) - no way. :(  <pre> received block 0000000000000025d41d0269b661cc504a4e15927b94006e2978fdd54a5e12ac SetBestChain: new best"	Other
2726	23634024	@Schmollen Are you using some heave overclocking with that system or do you encounter other system instability? 	ynQuestion
2726	23634200	@edam  Great.  Can you check to see if your system has a separate multithreaded copy of boost and if bitcoin is being linked to that one?  @Schmollen can you try booting your system into memtest 86x as a sanity check?  	Clarify
2726	23636462	Are you running bitcoind -daemon or ./bitcoind -daemon  The first will still be running the debian bitcoind even if you're in the ./bin/64 directory of the tarball. 	Clarify
2726	23641710	"Hi! @Diapolo No, I don't. It is an old AMD Athlon (no overclock, no undervolt) Win XP (32bit) PC, Only for surfing (a litlle bit) and Bitcoin QT. Streestest (Prime95 & Memtest86) are okay. @gmaxwell: Memtest: sanity check is okay. @pstratem If you mean me: No, it doesn't run with -daemon "	Clarify
2726	23696412	"Just put it on a WinXP-PentiumM-Laptop same error, same block 254354. Using 0.8.3 with -par=1. :( Tried 0.8.1 now: the same. :( "	Emphasis
2726	26251481	Same issuse with block 263561. Will try reindex and -par=1 later. Edit: bitcoind -reindex -par=1 fix this. 	nAnswer
2726	26397601	"@sipa I find it really odd, that quite a few people reported that -par=1 works but more threads seem to cause issues. "	Clarify
2724	26783774	"Yes, there should be an checkbox to make the fee inclusive. This should always be possible, not just when there is not enough balance.  "	Clarify
2724	26784649	"See discussion in #1570 (closed, but still valid)  "	Statement
2723	28297798	"I don't think this belongs in the form itself, but I guess a warning could be added to the confirmation message before sending if someone is sending more than half of their balance (for example). "	Clarify
2719	18723800	"while trying to fix my issue with installing 8.2 i noticed my 8.1 had been locked down and that while bitcoin was in its default location, the database and logs and such are in the user /C:\Users\XXXXXX\AppData\Roaming\Bitcoin but i still have been unable to get 8.2 to work due to lock down of 8.1 a"	Clarify
2719	18728788	"@jafoal  i just found a fix for my issue by downloading the zip version of the 8.2 client upgrade and  it worked without any errors or issues and loaded with no problems. so if you installed using the exe version , try using the zip version. Hope this helps you out. "	Clarify
2719	28298160	Is this still an issue with 0.8.5? 	ynQuestion
2717	18697795	"I wanted to keep the output small, as there is only ever one syncnode. But it's probably cleaner to always output it. "	Clarify
2717	18721092	"How is this useful, ie when would it be useful? "	whQuestion
2715	18682333	Is there a way I can get the client to update the times of the transactions already seen once this patch gets applied? 	Clarify
2715	18684307	"This change would affect the date that is shown on all your current transactions, not only new ones.  "	nAnswer
2715	18724012	"@luke-jr you created the feature, do you see any problem with this? "	ynQuestion
2710	18677885	"Deleting addresses will never be supported, hiding would indeed be useful.  "	Statement
2710	19005481	"Perhaps being able to mute addresses as well, in the case of micro-payment spam. (Though I guess if they know one address they can fairly easily find the rest of them if they're used.) "	Clarify
2704	18724207	"Uh oh, likely another shutdown order issue.  "	Reject
2704	19151198	Looks like this is happening when you close the program with an encrypted wallet which remains unlocked.  The issue is reproducible. 	Clarify
2704	19151214	"Oh, and it also happens on v0.8.2-beta final. "	Statement
2704	28300953	"There seems to be a few issues regarding wallet related pthread_mutex_lock( assertions, though not obvious duplicates: #2472, #2375, #1663 "	Other
2701	18632125	It seems you're missing the necessary database/ subdir for this wallet. Recover using -salvagewallet. 	Clarify
2701	18633545	I suppose Bitcoin should more gracefully handle this failure instead of being told this cyptic message. 	Clarify
2701	18633692	"Agree, except BDB is so arcane that I don't think we have a way to know what the actual problem is (except for trying to parse db.log itself).  A generic ""Your wallet failed to open, want to try salvaging now?"" would be nice, though. Then again, I really hope to get rid of BDB entirely soon anyway. "	Clarify
2692	18395998	"Backups on the same hard drive/location aren't really proper backups... You also don't need to backup every new keypair - only every 100. Future versions will require a single one-time backup, so putting effort into automated backups like this might be redundant. "	Clarify
2692	18396716	"It *could* give a reminder when a new backup is needed either based on the number of keypool keys generated or ""keypoololdest"", that was my idea with #2637.  Maybe a ""backup status"" on the overview page that shows this info...  "	Clarify
2691	18396224	"I use Ubuntu exclusively (both 12.04 and 13.04), and I've never noticed this. Then again, I compile from source.  Is this with the precompiled / statically linked version?  This must be an issue with appmenu-qt, ie the Qt plugin that exports the menu to Ubuntu the tray.   "	Clarify
2691	18397355	See also #1242   This is a long-running issue without a clear cause or solution... Some people even switched to GNOME in frustration :)  	Clarify
2691	18398566	I'm not sure at the moment if this is also with the precompiled version from the PPA (I use both). I'll keep an eye on this.  It appears randomly at about 10% of app starts (very rough guess). Normally its not that much of a bother because all you need to do is quit and start bitcoin-qt again. But y	Clarify
2691	18946261	"I have this problem on Ubuntu 12.10. When I first log in to Unity, then start bitcoin up, the systray icon is gone. However, once the application appears, I can close it and restart it. The systray icon starts working.  The Qt4 systray feature places an icon in the /tmp folder. It's quite possible t"	Clarify
2691	18947211	"By the way, this exact issue happens for me when I compile the litecoin gui from the git archive. Restart it, and the systray icon magically appears... "	nAnswer
2691	19026652	"16x16? Isn't the default height of the tray 22, or 24? Did you change the tray size from the default? If so, that in combination with the issue that you mention can explain why it happens to some people and not others.  This seems an upstream QSystrayIcon issue (at least the Unity plugin)... we can "	Clarify
2691	19138356	"I first thought the tray icon didn't appear at all, then I noticed:  ![wtf](https://f.cloud.github.com/assets/126646/626683/9eba5cae-cfc9-11e2-8aad-d1d0ba47088f.png)  Despite the strange position, the icon is fully functional... :confused: This started happening for me today on my laptop (ubuntu 13."	Clarify
2689	18388830	"At least the UAC stuff is pointless, as you never need to run it with Admin-token :). I agree on the later 2 points. "	Clarify
2689	18710472	bump: 0.8.2 binaries are still not signed. 	Statement
2689	18723737	"Don't bump your issues, it makes you look like an impatient ass and won't help you get them implemented any faster. If you really want something implemented do it yourself. In this case add code signing to gitian.  This is harder than it seems, as the determinism verification would have to ignore th"	Clarify
2673	18154377	"No error, it just has to be > 0, as the code checks for that condition currently. "	Reject
2673	18166082	"Zero doesn't make sense here, since free transactions are handled separately. 0.00000001 does, though it's probably not an actually good value right now, as it would make it easy for someone connected to you to run you out of memory. "	Clarify
2673	18179727	"I asked LaserMissile to open this bug.  It'd be nice if =0 carried out the user's intent, requiring =0.00000001 to mean ""relay anything"" isn't friendly.  (yes, setting it that low is dumb and might make you vulnerable to a DoS attack, but I think it is important to let users shoot themselves in thei"	Clarify
2673	18179829	"Ah, that sounds great to me. "	Statement
2673	18715534	Just out of curiosity - can any give me a simplified explanation of the vector in which a user submitting a tx fee of one satoshi opens themselves up to DoS? 	ynQuestion
2664	18083176	Repeated and error is reproduced this time after block 3572 is processed. Odd. 	Statement
2664	18093572	Are you running 0.8.1 or 0.8.2rc1? 	ynQuestion
2664	18097269	Bitcoin 0.8.2 BETA  from doc/README 	Statement
2664	18097985	"Ok, repeated differently and problem avoided thus far. I was redirecting datadir to an external drive. "	nAnswer
2664	18122729	"I am also seeing this issue on Arch with package ""bitcoin-daemon-0.8.1-2"". I also have the data files on an external drive, accessed through encfs. Could that have something to do with it? "	Clarify
2664	18122755	"Sounds likely, beyond my pay-grade though. I guess as it's a niche issue it won't be high on anyone's list. "	Clarify
2664	18122793	"Well, if it helps, I've seen this crash several times (I'm not sure whether it's the same block each time, this time the best height is 155152), and then when I re-run bitcoind I see:  Opened LevelDB successfully LoadBlockIndex(): last block file = 5 LoadBlockIndex(): last block file: CBlockFileInfo"	Clarify
2664	18122826	Yeah I just ran it on my internal drive and downloaded a few 100MB of the blockchain for experimenting with. 	Reject
2664	18122907	"Bleck. I'm running it on a Raspberry Pi, so I don't exactly have an internal hard drive.   Do you know what version this much-cited ""file descriptors"" fix is in?  "	Emphasis
2664	18122944	"Hm, planning to run on a pi soon, so my sympathy is raised again, :).  Not heard of the file descriptors fix I'm afraid. "	nAnswer
2664	18123048	https://github.com/bitcoin/bitcoin/search?q=%22file+descriptors%22&type=Issues  @gavinandresen Care to comment? 	Other
2664	18132407	@kerzane @hjfreyer There are file descriptor fixes in 0.8.2  See issues #2517 #2522  and pulls #2557 #2568 #2569  	Statement
2664	18154300	"<pre> : Error opening block database. Do you want to rebuild the block database now? </pre>  @hjfreyer A -reindex will perhaps sort these issues out for you, can you give it a try? "	Other
2664	18158382	"@Diapolo I did reindex, and I also moved the block chain out of encfs (because why change one variable at a time when you can change two!). Regardless, I haven't seen the error again yet.  "	Clarify
2664	19949231	"I've just seen this issue. Running 0.8.2-beta on osx 10.8.4  Had a corrupted chain state, choose to abort the reindex. On the next startup Bitcoin-Qt crashes, and continues to crash on subsequent startups.  Apple Crashlog  - https://gist.github.com/fanquake/5855409  Bitcoin Debug Log - https://gist."	nAnswer
2664	28299451	Is this still an issue with 0.8.5?  	ynQuestion
2656	18004268	Did you had a look at existing RPC clients: - http://tcatm.github.com/bitcoin-js-remote - https://github.com/TheSeven/Bitcoin-WebUI - https://play.google.com/store/apps/details?id=net.lwi.bitcoiner (android) - https://en.bitcoin.it/wiki/Spesmilo  or check: https://en.bitcoin.it/wiki/Software#Browser	Clarify
2656	18004725	"Would be nice to be able to use the official bitcoin-qt client. If the GUI and bitcoind backend are appropriately separated, then it could be easy to write an RPC backend to replace bitcoind on the local machine, without changing the interface. "	Clarify
2656	18007275	Perhaps have a server which acts as permanent online node and just use -connect for your client to use LAN-speed for block-sync? 	Emphasis
2656	18019043	"As I understand it, that wouldn't do the same thing, still requiring me to resync each time. It probably wouldn't speed up syncing anyway, as it seems to be mostly CPU-bound on my laptop, I would also be running it on a remote server, not on the LAN. "	Clarify
2656	18192802	"I'm convinced this is a duplicate issue, but cannot find the original anywhere.  In any case, yeah this would be nice, but don't expect it to be implemented any time soon. RPC, as it is now, is not good enough for implementing Bitcoin-Qt remotely. It lacks notification support and more fine-grained "	Clarify
2653	17826555	you are probably talking about blockchain.info. the site shows the node that relayed transaction to it. this is NOT indicative of who made the transaction or the original broadcaster. 	Clarify
2653	17827572	"Clarifying questions:  1) When you say ""my home was incorrectly displayed... on blockchain"" you mean your IP address was identified as the source of the transaction on the blockchain.info website ?  2) When you say ""should block blockchain"" you mean the client should prevent connections from the blo"	Clarify
2653	17828569	"gavinandersen, [1] yes,  [2] yes. Thank you for listening. You are the first person to listen in days. "	Clarify
2653	17829295	"@alanast1 : thanks, I understand the issue.  If they speak English, feel free to ask the authorities to contact me if they have questions about how Bitcoin works ( gavin@bitcoinfoundation.org ) or why the information on blockchain.info is unreliable.  "	Clarify
2653	17962126	"I understand why this could be desirable, but how can we practically ""block blockchain.info""? If we hardcode a banned IP they could always just switch to another one.  "	Clarify
2653	18010008	"Bitcoin.org actually links to blockchain.info, so I dount this will happen. "	Statement
2653	18645984	"Wow, that's nasty.  That would make a very good argument to encourage people to make sure their Bitcoin client is shut down when they're not actively using it, even if it means that it will take longer to sync up when needed next time.  This probably isn't in the best interests of the Bitcoin protoc"	Clarify
2653	19183390	"Bitcoin does have the -connect command line and config file option, where it will only attempt to connect to or allow connections from the specified IP addresses. A ""deny"" command line option, where one could specify a list of malevolent IP addresses, would fit this need - however you would still ne"	Clarify
2653	21810254	"qubez: GREAT idea, I like the wording of that phrase, I hope blockchain.info sees it and can apply it.  Have you told them?  Perhaps this might help address this issue.  For each incoming transaction that is received for the first time, log the IPv4 address/port (or equivalent for other protocols), "	Clarify
2653	22585228	"I'm a little sceptical of whether this actually happened but regardless I've added a warning to blockchain.info transaction pages explaining that the ""Relayed by IP"" doesn't necessarily indicate the transaction creator. "	Clarify
2653	22655467	"Nice, thanks!  I looked at some transactions but did not see this warning.  Where has it been added?  "	Emphasis
2653	22765906	"@Krellan Next to ""Relayed by IP"" there's a question mark. It displays the message on hover. "	Statement
2646	17782155	"bad_alloc sounds like out-of-memory - are you running very close to the amount of memory available on your system?  The ""inputs already spent"" error is probably the wrong message, and should ""inputs not found"", since it may be just due to not knowing any of the inputs, no DoS logic is triggered.  "	Clarify
2646	17803191	"Memory can't be the issue there because I used to run Armory (very memory hungry) beside Bitcoin-Qt and never got ""memory low"" or some similar warning. Crashes happen on random, so far I haven't found any procedure to replicate them on will. It is like a lottery for me, client sometimes runs for 24+"	Clarify
2646	17806291	"Well ``bad_alloc`` is indeed memory related, it's an ``Exception thrown on failure allocating memory``, see http://www.cplusplus.com/reference/new/bad_alloc. The problem here is, where does it come from... how many nodes were connected and what is your exact command-line (if any)?  @sipa Take a look"	Other
2646	17818726	"-datadir=E:\BitcoinData added to shortcut used to run Bitcoin-Qt, bitcoin.conf contains the following lines:  keypool=1000 maxconnections=16 banscore=20 logtimestamps=1  I'm increasing or decreasing maxconnections based on if I'm in a need for upload bandwidth or not but it does not seem to affect t"	Clarify
2646	17826520	Are you sure you are using 0.8.2 RC1? AFAIK there is no ``ThreadDumpAddress()`` anymore in the client... 	whQuestion
2646	17930490	Error with ThreadDumpAddress() occured with 0.8.1which I used after deinstalling 0.8.2rc1 	Statement
2646	18062393	"Node on 85.17.239.32 which was and is still spamming my node with crap is using some weird Bitcoin client:  { ""addr"" : ""85.17.239.32:8333"", ""services"" : ""00000000"", ""lastsend"" : 1368798401, ""lastrecv"" : 1368798405, ""conntime"" : 1368792822, ""version"" : 70001, ""subver"" : ""/Bitpeer:0.2.3/"", <--- ??? ""i"	Other
2639	17762402	"Another transaction where this happens is the example transaction [here](http://bitcoin.stackexchange.com/questions/3374/how-to-redeem-a-basic-tx). I get this error even if I include the private key and previous transaction id:  ```sh curl --user USERNAME --data-binary '{""id"":""t0"", ""method"": ""signra"	Clarify
2639	17764966	"I added this code to decoderawtransaction:      if (!ssData.empty()) {          fprintf(stderr, ""Extra data in ssData: %s\n"",                 HexStr(ssData.begin(), ssData.end()).c_str());     }  ... and get: Extra data in ssData: 01000000  Instead of ignoring extra bytes, decoderawtransaction shoul"	Clarify
2639	17766371	"Legend! That's extremely helpful. Now I'm able to sign my own transaction. The sample transaction results in an ""invalid private key"" message, but I can live with that.  I'm a bit puzzled about why these last 4 bytes aren't allowed. Is [step 13 in this tutorial](http://bitcoin.stackexchange.com/ques"	Clarify
2639	17766537	"Don't know why that tutorial says to add a hash code to the transaction, I think it is wrong (but their python code is correct).  See https://en.bitcoin.it/wiki/Transaction for the format.  "	Statement
2639	17768152	"Not the final transaction, but the intermediate form that is signed. I'm afraid I'll have to dive in the client C code to figure out what exactly is going on. My goal is to do the signing in ruby:  https://bitcointalk.org/index.php?topic=202271.0  "	nAnswer
2639	17774795	"@Sjors I think you're confusing the transaction itself with its intermediate form used for signing. Among many other modifications, the hashtype is indeed appended to a transaction before computing the hash being signed, but this hashtype field is not part of the transaction itself. There are other "	Clarify
2631	17621229	Looks like a LevelDB error I've never seen before... are you overclocking your system? Did you perhaps mine while using the client? 	Clarify
2631	19030709	I experienced the same error. And I'm running the Bitcoin and the Litecoin client side by side... Maybe it's related to that... 	Statement
2631	19033129	Same as #2533 	Emphasis
2631	27201016	"@kartcl14 Can you try starting your client with -reindex added once, so it can rebuild the block-database. If this issue is solved or didn't occur again, please close this ticket. "	Clarify
2626	17559959	There's code for that in this pull request (it's a fully-fledged auto updater actually) https://github.com/bitcoin/bitcoin/pull/1453  	Statement
2626	17569913	If I could just suggest a really simply implementation for the time being. Use have a simple `latest_version.txt`  stored on bitcoin.org with the version number. When the bitcoin client loads it can query this file and do a version compare and then notify the user. The command line client could writ	Clarify
2626	17570300	"In general we are very ware about depending on centralized services in the reference client. The result of someone hijacking github, controlling people's connections, or holding one of the developers with access at gunpoint could be very problematic. Of course, that problem exists now too, but witho"	Clarify
2626	17572076	"@sipa - I am also aware of these potential issues, so please be clear, my ticket is not about autoupdating, simply notification that a new version is available. ""Please visit `bitcoin.org/latest`"" for details or something. What is the worst that can happen in this case? If you ask me, bitcoin's real"	Clarify
2626	17598423	"@gmaxwell - what is the ""alert system"", I was unaware of such a mechanism. How does it work, are there some docs? "	whQuestion
2626	17618555	"Actually, looking at the charts here, I'd say there is a lot of work to be done improving the uptake of new versions, 14-15% of all clients are vulnerable according to this: http://luke.dashjr.org/programs/bitcoin/files/charts/security.html "	Clarify
2626	17621142	"I would say this is not that bad compared to the Windows systems vulnerable because of outdated Java Runtimes or Flash Player versions. But you ARE right, this percentage should be way lower! "	Reject
2626	17655558	"@drak With your simple implementation there is the problem of bitcoin.org still not supporting HTTPS, so it would be trivial to MITM. This is not so much a problem for the version notice itself, but if you refer them to that site to download a new version they will download a potentially infected cl"	Clarify
2626	17657977	"@laanwj I was unaware bitcoin.org has no SSL, so just use github to show a raw file because then it will have Github's SSL see: https://raw.github.com/bitcoin/bitcoin.org/master/README.md (it's an SSL link) for an example (that could be `latest_version.txt`). That also makes it very tamper evident b"	Clarify
2626	17658724	Read my other point; even adding SSL does not solve the problem. It should also add an independent mechanism to check the developer's signatures.  	Clarify
2626	17668760	"Maybe, but your point is no valid reason not to bring in this feature now. There are a lot of ifs for SSL and MITM, like intercepting traffic, managing to get a dodgy certificate from a CA and so on. The fact is there are more serious vectors with much more probability of being exploited than SSL MI"	Clarify
2626	17812916	"my (maybe stupid) suggestion would be: -> deliver new clients with multiple developers (at least 3) GPG public key/cert -> deliver new clients with one bitcoin ""official"" public key -> create a centralized rss feed somewhere (example bitcoin.org) -> the rss feed contains multiple items which all rep"	Clarify
2612	17431185	@laanwj I tested the pulltester executable and it does what it should :). 	Statement
2612	17454939	Updated: - re-work handling of language settings and move default language code into OptionsModel::getLanguage() 	Other
2612	17526432	@laanwj Did you yet test this pull? 	Clarify
2612	17529152	"No, not yet "	nAnswer
2612	17621866	"I found a bug, which always displays the ""need to restart message"" even when chaning stuff that doesn't require a client restart... will look into this later. "	Clarify
2612	18123486	"I'm still working on the options dialog, currently it's looking like this: ![options](https://f.cloud.github.com/assets/1419649/523468/ecbdabf8-c0bb-11e2-8ca7-87065ae4f9f6.png)  @laanwj I intend to always show the real QSettings values without trying to mess around with showing the real state values"	Clarify
2612	21091066	@Diapolo Needs rebase. 	System
2612	21408562	"@luke-jr And I need some feedback :)! Anyway, I currently don't intend to rebase but will rather update the whole pull. I just need some time and motivation to restart working on this. "	nAnswer
2612	21429933	I don't like that it requires a restart unnecessicarily.  I didn't notice the rest of the changes. 	Reject
2612	24265242	@Diapolo could you rebase (if motivated again...). I could also check the changes and give you feedback. 	Clarify
2612	24442021	"@jonasschnelli Yeah I can rebase and I really would love to get some help with this also :). I'm just taking my current code without doing the commit-msg now and will base it on top of my core proxy pull, as this is also used in the options rework. "	Clarify
2612	24442984	"Rebased and updated to include all changes I had in my local build for some months now. Needs feedback and a careful review, so please help me dear core-devs and others :). "	Clarify
2612	25067501	recommended graphical/UI changes:  ![bildschirmfoto-2013-09-25-um-09 39 16](https://f.cloud.github.com/assets/178464/1207390/56a746f0-25b6-11e3-8fc9-7d86b37c39cb.png)  	Emotion
2612	25067567	"because i'm not a proxy/tor guy as well as i have not enough understanding of the cache / verification thread mechanism, i can't give you a ACK on that. "	Reject
2612	25067719	after building and starting bitcoin-qt i've got a -paytxfee warning (see picture). But my txfee set in QT perfs pannel is 0.00000005.  Check: ![bildschirmfoto 2013-09-25 um 09 48 26](https://f.cloud.github.com/assets/178464/1207408/082b52fe-25b7-11e3-97ef-539f158933a3.png) ![bildschirmfoto 2013-09-2	Clarify
2612	25072086	"Thanks for your comments, I will take a look into your UI suggestions. Have you a bitcoin.conf in use? I never got that -paytxfee warning and will take a look there too.  @jonasschnelli Can you do a configuration reset and see if that removes the txfee warning? "	Reject
2612	25072720	@Diapolo yes bitcoin.conf in use. But only rpc/testet settings there. The warning popped up after building with your pull. But did some other related testing some minutes before. So it might be another thing. 	Clarify
2612	25318392	Updated: Removes Apply button from optionsdialog as requested in #3030. 	nAnswer
2612	25318485	"@jonasschnelli  ![options](https://f.cloud.github.com/assets/178464/1207390/56a746f0-25b6-11e3-8fc9-7d86b37c39cb.png)  I changed the lower part of the UI to be not special anymore (it's a seperate frame but has no special UI style set). It's not part of the tab element, because I wanted it to be vis"	Clarify
2612	25516356	@jonasschnelli ping 	System
2612	25611211	some screenshots on mac osx 10.7 qt 4.8  ![bildschirmfoto 2013-10-03 um 11 21 06](https://f.cloud.github.com/assets/178464/1260793/3c8e3cd8-2c19-11e3-8e97-6972f1bea02e.png)  ![bildschirmfoto 2013-10-03 um 11 21 14](https://f.cloud.github.com/assets/178464/1260794/43a5b8ac-2c19-11e3-981b-42f278b6023c	Clarify
2612	25611244	There is still a problem with the unit... see:  ![bildschirmfoto 2013-10-03 um 12 19 45](https://f.cloud.github.com/assets/178464/1260795/593e73c0-2c19-11e3-80af-598807d564a0.png)  ![bildschirmfoto 2013-10-03 um 12 20 16](https://f.cloud.github.com/assets/178464/1260796/a53657a2-2c19-11e3-867a-17a6d	Clarify
2612	25619149	"Thanks for the screens, UI looks good IMHO, but I have NO idea, about the -paytxfee problem currently. As requested, what happens without bitcoin.conf and after an options reset? I'll investigate further... "	Clarify
2612	25619601	"used a fresh datadir,... same problem (txfee in preference window is 0.0001, but seams to be 5BTC internally). Looks like that the default tx fee is somehow wrong and are not corresponding to the UI settings value.  If i set the -paytxfee=0.0001 by cmd line, ... all good. "	Clarify
2612	25620175	"The default tx fee is 0 in the core code AFAIK.  Setting paytxfee=0.0001 via bitcoin.conf is working here, same for -paytxfee=0.0001 via cmd line. The UI value is only used, if there is no paytxfee in .conf or cmd line anyway and is NOT synced with the current state! When you change the tx fee in th"	Clarify
2612	25631966	"Updated: - save and restore optionsdialog window position - update nTransactionFee in QSettings with a set -paytxfee value when opening optionsdialog (I'm not sure about this yet, perhaps revert to not updating QSettings and just display current -paytxfee value in optionsdialog.)  @jonasschnelli Can"	Clarify
2612	25679362	"@Diapolo paytxfee issue is fixed. Works as expected now. But can't give you an ACK because i don't have the time and experience to test the proxy, etc. settings.  The visual part (UI) looks good for me. "	Clarify
2612	25682766	"@jonasschnelli Thanks for testing! There were reports of misbehaving options in our Github issues, can you report if these are fixed or if something has changed on that part? "	Emphasis
2612	25687007	"@diapolo, @jonasschnelli  great work here  "	Emphasis
2612	26712367	Needs rebase for -tor -> -onion change in init.cpp.   	Other
2612	28415995	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fd046898d52433377c947d167f47c0e2a297597c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2575	17082968	Removed some ``.c_str()`` which were unneeded. 	Clarify
2575	17089153	"I left out changes needed in optionsmodel.cpp, that's why build fails... "	nAnswer
2575	17089621	updated optionsmodel.cpp 	Statement
2575	17119469	"Use ``GetArg(strArg, 0)`` instead of ``mapArgs.count(strArg) && !(mapArgs[strArg] == ""0"")``, thanks sipa :). "	Other
2575	17136285	"Update name proxy setup to use ``GetArg(""-proxy"", 0)``. "	Other
2575	17430825	@sipa Further thoughts about this? 	whQuestion
2575	19764281	"Needs a test plan to test all the combinations, then needs testers to, you know, actually test them all.  "	Clarify
2575	19799899	"@gavinandresen I'm fine with a test plan, as long as this has a real chance of getting merged. Is the code okay now or is ths not wanted anyway? "	Clarify
2575	20029697	"Updated to include changes to ``getinfo``. I have not yet had the time to work out a test-plan, but everyone, who helps testing is welcome anyway :). "	nAnswer
2575	22821740	Anyone willing to help me doing that test-plan stuff and/or check out if it works like it should :)? 	Clarify
2575	22847156	"I am the last guy who should be checking GUI changes, but I will gladly follow a test plan and report back on it. (Though I can only easily test Linux, and windows builds under wine).  "	Clarify
2575	22851767	"@gmaxwell I'm glad you are interested in helping me with this one. You currently don't need to start Bitcoin-Qt to do so, as this can be tested completely via bitcoind. The only Bitcoin-Qt change is to make it compatible with a changed datastructure.  Should I start by listing possible combinations "	nAnswer
2575	23252009	"I'm going to describe the pull with some more details here.  Most proxy-setup is now done using the new ``ProxyInit()`` function.  ``ProxyInit(Network net, const std::string& strArg, int nSocksVersion, bool fIsBase)`` parameter description: ``net`` = network to setup proxy for (NET_IPV4, NET_IPV6 or"	Clarify
2575	23260013	"base proxy = ``-proxy`` separata IPv6 proxy = ``-proxy6`` separate Tor proxy = ``-tor``  Proxy initialisation flow (happens via ``ProxyInit()``, just name proxy is special cased in the code): -try to setup base IPv4 proxy --if SOCKS4: ---try to setup separate Tor proxy, on failure disable Tor via ``"	Clarify
2575	23260171	"@gmaxwell Perhaps you could take a look at what I've written, if the current proxy handling of this pull sounds correct, before I start doing the test-plan. "	Clarify
2575	25767583	Updated: Included suggestions from @sipa and introduced ``getproxyinfo`` and made ``ProxyInit()`` return ``fBase``. 	Clarify
2575	26688611	Still needs a test plan. 	Clarify
2575	28411156	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0e806560826085a78f522b8d813ad77d9c8f9721 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2560	16914283	"This would be very nice, but it's extremely hard to get right. It depends on some known but-hard-to-know properties (disk IO speed, IO vs CPU speed, network speed if not reindexing, ...), and some properties not under your control (the bandwidth of the peer you're fetching from, for example).  I don"	Clarify
2560	16949338	@sipa It would always be possible to measure the time taken for one segment of the work to be completed and then calculate the the time for all the work to be completed. 	Statement
2560	16949869	"@APerson241  Unfortunately it's not very, because the speed changes greatly in different segments, and the amount of the change depends on your cpu speed. The new progress indicator in git, however, is much better than the old one. "	Clarify
2560	16951010	"@gmaxwell That's a very good point, though it would seem that for certain tasks with a large number of identical or very similar blocks, such as syncing the transaction history, the change in time caused by differing speeds would throw the result off less. For the example of syncing, you could make "	Clarify
2551	16844995	"I'm not sure what Pidgin is using, but they have a crash reporter for Windows AFAIK. Same for Firefox, do you know what they are using? "	whQuestion
2551	16848858	Yes -- as i mentioned in the OP there are ready to use solutions for that but this is a more difficult problem than in their case because we don't want to leak private keys and such. 	Clarify
2551	18923417	How about creating a beta version for volunteers like firefox does or allowing people to allow the program to optionally collect extra information. 	Clarify
2551	18926219	"@ag346 Not a bad idea, actually...  "	nAnswer
2551	19026987	"Yeah, not a bad idea.  But what I'd like here is a list of information that we can safely collect on a crash and that would help diagnostics without running the risk of collecting (parts of) private keys. As mentioned in the OP one of those is the stack trace, as long as only the function addresses "	Clarify
2551	19047572	Maybe we could help brainstorm or improve the following idea:  One possible way to allow sharing of all information might be if a volunteer mode could be enabled.  This would create an address that would be used for collecting and sharing test data only and would be limited in how it could be used. 	Clarify
2551	20723519	"If we do this, we should at least encrypt the crash dumps with the PGP keys of the developers. "	Statement
2551	23602185	"@ag346 it seems that the big issue might be the participant's other actual private keys getting (all or partially) leaked in a crash report.  This might be over-complicating things, but brainstorming here: could there be a suggestion or even some utility for the tester-client to immediately generate"	Clarify
2549	16884097	"Per-peer Network statistics are already maintained. A tab/view/page/whatever that shows these (similar to getpeerinfo) would be nice, and just GUI work I think. "	Statement
2547	16892141	"Are you mining?  EDIT: I mean solo-mining (or p2pool), against Bitcoin-qt? "	ynQuestion
2547	16915970	"Nope, not against my local bitcoin-qt -- a different machine is mining against a pool, local client just receives the resulting bitcoins (they appear as ""mined"" transactions since Eligius does it that way). "	Clarify
2547	16917054	For the record: @gmaxwell noticed yesterday that this can only be cause by the retargetting code. That should narrow down the problem a lot. 	Clarify
2547	16937149	"Would retargeting code only run on an instance of Bitcoin intended for mining?  In that case, I have to clarify: I have in the past, used this Bitcoin instance for mining too, and now that I checked, as a historic leftover, ""rpcuser"" and ""rpcpassword"" are still set in ""bitcoin.conf"". "	Clarify
2547	16937261	Sorry for the confusion. It is unrelated to mining - I asked that question before it was discovered that this assertion failure is caused by the retargetting code. I just added it here so we don't forget. 	Clarify
2547	16937338	"However, to further clarify, I am not starting it with a ""-server"" command line option, so anything that results from that code path, should be excluded. "	Clarify
2547	16937441	"Aha, thanks. If you have any additional questions, just ask. I'll check back about once a day, even if the problem is not disturbing my activities in any manner. "	Clarify
2547	17277189	@sipa any workaround/fix regarding this problem? I too have this issue for more than 2 weeks now. ![assertion_failed](https://f.cloud.github.com/assets/4311082/448597/8b3c34ae-b250-11e2-8589-350820a68082.jpg)  	Clarify
2547	17327323	The part of the code which triggers your problem is (in GetNextWorkRequired()): <pre>     // Go back by what we want to be 14 days worth of blocks     const CBlockIndex* pindexFirst = pindexLast;     for (int i = 0; pindexFirst && i < nInterval-1; i++)         pindexFirst = pindexFirst->pprev;     a	Other
2547	17428252	@gavinandresen   Can you please take a look the problem stated by @Diapolo above?  thanks 	Clarify
2547	17567542	"Duplicate; hopefully fixed by the ""don't use too many file descriptors"" fix.  "	Clarify
2547	17567742	@gavinandresen That's very unlikely on Windows.  	Statement
2547	17639696	"@bitcoinstarter You have this problem for more than two weeks now. Does that mean that you fix it, and it re-appears, or after it happened the first time, it just doesn't go away? "	Clarify
2547	17681430	@sipa @gavinandresen Im still having issues. The problem still persist and I cannot finish synchronizing because of the issue. Below is the latest screenshot of my wallet showing the error.  ![still problem](https://f.cloud.github.com/assets/4311082/484383/1ce6b654-b8d7-11e2-9255-d2a0b58406d7.jpg)  	Clarify
2547	17681844	"@sipa  @gavinandresen no matter what button I choose from the error above, bitcoin-qt.exe has stopped working. This is my problem since I started downloading the client for more than 2 weeks now and I keep having this problem no matter how many times I have re-download the client whether I using the"	Clarify
2547	17691149	"Is this an error that appears immediately at startup, every time? If so, start with -reindex on the command line, once. That will rebuild the database from scratch. "	Emphasis
2547	17704903	"@sipa Yes, that is an error after I fire up the exe. the error appears after a few minutes of initialization.  btw, how do I start wit -reindex on the command line?  Is there a command line version for the wallet? or are you referring to the Windows CMD prompt?  "	Clarify
2547	17705051	@sipa Ok I think youre referring to the Windows CMD prompt so Im giving it a shot. Hope it works and will let you know :)  ![reindex](https://f.cloud.github.com/assets/4311082/486704/bc39f3f0-b932-11e2-8744-8aa37178cb38.jpg)  	Clarify
2547	17774918	Did you ever play with testnet before? 	ynQuestion
2545	16766544	1) wallet.dat is going away anyway 2) OS-specific formats like this are not portable and probably hard to backup 3) What benefit is there to double-encrypting? 	Clarify
2545	16767349	"1) okay, i did not notice this (due to i'm new here) :) 2) right, but export wallet function could be done, but maybe is a overhead? 3) benefit: novice (normal) users has encrypted walled by default (encrypted with login credentials). If ""somebody"" grabs the harddrive or a backup of the drive, he ca"	Clarify
2545	16942600	I agree it would be nice if the OSX wallet was smart enough to store keys in the OSX keychain; it is exactly the type of thing the keychain is designed for.   	Clarify
2542	16715083	#1382 fixes this issue... but never got merged. 	Clarify
2542	16715119	"@rebroad It does not fix the issue, it breaks the network. "	Reject
2542	16725849	"I also used the : listen=0  setting, and I'm up to blocks 139 days old now, 21k+ blocks to go.  Yesterday I tried upping to maxconnections=2, but it didn't take long for duplicates to show up.  So far with maxconnections=1, I've only noticed 2 duplicate blocks error messages (yesterday before I trie"	Clarify
2542	16733486	"@gmaxwell How does it break the network? And how does it not fix the issue? Certainly, from my testing (11 months of testing now against the latest bitcoin master) it doesn't break the network and does fix the issue. "	Clarify
2542	16884682	"@rebroad I hope it won't break the network if you're the only one running it! I don't know whether it fixes the issue (and will not claim it doesn't), but killing connections because nodes do what you ask them is not the correct way to deal with the issue. "	Clarify
2542	17118529	"@sipa I agree it's not the ideal way, but it's a start. The ideal solution is to change the protocol so that a node can abort a block download without aborting the connection, but as this isn't currently part of the protocol, the only way it can currently be done is by aborting the connection. "	nAnswer
2542	17118748	"@rebroad No offence, but it's not. Of course you can cancel a block sync without aborting the connection: just stop asking for blocks. Or even better, don't ask for the same block twice to begin with. That's the only correct solution. As I (and others) have told you many times before: killing a conn"	Clarify
2542	19143855	"@sipa - what you talk about is indeed a better solution, but since no one seems interested in making those changes, then i still argue that my fix is better than doing nothing - and will benefit the network too IMHO as current much traffic is wasted on nodes sending and receiving duplicate blocks. I"	Clarify
2512	19169093	"Actually, in general it would be nice if sendrawtransaction would be more verbose about what exactly failed whan a TX is rejected... "	Other
2512	22232340	was nobody interested in this? 	whQuestion
2511	16251455	"Agree, this is a problem. It will likely be fixed when we move to non-BDB wallets. "	nAnswer
2511	16251987	When will it happen do you know? 	ynQuestion
2511	16272683	CTxMemPool::accept() : accepted 8a01e91659 (poolsz 691) ThreadRPCServer method=move CTxMemPool::accept() : accepted 954115b276 (poolsz 692) Flushed wallet.dat 5071ms ThreadRPCServer method=getreceivedbyaddress ThreadRPCServer method=getbalance CTxMemPool::accept() : accepted 542b3860e4 (poolsz 693) 	Clarify
2511	16296248	"AFAIK that Wallet flush thread was introduced by @gavinandresen the way it is currently working with Git master, perhaps we need to re-think how often the wallet is flushed, dunno not my playground ^^. "	nAnswer
2484	16017600	"That is another weird problem I can't reproduce! Are you sure your PC is not infected by some malware? Focus on the send coins page is the address input field, which is fine IMHO (you can paste via ctrl+v if you have an address in the clipboard there anyway). "	Clarify
2484	16018018	...I think nope but i'm going to scan the whole system with Norton since you said so... Are you using 0.8.1 beta and did you enable snap to option in control panel? 	Clarify
2484	16018039	http://puu.sh/2vFJZ 	System
2484	16034439	"I never used that ""snap to default button"" option, but now it is possible to debug your problem :). "	Clarify
2484	16041413	:) 	Emotion
2484	16048977	"Okay, I tried that option and can confirm that the official 0.8.1 version is behaving like you described. Clicking send leads my mouse to the send button and clicking overview moves the mouse to where that button was in the send coins page. This can be related to our used Qt version (4.8.3 with the "	Clarify
2484	16054218	"Kthx :). BTW  22:39:13: Running steps for project bitcoin-qt... 22:39:13: Configuration unchanged, skipping qmake step. 22:39:13: Starting: ""F:\Program Files (x86)\CodeBlocks\MinGW\bin\mingw32-make.exe""  F:/Program Files (x86)/CodeBlocks/MinGW/bin/mingw32-make -f Makefile.Debug mingw32-make[1]: Ente"	Clarify
2484	16054267	Oh and Qt Creator freezes after I copied that and came to Google Chrome. Weird. 	Clarify
2484	16054593	http://puu.sh/2wgIq but it is not responding to my clicks on the icon on taskbar! 	Emphasis
2484	16055027	"I didn't force close it. Then after I generated a new receiving address in bitcoin qt and copy that address, bitcoin qt stopped working. The Qt creator came back to life. "	nAnswer
2484	16852233	"Sorry, how do I build bitcoin-qt inside windows with qt creator 5.02 MinGW? I always get the error of leveldb.a error1 "	whQuestion
2476	20101933	A source code tarball is really needed for packagers. 	Statement
2476	20102011	"The linux tarball is the source tarball.  Our experience with packagers has not been inspiring. What system do you plan on packaging bitcoin for?  ""unusable in my case, since i use a different libc"", do you actually have Bitcoin running on this system? "	Clarify
2476	20102484	"Yes, I see. Not having a source tarball is weird. Normally that is ""the release"" and the binaries are supplemental.  I'm working on a Fedora rpm. "	Reject
2476	20102865	"Bitcoin cannot currently be usefully packaged for Fedora because the distribution patches out _all_ ECC support from OpenSSL, which we currently depend on. "	Reject
2476	20102950	"Yes, I have an alternate openssl rpm as well. "	Statement
2476	20107548	"@gmaxwell my system is https://github.com/rofl0r/sabotage based on musl libc. and no, currently i dont have bitcoin running there due to the weird release situation for the official client. but i'd like to add it, once a regular source tarball is available. "	nAnswer
2476	20107862	"i have both qt4 and boost installed, the only thing missing is bitcoin. https://github.com/rofl0r/sabotage/blob/master/pkg/boost https://github.com/rofl0r/sabotage/blob/master/pkg/qt4 "	nAnswer
2476	20107895	https://github.com/bitcoin/bitcoin/archive/v0.8.3.tar.gz ? 	ynQuestion
2476	20107943	@sipa please read before post 	Other
2476	20108094	"Sorry, ignore me :) "	Statement
2476	20108144	"@rofl0r if your response is that you want a _non-SSL_ source for it, I'm going to have to WONTFIX that, cause thats kinda nuts.  Should we ever get around to running our own resources for bitcoin.org and move all the hosting to it that site will be SSL only. "	Clarify
2476	20108292	i didnt say anything about SSL i simply request a source tarball as *any* other project offers (without useless glibc binary crap) 	Clarify
2476	20108567	"Then grab it of the tag based URL that sipa pointed you to. Thats currently our supported method for providing source only files.  I agree it's less good than freestanding file, but I don't see a justification for additional work considering that we have a costless workable alternative.  (Gzip is al"	nAnswer
2476	20108679	"as i said in the introductory text, HTTPS cannot be fetched by busybox wget  you're offering downloads for anything, why do you dig your heels to not offer a proper source download ? "	Clarify
2476	20108756	it's about adding two lines in your make-release.sh: ```` make clean; tar cJf bitcoin-$VER.tar.xz source/ ```` + one line in your sourceforge upload code 	Emphasis
2476	20108786	"As I said above, we will not commit to supporting a non-SSL download method for anything we provide on an ongoing basis.  There is no sense in doing _additional_ work for every release when doing so won't solve anyone's problems.  You will not be satisfied because it won't stay useful to you, no one"	Clarify
2476	20108818	so why do you offer non-SSL downloads for windows and mac binaries via sourceforge ? 	whQuestion
2476	20108863	won't solve anyone's problem - so you're saying that i and @jeffmendoza are nobody ? 	Reject
2476	20108977	"just because busybox' wget does not link to openssl does not mean that openSSL is not available on the host. it's just not being linked against because of huge bloat. the packaging system uses the host's wget, which could either be busybox wget or gnu wget depending on the user's preferences, but i "	Clarify
2476	20109014	"@gmaxwell sourceforge is providing both HTTP *and* HTTPS, so that's completely irrevelant "	Accept
2476	20109406	"what about FreeBSD, PCBSD, etc users ? shall they download a ""linux"" tarball full of binary linked glibc stuff just to get the source ? linux != GLIBC, altho thats a common misconception. "	Reject
2476	20109635	"the problem is not so much the binary clutter in the tarball, although it is highly annoying. the main problem is that if someone goes on your site to search for a source code download, he doesnt find anything, except a link on github. my knowledge that the linux binary download also contains the so"	Clarify
2476	20110282	"what this project is currently doing is turning a source code user into a second-class citizen while prefering binary junk consumers (altho only for popular platforms).  needless to say that the binary stuff in the linux tarball is useless for any user of a non-x86 glibc linux system, whereas the so"	Clarify
2476	20110344	"As a FreeBSD maintainer, i would like to see the following:  -  add a source code only  tarball, which can be used by GNU/Linux, BSD, MAC, etc etc -  and optional an additional GNU/Linux 32 bits binary download  BSD users generally compile our stuff ourselves, so there's no need for a binary tarball"	Clarify
2476	20110522	"nemysis: Here ya go, https://github.com/bitcoin/bitcoin/archive/v0.8.3.tar.gz  "	Statement
2476	20110702	"This is not as one stable SF tarball, please upload a stable tarball as bitcoin-0.8.3.tar.gz to SF, thanks "	Emphasis
2476	20110866	@nemysis I'm afraid you're going to have to explain what you need thats missing here. 	Reject
2476	20110868	"It seems reasonable to me to put a source tarball on sourceforge along with release binaries. As things are, I agree it seems we're somewhat discriminating against source builds, which IMHO is something we should encourage (it removes the need for gitian-like trust in release binaries).  The person "	Clarify
2476	20110952	@gmaxwell BSD and GNU/Linux users need a stable Source tarball on SF. 	Continuer
2476	20111337	"@gmaxwell yes is stable here, but is not good to download as  bitcoin-0.8.3.tar.gz with good checksum what is needed for BSD, GNU/Linux source tarball. This is only granted from SF. "	nAnswer
2476	20111548	"@nemysis I understand your concern about a stable download - I assume the fact that checksums can be published and verified, and are guaranteed not to change (and I indeed don't know to what extent github provides this).  But just so I understand correctly: there is nothing specifically offered by S"	Reject
2476	20111722	"@gmaxwell yes for a FreeBSD Port is needed a stable tarball with good checksums, which GitHub not offer. Here when a Port use GitHub must download a snapshots, and in distinfo is then a checksum which is reference, but this is not very good, because GH sometimes change download and have same name. "	nAnswer
2476	20111835	not to talk about redundancy offered by sf.net and download speeds. 	Reject
2476	20112187	"@nemysis  I'm sorry, I still must be confused.  Whats wrong with USE_GITHUB and GH_TAGNAME in ports? I had thought many ports already pulled from github archive URLs just like ours.   "	Clarify
2476	20112342	"@gmaxwell this is true, i have too some FreeBSD Ports which use GH, but problem is that GH change very oft his rules and then must FreeBSD portmgr@ change bsd.sites.mk that download works from GH with this new rules and all Ports must be sometimes changed to this new rules. And when is a source tarb"	Clarify
2476	20112410	@nemysis OK! Thats good to know. 	Accept
2476	20114104	"@gmaxwell good that you this now know, Could you now upload a stable bitcoin-0.8.3.tar.gz and future Versions to SF site, please? "	Emphasis
2476	20114345	"@gmaxwell If we're going to move to automake, we'll end up needing to do source releases anyway. To take advantage of automake's functionality, programs need to distribute source with the configure script already generated. "	Reject
2476	20114511	"Yes, please put the release source on Sourceforge. Github generated distfiles change frequently, for no good reason, and any build system relying on them is going to need constant fiddling. As the maintainer of the FreeBSD port, SourceForge distribution would make a lot of sense. It would also reduc"	nAnswer
2476	20114679	"As Gentoo maintainer, I have never seen the GitHub tarballs change... Gentoo's build system checks the SHA256 of all source files, so it would have picked up on anything like this. "	Clarify
2476	20115139	"FreeBSD and other BSD checks too SHA256 but from downloaded tarball and all downloads when user wish to install Port check if this SHA256 from distinfo is the same what have Port maintainer make with 'make makesum', also this is verified install. "	Clarify
2476	20115307	"On Thu, Jun 27, 2013 at 2:33 PM, nemysis <notifications@github.com> wrote:  > FreeBSD and other BSD checks too SHA256 but from downloaded tarball and > all downloads when user wish to install Port check if this SHA256 from > distinfo is the same what have Port maintainer make with 'make makesum', > "	Clarify
2476	20115915	@luke-jr does that mean gentoo checks the extracted files as opposed to the tarball itself ? that would explain why you didnt notice the changed hash i got this information on irc from a packager: ````<redacted> Github sometimes changes the way it rolls the distfile. The last time they switched from	Clarify
2476	20115927	"Well, it happened less than a month ago.  http://www.freebsd.org/cgi/query-pr.cgi?pr=ports/179435   "	Other
2476	20116011	"Nothing in this thread refutes the argument rofl0r made when he started the issue, being  the other argument that github provides downloads is also not valid, since 1) they generate tarballs on the fly so the checksum changes whenever it is removed from cache (gz uses a random seed, so every archive"	Clarify
2476	20117096	"@xmj What you're saying there is untrue to the best of my ability to determin. There is no random seed in gzip or zlib.  There may be other causes of non-determinism (like the timestamp) which is why I was asking more questions (and regardless of what we do here, if github is actually non-determinst"	Clarify
2476	20117583	@rofl0r Gentoo checks the tarball's hash itself. 	Clarify
2476	20117635	"@gmaxwell  ```` /dev/shm $ mkdir zip-test /dev/shm $ cd zip-test/ /dev/shm/zip-test $ echo ""test bar foo baz"" > test.txt /dev/shm/zip-test $ cd .. /dev/shm $ tar czf zip-test.tar.gz zip-test/ /dev/shm $ sha256sum zip-test.tar.gz  d4b554db02cbb7f91660adbdabf94ecae07a4e65c213b557324fd480d16fca00  zip-"	Other
2476	20118156	@rofl0r Thats the timestamp.   [gmaxwell@helmholtz tmp]$ tar cf zip-test.tar.gz zip-test/ | gzip -cn - > zip-test.tar.gz ; sha256sum zip-test.tar.gz 7abee1d0f56eb5e4405b2f4b15d24a94ff7b3103b0d2f4ba63c11e68305e9df5  zip-test.tar.gz [gmaxwell@helmholtz tmp]$ tar cf zip-test.tar.gz zip-test/ | gzip -cn	Other
2476	20118450	"@gmaxwell ````tar cf zip-test.tar.gz zip-test/```` doesnt output to stdout, so your pipe does effectively nothing "	Emphasis
2476	20118686	"Sorry, wasting my time on things you could trivially check yourself isn't conducive to the greatest care.  [gmaxwell@helmholtz tmp]$ tar cf - zip-test/ | gzip -cn - > zip-test.tar.gz ; sha256sum zip-test.tar.gz 6b75d74dc0e312b466f305180d3b5fb930ac70f7f28775ae8498ac5a20f679b4  zip-test.tar.gz [gmaxwe"	Clarify
2476	20118848	and what makes you think github uses your way and not mine ? 	Clarify
2476	20119064	"btw, i get the hash ````7aec0b60aae8eaf740b5dfbb802858d9122bdd5cf556ec38107ae1f1ef660686```` with your command. so different machines give different hashes for some reasons. so depending on the mood of the github servers the hash will differ. why not just use a proper, manually generated tarball ins"	Clarify
2476	20119254	"Thankfully, git archive already provides a deterministic tar creation. "	Statement
2476	20119287	"Of course you get a different hash, the data you're _tarring_ up is different, unless you happen to have the same UID as me, same file timestamps, etc.  I checked the github files, I checked them before I even responded to this stupid point.  I'm getting a little tired of people stating as fact thin"	Clarify
2476	20119338	"did you even see this (quote of robbak): ```` Well, it happened less than a month ago.  http://www.freebsd.org/cgi/query-pr.cgi?pr=ports/179435 ```` "	Clarify
2476	20119534	"@rofl0r I did, did you? It had nothing to do with github file determinism, that was actually changing to a different commit id. (Interestingly: the one it changed to is completely invisible to me: nothing in the reflog on my checkouts with that hash. Nothing in the github UI, etc.)  Edit: I've decod"	Clarify
2476	20124100	Closing before my inbox overflows. Consensus seems to be github tarballs are Just Fine For Now.  	Statement
2476	20125974	"@gavinandresen apparently you cant read, that is only the opinion of @gmaxwell and nobody else here "	nAnswer
2476	20126252	@gavinandresen ulrich drepper would be proud of you. 	Statement
2476	20126446	"github tarballs are fine for now, as stated.  As @luke-jr indicated, this may change once automake support is complete and merged. "	Emphasis
2476	20129046	"GitHub tarballs are not fine, Github generated distfiles change frequently, for no good reason, and any build system relying on them is going to need constant fiddling. Please upload to SF stable bitcoin-0.8.3.tar.gz. Thanks in advance "	nAnswer
2476	20140115	"Github tarballs are not fine.  Please start posting source tarballs with the change to automake, sounds great to me. (yay autotools!) You're going to start using pkg-config too, I hope? "	Clarify
2476	20141628	@jeffmendoza And what problems do the github tarballs cause for you? (I'm collecting problems to report to github: So far I have none and regardless of what we do in the future it would be nice if the functionality worked right for people.)  	Clarify
2476	20143095	"You can see here for some details. It will work, but a real release tarball would be much preferred. http://fedoraproject.org/wiki/Packaging:SourceURL#Github  "	Clarify
2476	20147136	"@jeffmendoza is unability to download from HTTPS nothing ? this causes a huge problem for me and other busybox users. edit: oops, that should have been @gmaxwell  "	nAnswer
2476	20162236	"@gmaxwell Not quite. We always retrieved the tag, v8.0.2. Github (or maybe a bitcoin dev) changed how it determined what that tag meant. (Probably github - there was a rash of github-sourced ports that needed changing at around that time.) "	Clarify
2476	20163114	"@robbak Can you explain to me how a gentoo ebuild from two years ago: (http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/net-p2p/bitcoind/Manifest?revision=1.1&view=markup)  Has correct SHA256s for files I can download for github today?  E.g. ""DIST bitcoin-v0.5.1.tgz 1007787 RMD160 107944a SHA"	Clarify
2476	20163534	"> I note that 5623ee7 is the ID of the signed tag, just like the current one that confounded you. So there can be no doubt that the same behavior was in place two years ago. >  > Maybe you were being MITMed? :package:   Or maybe a tag was just overwritten? "	Clarify
2476	20230154	"I'm reopening this issue.  I think this discussion got derailed into a question of why the OP asked for these tarballs (and I agree with gmaxwell about that mostly: we need to find out if and why github's tarballs aren't deterministic, and we need to encourage building from git tags/commits). Noneth"	Clarify
2472	15999263	"I get a temporal workaround.  Running:      strace -eopen bitcoin-qt  I see that the las file corrupted was blk00004.dat:      open(""/home/myuser/.bitcoin/wallet.dat"", O_RDONLY|O_LARGEFILE) = 153     open(""/home/myuser/.bitcoin/wallet.dat"", O_RDONLY|O_CREAT|O_LARGEFILE, 0) = 153     open(""/home/myus"	Clarify
2471	15994111	"Perhaps we should not allow the internal miner, while running reindex, import (and IBD?). "	Clarify
2471	16013157	@sipa @gavinandresen Can you take a look at this? 	ynQuestion
2471	16169613	"@jgarzik Perhaps you can take a look or try to reproduce, as I know you are using the internal-miner :). "	Clarify
2458	15899298	Isn't there already an issue about this (by me)? Not specifically about qt5 but silently ignoring unknown command line options.  A possible solution would be to use a command line option parsing library with proper error reporting instead of the hand-rolled stuff we have now. Does boost have one?  T	Clarify
2458	15902036	That would be http://www.boost.org/doc/libs/1_53_0/doc/html/program_options.html  	Statement
2445	15795634	Are you synchronized and the transactions shown confirmed? 	whQuestion
2445	16054040	@sipa yes 	Accept
2445	17772728	looks like I'm going to have to issue the patch for this one myself... 	Statement
2445	17772941	Seeing #2122 ... are you talking about initial block download here?? That isn't at all clear from the above.  	whQuestion
2445	17774761	ResendWalletTransactions() shouldn't be called during IBD at all... 	Clarify
2445	17777770	It shouldn't. Unless there is something wrong on #2259 	Emphasis
2445	17790460	This occurs when the node has downloaded the most recently mined block. 	Clarify
2445	18071585	I can't reproduce this. Reindexing and forcing a IBD on a used wallet seems to work as expected on my tests.  @rebroad: can you explain more thoroughly how you're triggering this? 	Emphasis
2427	15668436	I would prefer that it output a warning to debug.log rather than stdout or stderr. 	Statement
2413	20766329	This applies more to the bitcoind. But the issue is still active.. 	Statement
2413	20795002	@xelvet  See #2590 for related discussion.  	System
2412	15437779	The feature was suggested earlier in issue #1958 and may also alleviate some problems from #273. 	Clarify
2412	15443198	"Nice feature, but for the GUI I think it should a) show the current state in the debug window and b) allow a click or double-klick on the connection symbol in the main window, instead of a new button in the debug window. What do you think? "	Clarify
2412	15448961	"Regarding a: The debug window actually shows the state (but maybe not in the best way), in that it appends ""(Disabled)"" to the number of connections when network activity is disabled. Are you suggesting a row in the debug window showing for example ""Network state:  <state>""?  I think double clicking"	Clarify
2412	15452540	"The button ``Toggle Network activity``(activity lowercase IMO) is fine, perhaps the toggle could just also be added to the connection symbol in the main window + a tray message that gives a small warning (use BitcoinGUI::message() for that), when the state is changed. "	Clarify
2412	15462624	"I've updated the patches: 1) ToggleNetworkActive() renamed to SetNetworkActive(). I think this name makes more sense and is more consistent with naming of other functions. 2) SetNetworkActive() prints log ouput if fDebug is set, 3) ClientModel now has a method to control network activity state setNe"	Clarify
2412	15463122	"I'm no core-developer, but did some Qt things, so thanks for your update. I like the pull and when I have more time I'll compile it and see how it feels when using it :).  @laanwj What do you think? "	Clarify
2412	15632632	"I'm OK with the GUI code changes -- nice work.  About the general idea:  - Can you give a use case for this? What are you using this for?  - I am not sure about the consequences for the network of accepting connections but immediately dropping them, and what would be proper behavior in this case. I "	Clarify
2412	15635717	"Use case: Sometimes the bitcoin client can put a lot of load on the internet connection of the user resulting in a high latency for other internet activities. This may be acceptable for the user most of the time, but in some cases the user temporarily needs a low latency connection. In this case the"	Clarify
2412	15648518	Update: 1) RPC commands togglenetwork and getinfo return info on current network state. 2) Signal about network active state change is sent with a separate signal NotifyNetworkActiveChanged. This means that the gui will update immediately when the button is clicked.  I've looked into adding the sugg	Clarify
2412	15659416	I also think this is nice during IBD to get a new peer from which the client is downloading it's blocks. 	Clarify
2412	15666732	"Can transactions still be sent while the network activity is switched off? It might be nice to be able to do this still at least, and optionally download new blocks too. (I recently added an ""-antisocial"" command line option which stops transaction relaying due to using a limited internet connection"	Clarify
2412	15672261	"@rebroad Ok, but that seems to require a different implementation. This patch simply cuts all connections, so I think your proposal is better suited for another issue. Also it seems that any kind of throttling or filtering of the connections eventually end up being too controversial to get anywhere "	Clarify
2412	15673069	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b1ff0108f94a2a6365f9957708041269c63a351c for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2412	15687162	"IMO the current implementation of simply cutting the whole connection is best. It is also clearest to the user. Once you start making exceptions there's a large chance of introducing bugs or even network-breaking bugs, which are why such features are unlikely to make it into the reference client. "	Clarify
2412	15762518	"@sipa @gavinandresen I'm asking myself, if the core-devs are willing to pull such a thing or if this should be GUI-only? "	Clarify
2412	16033275	Needs rebase. 	System
2412	16041969	@luke-jr I will be happy to do rebases if this has a chance of actually being pulled but so far I'm not sure. Whet do you think? 	Clarify
2412	16050450	"Testing is our bottleneck.  This gives use Yet Another State to test, which is a bad thing because it just makes one more thing that can break.  I'm against it.  "	Clarify
2412	16317518	Haven't tested but the code changes to core look sane to me. 	Statement
2412	16323023	I still like the idea! 	Emphasis
2412	16749799	Rebased. 	System
2412	17570929	@gavinandresen What do you think about that? Would be sad to just forget about it :). 	Statement
2412	17571065	"I missed the rebase, I'll test it some. "	Statement
2412	24265042	@jonls could you rebase once more? 	Emphasis
2412	24367295	@jonasschnelli done 	Statement
2412	26662382	What is the current state for this? 	whQuestion
2412	26662456	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/22570316ad74df51e459c17d72e02ce76e03751d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2412	26688550	"Needs testing, and a test plan that has tests like:  Toggle networking on and off as rapidly as possible eleven times using the GUI. EXPECT: no crashes, always ends up in properly connected or disconnected state.  Toggle networking on and off using the JSON-RPC call. EXPECT: no crashes...  Toggle ne"	Clarify
2407	15376395	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/74c341604961ea9611a6c024c0bdecb573f2361a for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2407	15673451	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f48ace32517880418420f45e51b9a97caaa33ce8 for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2407	20259465	This pull request has been refactored and reworked a little to improve error messaging. 	Clarify
2407	20570409	"If you add a dependency on a boost library, please add it to the gitian descriptors too (though it seems overkill to me ofr this purpose). "	Statement
2407	20754841	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/19f569cdd364592d91453fd246b11e44cef3940e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2407	22057551	"Not sure if this is the appropriate place for this comment, but one feature request I wanted to recommend was to allow for the dynamic creation of wallets via RPC. That way you could add new ones without having to restart the daemon. I think people writing wallet interfaces might find that handy. "	Clarify
2407	22057559	"Also, this is great work, happy that you're tackling this hard problem. Thanks! "	Emphasis
2407	22321099	@Kyle r.e. dynamic creation of wallets via RPC: that was one of the main objectives of #2124  I think I've found a better approach to wallet management which I've been pursuing separate from these pull requests. I'll publish something on it soon. 	Clarify
2407	26688398	Needs rebase and response to code review comments.  	Continuer
2394	15204305	"Interesting find, guess no one ever thought about such a corner case then. "	nAnswer
2394	21030410	I meet the same bug.   Bitcoin version v0.8.1-beta (2013-03-17 15:35:36 -0400) 	Clarify
2394	21059348	"FWIW, I also saw this on my 2aa462e-based next-test, after about 800 keys (targetting 10,000 keys). Initially, I assumed it was relayed to the wallet closing timeout, so when I restarted, I put an effectively-infinite timeout on it; it crashed again after about 800 keys. The third try completed succ"	Clarify
2394	21086564	"After upgrade to v0.8.3-beta, the bug still exists. "	Statement
2394	27202455	"Can you try again with current master?  I tried keypoolrefill 10000 and used walletpassphrase pass 10, which resulted in:  Output in debug window - RPC console (Bitcoin-Qt): <pre> 11:52:32 keypoolrefill 10000 11:52:34 CWallet::GenerateNewKey() : AddKey failed (code -1) </pre>  No crash for me! "	Other
2391	15171536	"You are free to move your data directory via the ``-datadir=`` switch the client accepts. But still you have a valid point, we most likely don't want the datadir to be in roaming as in can grow rather large and for server-based profiles that would cause it to be synced everytime you logon/logoff. "	Reject
2388	15153077	"The sha1sums file is cryptographically signed.  HTTPS does not provide strong protection, you'd want to check the signatures in any case. There is even a script included with Bitcoin to check the signatures on the site. "	Clarify
2388	15153258	"> echo ""gpg error. Do you have Gavin's code signing key installed?""  Okay, contrib/verifysfbinaries/verify.sh is nice.  But where do I securely find ""Gavin""'s signing key?  I see http://bitcoin.org/gavinandresen.asc but what's the expected digest of that file?  Couldn't the script slurp that and che"	Clarify
2388	15153438	"Okay, I've found https://github.com/bitcoin/bitcoin.org/blob/master/gavinandresen.asc  Consider this bug a documentation/linkage request.  "	nAnswer
2371	17387570	"Some prefs are changeable (txfee, language, btc unit, ...) some are not changeable according to reported behavior (SOCKS-P., minimize, etc.). Will do a fix soon. "	Reject
2371	17388904	"@jonasschnelli I'm working on the options dialog currently, see #2612. If there are special Mac fixes I'm happy to receive your input :). "	Clarify
2371	17388982	"@Diapolo okay,.. i just saw it. No worries. I first need to analyze the problem. As soon as i know what's the root cause, i'll let you know and maybe have a fix ready. "	Clarify
2371	17389761	"Found the mac problems: -> SetStartOnSystemStartup is not saving/working, ... because not implemented yet (see guiutil.cpp) => // TODO: OSX startup stuff -> fMinimizeToTray / fMinimizeOnClose are not working. Because: ``` #ifndef Q_OS_MAC     mapper->addMapping(ui->minimizeToTray, OptionsModel::Mini"	Clarify
2371	17393614	"@Diapolo you might also check for conflicts pulling #2613, but i think it should be mergable. "	Clarify
2371	19912638	"@agravier with the recent merges of OSX related settings fixes, do you still encounter these issues running 0.8.2-beta? "	whQuestion
2371	24565735	"#2612 needs feedback, perhaps someone can try the pulltester executable... "	nAnswer
2371	24879419	Quick update: the Preferences pane still misbehaves in v0.8.5-beta. 	Statement
2371	24885086	I'll have a look at it soon. 	Statement
2371	25063591	"Perhaps also take a look at #2612, I need some feedback. "	Clarify
2371	25066183	"@agravier the reported ""Windows"" problems are fixed #2613 (is removed now on mac because it don't make sense there). The SOCKS changes sometime needs a restart of the app. I think this is okay. "	Clarify
2371	25069257	"Hmm... the checkbox should be synced/linked with your mac preferences (open osx preference pannel -> users -> YOUR_USER -> startup items). Could you try again and see, if the entries in your osx pereferences user startup items will change after you click okay/apply?  Thanks "	Other
2371	25069281	"@agravier it could also be a permissions issue. Do you have ""Admin"" right on your mac? "	Reject
2371	25069700	@jonasschnelli Checking the checkbox and applying or clicking OK has no effect on the list of login items as displayed by the preferences pane. Bitcoin-Qt is not in the list. My account is allowed to administer. Full groups memberships:  ``` (Canopy 64bit) Alexandres-MacBook-Pro:Bitcoin agravier$ gr	Clarify
2371	25070030	@agravier Which bitcoin version you use? 	whQuestion
2371	25070154	@jonasschnelli Bitcoin-Qt v0.8.5-beta downloaded from http://bitcoin.org/en/download 3 days ago. Qt version 4.8.4. 	Clarify
2371	25684291	@agravier Are you able to compile #2612 and see if your problems are better/solved? 	Clarify
2371	25690519	"@Diapolo sure, I'm on your [5511af6](https://github.com/Diapolo/bitcoin/commit/5511af64d32b4c5cbb9a6b74f284b0901b98dce5) but failing to compile, hitting the same issue as @jonasschnelli [there](https://github.com/bitcoin/bitcoin/pull/2943#issuecomment-24167856). I have the autotools, boost, qt, xcod"	Clarify
2371	25748669	"I tried passing various arguments to the configure script (--with-qt-bindir, --with-qt-incdir, --with-qt-libdir, --with-qt-plugindir), but it always stops with      checking if qt should be enabled... configure: error: ""qt support requested but qt could not be located. use --without-qt""  I'm not try"	Clarify
2371	25767266	"@agravier I'm sorry to say, but as I'm not using autotools for my local build yet, I'm not able to help you out. I hope @jonasschnelli was able to sort out his compilation error and is able to help you. "	Clarify
2371	25767569	@Diapolo what do you use? I could maybe follow your procedure. 	Clarify
2371	25767849	"I'm using Qt Creator and the bitcoin-qt.pro file from before Autotools, I don't think that is a quick solution for you :-/. "	nAnswer
2371	25793208	"@Diapolo Yes, I tried  QT Creator after failing the Unix way, and stumbled on an error telling me that `locale/bitcoin_ach.qm` is missing. Is it difficult to set up the right environment for QT Creator to be able to build the project? Do you advise me to give up on your solution?  The QT Creator err"	Clarify
2371	25793576	"The .qm files should be in place before you are trying to build. Try an qmake or lrelease (via Qt Creator menus), that should create the .qm files. "	Clarify
2371	25794521	"It doesn't help make the .qm. qmake or lrelease give errors and warnings of their own as shown below.  As a reminder, I'm on clean 5511af6, head of your options_prep. This is Qt Creator 5.1.1 on OS X 10.8.5/12F37.  ## lrelease output:  ``` Starting external tool '/Developer/Qt/5.1.1/clang_64/bin/lre"	Clarify
2371	25796051	"Are you using the supplied project file from current master? That wont work, because of the Autotools switch-over. You need to get a pre-autotools project-file if you want to build with Qt Creator (without autotools plugin). "	Clarify
2371	25803844	"OK, I understand. I'm using [the one in the your options_prep branch](https://github.com/Diapolo/bitcoin/blob/options_prep/contrib/bitcoin-qt.pro), which appear to have been last authored 4 months ago, so it's probably bad.  If you have one pre-autotools project file that you use and might work for "	Clarify
2371	25803978	You could try this one: https://github.com/Diapolo/bitcoin/blob/translations/bitcoin-qt.pro 	Statement
2371	25805670	"Thanks. This one got me farther. More errors, though. I give up for now, I have run out of time.  For the record:  ``` ... In file included from src/bignum.h:12: src/util.h:119:2: error: missing boost sleep implementation #error missing boost sleep implementation  ^ In file included from src/qt/bitc"	Clarify
2371	25899021	"The first error rises, because you need to define HAVE_WORKING_BOOST_SLEEP_FOR or alternatively HAVE_WORKING_BOOST_SLEEP.  Second one is because you need to build the Google protobuf lib, because we use that for payment-requests. "	Clarify
2368	14926025	It's size limited right now because of the buffer targeting.  	Statement
2362	14828384	Which version did you use then? 	whQuestion
2362	14828487	0.8.0 RC1 	Statement
2362	14828908	I didn't even see one as far as I remember... when was it issued and when should it be expired? 	Clarify
2360	14797647	https://github.com/L2G/QA/blob/master/MacOS-GUIValidation.md 	Statement
2360	14798211	"Aside: I just discovered the new checklist markup. Could be useful!  Excerpt from current draft validation plan:  ### Window close, no minimize options  #### Steps  1. [x] Start Bitcoin-Qt. 2. [x] Open Preferences and choose ""Window."" 3. [x] Ensure no checkboxes are checked/ticked. 4. [x] Click OK. "	Clarify
2360	15204256	"Can you also post some screens, when you invent something new for Mac as this strange world is nothing I have access to ^^. "	Clarify
2360	15213887	"Absolutely!  In this case, happily, a lot of the code is already in place and just needs to be freed from `#ifndef Q_OS_MAC` blocks. "	nAnswer
2360	15351916	"Here's what we're talking about:  ![Bitcoin-Qt in the status menu area](https://f.cloud.github.com/assets/106988/295047/770967be-9445-11e2-8344-0c7b86d909ae.png)  This is the upper-right corner of the Mac OS desktop, what Apple calls the ""status menus."" It's equivalent to the system tray in Windows."	Clarify
2360	28301704	How is this going? Any progress?  	whQuestion
2355	14767773	Have you tried Google? I heard it might have something.  NAI 	Clarify
2355	14768725	@PartTimeLegend The very fact that you are suggesting using Google confirms this is an issue. 	Clarify
2355	14769290	"@Rebroad, look on this page: http://bitcoin.org/clients.html - it suggest Armory that can be installed on top of Bitcoin-qt and allows for 'cold storage'. If you really want to be secured from theft in an easy way, just install the client on a dedicated laptop and power off when done doing your tran"	Clarify
2355	14769469	"If you feel the need to have it included, then fork the code and implement. Then submit a pull. "	Reject
2353	14689144	bad_alloc means it is running out of memory. How much memory do you have?  What OS?  	whQuestion
2353	14689196	magnus@desktop|21:59|~/src/bitcoin ((v0.8.0)) $ cat /proc/meminfo  MemTotal:       16445204 kB MemFree:         4247964 kB Buffers:          341888 kB Cached:          8300268 kB SwapCached:            0 kB Active:         10045068 kB Inactive:        1818152 kB Active(anon):    2951020 kB Inactive(	Clarify
2353	14806541	"This is how bitcoin runs out of memory (virtual address space) while downloading blocks:  Whenever a node receives a block that it cannot link to the chain, it stores it in memory in mapOrphanBlocks.  There is no limit to the size of that data.  When a node is downloading blocks, it may download and"	Clarify
2353	26785284	"Headers-first synchronization (being worked on) removes the concept of orphan blocks entirely, as a block is only downloaded when its ancestry is already known, so it can always be saved on disk. "	Clarify
2342	14378195	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/67c7dab125e98a0c7b5e55035ddc5c90ab3b369d for binaries and test log. "	nAnswer
2342	16317892	"I like this idea, but it does need unit tests and some investigation for potential effects, as noted in the message. "	Statement
2342	16321979	Here's a list of all effectively-height-locked transactions in the main chain (that means: excluding those where all inputs have nSequence=UINT_MAX): http://bitcoin.sipa.be/lockheight.txt - It seems the inclusion height is always at least two more than the number in nLockTime - one more than strictl	Clarify
2342	16344248	"Not many people uses nLockTime; about 75% of those transactions are mine.  Can you run your script on testnet? I did one ""min-height"" tx myself, I wonder if anyone else did any.  Mainly I think that BlueMatt's tests need more nLockTime stuff, IE the https://github.com/TheBlueMatt/test-scripts stuff."	Clarify
2342	16344398	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1a3c922979dbe040d632e84f2da0e7055cc77009 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2342	18693290	Status?  Still has a FIXME.  Let's close this or get it updated and merged. 	Clarify
2342	18795499	"@jgarzik Updated, removed FIXME.  Min-height nLockTime has been tested on testnet without any issues. "	Other
2342	19706920	"Thinking about this some more.  Regardless of the correctness, I don't like the addition of magic numbers (+1, +2) in various code locations.  "	Statement
2342	19729352	"The +1 isn't a magic number; note how in one place the patch removes a +1. Rather it's there from how nBestHeight is the height of the current best block, and in some places we want to check IsFinal() against the next block.  I'd argue the +2 isn't a magic number either, as it's a combination of +1 "	Clarify
2342	21090344	@petertodd Needs rebase. 	System
2342	21291759	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/c7776e0ac141324ea7295834eb0bd9dfa2ae5d01 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2342	23232337	Rebased and added CreateNewBlock() unittests 	Statement
2342	23232850	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/07478aa23e59c44525a30b874d6799e2ede703ec for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2342	23233922	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fe32957f89f12d8c83eaa81e656c6f52dbe152e3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2342	23237836	"I did another scan of the blockchain looking for nLockTime using transactions: https://s3.amazonaws.com/peter.todd/nLockTime.log  Still none mined at the minimum possible heights, and very few that have used lock-by-time. However this has been tested on testnet. "	Clarify
2342	23237990	ACK 	Clarify
2340	14323157	@sipa I looked into it and I think we don't need to worry about nBestHeight decreasing on a retarget reorg. Anything already in a node's mempool stays there and will be mined once the chain height catches upl so it would be extremely rare for that to take more than an extra block or two. 	Clarify
2340	14351041	Coinbase got back to me and they've now fixed the issue - they're using the same IsFinal() logic as the reference client. 	Clarify
2340	14376659	"Re-based on top of the ""fix off-by-one errors"" fix, which unfortunately means this has to be weakened until the network upgrades. It'll still at least shake out bugs in the meantime. "	Clarify
2340	14379062	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/745083a87c9e8b42e472b1d232d68bb332a86bc1 for binaries and test log. "	nAnswer
2340	16344713	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/903fec9192e71b9734388f5d951a7163dee5b852 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2340	21090359	@petertodd Needs rebase. 	System
2340	23221185	This seems nice to have.  	Statement
2340	23233615	"@jgarzik @luke-jr Updated and tested it against inputs.io, Coinbase, EasyWallet, SatoshiDice and the Android Bitcoin Wallet. It may make zero-conf tx's take a little longer to show up for SatoshiDice, but other than that possible issue I didn't have any problems. (the android wallet seems to have be"	Clarify
2340	23233618	@luke-jr You added this patch to next-test - any related bug reports? 	ynQuestion
2340	23233737	Without getting into too much public detail:  BitPay uses stock bitcoind as boundary nodes if at all possible.  	Clarify
2340	23233800	Well if you trust those bitcoind's 100% for what is or isn't a real transaction then this patch won't cause any problems for BitPay customers. 	Clarify
2340	23235527	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/50e84e991d30ae86a40603cf8de5b7ac35734dad for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2340	23236328	"@petertodd  > the android wallet seems to have been updated to never show unconfirmed tx's  Why do you think so? That's certainly not the case. However it will display a warning if lockTime > 0, and it also checks the unconfirmed dependency chain. "	Clarify
2340	23236979	I've been using this as part of next-test for months now and haven't encountered any problems as a result. 	Clarify
2340	23238887	"@schildbach Actually seems that Android Wallet has a number of issues:  8f8dee4bbd74b573c324745d9d23938a1e4d12f269f9afca022224cf740f16aa - This tx has nLockTime=1, but nSequence=int max so it is a final tx. Instead the wallet shows a big read ""this transaction is non-standard and should not be trust"	Clarify
2340	23247554	@petertodd Thanks for your detailed tests. I'll investigate. 	Statement
2340	26240512	@schildbach any results? 	ynQuestion
2340	26240928	"@wtogami I fixed the UI so that the first case should not show up as timelocked any more.  The other cases should not show up in their unconfirmed state. However, they will show once they're blockchain confirmed. "	Clarify
2340	26361751	"@schildbach What's blocking showing those tx's in their unconfirmed, but final, state? "	Other
2340	26398951	"I think the rationale is those transactions currently do not constitute a usecase that is supported by bitcoinj, so for safety reasons they are not allowed into the wallet. I believe this will change in future, probably with the introduction of more complex payment types (consisting of more than one"	Clarify
2340	26525800	"Using the nLockTime feature is the business of the sender; the receiver has no reason to care about whether or not that feature was used if the transaction is now final and can be mined.  This is just another example of the ""death-spiral"" of feature disablement that we keep seeing in Bitcoin where b"	Clarify
2340	26553847	"Hmm, that argument sounds familiar :)  This came out of the conclusion that people could create time-locked transactions that people would think would confirm quickly, then wouldn't, making it easier to double spend. I think it was you that brought that up originally actually. Anyway it was a fair p"	Clarify
2340	26554040	"@mikehearn The problem right now is that they don't show up in android wallet even after they're locked. Those transactions are not non-standard, they propagate fine, and other wallets (most?) display them okay too. "	Clarify
2340	26554464	"I'll re-review that code, but I think final transactions are allowed, or are supposed to be. There was an issue with the Android UI checking if there was a time lock rather than if it was final, but I thought that was fixed. I filed bug 469 to investigate:  https://code.google.com/p/bitcoinj/issues/"	Clarify
2340	28487890	"I fixed the bitcoinj side issue. It may require a quick new API to make the UI do the right thing though. Andreas, let me know when you have time to retest this. "	Clarify
2318	13783594	"I'd agree, BUT... bitcoind is a JSON-RPC server; the quick-and-simple test client is just that, not meant to be a fully-featured Bitcoin client for actual production use. "	Reject
2318	13784488	"On 2013-02-19, Luke-Jr wrote: > I'd agree, BUT... bitcoind is a JSON-RPC server; the quick-and-simple > test client is just that, not meant to be a fully-featured Bitcoin > client for actual production use.  From the look of it, bitcoind is the only *complete* (ie. fully-featured) bitcoin client out"	Clarify
2318	13784673	"@anarcat Luke isn't talking about Bitcoin clients, but about JSON-RPC clients. The JSON-RPC interface is intended to be used by applications, and bitcoind itself just implements a very simple CLI JSON-RPC client (in addition to being a full-blown Bitcoin client). Earlier discussions have suggested w"	Clarify
2318	13785092	"I am not talking about the JSON-RPC interface, just the ""client"" part of the bitcoind binary.  I agree things are confusing - maybe the ""client"" bits of bitcoind should be split in a separate binary. But as things stand, the ""client"" functionality of bitcoind (the JSONRPC client interface) is the mo"	Clarify
2318	13785453	"Well, bitcoind is the reference Bitcoin client, and a JSON-RPC server. Nothing to be changed about that.  Regarding JSON-RPC clients: Bitcoin-Qt has an RPC console which can do everything bitcoind's RPC server can. But if you're just talking about CLI RPC clients, bitcoind is probably the most compl"	Clarify
2318	13788729	"Yes, I understand all that. I read some of the code for bitrpc and the other Python clients out there.  My point is that none of those implementations are mature enough. The bitcoind client *is* a JSONRPC client right now and it does a lot of things! It seems to me that making the `bitcoind walletpa"	Clarify
2318	13875194	"anarcat - agree, secure password prompt from the command line would be easy to add, and very helpful.  Also, we would benefit from adding to  ``` bitcoind encryptwallet ``` "	Other
2303	13476849	"This should be harmless, is there a reason I'm unaware of that it isn't? "	Statement
2303	13476858	"No security implications that I can see, but it prolongs initial sync on low-resource nodes. "	Statement
2303	13477372	As I understand it if the node receives the transaction it has to look up all inputs (which in this case don't exist)  On one of these http://www.pcengines.ch/alix2d2.htm (I admit it's extremely low resource) I saw about 10% increase in syncing speed (accepted blocks / time) from --loadblock between	Clarify
2303	13526727	"10% potential performance improvement during bootstrapping or -loadblock is not enough to justify the testing effort to make sure a change doesn't break anything, in my opinion.  "	Clarify
2303	13534493	Since on this hardware the bottleneck is the CPU it is entirely possible that the 10% is the CPU load that is normally used to handle network traffic and p2p discovery.  	Clarify
2302	24580901	"@gavinandresen I also found a strange behaviour after your payment request pull. It's not possible to remove a secure payment from the sendcoins dialog, but it can contain a safe and an unsafe payment, where you can remove the unsafe payment (not talking about clear all). "	Clarify
2300	13447865	Possibly related: https://github.com/bitcoin/bitcoin/issues/2204  	Statement
2300	13447963	Isn't the first one expected? IIRC we decided on IRC a number of months ago that getwork mining was basically unsupported because the optimizations to make it perform fast enough were too invasive - or something along those lines.  Does 2/3 occur even if you stop the ASIC mining before/during shutdo	Clarify
2300	13450922	"gdb session pastes:  backtrace, immediately following attach: http://pastebin.com/ENnXRVyJ ""info threads"": http://pastebin.com/ZR8PnXQV thread id 3 backtrace: http://pastebin.com/wDZpPLqw thread id 4 backtrace: http://pastebin.com/SQKd6Rsq thread id 5 backtrace: http://pastebin.com/rDiFDgfC  "	Other
2293	13357560	Did you copy the files while the application was running? 	whQuestion
2293	13357633	"No, I shut it down and it was running with --detach-db=1 (if that matters) Also: I tried this twice. "	nAnswer
2293	13357750	"Ok, interesting. Can you try: * If you're able to compile on/for the RPi, can you try running the unit tests on it? (cd src; make -f makefile.unix test_bitcoin && ./test_bitcoin).  * Are you able to sync (even if it's very slow) on the RPi directly? * Can you copy the files from an RPi to a desktop "	Clarify
2293	13357918	1) Will do 2) It syncs and runs fine on the rpi and on the x86 machine. You just can't copy the db from one to the other (both ways will give errors) 3) See 2 	Clarify
2293	13476551	"The test build said ""Running 89 test cases, no errors"" "	nAnswer
2293	15156780	AFAIK the database files on linux and MS windows are also incompatible with each other. Are there any plans to make it so that the files can be used for the client irrespective of platform/architecture? 	ynQuestion
2293	15178622	"This is low priority, given that the database may be regenerated from publicly available data at any time. "	nAnswer
2290	13338217	"Perhaps we need to make it ""$(git describe):${filename}""? "	Other
2290	21068966	"How about changing the bitcoind make file, makefile.mingw (I'm a windows compiler) from:  obj/%.o: %.cpp $(HEADERS)     $(CXX) -c $(CFLAGS) -o $@ $< to:  obj/%.o: %.cpp $(HEADERS)     $(CXX) -c -frandom-seed=$@ $(CFLAGS) -o $@ $<  and similarly for the bitcoin-qt makefiles? They compile OK.  Ron  "	Other
2290	21150446	RE: -frandom-seed=$@ : good idea!  	Emphasis
2290	21159270	"Do I do some sort of fork-clone-commit to github? It seems easy enough to modify all bitcoind makefile.* makefiles? But bitcoin-qt.pro, that is not clear at all to me. Don't even know how it does those 4 lines in makefile.release/debug now? Nor how to fix the missing lib path (for windows) in the ma"	Clarify
2290	21159521	"First, ""fork"" the repo on the GitHub website, then do: - git clone git@github.com:bitcoin/bitcoin.git - cd bitcoin - git remote add personal git@github.com:old-c-coder/bitcoin.git  This sets up your local repo to pull from the master and push to your ""fork"". Then, to make your changes, do: - git che"	Clarify
2290	21161251	"Do I actually send an email to git@github.com?  Do I change to a bitcoin directory on whose machine, drive,OS, where? Your 3rd line is equally ""opaque"" to me!  I have no context for any of this. I am running github for windows, so I see none of your command line ""arcana"":)   I presume I should fork "	Clarify
2290	21939750	"Well, I just made my change to  https://github.com/old-c-coder/bitcoin-git/commit/d511cff2fceb0a2b8e9fe248800edcf1b766288a  showing the modified bitcoind makefiles  Ron "	Statement
2280	21321783	"Having quick look at code looks like it will still resolve the other ips if the hard coded ip fails.   Also, if someone is thinking of cleaning this up a bit, i've already made a external ip checker (in perl), which uses a few services. See https://github.com/hughdavenport/dynamic-ip-checker/blob/ma"	Clarify
2280	21321855	"We shouldn't be using any of these services at all (because it allows them to track bitcoin users, at least ones who haven't -discover=0 or -listen=0). UPNP covers this for cases where upnp supported, and we have apparent addresses in our own protocol which we could use... "	Clarify
2280	26705650	"It's come to the point that it is currently breaking,  See #3088 for the solution.  "	Statement
2265	13051304	"If the txin is unknown, then how does signrawtransaction know that the signature for that scriptSig is correct?  I suppose it could assume that if there is a signature then it is correct... but that seems dangerous.  "	Statement
2265	13051698	"How about omitting the ""complete"" flag entirely, when it's not known? It could be supplemented with a count of signatures (and total signatures in transaction) if there's no other way to tell that info already. "	nAnswer
2256	13138016	see https://github.com/bitcoin/bitcoin/pull/2275  	Statement
2256	26990698	@gavinandresen Is this still unfixed? 	ynQuestion
2256	27030724	"Unfixed, but low priority-- why would a miner create a block that is likely to get orphaned because it takes peers so long to validate?  And even if they did, and the block was not orphaned, all they accomplish is making full-chain catch-up validation take longer for a while (until a new release wit"	Clarify
2214	12712634	"Makes a whole lot of sense to add these and I also still have that proxy-stuff in my mind (with a simplified code in init.cpp ^^).  I guess we should discuss, if some other dev is missing further options, I know @gmaxwell was looking for some more of the networking stuff. "	Clarify
2214	12784701	"Agreed. Though we only want the more common settings in the ui, those which can be explained to end users in a few lines. The very obscure ones that make sense to developers only can always be provided on the command line or in bitcoin.conf. "	Clarify
2214	16892835	@Diapolo @laanwj Any of you feel like doing this? 	whQuestion
2214	16892912	Listen  really could use a gui option. 	Clarify
2214	16945785	"I still have that proxy stuff in mind, remember? When doing this a listen switch could for sure be added. But I have got one problem with Qt and networking stuff, as we currently mirror some of the code for setting the proxy, which is IMHO a bad thing. Perhaps we always should require a client-resta"	Clarify
2214	16945896	I think the few checkboxes/fields suggested here are much more useful than making proxy settings fully tweakable from the GUI :) 	Clarify
2214	16946819	"Even if you separate the two and I agree, we should extend the GUI options, there is still my question open :). "	Clarify
2214	17118884	"Currently working on this, but it will take some time... it's a little fiddling work to be done here ^^. "	Statement
2212	12640923	"What build is this, based on which pull-request? "	whQuestion
2212	12648597	"The tested build is f4445f9982a760869c430f3d4b1302f7eb509bd8 here: http://bitcoin.sipa.be/builds/pre-0.8/2013-01-13-turbo-ldb17/info/commits.after-v0.7.1.txt SHA256: 52255782... It was the one linked in this testing plan: https://github.com/gavinandresen/QA/blob/master/HardLinksUpgrade.md, although "	Clarify
2202	12584525	"What is the flow you think of? Something like ``Corrupted block database detected. Do you want to restart the client to rebuild the database?``. User clicks yes, client restarts with -reindex added to the command line. For such a thing to work we would also need to re-use the current command-line pa"	Clarify
2202	12584657	"I don't think a client restart hack is even needed. When it detects the corrupted block database it is still in the startup phase, so the reply from the UI could trigger a rebuild immediately.  What is likely needed is a way for the core to ""ask"" the UI something and get back a yes/no reply.    - In"	Clarify
2202	12587989	"No, a client restart isn't necessary. I would think of something like ""It looks your block database is corrupted. Do you want to rebuild it now? If no, the client will exit. [Yes] [No]"". There's some code needed in init.cpp to go back to a previous stage (basically a loop starting before the initial"	Clarify
2202	26985530	"I think this was implemented? If so, please close the issue :)  "	Clarify
2202	26985570	Only for some types of corruption (the ones detected at startup in the consistency check). 	Statement
2202	26987550	"Can someone please review #3136, as this is related.  @laanwj I also think we have a problem with the ``ThreadSafeMessageBox`` function, as I'm not sure the way we implemented getting the user choice back is supported (bool pointer). As ``The return value of the member function call is placed in ret"	Clarify
2202	27201242	"@laanwj Ping, can you take a quick look at the Qt docs to verify, if I'm correct here... "	Statement
2202	27202570	"@Diapolo if you look at the ThreadSafeMessageBox source https://github.com/bitcoin/bitcoin/blob/master/src/qt/bitcoin.cpp#L56, you see that we use GUIUtil::blockingGUIThreadConnection() in case of a modal message, which never returns one of the asynchronous types. "	Clarify
2202	27205326	"@laanwj You are right, we are currently only using modal messages (because all ``uiInterface.ThreadSafeMessageBox()`` calls use MSG_ERROR or MSG_WARNING).  So we have 2 types used for the connection left: if(QThread::currentThread() != qApp->thread()) -> Qt::BlockingQueuedConnection; else -> Qt::Dir"	Clarify
2202	27205989	"It only needs to be modal *if* a return value is desired. Otherwise it's fine (better, even) to have it asynchronous. "	Clarify
2202	27206567	"At least no problem with our Qt code is causing my crash here, you convinced me :). "	nAnswer
2197	12553248	"It would probably be best to add the data directory to the shortcut automatically, to make sure that the bitcoin that automatically starts is the same as the one configured to automatically start.  Then again, this sounds like a very rare scenario, and I recommend simply disabling the option if you "	Clarify
2197	13819061	"I have the same problem on Windows 2003 using v0.8. It appears that the shortcut in ""%USERPROFILE%\Start Menu\Programs\Startup"" is being removed and recreated each time that Bitcoin starts up. This effectively removes all existing command line parameters in the Target field of the shortcut and rever"	Clarify
2197	13819314	Workaround: Use a config file. 	Statement
2197	13819860	Can some dev tag this low-prio bug please. 	Clarify
2197	13820797	"bitcoin.conf is expected to be found in the data directory, so you can't specify the location of the data directory using the config file. "	Statement
2180	12242574	"Yeah the application logic with fee handling is currently a little compex and not user friendly. There are more related issues and perhaps even a duplicate of this, see: #1858, #1570 or #1568 for example. "	Clarify
2134	11736053	"Suggest that they move out of the oppressive dictatorship that they're in?  :p  It's inconceivable to me that it ""can spend hours trying peers with no success"" do you have any idea why it's doing this for you? Certainly it doesn't do this for me. "	Reject
2134	11736708	"In case of a bad network connection, it may help if you increase the connection timeout, -timeout=N (with N in milliseconds, 5000 is default). "	Clarify
2124	11646195	"It's a work in progress and can certainly be improved. I welcome all comments, suggestions, criticisms, and witty insults. "	Statement
2124	11646362	Would it be better or possible to use references instead of pointers in your code? 	ynQuestion
2124	11646657	"Possible, sure. Better, why? "	whQuestion
2124	11646687	The sanity test failed because the test suite uses the old RPC function prototype. I was still able to build and run using  - make -f makefile.unix bitcoind 	Clarify
2124	11646770	"This may be an opportunity to move away from the wallets being called ""wallet.dat"", which makes it all the more easier for malware to steal the contents. "	Clarify
2124	11653964	"You can now specify additional wallets in the config file or via command line arguments:      usewallet=foo  or      bitcoind -usewallet=foo  A default wallet called """" in the RPC and using file ""wallet.dat"" is always loaded, as to not break compatibility with the master branch. Therefore, additiona"	Clarify
2124	11663549	"The getinfo RPC method now returns an array of wallets each with wallet-specific information. This change is, unfortunately, not backwards compatible. However, it doesn't really seem to make sense to make this call wallet-specific. And returning an array of wallets seems to be a very useful feature."	nAnswer
2124	11664914	"An alternative would be to move that data out of getinfo and into a getwallet info. Part of the reason to do that is that the wallet outputs in getinfo can be rather slow already, and doing them for N wallets won't help matters.  (Though lets see if anyone else has an opinion, I could be on drugs he"	Clarify
2124	11664968	"I was thinking listwallets should maybe show all this information with a verbose option. Without the verbose option, it would just give a list of the wallet names. "	Clarify
2124	11665402	What about making the full info the default and having an option to shorten it? That way interactive users get relevant information while application developers seeking to improve performance have an option to do so if they don't need all that information. Of course we can just have two distinct RPC	Clarify
2124	11665446	"I do think that the wallet information should be completely removed from getinfo, though.  Anyhow, this is the kind of stuff that's really easy to implement and change up front but becomes a serious problem to change once people start using it to build applications. I'd also like to hear several mor"	Clarify
2124	11665629	Another issue I'm wondering about is programmatic access to the config file. We could just append the new wallets to the end of the file whenever they are created - but it would be nice to be able to have tags for sections. Presumably whenever a user creates a new wallet they want it to be loaded at	Clarify
2124	11667374	Multiple wallet support came into my head as I was doing https://github.com/bitcoin/bitcoin/pull/2075 but I left it aside in favor of trying to move the code in the direction of further modularization improvements between the RPC interface and the wallet and the wallet database as a prerequisite. I 	Clarify
2124	11669414	"As for the OO stuff, I would like to abstract things further and define a listener interface, a transaction store interface, and a key store interface. Technically speaking, a signing agent doesn't even need to store complete transactions. Private keys and unspent outpoints are all it needs. Further"	Clarify
2124	11674953	"In general: I'm very much in favor of having native support for multiple wallets. Wallet stuff hasn't been a priority for some time, but if necessary I'd like to help to get this working.  Regarding the idea of separating wallets for block chain processing: sure, that's definitely where we need to g"	Clarify
2124	11676540	"On the wallet site of things, IMHO, we could think about switching the interface to JSON-RPC for all interaction with the wallet object(s) and database(s), which would eventually enable bitcoin-qt to talk to wallets on report machines over SSL/TLS. That's painful to tackle all at once, though, since"	Clarify
2124	11678261	"This pull request is confusing me as it's raised by a different user to the user making the commits.. (or maybe I don't understand github correctly). Also, I'm wondering if such a thing as a ""roadmap"" exists for bitcoind/bitcoin-qt. I'm thinking that perhaps the project could be split into two binar"	Clarify
2124	11678294	"Both users are me. I don't use my CodeShark identity for pushes, though. CodeShark is reserved for github. "	Reject
2124	11712207	"Dynamic wallet loading is essentially complete. An important issue that needs to be resolved prior to any integration is making sure its use of LOCKs on threads is ok. Error handling on initialization is also not super smooth, but that's more an issue with AppInit2 generally. At this point I mostly "	Clarify
2124	12208298	"Hmm, still having some issues with the default wallet not unloading at shutdown. Will need to go over the shutdown sequence to make sure all threads relinquish their pointers to it. "	Clarify
2124	12225200	"Just to set expectations:  This big a change, in this critical a part of the codebase, will need:  + A comprehensive test plan, that exercises all the things that have changed. + Testing by at least two different people who aren't developers, on Windows and either Linux or Mac  See https://github.co"	Clarify
2124	12638631	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1c45edce2fbe76f7e146ee12c1df80c66c5fa8f9 for binaries and test log. "	nAnswer
2124	24548265	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/6c7f86ae371f955371fba05c7f747e4659cd39c8 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2124	25714323	How i can install bitcoind whit Dynamically Loadable Multiple Wallet ?  	whQuestion
2124	26687961	Rebase needed. 	Statement
2124	28362140	This is awesome work. I hope it makes it way to BTC soon.   I've been playing with it for a bit now. Here are the issues I am working through.  1) Export doesn't work. ( Tried making BitCoinGui exportAction public and referencing it in WalletView::gotoHistoryPage but that only gives me default walle	Clarify
2091	11233254	What exactly is missing that you're asking for here? 	whQuestion
2091	11233383	editing in your query answer to ticket body. 	Statement
2091	11233505	"There is already distinctive Tor and proxy settings for the socks outbound connections to IP vs Tor networks.  externalip is used to set what you announce, and its used as documented.  Because of limited address space Bitcoin can not usefully directly address I2P today (so it can realistically only "	Clarify
2091	11233676	"Phantom is in devel/test. It will work with any IPv6 enabled app. So when devs start advertising it it should just work. Phantom is also equivalent to Tor+OnionCat, both are 1:1 mappings using separate /48's, they should just work. You can also use I2P+OnionCat, but I'm not sure best practice regard"	Clarify
2091	11234207	"Then full support of I2P could be a future bitcoin internal width enhancement since I2P is popular. You mean foo.i2p -> base32.b32.i2p? Yes, but you can still enter the full URI form... no resolution.  I think Phantom (and Tor/I2P+OnionCat) will be ok via additional -externalip=6addr arguments for i"	Clarify
2086	11173262	The interface might want to call it a wallet-note or a wallet-comment or a local-note... because a lot of people mistake these on the CLI for something that goes over the network. (if we can decide on a name that is more clear then changing the name in the api/cli would be good too) 	Clarify
2086	11688899	"In the UI at ""send coins"" I find ""Label"" is that what you are talking about? Then the new transaction table field should be named the same. "	Clarify
2086	11808462	"The label is per recipient, the message would be per transaction (as per the bitcoin URI spec BIP 21). Please don't confuse them.  "	Clarify
2086	11814602	"The label is per *address*, which should usually be unique per transaction. ;) "	Clarify
2086	11817662	> The interface might want to call it a wallet-note or a wallet-comment or a local-note... because a lot of people mistake these on the CLI for something that goes over the network.  +1 	Clarify
2079	11100580	"Yes, that is a 'WONTFIX'.  A `sendall account <address>` command that took the account to exactly zero might be a good solution, although you can still run into edge cases like ""what if the account contains 0.000001 BTC"" (fee to sendall might be greater than that).  "	Other
2079	11100712	"But... what's the point of preventing the balance from going negative, if you don't actually do that and it can go negative anyway?  I really don't get it, either completely remove the check, or check it fully... :(  "	Clarify
2079	11112799	"Removing the check completely might have been the right way to go initially, but it is what it is and changing it now might break existing services that rely on the check to make sure customers can't spend more bitcoins than are in their account.  Always preventing the account from going negative wo"	Clarify
2079	11112976	"Well, I planned _not_ to pay myself the tx fees, so for me it is not acceptable for any account balance to go negative...  If I had a way to know in advance the tx fee about to be paid, I could manually check if it had enough balance for the whole operation. Of course, since that wouldn't be an atom"	Clarify
2079	11113207	"Any service operator should be aware that it isn't reasonable to simply pass transaction fees on to their end users: generally the fee has little to do with the transaction being requested itself, and more to do with the particular wallet (which is account-independent) history. A fair method of pass"	Clarify
2079	11158833	"Mh, I see. I'd like to be able to choose my approach here, but since this appears to be not only the most used one, but also the only one the software currently supports, I guess I'll have to bend me to it...  "	nAnswer
2079	25414647	I just started running into this behavior.  When looking for a workaround I hoped to find a prepare step where I could see what the fees would be for a transaction that I could then execute once I have gotten user approval.  After looking over the docs I did not immediately find a way to do this. 	Clarify
2079	25415725	"Fees are semi-random, and might not even be related to the account in question. That is, it's not fair to expect the sending account to be responsible for the transaction fees. Instead, the traditional model for services doing things like this is to simply charge users a flat fee that works out to w"	Clarify
2079	25423435	If that is the case shouldn't it then be possible for sendfrom to have an optional argument for which account the fees should come out of?  Currently the fees come out of the from account in a way that would require a reimbursement transaction in order to get to the right balance if the sender's acc	nAnswer
2079	25427088	"@skruger the only correct way would be what @gavinandresen says: let the account pay the fee (possibly going negative), then reimburse the fee to that account. A ""prepare"" step will not support concurrency as there is no atomic way to do RPC. A way to limit the paid fee in advance would be useful of"	Clarify
2079	25447560	"@laanwj I decided to go with letting the account pay the fee and reimbursing, but I observed something a little bit troubling.  When I did my move the account I was reimbursing came up to 0, but the account I was reimbursing from didn't change.  My accounts ``` >>> r.listaccounts() [u'', u'testing',"	Clarify
2041	26985623	Is this still the case?  	ynQuestion
2039	10735433	Details of failure?  File changes?  debug.log entries?  	ynQuestion
2038	26990566	"@luke-jr Is this still happening with current master? I'm not aware of chmod syntax, does -r remove all rights on the blk files? "	nAnswer
2038	26991457	"I don't think anything changed related to this, though I haven't tested. "	nAnswer
2036	10723611	"My mining refactor made GMF_BLOCK dead code (and I should have removed it), but the DoS rules for excluding transactions from the memory pool remain in place.  We can reopen discussion of what criteria should be used for selecting transactions, but I don't think special-casing ""very small outputs"" a"	Clarify
2036	10726481	"MIN_RELAY_TX_FEE was originally intended to only ease reducing MIN_TX_FEE in the future by relaying them but not including them in blocks. The drop to 0.0005 BTC fees was the result of 1 BTC = $25, so if anything the logical step would be to increase the minimums to 0.001 BTC, not decrease it to 0.0"	Clarify
2034	10695911	"IMO, fetching blocks twice isn't nearly as important as getting the p2p code to relay them efficiently. I summarized this in a series of points on bitcointalk once: https://bitcointalk.org/index.php?topic=108854.msg1312022#msg1312022 "	nAnswer
2034	10711435	"@luke-jr The main problem I want to solve is IBD that get interrupted randomly when a good peer tells you about a new block in between. I really want an IBD mechanism that at least is continuously downloading blocks, and doesn't stop for several minutes when a peer disconnects or the mechanism is di"	Clarify
2034	11292994	"what is the benefit in designating a ""sync node""? Why not have a number of sync nodes, but just ensure that the same block isn't requested from more than one responsive node. I think it would be better to distribute downloading of blocks among several nodes rather than all from one, as often a node "	Clarify
2034	11293675	"@rebroad That would be better without a doubt, but that's far harder to do, and I doubt it would be less of a hack than what we have now. I want something that works, is easy to understand, doesn't request blocks several times, and doesn't get confused by different nodes announcing blocks.  The real"	Clarify
2034	11582916	"I still maintain #1271 is needed - yes it doesn't fix the core issue you refer to, but it does fix an issue that currently, no other pull request, AFAIK, fixes. "	nAnswer
2034	11586414	"I am sorry. I've just realised I've not explained myself very well. I struggle sometimes to relay information that I know about but that others do not. #1271 on first appearance does look like it fixes the problem in the wrong place, and I understand why people might think that. For the problem you "	Clarify
2034	12192611	"@sipa How would you chose the ""sync node""? I took a quick look into that code parts and wow... heavy stuff in there for my little brain :-D. "	Clarify
2034	12198484	@Diapolo what code? 	whQuestion
2034	12199063	Was talking about the general block and command handling stuff ^^. Seems grown and not that easy to read for me :). 	Clarify
2007	10369503	Did any other dev try this? Or am I the only one that can re-create that crash situation? 	ynQuestion
2007	10557328	@sipa Did you check this out? Does it happen also on Linux or with bitcoind? 	Emphasis
2007	10707279	Would it be possible to make an NTP request to a one of a list of well known time servers to check for this kind of problem? 	Other
2007	10712430	"This problem would be solved with a friendlier error message. Bailing out as early as possible is all we can do when the user's clock is detected to be wrong by this much.  (p2p nodes already send their time so ntp is not needed, and relying on well known servers would be a big nono for a distribute"	Clarify
2007	10718980	"@laanwj I would prefer an error message before the client simply crashes, before we talk about how friedly that message should be :-D. Does a wrong time cause a crash on Linux, too with current master? "	Clarify
2007	10740361	"I would suggest it as a client feature, not a part of the protocol.  But you are right, the protocol does seem to provide for time services already. I apologize for the superfluous suggestion. "	Reject
2007	12728350	@sipa Any comment for this one? 	ynQuestion
2001	10317082	"Isn't that what this message is supposed to be doing:      string strMessage = _(""Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin will not work properly."");  https://github.com/bitcoin/bitcoin/blob/master/src/util.cpp#L1248   "	Clarify
2001	10373114	I think this is related somehow #2007 and I also think we should have a clock check after startup or something like that. 	Clarify
1994	26990356	"@cinderblock I recently added a commit, that logs start and end of our ``Shutdown()`` function, does that help you? Look for ``Shutdown : In progress...`` and ``Shutdown : done`` messages in your debug.log (running with latest master).  If this helps, please close the ticket for yourself. "	Clarify
1958	9804424	This is probably related to issue #273. 	Clarify
1958	9804738	"It's related, but much easier to implement.  I don't see bandwidth throttling coming any time soon, but a toggle to stop/restart networking could be implemented with minimal impact on the core (and would also be useful for testing, I suppose).  "	nAnswer
1930	9463784	I'd also suggest that the licensing include a provision which states that the block chain data files (blk*.dat) are submitted to the public domain.  	Clarify
1930	9465903	I'm not sure there's a free - or even legal - way to do that. Mere usage (including mining) does not require accepting the license at all. Most blocks mined these days aren't created by bitcoind either. I think we'll have to aim for a judicial common-sense ruling at some point. 	Clarify
1930	9473344	"I'll add that if someone wanted to inject copyright then he would inject it at the transaction level, not at the block level. For example the ""The Times 03/Jan/2009 Chancellor on brink of second bailout for banks"" is a sentence that can probably be protected by copyright (it's written in a poetic/un"	Clarify
1930	9476467	Understood.  It would seem that some legal stupidity is possible if someone were to burn the block chain on a DVD and submit it for copyright as the author (in the US).  I can imagine some level of ignorance and ineptitude gets it registered.  Then they could start sending out DMCA takedown notices 	Clarify
1928	9406462	Not all multisig additions are equal. An address you can spend with the help of the computer in your pocket isn't the same as an escrow held by a potentially hostile counterparty.  We need some way of distinguishing these cases. 	Clarify
1928	9507327	it seems the only current way to watch for incoming multisig transactions without having all the keys in the wallet is:  1) wait for `-blocknotify` 2) call `getblock` 3) iterate over the transactions array and call `getrawtransaction` 4) iterate over the outputs in `getrawtransaction` to see if it h	Clarify
1928	9511474	"Yes, that's essentially what the wallet code does for transactions it cares about.  Note that 3) can be done with one ""batch"" RPC call, so it's not as inefficient as you might think.  What is your use case where you might be getting payments on multisig addresses where you don't control all of the k"	Clarify
1928	9511787	I would like to use multisig addresses for customer deposits. I was planning on having the server that watches for incoming deposits have one key and then there would be at least one other key stored elsewhere that would be needed to process withdrawals. In this type of scenario you control all the 	Clarify
1928	10402273	Perhaps we could use a `multisig` issue label? There appears to be much to do in the area of a higher-level API to deal with multisig transactions. 	Clarify
1928	19493455	"Is there any progress on that?  My use case for this would be, that my service would manage users wallet and make transaction drafts for him, and his job would be signing them with his private key that my server doesn't know. @gavinandresen ?  While at it, it would be very nice to have a RPC command"	Clarify
1902	9089222	"Retarget message continues ad infinitum, until internal miner is disabled (setgenerate false).  100% reproducible, when internal miner is turned on. 0% reproducible, when internal miner is turned off.  "	Other
1902	9090202	"Turned the internal miner back on at height=32259. No flood of messages.  I'm guessing this occurs (a) only on testnet, and (b) only at a difficulty retarget boundary.  "	nAnswer
1894	9022511	"See also #1231.  There is currently no way to completely get rid of an account.  As I've proposed in the linked issue: there needs to be a RPC command that deletes an account and moves all its addresses to """". "	nAnswer
1894	9048944	"This would need a thorough test plan, and the semantics woul dhave to be nailed down (example:  what happens if I delete an account that I have 'move'd to/from or used in a 'sendfrom' ?  Do those transactions get deleted from listtransactions, or are they modified?  Accountants tend to get upset if "	Clarify
1894	9060504	"Good point, I think we need to get clearly specified what exactly we want the account system to do in the first place, before we make it even more crazy and inconsistent by adding manipulation commands.  "	Clarify
1894	9061886	"Hmm, good points. I guess I should look into writing some mock-up first taking those concerns into consideration. "	Clarify
1894	9747553	"Okay, I guess there are two similar things one could want to do with an account:  1) Rename an account This should be the easier of the two. Change the name of the account everywhere it was used - transactions, moves, balances and so forth. This would be useful when someone would for example be prog"	Clarify
1873	8945469	"This message is a bit confusing.  The ""accepted connection"" message only occurs for _incoming_ connections.  Maybe you can provide your _exact_ bitcoin.conf (sans password) and command line being used?   "	Clarify
1873	8946086	"bitcoin-qt.exe -connect=5.x.x.x, or bitcoind -connect=5.x.x.x    (when I run it with maxconnections=1, it'll still open two connections to the peer listed under -connect, but no others)  whoops, should have included source log:  09/27/12 17:40:29 connected 5.x.x.x          (no port shown) 09/27/12 1"	Clarify
1858	8796973	"This needs some re-work yes, we have quite some open related issues to this on Github. "	Clarify
1858	8797031	"I suppose sending transactions with a non-up-to-date block chain should be discouraged?  Edit: in principle, only when inputs have been selected that were received recently, so it influences the fee computation. But that'd be lots more complex both for the user and implementation...  "	Clarify
1858	8797173	"I like the idea of simply not allowing transactions when we are not up-to-date chain wise. Still leaves the rest of the fee thing open, but addresses this issue. "	Clarify
1858	8800533	"If old inputs are being used but they are all very small, could that also trigger the fee? In which case a newer larger input might be able to remove the need for a fee. So just checking for inputs which were received recently might not solve it?  I think having a warning would be best if the chain "	Clarify
1858	8800821	"We don't currently reliably know when we're not in sync, unless it's so far back that it's before the highest checkpoint. The median measure is absolutely unacceptable for this kind of usage: doing that would allow a greifer to spin up a bunch of height lying nodes and block all  (with fee?) transac"	Clarify
1858	8801680	"I also don't agree with blocking transactions, the user should always be able to do that.   But adding a warning that the user *could* be paying more fee that needed would be fine, IMO. The same check could be used that is now used for the ""out of sync"" warnings. The median is not even used for that"	Clarify
1816	8421578	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c077555c77dd1a58bedd6466a086c4f116fd0e57 for binaries and test log. "	nAnswer
1816	8424448	"Nested-three-deep reject(DoS(error(...))) with two different error strings seems kinda crazy. If I wasn't familiar with the history of how that came to be I'd be befuddled.  Could it be simplified to just: return reject(errorMessage, int nDoS=0) ?  ... where reject prints errorMessage to debug.log a"	Clarify
1816	8444452	"I'll flatten this later and collapse the 3 levels of function wrappers, just needed to get something working for Eligius... "	Emphasis
1816	8477180	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8f976aaa862c933c41c153007d0ffe3093ff475b for binaries and test log. "	nAnswer
1816	10392472	Rebased and implemented @sipa 's CValidationResult solution. 	Statement
1816	10684867	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/212089d306d351e63111e91a969e9da1b1920cbc for test log.  This pull does not merge cleanly onto current master "	nAnswer
1816	10770788	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/46888e6abca27dd6d2132aab7cd63f25363057c6 for binaries and test log. "	nAnswer
1816	18694614	No objections to the code.  Driving use case?  	nAnswer
1816	18695132	Ability to test block templates before putting the effort into mining them. 	Clarify
1816	18695846	That's a use case.  What size user constituency is *driving* this?  Do multiple pools want this?  	whQuestion
1816	18697341	"As far as I know, only Eligius and EclipseMC are actively using this today. Any pool using Eloipool for their poolserver would be able to immediately take advantage of it in the simplest case. It is also necessary for both a multiple-validating-node-implementation economy, and miner-chooses-his-own-"	Clarify
1816	18697600	"@jgarzik I don't think that's a requirement (though certainly something to take into consideration).  I like the idea of such functionality, as it allows miners to validate their work against multiple implementations. Especially with alternative full node implementations becoming available, having s"	Clarify
1816	18771491	@sipa A good example where the validation is extremely useful is a safety net for bitcoin changes that could potentially create invalid blocks. For instance in discussions with pools and miners something that comes up with implementing replace-by-fee and the child-pays-for-parent code I'm working on	Clarify
1816	18785624	"@petertodd Sure, I agree it's a very good way to debug and test potentially forking changes. I just don't like what it may lead to. "	Clarify
1816	18801469	@sipa I agree it is good to be wary of where this may lead to. Are you meaning to imply that leaving things as they are may be a better alternative to the proposed solution made by Luke? 	Clarify
1816	18942190	I would like to have block proposal functionality for BitMinter as well. 	Statement
1816	20738783	"I'd very much like this for my new pool (currently in private testing), if another ""driver"" is needed :) "	Clarify
1816	26687926	Rebase needed.  	Statement
1816	27046226	Rebased. 	System
1816	27046984	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f7078ca741b5ed1d799ecbab1ad7e89b2d98013b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
1816	28204541	Should this be closed now that #3185 is in? 	Statement
1816	28231466	"No, #3185 is entirely unrelated. "	nAnswer
1766	8210963	"Yes, this is currently the behavior. It is very simple to understand and in implementation. I'm sure there are better ways, but I don't intend to fully mimic a shell here.  "	nAnswer
1766	8211264	"Just wanted to mention it, perhaps we can keep just as a low-priority remainder? "	Statement
1763	27769188	I suppose this is working by now? Or is it still the case?  	Clarify
1746	8552462	"This is a good idea, but   1) I don't have the hardware, and won't buy it just for implementing a feature. Not only that, but I also have one of those rare Samsung S2's *without* the optional NFC support so I wouldn't be able to test it either way :/  2) Getting this to work in a platform-independen"	Clarify
1746	8553701	"I'm sure we (the community) can chip in, or I personally can organise a device for you to test with (a valuable investment for the whole community). I can't do anything about a supported phone though... perhaps you have a friend with a nexus or s3?  There are relatively standard smartcard libraries "	Clarify
1746	8554197	How does NFC work? Is there a BIP describing the protocol? 	ynQuestion
1746	8554365	"@turkeyman: you seem to know a lot about it; why not take a shot at implementing it yourself?  @luke-jr: as I understand it, it simply sends bitcoin: URIs as standard URIs over NFC, instead of through QR codes  Edit: But I'm not entirely sure, there may be some extensions. If so, there should be a B"	Clarify
1746	8557978	"This certainly needs more discussion, but as a general comment, I'd very much prefer it if any future NFC protocol did not just request a URI and then broadcast the signed transaction, but at least allowed specifying that the constructed transaction is intended to be sent back to the requester via N"	Clarify
1746	8558175	"I'd love to, but I really don't have any time outside work to take on another side project at the moment >_< "	Other
1746	8558230	"@sipa This is part of my reasoning why this should be tackled in the reference client; everyone is rolling their own. If the reference client implements a thought-through protocol, then I suspect all clients would adopt support for the same protocol.  Another important consideration for the protocol"	Clarify
1746	8561312	"Most important thing to start with is to get the use-cases clear.   Is there any reason for broadcasting back a signed transaction? I'm not against it, but what does such a shortcut add?  I'd think it is enough to transmit the bitcoin: URL in one direction. The receiver can then accept this payment "	Clarify
1746	8571737	I imagine the shortcut allows for wallets without cellular data. 	Statement
1746	8607789	"@laanwj I think it's very important. One-direction URL is okay for phones, but consider:   * prepaid accounts out of credit   * monthly data limit exceeded   * poor weather in dark network zone   * travelling internationally (I am constantly without data network when overseas)   * use with smartcard"	Clarify
1746	8634957	"@laanwj: I consider the fact that the Bitcoin's most common way of submitting transactions is to use the slow, unreliable and expensive P2P network (as opposed to directly submitting them to the receiver; payment protocol)) a flaw. I see absolutely no reason to do the same in the NFC case, especiall"	Clarify
1746	8641442	"@sipa: Concern about attack surface and ""internet proxy"" behavior were exactly my reason to be skeptical of a return channel. But supporting devices without their own internet connection is a good reason. I still want the protocol to be as minimal as possible, so vendors can mess up the implementati"	Clarify
1746	8644526	"@sipa I can see your point, but in a retail situation where you are making a payment with an offline device, perhaps providing an internet proxy would be useful. That said, a full internet proxy seems overkill, since the only thing the user wants is the transaction history for their addresses of int"	Clarify
1746	8680451	"That opens all kinds of trust issues (client to vendor, vendor to client, etc), and will have to be thought about really carefully.  IMO someone with some knowledge of NFC should write a very minimal BIP for the basic payment protocol (if remotely possible, compatible with Andreas' work), that allow"	Clarify
1746	8683927	"@laanwj /agree, it makes it more complicated than just the URL, but the only significant trust issue I see is requesting a PIN number from the POS device, and this is equally an unsolved issue with modern credit card POS terminals and ATM's. At least the security risk is familiar, and to make malici"	Clarify
1746	8690596	"I think the correct solution is the development of a generic payment protocol which supports several transport mechanisms, NFC being one of them.  Regarding PIN identification: no opinion, but I don't see why you can't just ask for the PIN (or other authentication info) on your own device.  Regardin"	Clarify
1746	8691205	"@sipa Sure, I would imagine the protocol to apply to whatever communication channel is used. I would design it as a stateless, instantaneous, single request+response transaction like HTTP.  PIN (or whatever) on the device is fine, IF the device is a device. If it is just a smartcard, then the POS ne"	Clarify
1734	8079382	"You mean all IPs we listen to or all external (router) IPs, if we are behind a NAT e.g.? "	ynQuestion
1734	8079451	"Well, I was mostly thinking of the content of mapLocalHost which is basically the latter.  Getting the addresses we're listening on isn't very interesting in unix land (lsof --ni / netstat --listen / etc) but perhaps more handy in windows.  "	Clarify
1734	8092452	"The information is useful, but 'getinfo' is a fscking mess.  ""everything in one place"" leads to a mess of global variables and associated locking.  I am 100% convinced there are minor locking problems in 'getinfo'.  Adding more network info to 'getinfo' is far less desirable than a separate RPC.  "	Clarify
1725	8031257	"They show the same information, because Transaction details shows the details of the underlying Bitcoin transaction, not the specific sub-transaction (output). This is by design.  However, it is a bug if the To: only shows one address instead of both.   "	Clarify
1725	18693316	Is this still present/relevant? 	ynQuestion
1725	18695140	"Looking at the code in TransactionDesc, it only shows one ""To:"" address for the first To, even if a transaction has multiple outputs  https://github.com/bitcoin/bitcoin/blob/master/src/qt/transactiondesc.cpp#L111  So this could indeed be regarded a very minor bug, though it shows all the outputs (al"	Clarify
1675	7740176	"But fees might not be rounded to kilobyte (and aren't any more, with Gavin's changes, AFAIK) "	Statement
1675	7740295	"Er. I'd missed that. I think we should keep the rounding behavior, both for improved compatibility with current behavior, and also because it leaves some free room for housekeeping operations like this. "	Clarify
1675	10154286	Is this related? http://www.reddit.com/r/Bitcoin/comments/12h1ec/how_to_minimize_fees_by_sending_dust_inputs_to/ 	ynQuestion
1675	24781986	"I would say that it is more important to structure costs correctly.  It is the _creation_ of dust txouts that causes both the expense of storing them on the blockchain and the eventual expense of redeeming them.  A better solution IMO would be to make txins free and calculate fees based on txouts, a"	Clarify
1675	24782153	"@Cryddit  alas, for a miner, making them free would be economically irrational since the scarcity creating the market to begin with is the maximum size of the block.  (Also, making txins free entirely has the risk of people stuffing kilobytes of data in them for parasitic storage)  "	Clarify
1674	7725627	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/162d57776f40fe05d3df512ca021bc0c3865c970 for binaries and test log. "	nAnswer
1674	7737457	"I tried the version from @BitcoinPullTester and it starts just fine, no crashes related to stack-protector on Win7 x64 here. "	nAnswer
1674	7778056	Have you tried some actual stack-smashing fun yet?  	ynQuestion
1674	7778875	"@laanwj No I did not investigate further, until now I just enabled it. Have you got some links for stack-smashing fun :)? Forget my question, I'm going to test it now :). "	Clarify
1674	7779243	"Well the idea is to make a buffer on the stack and write more into it and than the size of the buffer (ie, char buffer[1024]; buffer[1025]=0xff;  .. and so on the values don't really matter )   Add a button that does that , click the button, and see if it gets detected (make sure you don't write too"	Clarify
1674	7780283	"<pre>     char buffer[1024];     buffer[1025]=0xff;      printf(""%s"", buffer); </pre>  The above code seems to trigger SSP detection, see this where ``libssp-0.dll`` is mentioned. Well now I need to check if the application is halted and aborted or executes further ... before crashing.  <pre>  Probl"	Clarify
1674	7780722	"I tried the same code without SPP enabled and the applications simply continues, which is what malicious code should do, right ;)? "	Clarify
1674	7786618	"Yes, that's expected "	Accept
1674	7786671	Having SSP in windows is great news!   Should also make sure bitcoind gets built with it.  Can you time a blockchain sync with and without (perhaps on testnet?) to make sure it's not slaying it?  	Clarify
1674	7787767	What was the command line again? Something like:  * remove blkindex.dat * bitcoin-qt -loadblock=blk0001.dat   	Other
1674	7787837	Move the databases out of the way then bitcoin-qt -loadblock=notblk0001.dat  (needs to be a separate file) 	Clarify
1674	7788447	"In that case I guess it it easiest to pass -datadir= a new, empty directory, then -loadblock= your current blk0001.dat into it.   Then time how long the AppInit2() call takes (or even better, change the  debug log line in LoadExternalBlockFile to state how long it took).  "	Clarify
1674	7792891	@laanwj You want me to use ``-loadblock=`` as benchmark if I understand you correctly? 	Clarify
1674	7794866	@Diapolo that's correct 	Statement
1674	7812502	"I'm currently benchmarking ... one thing, Bitcoin-Qt shows just ""Loading Wallet..."" message, which I think is missleading when doing a block-file import, no? "	nAnswer
1674	7812727	Yes it is probably missing an initmessage somewhere. 	yAnswer
1674	7814487	@laanwj Where is that part located in the code?  1st result without this patch: 08/17/12 09:59:28 Loaded 188524 blocks from external file in 5399340ms  2nd result with this patch: 08/17/12 11:49:21 Loaded 188524 blocks from external file in 5398498ms 08/17/12 13:44:26 Loaded 188524 blocks from exter	nAnswer
1674	7816511	Looks good to me. 	Statement
1674	7837946	"This currently seems to be not working with Gitian or @BitcoinPullTester builds, as the RELEASE=1 scope seems to be not taken into account (see #1673). "	Clarify
1674	7843060	"Alright, #1673 is working now, as we enabled the flags there for both RELEASE and DEBUG builds now, but what about the stack protector? We have 2 options, do the same here or ensure RELEASE=1 get's passed to qmake to ensure the block where the SPP flags reside is processed, comments? "	Other
1674	7843086	Just enable it always. It's nice to find stack overwrite bugs while debugging.  	Clarify
1674	7843135	Updated to be enabled for RELEASE and DEBUG builds. 	Reject
1674	7843147	"Ok, now the upcoming executable created by bitcoin pulltester needs to be carefully tested, to see if it doesn't crash. After all, previous experiments with the cross-compiled executable are probably invalid as the flags weren't really passed.   "	Clarify
1674	7843171	"What about 2 flags for the UI client ``-test-dep`` and ``-test-ssp``, which would use our small test codes for verifiying the feature is working. We should perhaps not extend the help message, but it would help testing the official client without the need to do an own build? "	Other
1674	7843222	"NACK putting those in the official client.   That's what the autotesters are for. Though testing these might turn out to be tricky, as you want to reproduce crash behavior and somehow find out what caused the crash.  Also, mind that BlueMatt's pulltester was never meant to enable testing ""without th"	Clarify
1674	7843268	"I can do own builds, which are not comparable with official release builds. I just thought about a possibility to verify such features in official client versions :). "	nAnswer
1674	7844488	"Is anyone able to comment, why the latest build fails (http://jenkins.bluematt.me/pull-tester/9ad1341d46851020b2342670fb73004b909fc80b/test.log)?  These are the errors I can see, but I'm not sure if or how thay relate to SSP: <pre> ERROR: mempool transaction missing input ERROR: ConnectInputs() : 39"	Clarify
1674	7845077	"I somehow think this is not a wine problem, but the same bug that got us to disable stack-protector on windows before. Looks like corruption.  Have you tested the resulting executables in windows? "	Clarify
1674	7845677	"@laanwj I would have tested the executable, but @BitcoinPullTester did not generate any bitcoin-qt.exe. "	nAnswer
1674	7846347	"Hmm, even the autotester executable is not downloadable. I guess it doesn't give you those if the test fails. "	Clarify
1674	7848001	"The mempool error is expected; some of the code in the testcases intentionally causes errors, and checks whether they do occur.  Regarding the Edit2 above: seems to only way to get this accepted by pulltester is to disable SSP specially in the pulltester builds... "	Clarify
1674	7848800	Would it be possible to compile a bitcoin-qt.exe before doing any tests? It would be nice to know if just the automatic sanity tests fail or if the exe-file is really not running under Windows (which I can only check if it get's compiled). I'm willing to do some further testing and investigation her	Clarify
1674	7849607	"I dont see why the bugs linked above would be the cause here, they effected wine version 0.9.N, the version running on jenkins is 1.2.2.  All files which were built before a failure are on the site (including test_bitcoin.exe, which is in src), and if that's failing, there is no reason bitcoind.exe "	Clarify
1674	7854876	@TheBlueMatt I'll try one more rebase with --fstack-protector (instead of -fstack-protector-all) and if that fails the problem with SSP on Windows is still there (IMHO caused by the cross-compilation somehow as my own build runs just fine).  Current bitcoin-qt_test.exe crashes for me too. 	Clarify
1674	7856753	"Now that is interesting with just -fstack-protector as flag, the @BitcoinPullTester build passes the sanity-testing, BUT when testing it with testnet it leads to missbehaviour (blkindex.dat could not be loaded or with a clean datadir it shows wallet.dat corrupted / damaged).  @gmaxwell Any idea how "	Clarify
1674	7907168	@gmaxwell might be on to something.  mingw builds against binary libs whose ABI occasionally changes due to C++ ABI changes etc. 	Clarify
1674	7908383	"Could well be. What are the gcc versions involved? What gcc version do you use Diapolo? And which one for Bitcoin Pull tester by @TheBlueMatt? I suspect TheBlueMatt uses the version included in ubuntu lucid (4.4.x), Diapolo is using a more recent one included with mingw (4.6.x?).  "	Clarify
1674	7908561	ii  mingw32                          4.2.1.dfsg-2ubuntu1                      Minimalist GNU win32 (cross) compiler ii  gcc                              4:4.5.2-1ubuntu3                         The GNU C compiler 	System
1674	7909482	"I'm currently using ``g++ (GCC) 4.7.0``, but I used -fstack-protector-all with the stock minGW version (which is 4.4), that ships with the Qt Windows SDK and SSP was working and not causing any issues.  What more can I do to further assist here?  All dependency libs used by Bitcoin-Qt are compiled w"	Clarify
1674	7910350	"@diapolo: I suppose mingw32 4.2.1 is actually using gcc 4.2.1 for the cross compile, not 4.5.2. "	nAnswer
1674	7911182	Well IMHO gcc 4.2.1 is old as the hills ... any chance to upgrade the used compiler? 	ynQuestion
1674	7912780	"The pull tester should be running the same version as gitian.  If you want to use a newer version, test gitian (or run its build script in an Ubuntu VM if you don't feel like doing a physical install for gitian itself) and get that upgraded. "	Clarify
1674	7924630	"@TheBlueMatt You are right, that @BitcoinPullTester and Gitian should use the same compiler versions. I was just asking, if someone is able to test-compile with a more current minGW version (at least 4.4) in Gitian or your setup. It drives me mad, that such a security mitigation is not working for W"	Clarify
1674	7926892	More arguments for your amusement: http://lists.cypherpunks.ca/pipermail/otr-dev/2012-August/001373.html 	Emphasis
1674	7928472	"Even on Ubuntu Precise (12.04) the mingw g++ version is still `i586-mingw32msvc-g++ (GCC) 4.2.1-sjlj (mingw32-2)`.  To use a newer cross-compiler we'd have to build it ourselves.  Looks like ioerror (tor dev) got stack-protector-all to work with mingw cross compile by adding -lssp, though I'm not su"	Clarify
1674	7930930	"Is ``-lssp`` a library we need to add? If you find some documentation about it please link that here, I didn't yet manage to find out anything about that flag.  Edit: I asked ioerror directly via Twitter, let's see... "	Clarify
1674	7932871	"@laanwj precise has two sets of mingw packages - the regular mingw is the same old version, but there is now a mingw-w64 (the 64-bit part is optional) which is gcc 4.6.3. "	Other
1674	7932892	@Diapolo I'll look into compiling it myself later today if I get a chanace. 	Clarify
1674	7932913	"@TheBlueMatt I greatly appreciate your efforts here :) (that goes to all others, who participate here). "	Clarify
1674	7944708	"I've set up a cross-compile environment with i686-w64-mingw32 (gcc version 4.6.3), outside of gitian, eventually I managed to build a static bitcoin-qt.exe that works well. With `-fstack-protector-all` enabled.  - I did have to add `windows:LIBS += -Wl,-Bstatic -static-libgcc` to bitcoin-qt.pro to s"	Clarify
1674	7947359	"@laanwj Great work and I have some comments to make to your findings.  1. I'm asking myself, how Gitian creates a static bitcoin-qt.exe as I was never able to achieve this with my local setup. The current project file has ``windows:LIBS += -Wl,-Bstatic -static-libgcc`` not included, so where is the "	Clarify
1674	7960312	"1. I don't know. As long as things work, we don't ask questions :-) As I'm not building in gitian, it might be that my setup is slightly different, making this necessary. You do need to build Qt yourself to make a static executable, the pre-packaged Qt will not do this.  2. I don't currently have ti"	Clarify
1674	7970222	"@laanwj I tried your version and it's working, no crash and no strange errors after startup, looks good. "	nAnswer
1674	7985339	"Last failure is expected, as I reverted to -fstack-protector-all. "	Statement
1674	8762416	Any reason why merging this would be a problem? 	ynQuestion
1674	8762633	"We can merge this pull after MingGW version used for Windows cross-compile is at least 4.4, preferably 4.6. The currently used version is 4.2 which has corruption problems if this is enabled!  Of course, if diaplo updates this to only affect non-windows it can be merged.   "	Clarify
1674	8762857	"I would be rather sad if I update this to be mergeable, as I think it loses attention for Windows then. I can for sure create a new pull, which does this for all OSes expect Windows and leave this as is, to keep the discussion present. "	Clarify
1674	9394262	"@laanwj Any idea, why we need this (https://github.com/bitcoin/bitcoin/blob/master/bitcoin-qt.pro#L37) in the pro-file, but such a linker flag is not needed in makefile.unix (https://github.com/bitcoin/bitcoin/blob/master/src/makefile.unix#L71) for SSP?  I tried to remove the linker flag for bitcoin"	nAnswer
1674	9980890	"@diapolo The security options need to be passed to the linker as well as compiler. Note that at the bottom of makefile.unix we pass xCXXFLAGS as well as xLDFLAGS to the linker, at different positions in the argument list. "	Clarify
1674	9995262	"I also found out that this option is needed for both (linker and compiler), as you said ;). But this just fails, because of the old GCC version or did I miss something new?  Edit: I closed this by mistake, clicked too fast :-D. "	Clarify
1674	11906476	"@laanwj So, ACK on this after #2106? "	Other
1674	11907096	"@sipa That GCC version should be safe to use, but to be sure I asked you, if you could do a little test build with this pull included :). "	Clarify
1674	11907393	@Diapolo It's included in http://bitcoin.sipa.be/builds/pre-0.8/2013-01-05-turbo-ldb17/ 	Emphasis
1674	11913454	"@sipa Works just fine, startup, IBD, create a TX... all things that couldn't even be tested with the old compiler suite :). "	Clarify
1674	12122405	"Added a -static switch (after @gmaxwell suggested that), which works for my local build. Perhaps @sipa could integrate that into the leveldb17 test builds to see if the libssp-0.dll dependency is gone.  Edit: @laanwj What about adding ``CONFIG += static`` to the project file? Seems also right :). "	Clarify
1674	12143789	Too bad @BitcoinPullTester didn't yet build a binary... 	nAnswer
1674	12175925	"@TheBlueMatt   <pre> /usr/bin/ld: cannot find -lQtTest collect2: ld returned 1 exit status make: *** [bitcoin-qt_test] Error 1 </pre>  I'm not sure if this is related to my pull, any idea? "	Other
1674	12191857	"I need a little help over here :D, my own build is not working like expected with this pull included, I have to say I'm not using a static Qt, as I never managed to set that up for Windows. The dependency for ``libssp-0.dll`` is gone, when using ``QMAKE_LFLAGS *= -static``, which was intended.  The "	Clarify
1674	12197733	Check latest build here: http://bitcoin.sipa.be/builds/pre-0.8/2013-01-13-turbo-ldb17/ 	Other
1674	12199405	"@sipa Your linked build does not contain the described error. I wonder how we can now check, that the stack-smashing protection is really still working.  I had code to trigger it, which caused a crash with a clear reference to libssp-0.dll on Windows. I wonder what it would look like with the recent"	Clarify
1674	12201978	"@Diapolo it appears to be an issue with this pull, it appears to be making the default -static instead of it being dynamic as it used to be.   "	Clarify
1674	12202617	Also: can you make this change also for the daemon builds? 	ynQuestion
1674	12207710	"@sipa Yes, I'll make that Windows only and add a commit, which also enabled this for bitcoind.  Still the open question, how can we verify what happens on Windows, when a SSP problem is caught and the app get's terminated with -static beeing active. "	Clarify
1674	12208319	@BitcoinPullTester Is the pull tester still using that ancient compiler suite or are you now using the same as @sipa in the leveldb17 pull?  I updated the pull to use -static only for Windows and extened the Windows makefiles for bitcoind to be equal feature-wise. 	Clarify
1674	12228058	"@Diapolo The issue is on the linux side, not the MinGW side, I dont believe the leveldb17 pull changes that? "	Reject
1674	12243278	"@Diapolo I included these changes in the leveldb17 branch (#2106), as it conflicted with other changes there. "	nAnswer
1674	12243519	"@sipa Can you do a testbuild for me with that code in init.cpp, to see what happens with -static keyword? It will crash, but I would like to know if there is a chance to see the process got terminated by GCCs stack protector.  I think we need to ensure we don't break it...  <pre> char SPP_buffer[102"	Clarify
1674	12243607	"@Diapolo create a branch with the code you want to test, and point me to a commit id. "	Statement
1674	12243718	"Thanks, will do this tomorrow :). Hope we get that sorted out, would be nice to have leveldb17 branch + stack protector in and working, so we can look at other things. "	Clarify
1674	18694427	@Diapolo ping? 	whQuestion
1674	18787199	@jgarzik As we are still using the same ancient GCC version I can't do anything here :-/. 	Clarify
1674	21293937	Is there any current progress in switching to a newer compiler version for our Gitian builds? 	ynQuestion
1674	25294202	Can be done after merging #3029. Although the patch has to be completely reworked for the new build system.  	Clarify
1674	25746384	This should finally be possible now thanks to our new build system :). 	Clarify
1674	25767323	Where do I find the resulting Windows binaries within http://jenkins.bluematt.me/pull-tester/807ec70b377086ac8b19cc2629b967b02c0263e4? 	whQuestion
1674	25784121	I'm working on having the pull-tester compile mingw/windows this afternoon. The pull-tester environment uses:  i586-mingw32msvc-g++ (GCC) 4.2.1-sjlj (mingw32-2)  	Clarify
1674	25786646	@gavinandresen I didn't know we haven't yet upgraded pull-tester environment. This patch should at least result in working Windows executables for official Gitian builds. 	Clarify
1674	25860679	"I re-ran the pull-tester with windows builds enabled; the qt .exe is in win32-build/src/qt/  Oddly, the pull-tester passed it, although the Qt unit tests fail to run. I guess it crashes in a way that looks like the unit tests succeeded?  "	nAnswer
1674	25867218	"@gavinandresen As long as we use this ancient ``i586-mingw32msvc-g++ (GCC) 4.2.1-sjlj (mingw32-2)`` compiler with pull-tester, we can't rely on it for creating or testing this pull I guess. Will download the qt exe and try it, it should crash or misbehave, as that was what happened before with pull-"	Clarify
1674	25867309	"Gavin, the resulting executables are crazy in size bitcoin-qt.exe has over 120MB and bitcoin.exe over 60MB. "	Statement
1674	25873434	"Also the bitcoin-qt.exe doesn't show an icon + it doesn't contain any meta-data (from bitcoin-qt-res.rc), wherars bitcoind.exe DOES contain that meta-data (from bitcoind-res.rc). "	nAnswer
1674	26328684	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4c29cad3ceeb462b08e59f0ad83f656fc0d567a4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
1674	26687889	@Diapolo : re executable size: they are not stripped (contain debugging symbols).  I assume they crash because pull-tester is using an ancient mingw?  	Clarify
1674	26697226	"@gavinandresen Yes, they crash because of the ancient mingw version, so this is still pending on a pulltester mingw update.   "	Statement
1663	7592929	"If I use bitcoin-0.5.4rc3-linux, wallet upgrade works as expected..none of the above errors. Prompt occurs about wallet needing to be upgraded, and client restarts. "	Statement
1663	7602614	sometimes also fails with...   terminate called after throwing an instance of 'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >'   what():  boost::lock_error Aborted (core dumped)  Some git bisect results...  git bisect start v0.5.6 v0.5.4rc3     	Clarify
1663	7603578	I went through this bisect twice and got identical results. 	Clarify
1663	7628022	"Tested with a few more old wallet files, and a few more bitcoin versions. Crashing is consistent per wallet/app pair, crash or success result fails depending on wallet file used, and bitcoin version used. "	Clarify
1663	7641107	"I got this for the first time after emptying my wallet to balance 0 (sendtoaddress) and attempting to stop bitcoind.  ```     ""version"" : 60300,     ""protocolversion"" : 60001,     ""walletversion"" : 60000,     ""balance"" : 0.00000000, ```  ``` $ bitcoind stop bitcoin server stopping $ terminate called"	Other
1663	7650675	that correlates...all the old wallets I am testing with have zaro balance 	Statement
1662	7589483	"An update, which I think is related.  gettransactions accountName returns only 'receive' transactions. To get 'send' transactions one must use the default ' ' (no name) account. This also includes 'generate' transactions that actually go to a specific account. "	nAnswer
1662	7593285	"By default, all sent transactions take their credit from the """" account. If you want them to take their balance from another account, use the sendfrom RPC command.  Note that accounts have almost nothing to do with addresses or the actual coin selection. They are just virtual balances kept, for exam"	Clarify
1662	7594371	"OK, I can agree with logic that gettransactions accName return only transactions explicitly bound, by client, to that account, as accounts are virtual. But still getbalance accName does not return actual balance. Or in better wording: The default setting of the client (sends by default from """" acc) "	Clarify
1662	7594417	"Then we need better documentation I guess. Get the balance of """" "	Clarify
1662	8757577	"I agree that a better separation / isolation of the ""account"" system would be nice. It is confusing and error-prone that the command set used for the entire wallet, and that for the individual accounts overlaps.  I also think that the account system can be deprecated completely when we have full mul"	Clarify
1653	7515473	"For a more concrete use-case, I'd like to use this feature because the #bitcoin-otc WOT supports bitcoin address authentication now. I created an address for signatures, but would prefer not to use it as inputs by default, because that would allow people to correlate my WOT identity with actual tran"	Clarify
1653	7517143	"Agreed.   Though watching-only wallets don't need the private-key at all, so I think that's a distinct feature.  "	Statement
1653	11556174	I've begun working on a watching-only wallet feature. Please take a look. Pull #2117  	Clarify
1647	7590124	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/27b24244c4d1f97690d5908e3412ac5306920281 for binaries and test log. "	nAnswer
1647	9963221	"Gavin, any thoughts on this? "	ynQuestion
1647	9983542	"@mikehearn :  needs unit tests, in my humble opinion. It is a very good candidate for ""needs 100% code coverage from tests"", because transaction selection is such a key piece of the Bitcoin infrastructure.  Also needs thorough code review, with an eye towards ""Could I construct a series of transacti"	Clarify
1647	9985286	"@gavinandresen What kind of unit tests would you like for this? I already dealt with the O(N^2) problem a while back on Eligius, though of course more reviews are always welcome. "	Clarify
1647	9985591	"My suggestion would be start with a bunch of ""random"" mempools and them making sure that the selections it makes are valid (no mistaken dependencies) and actually get the most fees possible (e.g. by externally precomputing the correct answers).  I'd also include cases designed to trigger complexity "	Clarify
1647	9995865	"Thanks @gmaxwell , those are exactly the types of tests I think this needs!  "	Emphasis
1647	10315914	"Update: It seems since rebasing this, new performance problems have cropped up. :( "	Other
1647	10684223	"Update: False alarm, I debugged the performance problem and it was a result of a poorly thought-out merge of this with #1648 (which elevated priority of transactions that benefit the miner directly). This seems to still perform well without that change (or with it done once). "	Clarify
1647	10772536	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/56c7ea61d70d4a6699f1a53b9d03eb803a9c58c7 for binaries and test log. "	nAnswer
1647	12172359	Fixed a bug triggered by today's onslaught of !IsFinal transactions... 	Clarify
1647	26687849	"Rebase needed.  Although I think this needs a re-think/rewrite:  When we have a memory-limited mempool (needed for anti-DoS), we'll run into a chicken-and-egg problem:  parent transaction may be evicted from mempool, child will get stuck (and eventually evicted) from the orphan pool. Seems to me wha"	Clarify
1647	27047126	"Rebased. I agree it isn't perfect, but this is 1) better than nothing, and 2) well-tested. If anyone wants to put the effort into a rewrite, I'd be glad to defer and give it testing.. but I think everyone's busy enough already. "	Clarify
1647	27049061	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/43fccb09cc43c6ce4c76791d7b7f297bf0ed6c1c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
1637	7399169	"This is indeed a serious issue if you plan to use both wallet-managed transactions and raw transactions.  Before something like you suggest here is implemented, I suppose the raw transaction interface needs a warning ""do not combine with high-level wallet functions"". "	Clarify
1625	7440803	Just as a remainder: Perhaps ban such misbehaving nodes! 	Emphasis
1625	7998032	@sipa Do you think this does need further checks or something? If no just close this issue. 	Clarify
1583	6916444	Code seems ACK-worthy.  Use cases?  	ynQuestion
1583	6916602	Various people (@gmaxwell and @gavinandresen included) expressed interest in this - one example was to allow captcha-solving as an alternative to fees. 	Clarify
1583	7678848	"Re: Ignoring minfee: This call is by txid. If you don't like the fee, don't call it on the transaction.  Ignoring minfee is the right thing to do here.  Though this should also have a fee delta, because we now prioritize above minfee txn by fee per KB. If someone is paying you behind the scenes to m"	Other
1583	7683936	"Updated with suggestions. Also, is it intentional that GetMinFee with GMF_BLOCK is *never* used anymore? "	whQuestion
1583	7686779	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2c63ef9156288b3cc72668fdb6ce44ec3a440076 for binaries and test log. "	nAnswer
1583	7696109	@luke-jr Which commit removed the call to GetMinFee with GMF_BLOCK? 	whQuestion
1583	7696169	@sipa c555400ca134991e39d5e3a565fcd2215abe56f6  	System
1583	7967960	Needs a rebase 	Statement
1583	10378973	rebased 	Statement
1583	16275637	"Ok, finally redid this using a map.  @gavinandresen , look good? "	Other
1583	18694252	No objection...  though I still prioritize with the 'z' :)  Who the heck uses an 's'?  :) 	nAnswer
1583	23022296	It occurs to me that the map should be cleaned at some point. Any opinions on when to remove a txid from it? 	ynQuestion
1583	23027788	Check it when removing transactions from the mempool? 	whQuestion
1583	23034706	Probably don't want to lose priority adjustments if your block gets knocked off the main chain... 	Clarify
1583	23118644	@luke-jr Set a expiry height after they get knocked off the main chain and remove them from the map after n blocks? If n=100 is reached we have bigger problems... 	Clarify
1583	26687769	Rebase needed. 	Statement
1583	27047527	Rebased. For purging from the map.. how about when we see a block confirm a transaction using it as an input? 	whQuestion
1583	27049542	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b01f11bd58a5114e6cf00423e66f4f3c2d5667b3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
1535	6668101	Based on the reports on IRC we clearly have some cases where txn are get missed but I've not seen any easy way to pin them down. Assuming the issues are shutdown related. It might be useful to always rescan the last couple block before the wallets claimed height. 	Clarify
1535	6669186	I was hoping the details in this report would make finding and fixing the real cause easier :) 	Clarify
1505	6518036	with carets this time?  upgradewallet=\<0..100k+>  terminate called after throwing an instance of 'boost::exception_detail::clone_impl\<boost::exception_detail::error_info_injector\<boost::program_options::invalid_syntax> >'  	Other
1505	6520755	Seems the argument parsing routine doesn't like what you fed to it IMHO. 	Statement
1505	6520800	"> Seems the argument parsing routine doesn't like what you fed to it IMHO.  Obviously. Though it should not crash, crashing is poor form. "	Reject
1505	6520823	"Indeed ... makes me wonder, if only ``upgradewallet`` makes the client crash or also other stuff. This needs to be looked into.  I tried to reproduce with a build based on current master using ``bitcoin-qt.exe -upgradewallet`` -> no crash and ``bitcoin-qt.exe -upgradewallet=FOO`` -> no crash. Does i"	Clarify
1505	6698812	"Tracking stable 0.6.x at that time, not master. And bitcoind on FreeBSD, not qt. There are three ways to say upgradewallet... Nothing after the 't', only '=' after, and '=n' after. n could perhaps be numeric, alpha, printable, etc. Placing the exact string 'upgradewallet' in the conf crashed for sur"	Clarify
1505	6707286	"I cant reproduce on current master, does it depend on having a wallet of a specific version, or could it be a stable-only issue? "	Clarify
1505	6750029	"v0.6.3, new wallet on current blockchain, 'upgradewallet' in bitcoin.conf, coredump. freebsd 8.x boost149 db4830. that's all i know.  EXCEPTION: N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_15program_options14invalid_syntaxEEEEE bitcoin in AppInit() terminate called after throw"	Other
1505	6787813	"The real problem is we're digging down into boost internals to parse the config file (the documented, supported config-file-parsing API doesn't do exactly what we need).  Easiest fix will be to catch the exception and Do the Right Thing. "	Clarify
1473	6371214	Then try to make Bluematt's stuff compatible (#1453) with Linux. Shouldn't be too hard.  	Clarify
1428	6161085	"Because the first transaction seen by most miners is Trx B, they will reject the block from Evil miner for being invalid and eventually the blockchain will confirm Trx B.  I stopped reading here.  This isn't how bitcoin works. Blocks always superseed hearing transactions not in blocks.  Also I sus"	Clarify
1428	6168673	"> Blocks always superseed hearing transactions not in blocks.  Yup, after re-reading vector76's post I see where I goofed on the details.  But the problem is still there.  So now Evil miner holds off on broadcasting his block which includes Trx A until he learns that a block at the same height has b"	Clarify
1401	6028029	"I observed this, too ... I comment the build-stuff out to get this working, but a real fix would be a great thing! "	Clarify
1401	6031209	"Strange, that part of the file is inside a !windows block. I wonder why it gets evaluated. "	yAnswer
1401	6031225	"@sipa Yeah that's strange, but it won't compile with that part enabled ... "	Reject
1401	6032679	@Diapolo Have you got it compiling on Windows recently? I'm getting:  e:/nokiaqtsdk/mingw/bin/../lib/gcc/mingw32/4.4.0/../../../libcrypto.a(bss_sock.o):bss_sock.c:(.text+0x13f): undefined reference to `shutdown@8'  e:/nokiaqtsdk/mingw/bin/../lib/gcc/mingw32/4.4.0/../../../libcrypto.a(bss_sock.o):bss	Clarify
1401	6033439	"Yes I'm compiling fine on Windows but had to change a few things in the pro file.  1. I use Boost 1.49 and compiled the libs. 2. I exclude support for QR-Codes as I could't figure out how to compile that. 3. I exclude the ""regenerate src/build.h"" part 4. I had to re-order the used libs and add -lole"	Clarify
1401	6499968	put ws2_32 and shlwapi libraries after ssl and crypto 	Statement
1401	6500666	"@mhredmond21 It would be good to know what is the best / safest ordering to add libs in the .pro file. I got it working for myself and currently have:  <pre> windows:LIBS += -lshlwapi LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH"	Other
1401	6533633	"I finally got my bitcoin-qt working. Thanks Diapolo for your hints.  instructions to build bitcoin-qt on windows --  Get the QT Windows SDK  get master branch from github (I used EGit that comes with eclipse)  http://download.visucore.com/bitcoin/qtgui_deps_1.zip << download this, but the boost pack"	Clarify
1401	6533662	@mhredmond21 Well I don't need to add local paths like you do. Seems like some paths are missing in the %PATH% environment variable or I have the libs and headers in the right place. But I'm glad you got it working. 	Clarify
1401	6533904	I didn't even think to try it like that. I was mainly focused on trying to replicate what worked for bitcoind build (makefile.mingw). I appreciate all your tips. 	Clarify
1401	6534061	Everyone who is able to compile on Windows is of great help :). Are you planning to contribute via pulls / patches? 	Clarify
1401	6535663	I plan to write patches but I am unsure if anybody will pull them. ;)  	Clarify
1401	7276674	also -lwsock32 is missing 	Statement
1401	7277110	No it's not ``-lws2_32`` or what compilation errors do you get? 	Reject
1401	7277181	 http://penpaste.com/6kyv9f4 	System
1401	7277236	also now I when I put  USE_UPNP=-  qmake.exe C:\bitcoin-bitcoin-v0.6.1-621-g12e5881\bitcoin-bitcoin-12e5881\bitcoin-qt.pro -r -spec win32-g++ USE_UPNP=-  it does not work with me.. what is the exact format? 	Clarify
1401	7277297	"According to MS ``GetAcceptExSockaddrs()`` requires ``Mswsock``, see http://msdn.microsoft.com/en-us/library/windows/desktop/ms738516%28v=vs.85%29.aspx.  Edit: Use ``""USE_UPNP=-""`` to disable UPNP support. "	Clarify
1401	7277565	I got this error when I tried to run my bitcoin-qt.exe .. mingw10.dll is missing.. !! what to do? :(((( 	Statement
1401	7277648	"Seems your PATH environment variable does not include the path to MinGW. If you have MinGW installed in ``D:\MinGW``, you need to include ``D:\MinGW\bin`` in PATH. That is because on Windows we get no statically linked bitcoin-qt binary and so it needs mingw10.dll and some other libs. "	Reject
1401	7278406	I added c:\MinGW\bin to the path and it does not work   	nAnswer
1401	7278538	"Can you confirm that mingw10.dll is in ``C:\MinGW\bin``? Btw. I only have ``mingwm10.dll`` (m added) in my bin folder, but perhaps you had a typo or that is because of my MinGW version. Is the error message the same (missing mingw10.dll)? "	Clarify
1401	7278666	I had it in minwg\bin folder both that for qt creator (4.7) and the stand-alone one which I installed I dunno which version is it 	Statement
1401	7279062	"Without more detailed information I'm unable to help any further beyond this, sorry. "	nAnswer
1401	7282291	I did this: 1. copied the bitcoin-qt.exe to the bin directory of mingw which is inside the Qtsdk (I used qt creator mingw to compile ) 2. executed the bitcoin it gave me the following error: the procedure point _ZNK7QLocale17nativeCountryNameEv could not be located in the dynamic link library QtCore	nAnswer
1401	7282577	yes its typo mingwm10.dll :) .. but what to do now?  	whQuestion
1401	7283202	C:\QtSDK\Desktop\Qt\4.8.0\mingw\bin I copied bitcoin there but  then no output and no errors!! 	nAnswer
1401	7290066	"Alright, I guess I know what the problem is.  1. Uninstall or remove the seperate MinGW installation, you have the Qt SDK installed, right? This has an compatible MinGW 4.4 integrated.  2. Now you have to add not only MinGW\bin to your PATH variable, but also %QTDIR%\lib and %QTDIR%\bin, where QTDIR"	Clarify
1401	7290793	mingw version is 4.4 	Statement
1401	7291065	Come on ... try to read ... that IS what I said above. Current Qt SDK has MinGW 4.4... 	Clarify
1401	7291271	OK I did this : 1. add to the path the following addresses  C:\QtSDK\mingw\lib;C:\QtSDK\QtCreator\bin;C:\QtSDK\QtCreator\lib 2. compiled again for 4.8 qt mingw4.4 as u said  but still the problem gives me error can not fin mingwm10.dll and when I copy the .exe file to C:\QtSDK\Desktop\Qt\4.8.0\mingw	Clarify
1401	7291645	"Ok, this is my last try!  1. Not ``C:\QtSDK\mingw\lib`` but ``C:\QtSDK\mingw\bin`` 2. I'm sure the QTDIR path is wrong ... in QTDIR\bin there is e.g. a assistant.exe and in QTDIR\lib for example a QtDeclarative4.dll. Verify the paths please! 3. When bitcoin-qt.exe gives no error / warning message it"	nAnswer
1401	7302513	"C:\QtSDK\QtCreator\bin containsthe dll you mentioned, I had those paths added to my PATH variable: C:\QtSDK\mingw\bin;C:\QtSDK\QtCreator\bin;C:\QtSDK\QtCreator\lib and gor the same problem : missing mingwm10.dll.  and if I copied the file to C:\QtSDK\Desktop\Qt\4.8.0\mingw\bin again silent execution"	Clarify
1401	7303699	"I AM sure that C:\QtSDK\QtCreator\bin is NOT correct, that is all I can say. Take another look if the mentioned files or paths are there twice and you chose the wrong one.  Please download and use https://qt.nokia.com/downloads/sdk-windows-cpp and perhaps try again with that. "	Clarify
1401	7316739	I fixed the bitcoin was partialy launched (the logo only) then crashed. I have this in the debug log: =========== Bitcoin version v0.6.99.0-g12e5881-beta ($Format:%cD) Startup time: 07/27/12 21:27:25 Default data directory C:\Users\ealkawasmi\AppData\Roaming\Bitcoin Used data directory C:\Users\ealk	Clarify
1401	7318611	I found the solution in this link in another issue: https://github.com/bitcoin/bitcoin/issues/809 I am soooooooooooooooo happy now I can sleep . The real work will start . 	Clarify
1401	7331708	I have this issue today teh debug version of bitcoin works fine and every thing is ok. BUT: the release version doesn't work and gives this error!!  The procedure entry point _Z21qRegisterResourcesDataiPKhS0_S0_ could not be locatedin dynamic link library QtCore4.dll. what to do? 	Clarify
1401	7331913	I still think you are using wrong paths in the PATH variable... 	Clarify
1401	7332059	but the debug version works fine with me .. why the release not? I re-installed QTSDK only version 4.8.1 to avoid version clashes and with Mingw 4.4 only for desktop development only  I searched my laptop and found many other qtcor4.dll but for other applications like nokia suit and mendely desktop 	Clarify
1401	7333831	"I have currently not installed the QtSDK, but AFAIK it won't hurt to add all of them ... important is that the executable finds it's needed libs. Btw. did you specify ""RELEASE=1"" for qmake? "	Reject
1401	8758494	"There's another thing that currently prevent the windows build in a 'bare' Qt SDK (current version -  1.2.1) from working: packaged mingw binutils don't support `-Wl,--dynamicbase -Wl,--nxcompat`  I really wish they would release a new Qt Sdk with mingw 4.6.x, that'd fix a lot of these issues and ma"	Clarify
1401	8762813	You mean the Qt SDK integrated MinGW 4.4 does not support DEP / ASLR switches? I'm rather sure I was able to use them on Windows with the default SDK.  Btw. current Qt 4.8.3 seems to cause some problems on Windows too: https://bugreports.qt-project.org/browse/QTBUG-27244 	Clarify
1401	8762899	"When I last tried, it was failing on some security-related switches. I'm not sure which ones, anymore.   "	nAnswer
1401	15634251	Anyone still planning to update the windows build instructions? @Diapolo? 	ynQuestion
1401	16708893	"Yes! I plan to. Among other things, first, though, is getting the daemon bitcoind.exe to work correctly on windows! Then bitcoin-qt.exe. Then a windows .dsw, .sln or other VC++ Express freebie IDE build. I am a fan of VC++ 6.0 (how's that for old!) and VC++ Express 2005, which seems to have a links "	Clarify
1279	5674581	"Remote GUIs already exist: https://en.bitcoin.it/wiki/Spesmilo  This is already on the ""would be nice"" list but has very low priority. It could be set up in a similar way as Quassel, for which a separate GUI, seperate server, or combined server-GUI can be built.  "	Clarify
1242	5813828	"Same problem here. It would *usually* show up in the system tray and I would have a menu -- until I encrypted my wallet. Now there's no menu on the top bar of Unity, and nowit doesn't appear either in the system tray or in the side bar menu.  Also (different issue, but I'll stick it in this comment "	Clarify
1242	5945081	"I have the same problem: no icon in the top panel (system tray?) on Linux Mint, Gnome Desktop. Bitcoin-qt is running, though (can see it in process list and it's updating the log).  The only way I know to get the Bitcon-qt window is to stop the process and restart it.  This appeared just recently, s"	nAnswer
1242	5945648	"Could you guys try with a clean data-dir and see if there is anything special in the debug.log. Seems to be a weird issue, as our GUI-master is on Ubuntu, too I guess... "	Clarify
1242	5945751	"If clean data-dir, then the problem disappears. debug.log After Update  http://clck.ru/d/bq5rKXYN19Ag8 After Clean    http://clck.ru/d/RCZsHvTt19AgA "	Other
1242	5946739	"Which directory is data-dir?  I tried cleaning (deleting) ~/.bitcoin but bitcoin wouldn't start after that. Then I had to restore the directory from an old backup (from 3 weeks ago, that is before the problem and probably before the 0.6.2 upgrade). The problem is still there. "	Clarify
1242	5946748	I described my problem in a bit more detail here: http://bitcoin.stackexchange.com/questions/3832/bitcoin-qt-icon-not-showing-in-top-edge-panel-linux-mint 	Emphasis
1242	6717204	This is also a problem in 0.6.3 	Statement
1242	6718459	@rebroad Is this true with a clean data-dir? What are your observations with current Git master? 	whQuestion
1242	6733089	"@Diapolo This is also a problem with current git master also.  If I delete ~/.bitcoin then the tray icon does appear, but a few seconds after the main window appears (once blocks start downloading). "	Clarify
1242	6733210	"Can you post a screenshot that shows the missing menu and tray-icon? Perhaps @laanwj Should take a look at this, I guess he is also using Linux, while I'm on Windows. Hard to debug, as on Windows this is not an issue. "	Clarify
1242	6733709	"@Diapolo I don't really understand the reason for the screenshot request, but can provide one if you tell me where to upload it to. "	Reject
1242	6733907	"I don't want to see the ""no tray-icon"" ^^, but want to ensure which menu is missing, as I was not sure about that one. Just use http://tinypic.com for such a thing. "	nAnswer
1242	6747841	@Diapolo the only thing that shows is the icon on far left for restoring windows.there are no menus nor a tray icon. 	Reject
1242	7843000	"I'm running on 12.04 and though I don't have this specific issue, I had another issue with Unity,  with minimized windows that refused to come back: https://bugs.launchpad.net/unity/+bug/1001498   . But they didn't take it serious upstream.  I find it strange that Unity manages to mess up a well-beh"	Clarify
1242	8133579	"I'm also having this problem, using the Bitcoin from the bitcoin.org-recommended PPA on Ubuntu 12.04. I had the tray icon for a little bit when I started with a clean ~/.bitcoin, but then I copied over my wallet.dat and it started downloading blocks, and today my menu and tray icon are gone.  Is the"	Clarify
1242	8136908	"@interfect can you try building from source, and see whether it still happens?  "	nAnswer
1242	8137202	doc/readme-qt.rst  	Statement
1242	8137358	Also there's the packages: appmenu-qt sni-qt  Those provide plugins for qt to export the appmenu and tray icon respectively to unity. Maybe try installing/uninstalling/upgrading them. 	Clarify
1242	8637878	"I tried to remove package `appmenu-qt`, now I see the menu, but not the tray icon.  I also noticed that when I try to execute bitcoin-qt again, the program throw me an error because is already running, while this error message is shown, appears the tray icon, when I close the error message box, the "	Clarify
1242	8641515	"It would be wonderful if someone knowledgeable in the intricacies of Unity could look at this. I cannot help you further here, and my previous tries to get help from the Unity team weren't exactly succesful. Also I still cannot reproduce the problem.  <b>Can you try out the .tar.gz blob and deinstal"	Clarify
1242	8642897	"I *suspect* it has something to do with Unity regarding the first window opened somehow as main window. In the case of bitcoin this is the splash screen. Getting rid of the splash screen is on the TODO list (#1028), so if that's the case the problem will solve itself eventually. "	Clarify
1242	15369307	"This happens also to me in Ubuntu 12.10 with Bitcoin version v0.8.1.0-g34d62a8-beta.  There's something curious about it: when I launch it for the first time after a reboot, the splash screen lasts for longer, and both menus and tray icon are hidden after application launch. If I close the applicati"	Clarify
1242	15670546	"Interesting, so a time limit may be part of the picture. Though this is confusing, and would make this impossible to fix 100% in cases as linux is not a hard realtime OS. And bitcoin certainly isn't the only program that can be slow to start. I wonder if there is a way to hold off the time limit.  "	Clarify
1242	17064189	"I have the same problem with ubuntu 12.10, and bitcoin-qt 0.8.1-quantal1, the incon only appears sometimes but generally it doesnt appears. "	nAnswer
1242	17064536	Perhaps fixed already with current master or fixed with #2530. 	Clarify
1242	17064692	"I've been trying Bitcoin-QT since upgrade to Ubuntu 13.04, and it has been working consistently. I get the tray icon and global menu every time I open the application. "	Clarify
1242	17065845	@interfect I'm sorry AFAIK Unity / Linux doesn't use Mac stuff ^^. 	Clarify
1242	17077401	"I have the same problem in Ubuntu 12.10 without Unity (running a GNOME Panel/Classic desktop). The problem exists with bitcoin-qt and also litecoin-qt, but oddly enough feathercoin-qt works fine (and I haven't tried any other altcoin clients based on bitcoin-qt's code).  edit: I only mention the oth"	Clarify
1242	18075836	"This issue is so strange, I'm on 12.04.02/64 Unity. When I start ""bitcoin-qt"" there is no menu or systray, But when I start ""bitcoin-qt -testnet"" there is both menu and systray. Weird. "	nAnswer
1242	18174554	"I confirm that on Ubuntu 13.04 even though appindicator and global menu doesnt work, the HUD works if you press ALT, and if you exit through hud and rerun the app, it starts much faster and the problem dissapears. The appindicator and global menu show up and everything is ok. "	Clarify
1242	18191070	@themighty1 Can you try with #2672? What Qt version is Bitcoin-Qt using? 	whQuestion
1242	18193785	"@Diapolo. Using latest stable bitcoin-qt, with Qt 4.8.1 Sorry, I cant apply the patch. I switched to gnome since my last post and have not looked back. "	Clarify
1231	5599793	"You are misunderstanding what that code does.  Can you give a series of RPC commands that shows the bug?  setaccount associates a bitcoin address with an account, it we removed the ""Detect when changing..."" code as you suggest then you get situations where one address is associated with TWO accounts"	Clarify
1231	5642077	"Here's series of actions to demonstrate the problem:  1. Create address: http://vvcap.net/db/ig2jMMXnX1MTPybtAFM7.htp 2. Now the customer paid for the item, and we want to rename account: http://vvcap.net/db/FKIoM_-Rvt4LXqBcp9a1.htp 3. We get this: http://vvcap.net/db/go58vwdQsVlfVXqxz2N3.htp . This"	Clarify
1231	5642541	"  Okay, I reproduced the problem. I was apparently renaming outgoing address, when bug is affecting receiving address. Here's how it goes:  1. Start position: http://vvcap.net/db/MUThlEUsdjSUl1uhdqaW.htp 2. Rename using daemon: http://vvcap.net/db/vWiLAQcDBlZc-recHldI.htp 3. Get this: http://vvcap.n"	Clarify
1231	5990161	"@msva You are right. What I was trying to say is that expected behavior is that account gets renamed and nothing else. Instead of that account gets renamed AND an old label gets relocated. The code that does it is located in RPC, at function `Value setaccount(const Array& params, bool fHelp)`, so it"	Clarify
1231	6305302	"@msva, that bug was related to the ""default address"" (vchDefault). Indeed, the default address is no longer used or updated when QT_GUI is set.  The problem here is that the ""account system"" is slightly different from the UI labels. It doesn't allow removing all addresses from an account, which is i"	Clarify
1213	5542094	LOCK inside OutputDebugStringF or any of the routines it calls is a big no-no...  	Clarify
1213	5542231	"GetDataDir should not lock, except the first time it is called "	nAnswer
1213	5542284	"You could reasonably just remove the lock, GetDataDir is called a few times before any other threads are started, so its pretty safe, but I probably missed an edge case or two. "	Clarify
1213	5542298	Or make sure it's called once beforehand? 	ynQuestion
1213	5542438	Simple enough either way. 	Clarify
1213	15634199	Is this still the case? 	ynQuestion
1185	5476696	You can make comments inside the actual code. I'm not sure which part you're talking about now. 	Clarify
1185	5488611	"ah.. good idea... using github? do I need to find the commit that added the code first?  (by the way, my bitcoin is still reporting 0.6.0rc4, even though I've merged with the latest master - any idea how to get it to use the correct tag please? - sorry for asking in here - no forum access) "	Clarify
1185	5490095	That's how you can link (this is line 2 in main.cpp from current master): https://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L2 	Clarify
1185	5517669	"@sipa, the commit in question that introduced the code (which I maintain doesn't do what it says it does) is this: https://github.com/bitcoin/bitcoin/commit/0aa89c08ff271f34271e6fd2eb1ef04afdbcab3a "	Emphasis
1168	5421999	I'd vote to fix this by implementing per-transaction comments.  	Clarify
1168	5422498	"If you use a address per transaction, as recommended, they are per-address.  Per-transaction comments would be a useful addition, though we have to be careful that people don't confuse them for messages that are sent with transactions... and then being surprised that the recipient doesn't see the co"	Clarify
1168	5429183	"I think transaction-tied signed messages would be handy. Let people add them in addition to recipients, and then display the signatures out-of-band after sent (and let them view them again later by double-clicking the txn). "	Clarify
1164	5409105	"As you have opened quite a few issues over the last days, could you please give more details. Used version, OS and perhaps the difference you found out ... what is displayed and what was your sum? Thanks! "	Clarify
1164	5410699	"does getbalance also report the incorrect balance? what about getbalance ""*""? Or is it only limited to the GUI? "	whQuestion
1164	5420452	"Now running 0.6.1 RC1 and still reporting incorrect balance in the GUI, but now against unconfirmed rather than balance. However, I'm not up to date on the chain, so will update this when I am. "	Clarify
1164	5710416	"Have you checked, does this still happen when you are up to date?  "	ynQuestion
1164	6886238	"Happens to me with Bitcoin 0.6.3.  I switched the wallet file a few times, then ran bitcoin --rescan (old version of Bitcoin) and bitcoin-qt --rescan (Bitcoin 0.6.3).  Only now I realized the correct switch is -rescan and not --rescan. Still, I don't understand why the balance displayed should be lo"	Clarify
1164	8213892	"This is still happening with 0.7.0. It causing bitcoins I've sent to not be confirmed. The block has caught up to 12 days beyond the transactions that sent the money, and they're still showing as unconfirmed. It should be able to determine that it tried using spent coins, and invalidate them instead"	Clarify
1164	8217373	"@gmaxwell I think it's one cause. i.e. probably caused by running the same wallet on multiple systems, but more than one symptom as a result. Are issues linked to number of causes or number of symptoms? I'd like to think the former, and if so, it's therefore only one issue, certainly one solution, I"	Clarify
1164	8218140	"It would be disastrous for a rescan to remove transactions that the wallet knows about.  That particular proposal is a non-starter. (identifying conflicted txn and providing a facility to remove them would be great, but it must never erase accounting records on its own).  Though I can't think of how"	Clarify
1164	15378340	"I would like to help troubleshoot this issue. I still have the wallet.dat file which shows the incorrect balance - the balance is too high and totals more than the total of all the transactions. Regardless of how I created this problem, surely the balances should equate to the total of the transacti"	Clarify
1162	5404438	"Yes, this is part of multiple wallet support. Some wallets could be 'read-only'.   "	yAnswer
1162	5724664	Which is more likely to occur first? Multiple wallet support or splitting the wallet+gui from the blockchain+net? 	whQuestion
1162	5724920	"Multiple wallet support is around the corner. The blocker is getting a new append only non-bdb wallet format tested and integrated, so that wallets can be in external files.  Splitting is more of a long term goal, not as urgent as there are already other projects that have done that such as Electrum"	nAnswer
1153	7613383	I'm observing the same behavior. (In 0.6.3.) 	Statement
1137	5268406	It should be the case that Qt leaves the default buttons such as Abort and Cancel to the operating system. That's why they are default buttons. If your OS is in a certain language the buttons should too...   	Statement
1137	5268410	That is not true ;) ... I get english on a german Windows. 	Statement
1137	5268421	See: http://i39.tinypic.com/2ujovn7.png 	Bye
1137	5268442	"Maybe we're not including or loading the Qt built-in translation files (qt_XX.ts) for some reason (on windows, on Linux it's fine afaik). Maybe they're not included in the static link of Qt... dunno  "	Clarify
1137	5268477	"I tested with the last official release and with my internal build, both show that behaviour. "	Clarify
1137	5431807	"I now know where the problem is, but have to try tomorrow on how to fix it. Seems like a problem with the path to the default qt translation files. "	Clarify
1137	5447400	"It's unlikely that #1175 fixes this, but for reference... "	Statement
1137	6609116	"I confirm this is still present with official 0.6.3. My local build, which is based on Qt 4.8.1 does not suffer from this btw. "	nAnswer
1137	6834612	"@laanwj I found out something interesting, after upgrading my local setup to a self-compiled Qt 4.8.2 the StandardButtons on message boxes were untranslated again (remember, this did not happen with official Qt 4.8.1).  After a little investigation I found out that in ``%QTDIR%\translations`` there "	Clarify
1137	8998377	"Remainder for myself to check, if #1864 fixes this! Edit: Nope... "	Emphasis
1137	8998648	"There are only 2 reasons left I can think of, why bitcoin-qt shows some Qt default-texts as english.  1. ``%QTDIR%\translations`` is missing some .qm files (I'm not sure how to check this btw.) 2. Problem with old GCC version in Gitian  Perhaps it's a problem with the pull-tester only? @TheBlueMatt "	Clarify
1137	12431521	"@TheBlueMatt I'll ask again, as this bug is still presend in latest builds. Could you (or any other dev) give me access to a qt-win32-4.8.3-gitian-r1.zip file created by Gitian?  Option 2, as written above would be to check if in %QTDIR%/translations the .qm files are generated after calling make in"	Other
1073	5093716	"Tagged this as a low-priority bug, because it fixes itself and using importprivkey via the RPC interface is a geek-only, seldom-used feature. "	nAnswer
1057	5010172	Probably. It is the only place in the source where rand() is used.  	Statement
1057	5010188	"I see it in commented code in main.cpp too:          //while (rand() % 3 == 0)         //    mapNext[pindex->pprev].push_back(pindex);  I wonder if perhaps it's deliberate, because the wallet rand() code is in a tight loop and we don't want to exhaust our entropy source. "	Clarify
1057	5021913	"@gmaxwell also, rand() is not thread-safe according to its man page, using rand_r(*seed) is recommended in that case is as it has explicit state.   If there is no privacy concern here, a simple solution would be using rand_r with the state (just one int) generated at the beginning of the function wi"	nAnswer
1044	4988849	"I didn't look in the code, but if a case does not match the detection routine, why should there be an error? If the function searches for -connect= to do sth. it's not said it should throw an error if it only gets -connect. "	Clarify
1044	4991036	"Because it frustrates the shit out of users if they pass arguments and they somehow, without any clue, don't work.  Edit: and yes, it is a low-priority issue, but I do want to put it here just in case.  "	nAnswer
1044	4994595	"I understand the intention, so you propose a standard for all parameters / switches an not only certain ones, right?  i.e.:  supplied ""-connect IP"" -> parameter incomplete  supplied ""-conne="" -> parameter not recognized "	Clarify
1044	4994647	"Yep, something like that. I don't think the verification has to go very deep, just some sanity check.  my biggest gripe with the above really was that the rpcport argument is ignored, because the connect part is wrong, without any indication of either.   "	Clarify
1040	4968925	"This is one of the things that will be eternally out of date, and as long as its under contrib/debian it is not up to us to maintain it.  Debian probably has a newer one though, see: https://launchpad.net/debian/+source/bitcoin/+changelog *  Extend Files section for debian-provided manpages to cover"	Clarify
1034	4958648	Please see https://en.bitcoin.it/wiki/Myths#Point_of_sale_with_bitcoins_isn.27t_possible_because_of_the_10_minute_wait_for_confirmation for a few alternatives that solve the 10-minute wait problem without adding more network traffic.  I personally like 2 because it would work really well and require	Clarify
1034	4958907	"What stops an attacker with a few hundred thousand spent outpoints (and corresponding private keys so they can create new, valid double-spends) from sending out an endless series of bogus dspend messages to try to clog up the network?  "	Other
1034	4959147	"This is the implementation of part 2 of that link, Satoshi's idea, as a default feature.  It would not take much bandwidth. It would probably *save* a lot of bandwidth vs having a lot of extra listening nodes for each merchant or independent service that is trying to listen. Functionally, it would b"	Clarify
1034	4959213	"No its not, type 2 doesnt add anything to the protocol.  Type 2 on that link is simply a node listening for txes which conflict from its peers, not actually broadcasting if it finds one. My point isnt that the solution necessarily creates too much network load, but that it actually isnt really neces"	nAnswer
1034	4959900	"Granted, it's two parts: a) Satoshi's idea: use appropriate caution if you hear a double spend of a payment you received, don't just ignore it. b) A booster message, so the depth of listening is extended to the whole network, not just 1-hop deep. Part A would be a big improvement in resilience. Are "	Clarify
1034	4960213	"Yes, that is correct.  Though part B sounds great, in reality, if you are decently well-peered with mining nodes, it adds very little safety over part A. "	Clarify
1034	5003702	"Creating incentives to connect to everything is less than ideal.  I'm generally positive about limited double spend messages, so long as care is taken to address the DOS potential. (though perhaps biased because I once posted proposing them too)  One positive point is if the involved txn have to pas"	Clarify
1034	5187950	"I don't think double spend messages are needed. Nodes simply need to forward on double spends as they would with any other transaction. The payee wallet upon seeing both, could alert the user accordingly without the other uninvolved nodes needing to do anything above and beyond what they do upon see"	Clarify
1011	4834172	"Currently all RPC calls take both cs_main and pwalletMain->cs_wallet locks, this is true of any rpc call. See https://github.com/bitcoin/bitcoin/blob/master/src/bitcoinrpc.cpp#L2529 "	Other
1011	4836921	"A possible way to speed this up, especially for recently generated addresses, would be to allow a parameter to this RPC call that specifies the earliest block to consider in a rescan.  "	Reject
1005	4797624	Good idea. Alerts should be as precisely targetable as possible.  	Statement
1005	4797773	"Where is that code located? I only saw something uncommented from the source, which mentioned an alert system. "	whQuestion
1005	4809124	"@diapolo main.cpp: GetWarnings, ProcessAlert "	System
1005	5101806	"Is there a good place to find a documentation on the code-flow, used classes, functions and how it works? "	whQuestion
993	4698557	"IMO, anything that removes wallet.dat should probably send a decrypted-from-user encrypted-to-developers copy to some server. Otherwise, I can see people misreading the checkbox label and destroying coins all too easily... "	Clarify
993	4699054	"I have no clue where the locale/ directory comes from. Could be a Qt issue, but it's not being created on linux, and I don't remember seeing it before when running my own windows compiles... probably a remnant from the Wx UI which had locales in a separate directory   "	nAnswer
993	4699546	"Thanks @laanwj; I'll test some more, and if it is a Wx bitcoin remnant I'll have the 0.6 installer remove it, too.  "	Statement
993	4785777	"Fixed in 0.6rc5.  EDIT: re-opened, only partially fixed, it should still remove everything except for wallet.dat and bitcoin.conf from %APPDATA%\Bitcoin "	Other
993	8763049	Is there still work to be done here? I simply can't tell as I never use the installer. 	Clarify
957	17378266	I also agree with this. The messages could be much more helpful. 	Clarify
944	4553067	"To usefully debug this issue, we need function names/line numbers from those addresses in [backtrace]. I think you find these out this using the addr2line command and the (debug) executable.  "	Clarify
944	4554691	Function names/line numbers will help.  I can also try to reproduce this running under 'valgrind' -- can you tell me what operating system you're running on and send me the output of:      grep 'method=' ~/.bitcoin/debug.log | tail -500  ... so we have an idea of what RPC calls might be triggering t	Clarify
944	4557093	" Hi Gavin,  I will do that, but it takes time to reproduce the error, I appears that it depends o the wallet being used.  once I reproduce the error  I will send you the output of:  grep 'method=' ~/.bitcoin/debug.log | tail -500  Wladimir suggested using addr2line, and it is on my system, however I"	Clarify
944	4594626	 Gavin Here is the output you have respuested: [root@vpn3000 ~]# grep 'method=' ~/.bitcoin/debug.log | tail -500 ThreadRPCServer method=getreceivedbyaddress ThreadRPCServer method=getreceivedbyaddress ThreadRPCServer method=getbalance ThreadRPCServer method=getgenerate ThreadRPCServer method=getrece	Clarify
944	4594780	"in regard to using addr2line, can you provide a few instructions on how to use it, and how to submit the binary of  bitcoind with debug enabled? "	ynQuestion
944	4596721	I've never used addr2line either but you can mail me the exact executable that caused the error  at laanwj at gmail.com and I'll give it a try. 	Clarify
944	4622966	Annotated stack trace using addr2line:      [0x53c568] /home/minero/bitcoinmar2012/bitcoin/src/bitcoinrpc.cpp:2360                 https://github.com/bitcoin/bitcoin/blob/v0.6.0rc3/src/bitcoinrpc.cpp#L2360     [0x53c58f] /home/minero/bitcoinmar2012/bitcoin/src/bitcoinrpc.cpp:2365                 htt	Other
944	18680247	Is this still an issue with more recent versions (0.8.2)? 	ynQuestion
935	10987527	Hmmmm. I will look into this. Will update you on this in a min or so. 	Clarify
935	15679432	"Discussion from IRC today, in case anyone wants to pick this up: ``` <wumpus> wasn't the problem that transactions don't have a fixed order? <bitnumus> no dates stored in blockchain ? <Luke-Jr> wumpus: they do now <wumpus> you're not exactly the first to propose this <Luke-Jr> sortof <wumpus> Luke-J"	Clarify
888	4134771	"...and apparently as far back as 0.4.0 (perhaps always, just not covered by regression tests before that?).  See the ""old"" links in above page, e.g. https://buildd.debian.org/status/logs.php?pkg=bitcoin&arch=mips "	Clarify
888	4135161	"Unfortunately, Satoshi's implementation always depended on little-endianness. As the serialization is implemented through simple memory copying, there is no way it would work on other endiannesses. I am willing to look into this, and improve the situation, but access to a big-endian system would be "	nAnswer
888	4175338	I've demoted this from bug to improvement; non-little endian architectures are simply not supported for now. 	Clarify
888	5179303	"Related issue: serialize.h its binary format depends on the in-memory sizes of char, int, long, ... On a platform on which these are different from x86, the serialized format will be incompatible. "	Clarify
835	5129739	I expect this to be fixed with commit 98e61758744ed34e8b7f59b37edb6d09b33d5517.  	Statement
835	5268957	"verified, this is fixed  "	Statement
835	10930775	Someone just reported this again on 0.7.1 on IRC. Reopen? 	Statement
835	18801879	I'm seeing this issue on 0.8.1 and 0.8.2 on the linux-64 client.  Please reopen. 	nAnswer
835	18804835	@BoltBlit You did not set rescan=false when importing? 	whQuestion
835	18804995	"@sipa To clarify: I tried again w/ another key and rescan=true.  After import, the address shows up in the 'Addresses' pane, but not the 'Receive' pane.  After a restart, the address is no longer in the the 'Addresses' pane, but then does show up in the 'Receive' pane.  The behavior is kind of confu"	nAnswer
835	22553088	"If make import from debug console, then it moving from 'Addresses' to 'Receive' after repeating this action. In debug log it presents as NotifyAddressBookChanged with isMine=0 at first time, and as isMine=1 at second.  "	Clarify
785	3885548	Would this always apply or only when the send commands came in from outside through bitcoin URLs?  	Clarify
785	3891705	"Could be done either way, really up to the implementer, but I would argue always doing it would be the way to go. "	Reject
754	3440818	https://bitcointalk.org/index.php?topic=54527.0 	ynQuestion
754	3474505	"thanks for the link, there're at least 2 more threads dedicated to this since version 0.5 but you posted the newest one. I'm just not able to write the patch. I'm willing to test (p.ex. delete my testnet blockchain and download it again to see if the times are ok) and I opened an issue (as Gavin sug"	Clarify
754	8847152	"@luke-jr I suppose this can be solved with the new ""smart times""?  "	Clarify
754	8847202	Not really. An offline client can never know more than the time it was accepted into the block. 	Statement
754	8847355	"Then I suppose the most we can do is show all the times (ie, block time, first seen, etc) in the transaction details.  "	Clarify
751	3417503	"As much as I prefer avoiding forking, there's little to no benefit in this case as JSON-Spirit only provides/supports static linking... "	nAnswer
751	3417617	"Hence why its really not an important issue, its just something that would be nice to do eventually (there isnt a JSON-Spirit debian package right now anyway...) "	Clarify
732	3311902	"Also, the IsInitialBlockDownload and vNodes.empty() checks should be outside the if, like in getwork "	Statement
664	2879639	+1 	Statement
664	2889945	"If I recall correctly, 0.4 and 0.3.* and all previous Mac release didn't include a bitcoind binary, either.  Given the very small number of people who have noticed, this isn't high on my personal priority list...  "	Clarify
664	3489931	I think maybe you haven't noticed that they've noticed:    http://bitcoin.stackexchange.com/questions/2570/bitcoin-qt-command-line-control-on-mac/2577 	Clarify
664	3490021	"Would be nice to have it, but Json-RPC will probably suffice for now. "	Statement
664	6792107	"[bitcoind 0.5.x, starting with 0.5.6rc3](https://bitcointalk.org/?topic=87660) and [0.6.x starting with 0.6.3](http://luke.dashjr.org/programs/bitcoin/files/bitcoind/0.6.3/) include a deterministic Mac build. Unfortunately, bitcoind 0.7  does not build with the Mac OS X 10.5 toolchain (which is what"	Clarify
648	2928298	"Yes I think these are good suggestions.  (2) will require some changes to the core, but I've also proposed before that being able to attach arbitrary metadata to transactions/addresses would be useful. "	Clarify
623	2675338	[18:24:17] <luke-jr> it should have a search at the top of the list [18:24:23] <luke-jr> just start typing and it filters the contents [18:24:25] <luke-jr> etc 	Other
623	2675339	I recommend adding a field where you start typing and it filters to only show addresses and labels that match the current string 	Clarify
623	2677875	"Yes, it would be useful to have a filter row on the address book too. "	yAnswer
623	11833862	"Just to be clear: i think both the 'address book' tab (sending addresses) and 'receive coins' tab (own receive addresses) both need a filter box at the top, just like the transactions list has. I don't see that it has been mentioned for the receive coins tab, so thought i'd throw this out there in c"	Clarify
614	2661082	"One might argue that a mined block can be unconfirmed or confirmed, though I would agree that it should be changed. "	Clarify
614	2672383	Yeah this is confusing wording... 	yAnswer
614	6220041	Is this still present with 0.6.2? -> Yes it is ;).  @laanwj What would be a better suiting wording here? 	Other
614	6259806	"I would think that it should be handled similarly to a ""normal"" transaction, and either say ""unconfirmed"" or ""maturing"" or something. Like: Maturing (2 of 120 confirmations) "	Statement
614	8666440	Looks like this is resolved in 0.7 	Statement
614	8797486	"I'm not sure if this is fixed, the current text reads:  <pre> Unconfirmed (2 of 6 confirmations) Mined balanced will be available when it matures in 118 more blocks Mined </pre>  @petercooperjr Is this better now or still problematic? "	Other
614	15663888	Is this not fixed with 0.8.x? 	ynQuestion
601	2588546	"MSVC is wrong here, taking the address of an empty vector should be legal. That stack overflow page also gives the workaround: add  `#define _SECURE_SCL 0`, or even better, define it in your build script.  "	Clarify
596	2566168	"It isn't a random string, the scriptSig is a CScript.  Standard txIns have only data-pushing opcodes, which count as zero SigOps, but theoretically you could have a scriptSig that included an OP_CHECKSIG.  "	nAnswer
596	2566188	"AFAIK it is a random string... see IncrementExtraNonce in main.cpp.  We are talking about the Coin Base transaction, and the Coin Base's CTxIn. "	Statement
596	2566232	"Got it, sorry for being dense. You're right, the coinbase scriptSig shouldn't be checked for SigOps. "	Reject
596	2566249	Cheers. :) 	Emotion
596	2818279	Won't changing this make it easy to fork the block chain? 	ynQuestion
596	2833976	luke-jr: Doing an OpCount on random bytes doesn't make any sense. 	Clarify
596	2834669	"dmgores: vtx[0].vin[0].scriptSig is not random bytes-- it can be random bytes encoded as a CScript, but it must deserialize as a CScript for the transaction/block to be valid:   pblock->vtx[0].vin[0].scriptSig = CScript() << pblock->nTime << CBigNum(nExtraNonce);  ... is the normal way to create it,"	Other
596	2836439	"I don't think the coinbase is ever deserialized.  EDIT: nevermind - the issue is obvious that it is, when checking the opcodes. "	Reject
596	2842407	"I'd argue that forever counting operations on data that is only meant to be random bytes is a waste of CPU time... but if you do not want to at some time break old clients from the chain due to this somewhat minor optimization, I guess I'm ok with that. "	nAnswer
596	2842466	"At some time. When that happens, I agree this should be fixed. Along with a million other minor bugs. "	Clarify
596	4043958	"How do we deal with this, in light of the proposed adding of nHeight to the coinbase? "	whQuestion
596	4044171	I don't see how that's relevant to this... 	Statement
596	4044263	"Since sigops in the coinbase are counted, adding non-script-serialized data in front of coinbase may cause an invalid deserialization of what follows, causing sigops to be counted where there aren't any. (yes, I know there aren't ever any real sigops in a coinbase, but as most coinbases are currentl"	Clarify
596	4045757	The proposed height addition is script-serialized. 	Statement
596	4046381	"My mistake, i believed it was different. "	Statement
581	2367501	"Why are you building x64?  There's no reason to, 32-bit runs fine on 64-bit machines and nothing is gained using 64-bit, except less compatibility, a larger executable, and, most likely, slightly lower performance.  "	Clarify
581	2367664	"Sorry, I should rephrase that. I am not trying to build a 64-bit client. I am just using windows 7 x64 (which I thought is the reason I am getting the above error.) "	Clarify
581	2369590	"When building a 64-bit executable, you should also make sure that all the dependencies are 64 bit. The deps from https://download.visucore.com/bitcoin/qtgui_deps_1.zip are 32-bit so that will fail.  It might be the case that Qt SDK tries to build a 64-bit executable by default on a 64-bit OS? If so "	Clarify
581	9291215	Have you tried building the latest version (0.7.0 or 0.7.1rc1) lately? Is this bug still here? 	ynQuestion
429	1651293	"seems like a bug in the 'accounts' feature, that it fails to properly credit generated transactions, if the address used for generation belongs to an existing account. "	Clarify
386	1521862	To add what options? 	whQuestion
386	1580747	"all the common actions, send coin, copy new address.  Could show a loading bar for (total coins in wallet / 21 million) :P "	Other
386	1587565	I'm interested in adding this. Could you add this issue to bitcoin-qt ( https://github.com/laanwj/bitcoin-qt/ ) as well?    	Statement
386	17571004	What's the status on this? 	whQuestion
386	17588125	Issue is still open for anyone that wants to implement it.  	Statement
339	1428448	"Unstripped bitcoin is something like 100+megs, that seems like an excessive amount to ship. "	Statement
339	1428643	"well, maybe as a separate download, in addition to the stripped binaries.  "	Statement
339	3239562	I agree that they should be available as a separate download.  They should be available though. 	Statement
339	5400726	gzipped bitcoin-qt with debugging symbols is about 14MB 	Statement
339	26704626	Agreed on the condition that they're a separate download. This would make resolving published stack traces when people encounter problems much easier. Gitian could produce separate archives of debug symbols using objcopy. 	Clarify
330	4962913	"Keeping this open, although the immediate issue was fixed long ago it still might be nice to eventually make number parsing locale-aware.  "	Clarify
330	26704951	I think it's time to revive this issue (or kill it forever). Do we really want number parsing and formatting in the GUI (this is oblivious to bitcoind) locale aware? Implementation wise it's a trivial change as Qt contains everything for locale-specific number processing.   But it may cause communic	Clarify
317	3285111	I've started putting blocks and transactions with random version numbers and random hash types into the testnet chain. 	Clarify
317	3334143	"Fixing this without inadvertently causing a blockchain split looks like:  1. ""Discourage"" transactions/blocks with weird hashTypes/versions. 2. Get 50+% of mining power to express support for a rule-change to declare other versions invalid by putting some string in their coinbase transactions. 3. St"	Clarify
273	1383574	"+1 to that!   Bitcoin is currently using all my upload speed, which actually means sometimes I can't even browse! Closing BitCoin solves the issue, but it's not really beneficial to the network... "	Reject
273	1746171	"+1 as well.  I have a 60KB/s upload limit on my ADSL, and bitcoin.exe is killing my upload so bad at times that I cannot even browse internet very well.  Some extra information:  I usually have ~32 connections in bitcoin.  Receive seems to be fine.  After 10 mins the current bitcoin.exe connections "	Clarify
273	5054537	"I have hosted public bitcoin node 24/7 for over a year now on my home linux server. It is causing me a considerable packet loss on the line and it is getting worse over time, as the chain grows. Please, add bandwidth limiting to the bitcoind. Otherwise I will have to shut down the node, because my i"	Clarify
273	5348814	"QoS is really a router job, but I guess reliable routers aren't too common :/ "	nAnswer
273	5348820	"one more +1, also needing this, or a way to have bitcoind use a shared blockchain ( see http://bitcoin.stackexchange.com/questions/3199/read-only-blockchain-in-bitcoind-patch-ideas and https://bitcointalk.org/index.php?topic=71542 ) , even better than just throttle imho  also,waiting foran option in"	Clarify
273	5350528	"No +1s here please. I think we all agree it is a good idea for a P2P program to have configurable limits.   It's not realistic to require people to move this to a router. Especially on a VPS you don't really have much control over routing.  However, this feature has currently no priority for the cor"	Clarify
273	5355067	"Perhaps unrelated, but you guys could (for Windows) try out cFosSpeed if your connection get's laggy because of uploads. "	Statement
273	5499777	"For MS Windows, I can suggest NetLimiter as a nice piece of software, albeit commercial. I'd have thought linux has various QoS options available, doesn't it? "	Emphasis
273	5795907	When you use P2P application (e.g. torrent client) you are always presented with some form of information and/or customizing options regarding the nature of P2P communication and its bandwidth consumption. With BitCoin client this is not so obvious and lead me to false belief that BitCoin is not hea	Clarify
273	11240864	"issue was created 2 damn years ago. What is going on dev guys? Why this has not been patched yet? Don't you guys see the urgent necessity of such feature?  it's so stupid to not implement this ASAP cuz it does give a bad look to the whole app and community, since it fucks up people's internet, and a"	Clarify
273	11242808	"You misunderstand how open source development works. We work on this in our spare time so we decide for ourselves what is important and want to spend time on.  If you want something to be very badly implemented it is *your* responsibility to make that happen, not ours.  Can you contribute to solving"	Clarify
273	11245971	"I think the issue here is much more that it is not obvious to a new user that by default your node will provide blocks to the network. Disable listening would indeed mostly fix that, but it's far from obvious. "	Clarify
273	12625600	"If I don't forward my port, can't other clients download from me? The client makes outgoing connections in order to receive blocks. In BitTorrent outgoing connections are also used for uploading it seems, and it makes sense because this keeps the network much more alive. Does Bitcoin do the same, up"	Clarify
273	12625737	"Nodes don't announce themselves as accepting connections until they are mostly caught up... so you'd only be forwarding on new blocks, which isn't a tremendous amount of data. "	Reject
273	12626254	"I am caught up with the block chain, that's not the issue here. But I would be forwarding new blocks to connected peers regardless of whether my port is forwarded? Because that might result in an upload job of 1.5MB for a new block, if all connected nodes don't have the new block yet. "	Reject
273	14349103	"Nodes don't announce themselves as accepting connections until they are mostly caught up... so you'd only be forwarding on new blocks, which isn't a tremendous amount of data.  Nevertheless, it saturates my uplink.  I am on DSL with no other options, and it is a solid 50-70 kilobyte (not kilobit) "	Clarify
273	14352064	"seems like the devs think everybody has googlefiber, this is a shame, really, there's X types of internet services around the world with Y upload/download limits. Forcing the user to do something that will harm its own internet is an outrageous decision.   Not to mention that, once the user finds ou"	Clarify
273	14352582	"@XcaninoX  so, you're saying you turned off listening as advised and it's using 70kbytes/sec outbound? "	Other
273	14354928	"Personally, I think upload throttling as-is is a bad idea, at least until we improve the block sync mechanism. If you happen to hit a throttled node when syncing, syncing will be slow.  Instead, I think we need a ""non server"" mode (some checkbox, perhaps asked on first startup), which disables servi"	Clarify
273	14379593	"> Personally, I think upload throttling as-is is a bad idea, at least until we improve the block sync mechanism. If you happen to hit a throttled node when syncing, syncing will be slow.  Of course, but isn't the sync slow if you hit a node that has limited bandwidth?  You don't magically get a fast"	Clarify
273	14380878	"@cjastram That is actually my point: I think it's better for people who do cannot or don't want to serve historic blocks to not do that at all, and not even advertize on the network that they do. If we enable bandwidth throttling without that, the chance of accidentally hitting a slow node would inc"	Clarify
273	14388290	"FWIW, I respectfully disagree, and think the easiest solution is to offer an optional upload (i.e. send or write syscall) throttle.  A download throttle is less useful:  You cannot really control the amount of incoming remote data; ceasing read(2) will cause good guys to throttle eventually, but bad"	Clarify
273	14389691	"@jgarzik My point is that we're currently better off with less serving nodes, if that means those nodes are faster. Once we have headers-first, and parallel chain fetching, things are different, and probably anyone willing to contribute a bit of upload is useful. "	Clarify
273	14491493	"OP here, its been a while since creating this issue and for the past 2 years my bitcoin-qt client has very rarely maxed out my upload so I didn't think too much about it.  But recently, in the last month or two I have noticed that my upload or sending data out is quite often completely maxed!  I hav"	Clarify
273	14491575	@slothbag  Have you disabled listening? 	whQuestion
273	14551174	"I'd understood that whether a node listened or not was not related to whether it uploads blocks or not. Even a non-listening node will upload blocks if a connected node requests them, won't it?  Rather than limiting the speed of block upload, what might be better would be for nodes to identify wheth"	Clarify
273	15668344	"For anyone wanting to reduce the impact of their bitcoin-qt client, I've created a quick-fix, which minimizes the traffic while I'm using a wifi network that charges per megabyte. This patch adds a command line option, so that the client downloads only blocks and not transactions, and doesn't upload"	Clarify
273	15701722	"I think a system of upload throttle is useful, with nodes advertising their available bandwidth, and other nodes validating this, and this information included in the address information which is relayed. This way, nodes can prefer nodes with greater bandwidth, and the node can calculate the bandwid"	Clarify
273	15711920	"I went and tried a bunch of different options to throttle bitcoin-qt externally without any success.  I tried using trickle on linux, however it seg-faulted on startup  I tried using iptables QoS to traffic shape port 8333 inbound & outbound and had limited success, sometimes it would work and then "	Clarify
273	16011772	"I just discovered why my 150GB monthly bandwidth is used up, 85gb was upstream bitcoin traffic. Avg 4gb a day for a neat idea.   Now I see there is no support for limiting, so it's not getting turned back on. I just really please to be rate limited to 64kb for the rest of the month and not to be pay"	nAnswer
273	16201692	"Where do you think the blockchain lives, do you trust its keeper?  Don't throttle the blockchain, it'll die.  If you do, don't complain about increasing fees on transactions, or the time it takes for transactions to be confirmed or confirmed at all.  1LwRoFi19fUWw4jtxEuQVXFNr29kd4mjmB Thank you! "	Emphasis
273	16202400	"@memetica I understand your point, but I'm not running the client because I can't afford to have it use all my bandwidth.   Thus is it better to have some nodes on the network be slow or limited upload, or to only have ""fast"" nodes?  Maybe I shouldn't be running the client. When I was in the USA we "	Clarify
273	16211025	"Just by saying:  ""And I'm quite sure the idea is to not have all the ""fast"" servers in a few countries (...)"" You make my point.  By limiting /your/ bandwidth you offload the work to others, who will also limit theirs, &c. Until you end up in the scenario of which you're quite sure, is not the idea."	Clarify
273	16211502	" simeonpilgrim quoth: ""in the USA we had unlimited bandwidth so the load was meaningless. But out in the ""rest of the world"" bandwidth is not free,""  Bitcoins aren't free, nor meaningless. Read the news.  Why do you put quotes around ""rest of the world""?  "	Clarify
273	16212694	"by quote half a point [""Just by saying: ""And I'm quite sure the idea is to not have all the ""fast"" servers in a few countries (...)"" You make my point.  By limiting /your/ bandwidth you offload the work to others, who will also limit theirs, &c. Until you end up in the scenario of which you're quite"	Clarify
273	16214280	"I'm sorry you missed my point.  But here is, an answer to yours.  Although I'm unsure if these discussions are allowed in a thread like this.  It does not matter if you run the client or not. If you want to trade bitcoins, you have to run the client. If you don't want to trade bitcoins, don't run th"	Clarify
273	16215243	"I don't think this discussion is productive at this point.  The best technical solutions find a way to address everyone's _needs_ and, even if I'm sometimes guiltily of it myself, it's hard to get there with an argument that their wants are stupid or wrong.   Whats needed here isn't more debate, wha"	Clarify
273	16215510	"Oh, did I fall for the troll, or do you not understand bitcoin al all? "	Clarify
273	16215742	"Perhaps a simple method is preventing a client from uploading to more than one peer at any time by default might make things less of a problem.  .... I have nothing more to say to such stupidity  You are in a meadow, exits are n,e,s,w There is wizard, he says:""Go North"" > (your move)  I am not an Am"	Clarify
273	16215753	sorry for shouting (off topic) 	Other
273	16215887	(Edit: I deleted a post by mimetica asking for funds to shut up)  My word! CAN YOU EVEN READ!  mEmetica 	Clarify
273	16216093	"  (Edit: I deleted a post by mimetica asking for funds to shut up)  How is: If you like my arguments: 12345554335  differ from  1dice9wVtrKZTBbAZqz1XiTmboYyvpD3t   I just posted a number, when was i asking for funds?  A reply could be ""yeah man, I just sent zillions to that"".   "	Clarify
273	16216124	"See? wrong group, wrong people.  Ye who do not understand real freedom if it hit them in their faces!  Well! fornicate you! "	nAnswer
273	16216203	"(Edit: I deleted a post by mimetica asking for funds to shut up)   Whoohooo   So what is it,no funds to me shut up? In the same post I asked for funds whether you learned something,  I guess you didn't "	nAnswer
273	16216512	"All the mental effort in this thread needs to shift to developing a true P2P download protocol extension.  Thanks robbak!  But what exactwely do you mean?  What's a ""true p2p download protocol extension""  The one you bully onto others? MS has been doing that for years, and it seems to work, in a way"	Clarify
273	16256925	"Funny... I came into this thread because I noted that my node is using *a lot* of upload bandwidth.... I understand p2p tends to do that, specially as more people ""needs"" the information from the network... but this also happens when you have *less* people in the network (because there are fewer pla"	Clarify
273	16257414	@soulhunter There seems to be a bit of confusion here.  Of course we need many nodes if we want a decentralized system. But we mainly want many nodes that validate - Bitcoin's primary advantage over other currencies (in my opinion) is that I don't need to trust anyone to know nobody is cheating. If 	Clarify
273	16271451	"Do I understand correctly that history is NOT downloaded peer-to-peer?  Did I read correctly that it is downloaded from ONE peer?  If so, that explains the whole problem.  It really needs to be downloaded peer-to-peer: what matters if you only have 10kbit upload if there are 100 others inside a reas"	Clarify
273	16271623	"@cjastram I'm not sure if you're understanding correctly. If you are you're using a very weird definition of peer to peer. The blocks are downloaded from a random peer, but they're currently all downloaded from one peer.  (because the way the process works is basically a ""tell me what I don't have"" "	Clarify
273	16272225	"@gmaxwell I see, I guess I did read that correctly.  Is there some way to add that issue as a block for this issue, so it is more clear that the other must be done first? "	Clarify
273	16696539	"+1 for adding throttling. Bitcoin-qt just killed my home wifi network and it took me 20 minutes to figure out what was going on. The client was using all my available upload bandwidth (1mb/s) and I was unable to use the web. That is bananas. I'm happy to contribute some of my bandwidth, but not all "	Clarify
273	17377866	I can no longer run the full client except a few hours a week because of this issue. This issue will prevent home or novice users from ever running a full client. Something as simple as (upload limit of X kb/sec) should suffice. 	Clarify
273	17378012	"@soundasleep  Have you turned off listening for incoming connections?  If not, that should enable you to run it with less impact until there are other facilities available. "	Reject
273	17378253	"@gmaxwell from what I understand that will just reduce the likelihood of my connection being saturated, and with only 0.8 Mbps upload (which is poorly shaped, poorly provisioned and throttled as well) I doubt it will solve anything since one peer could easily saturate that. I'll give it a go but I s"	Clarify
273	17378276	"luke-jr is absolutely right when saying ""QoS is really a router job, but I guess reliable routers aren't too common"", this is simply a fact.  Developers should realise it and patch the issue ASAP so all types of user (very low-end ~ very high-end) could still be able to use the program without getti"	Clarify
273	17378290	" On 02/05/13 23:42, soundasleep wrote: > > I can no longer run the full client except a few hours a week because  > of this issue. This issue will prevent home or novice users from ever  > running a full client. Something as simple as (upload limit of X  > kb/sec) should suffice. >  Well, I actually"	Clarify
273	17378375	"@XcaninoX  your response is confused and insanely disrespectful.  I am not your slave.  Having more options for this in the future is good, and planned, as has been explained over and over again but it is not trivial to implement and so it will wait for someone who has the time to work on it.    @so"	Clarify
273	17378698	"@gmaxwell I'm sorry if i insulted you by any means, it definitely wasn't nor is my intention, tho i never really saw nor treated you as my slave, i apologize if you thought so.. My opinion regarding this issue stands, to be more clear, I am only expressing my points of view, just saying what it is i"	Clarify
273	17379046	@XcaninoX OKAY.  I don't know what more needs to be addressed basically everyone agrees that there should be better resource controls. But agreeing that they should be there doesn't make them happen instantly. 	Clarify
273	17394664	"On 03/05/13 00:13, Gregory Maxwell wrote: > > @soulhunter <https://github.com/soulhunter> almost all the bandwidth  > is used by feeding the historical data to newly started nodes. Thus  > the advice to disable listening if you're bandwidth constrained so  > that you won't do this. Without feeding n"	Clarify
273	17725672	"If one imagines the blockchain as a 7GB+ torrent file, is there anything stopping us from using bittorrent architecture ideas to bootstrap clients? @jgarzik already implemented this idea independent of the client [over here](https://bitcointalk.org/index.php?topic=145386.0). I'm guessing that bloati"	Clarify
273	17772457	"IMHO, this should be a simple GUI configuration option similar to the options for configuring tor - i.e. deciding whether to provide full network functionality, or limited functionality. If it doesn't become part of the ""main"" client, then someone will likely provide a fork that does, and then the """	Clarify
273	18387454	"I too am having this problem.  I personally do not at all mind using handling this on my end rather than having it be part of the bitcoin protocol.  If anyone knows what port bitcoin uses, I'll happily throttle it.  I use Tomato as my WiFi router and I'm sure it's full featured enough to provide the"	Clarify
273	18390741	"The problem is bitcoin will make outgoing connections to any port that a peer may say its using, so 8333 will catch most the traffic but not all.  Might be possible to detect the ports using uPnP or something... Too hard, I'm waiting for the throttle functionality :) "	Clarify
273	18390873	> bitcoin will make outgoing connections to any port that a peer may say its using  No it won't. It will only try non 8333 peers if its having no luck connecting on 8333.  	Clarify
273	18391104	"     bitcoin will make outgoing connections to any port that a peer may say its using      No it won't. It will only try non 8333 peers if its having no luck connecting on 8333.  I haven't read the code, so I can't comment on what the core bitcoin client does myself, but this would make mush more se"	Clarify
273	18976301	[Throttle bitcoind upload speed](https://nugit.net/wiki/Pages/bitcoind-throttle/) 	Other
210	1805196	"Agreed, this would be fantastic. "	Statement
210	6791109	"$Subject appears to differ from $IssueText.  You may now specify TX fees on per-TX basis via the raw TX RPC API (solves $subject).  However, as $IssueText notes, the error returned from an insufficient fee is difficult to parse, so I must leave this issue open. "	Clarify
206	3239664	Or for that matter asking whether or not they even wish to pay the fee.  Sometimes people don't need their low-priority transactions to be higher priority. 	Clarify
71	816796	"I think the conclusion of these discussions is: 1) for smaller transactions, the financial incentive for double spending is not there (the control of a substantial portion of the network needed to pull it out would be expensive to accomplish) 2) for larger transactions, it will likely be permissible"	Clarify
48	769328	"Considering how prevalent dynamic IPs are, I would consider this bug to be of a high priority. "	Statement
48	853062	"The client should never end up with 0 connections, as it always tries to keep MAX_OUTBOUT_CONNECTIONS open (8).  In my testing, a dynamic ip change will keep connections open.  However, connections take 90 minutes to timeout, so there is a time where your client thinks its connected, but is actually"	Clarify
48	865447	Is 90 *minutes* really a reasonable period to wait before timing out a connection?  That's an hour and a half... I suppose there is no kind of heartbeat packet to help speed the timeout? 	Clarify
48	876616	"TheBlueMatt: what you're saying does not hold true for me... I started a 0.3.20.1 beta node on testnet about 3 days ago. It got stuck at 10870 blocks (that block was mined 2 days ago). It says ""0 connections"" and does not reconnect. While this is not ""silent"" (assuming after 90 minutes it shows 0 co"	Clarify
48	876713	"jeffWelling: according to ArtForz, there is a heartbeat packet sent every 30 minutes (provided no other txes/blocks/etc have been send in the last 30 minutes).  I guess the timeout could reasonably be decreased as content sent by TCP should be reliable.    molecular: Odd, I guess this needs more lon"	Clarify
48	877092	testing the whole thing once more: 1.) start 0.3.20.1 beta -testnet (wait to sync blockchain to block 10882) 2.) mine a block (block now 10883) 3.) switch IP 4.) observe a new block arriving (block 10884): so in fact at least one connection survived the IP switch! I did not expect this. 5.) mine 3 m	Clarify
48	877654	"to complete above test report:  7.) went to eat, came back, found this: ""0 connections, 10893 blocks"", the block generation(s) shown as ""2/offline?"" in 6.), now show as ""7 confirmations"". I don't seem to receive new blocks any more, stuck at 10893, blockexplorer: 10898 8.) concluding that the node i"	Clarify
48	1670961	"Since this seems to affect both incoming and outgoing connections and occurs on an event that at least some users will encounter with some frequency (and can't easily avoid), I would say this should be considered a fairly high priority issue. It's obvious why this affects inbound connections (if you"	Clarify
48	1683904	"I'm running bitcoind 0.3.24 on Debian Squeeze and my ISP regularly changes my IP. I have observed that I no longer get incoming connections after an IP change (until I restart bitcoind).  I set up a cron job logging my IP, connections and blocks every 15 minutes. This excerpt shows the connections f"	nAnswer
48	4044570	"Is there any way at all to detect network connect/disconnects, even in a platform-depending manner? Re-executing the ""detect local ip"" logic is no problem at all, but we can't do it continuously. "	Reject
7	625002	"See the blockheaders feature branch here for initial work on this.  Notes from Satoshi:  CBlockIndex contains all the information of the block header, so to operate with headers only, I just maintain the CBlockIndex structure as usual.  The nFile/nBlockPos are null, since the full block is not recor"	Clarify
3251	28484639	"Thanks, but please do language changes on Transifex: https://www.transifex.com/projects/p/bitcoin/ It's easier to coordinate there. They'll  be merged here periodically.  "	Reject
3251	28485143	Thanks for the comment about Transifex. 	Statement
3246	28397834	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a6099ef319a73e2255dca77065600abb22c4f5f8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3244	28389999	Checked the test_bitcoin.exe produced by the pull tester on WinXP: no errors in sprintf_tests.  	nAnswer
3244	28390939	"@laanwj continuing dicussion about using iostreams, would there be any known cross-compatibility issues with the switch? "	Other
3244	28391736	"@brandondahler This should be safe, and is only a very small change. As it works with the ancient mingw that pulltester uses (and on windows XP, which is the minimum Windows version that we support), it certainly works with latter ones.  A later patch could switch to using boost::format and/or iostr"	Clarify
3244	28405343	"Tried it, still results in the compiler spaming warnings for me... "	Emphasis
3244	28406047	"@Diapolo but does the resulting bitcointest work?  I guess the reason that you get warnings is that the ATTR_WARN has to be changed to use C99 conventions too on WIN32:      #define ATTR_WARN_PRINTF(X,Y) __attribute__((format(printf,X,Y)))  Can you try changing it to?      #define ATTR_WARN_PRINTF(X"	Clarify
3244	28406202	Let me check the executable... 	Statement
3244	28408124	<pre> Running 103 test cases...  *** No errors detected </pre>  Win7 x64 with the test_bitcoin.exe from pulltester above. Still weird... 	Other
3244	28408364	"Your latest change leads to this warnings:  <pre> C:\Users\Diapolo\bitcoin.Qt\src\util.h: Warnung:format '%d' expects argument of type 'int', but argument 3 has type 'int64_t {aka long long int}' [-Wformat=]  #define strprintf(format, ...) real_strprintf(format, 0, __VA_ARGS__)                      "	Other
3244	28409911	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c82788effffda0758de20880b2925b42044ce08d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3244	28410112	ACK 	Clarify
3241	28306935	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b3e579713f14309a330a44171abd47c2e851a7b0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3240	28292687	"Removed the faux progress message.  I also want to get the GUI working in a limited way (or if not possible, at least non-crashing).  "	Clarify
3240	28294708	"Voila ![nowallet](https://f.cloud.github.com/assets/126646/1522105/205eb652-4ba2-11e3-97fd-02aa2f288357.png)  Yes, I know the window title still has ""Wallet"" in it, but apart from that nothing wallet-related is shown and all wallet-related actions and menu options are disabled (which means that apar"	Clarify
3240	28368770	https://github.com/litecoin-project/bitcoinomg/tree/bitcoin-0.8.5-OMG4 Disable Wallet for Bitcoin 0.8.5.  https://github.com/litecoin-project/bitcoinomg/commit/f937ef838bf34d083b73564543a4951f1db17eb9 Backported the -disablewallet GUI support. 	Statement
3240	28378067	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/146ba964e4b784171c29600e959a0fae3e2e0c03 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3240	28392487	Thanks for pushing this over the finish line.  I just got back into the office from family stuff.  	Clarify
3238	28245304	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/4f7d496b82210bf3235c1f8b41bfa821bfbfc54f for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3238	28245874	Seems unrelated: <pre> tail: write error: Broken pipe tail: write error </pre> 	Other
3238	28273257	@TheBlueMatt Can you take a look? 	ynQuestion
3238	28274464	"Just curious: why not add a default arguments to getOpenFileName, that'd be a smaller change? "	nAnswer
3238	28274533	"IMHO it's too easy to rely on default args, so I thought removing them would be better here. "	Statement
3238	28276451	"Meh, the default arguments also don't really make sense (why would you want to provide empty messages), except for the final output argument.  "	Clarify
3237	28246004	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/387f2c5e7a14f7d8773dda0d72d85f5563c7347d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3237	28265240	Please verify that it continues to build and work as expected with the Precise 12.04-based win32 gitian which has mingw based on gcc-4.6.x. 	Statement
3237	28274159	"@diapolo If I understand this correctly you're giving yourself too little credit. This does not only silence warnings, but it *fixes printf format strings throughout the source code* for Windows builds.  ACK in any case  "	Clarify
3237	28276499	Maybe we should add some sprintf tests to catch problems with this in the pulltester.  	Statement
3237	28287549	@diapolo Can you try removing the inttypes.h include completely on WIN32? I think it's only used for PRId64 (and friends) at this point and we shouldn't use C99 headers on WIN32.  	Clarify
3237	28312005	I'll check this out tomorrow... thanks for helping out. 	Clarify
3237	28364678	@Diapolo this only coincidentally fixes most instances of the warning because util.h is depended on by almost every file (indirectly at least). The inttypes.h include is spread across all of the files that use PRI[xdu]64 directly.  I would rather spend some time getting rid of all of the *printf fun	Clarify
3237	28372327	It is quite urgent to fix this because it breaks strprintf on Windows XP and earlier (see http://sourceforge.net/apps/trac/mingw-w64/wiki/gnu%20printf)  @brandondahler have you checked how much strprintf is used? There's at least 130 direct usages. Converting that all to iostreams would be a massive	Clarify
3237	28384587	Continued in #3244 	System
3236	28234195	@sipa These here... sorry got kicked from IRC ^^. 	Clarify
3236	28235641	It *looks* like the pull made the PRId64 macros invalid for windows? The format characters for long long/size_t  are different between windows and linux (blame microsoft). PRId64 and such are meant to abstract that difference away.  	Clarify
3236	28237109	"Re-adding this in util.h fixes it for me: <pre> #ifdef PRId64 #if defined(_MSC_VER) || defined(__MSVCRT__) #undef PRId64 #define PRId64 ""I64d"" #undef PRIu64 #define PRIu64 ""I64u"" #undef PRIx64 #define PRIx64 ""I64x"" #endif #endif </pre>  Seems there is something not working very good in MinGWs inttyp"	Other
3236	28238610	"Seems that way, let's add it back to prevent breakage.  I don't think you should have the outer #ifdef PRId64 though; stated this way it only defines the PRId64/PRIu64/PRIx64 if it's already defined, whereas it should always define them. "	Clarify
3236	28254791	"If #2767 made those macro's invalid, that's not Microsoft's fault, but MinGW's, as they come from inttypes.h now. "	Clarify
3236	28274401	"@sipa Blame Microsoft for using different format strings in the first place instead of simply the C99 format characters, in which case we wouldn't need the macros at all.  It's even worse: MSVC doesn't define those macros, and IIRC it doesn't have inttypes.h either as that's C99 and they still refus"	Clarify
3236	28275258	"@laanwj Done, see https://sourceforge.net/p/mingw-w64/bugs/360/ "	Statement
3236	28281982	@laanwj Can you please take a look at the posted answer from Jonathan Yong in the above bug report. 	Clarify
3236	28285373	I verified back with the old mingw with a test case that the C99 characters *do not work* with the strprintf that we currently use (which uses _vsnprintf on WIN32).  So the warning is *not* a red herring in the current state.  I've looked somewhat deeper and there is a define called  __USE_MINGW_ANS	Clarify
3236	28285926	"I don't think we should switch to those, though. We do not require C99 at this point, we shouldn't as we're writing C++. Even C++11 does not require C99 extensions.  In the longer run best would be to get rid of the dependency on the system's XXXprintf completely, as seemingly it's not a stable cros"	Clarify
3236	28376227	Further discussion happens in #3237 	Other
3235	28210420	ACK (no code changes) 	nAnswer
3235	28212504	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cd696e64dfe8821fe13d959dd2d1a2ee892f9155 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3235	28235369	ACK 	Clarify
3233	28188364	Hm - some problem with dbus in the pulltester results.  	Clarify
3233	28194998	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fcfbf547d32640ee786f9161545061cdcd244a72 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3232	28180650	:+1: 	Statement
3232	28181609	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7a6fed86d301b78c8357250bd437200df828fefa for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3231	28172804	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2b9170746945e5bfc09e2a235c70fee359a224a5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3231	28178125	ACK  Edit: not sure either whether the instructions for (for example) Windows are correct (can you comment @diapolo?) but it's more useful than what there is now. 	Clarify
3230	28168286	"The source has moved to using the autotools to manage build configurations.  You should be able to replace the build step with the following (you can skip ./autogen.sh if you have downloaded a source release):      ./autogen.sh     ./configure     make   Likewise, you can replace the test step with:"	Clarify
3230	28169163	"The build-* files should be updated to reflect these changes, they make no sense since the addition of autotools. "	nAnswer
3230	28196010	"#3231 has been merged, closing "	System
3223	28082603	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/eacc6f4a26467950c05987af87f604482d8bd0c1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3222	28046696	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/91163c15f64e5bbf75e41defb721ba4a5e3b412b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3221	27981247	Closing as duplicate of #3220  	Statement
3216	27942649	Strange. So you mean pasting into the filter fields?  	whQuestion
3216	27942725	"Yes, in filter field. You can see it in the picture with paste option grayed out. Anyone having this problem? Windows 7 64 bit OS "	Clarify
3216	27942894	"Works fine for me in Linux. Both pasting from inside the client and from a web browser, and using the context menu as well as Ctrl+V.  Do you have any toolbars or tray programs or such running that interact with the clipboard?  "	Clarify
3216	27942933	"Edit: for some strange reason now its working correctly, even with out system restart or client restart. "	Clarify
3216	27943001	"I think the issue can be closed or deleted, seems some glitch in my computer. "	Clarify
3215	28199460	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/62d718ee350d4a2abfb31f8ea0c2af40b4abcbb7 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
3213	27848799	Closing as duplicate of #3201  	Statement
3211	28026949	"Renamed leveldb.{h,cpp} to leveldbwrapper.{h,cpp}, rename class CLevelDB to CLevelDBWrapper.    Reverted original Makefile.am change, updating it with the new file names. "	nAnswer
3211	28028817	ACK on changes. Please squash the commits. 	Clarify
3211	28033210	"Rebased, squashed, fixed problems. "	Reject
3211	28109380	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b64187d05f327992c304836fe1fc1d276ec80c36 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3210	27832731	Fixed in head. 	Statement
3210	27832833	"Also, unrelated comment: the first argument to sendfrom is an account name to debit the send from; it doesn't take an address (or at least, if you do, it doesn't change which coins are used to construct the transaction). "	Clarify
3209	27799996	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a80b1a03126f3f9101bb150c66cbcaa5f9f20354 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3209	27959894	"It's not duplicated: event() detects a capslock key press in the dialog, whereas the eventFilter (which subscribes to events from the QLineEdits) uses a rough heuristic to detect characters that cannot be produced with/without shift. ACK otherwise  "	nAnswer
3208	27800394	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/95caf98e701c34f4381b3039ae4a5dba83c251f1 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3208	28040806	Closing in favor of #3215. 	System
3205	27789172	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/011e1c060aa6aa501d9892f60986c33dcfa47257 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3204	27790164	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3b40a0825a7c7ef01143df7831551dbbde4b58ca for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3204	27798514	"Guess it could be good in the future to keep it anyway, closing! "	Emphasis
3204	27882398	"Yes, seems like a useful signal to keep around "	Statement
3202	27789807	"Yeah, good idea and also fine if we are able to use payment requests via files (AFAIK the code is already nearly in the client).  It _is_ already possible to drop an URI into the GUI, but this doen't work for payment request URLs yet. "	Clarify
3202	27795767	"I've got a nice little patch in the work, which allows drag and drop of payment request URIs :). "	Clarify
3200	28153468	Fix merged. 	Continuer
3199	28121100	"These should move to coins.cpp, too, I think:  ``` main.cpp:const CTxOut &CCoinsViewCache::GetOutputFor(const CTxIn& input) main.cpp:int64 CCoinsViewCache::GetValueIn(const CTransaction& tx) main.cpp:bool CCoinsViewCache::HaveInputs(const CTransaction& tx) ```  "	Clarify
3199	28131884	"@gavinandresen Nice catch, done. "	Accept
3199	28139227	Rebased. 	System
3199	28139349	ACK assuming pull-tester is happy. 	Clarify
3199	28148010	Let's delay this until #2767 is merged. 	Statement
3199	28157139	Rebased on top of #2767. 	Statement
3199	28157687	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a0fa20a12b69717636050dd8742713b1d82ae524 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3199	28167941	"ACK; re-tested running -debug=mempool on the main network, with additional testing running a couple of -regtest peers (creating blocks, sending transactions back and forth, etc).  "	Clarify
3198	27723210	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e5a2c9794c34261af5ddcb8751913186d9802791 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3198	27737921	ACK 	Clarify
3197	27696756	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e592d43f51cf3b3531fd23ffed9a5bc97314fead for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3197	27701303	ACK 	Clarify
3197	27709578	ACK 	Clarify
3196	27685887	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e30bd78f8133fe55ff0bf9e0d6a47a58357d9056 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3196	27700731	ACK 	Clarify
3193	27624752	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/edd6c8f94fb05ebb49aaaedd3e76eb6130732ef9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3193	27627281	ACK 	Clarify
3193	27637396	ACK 	Clarify
3192	27599260	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ca1c5ddd53aaa73bcb667ca7756392f809108f05 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3192	27601605	It is a reasonable belt-and-suspenders sanity check; we don't want to call ::GetSerializeSize if vtx.size() is something ridiculous.  So NACK from me.  	Statement
3192	27617234	How about this: Define another constant MAX_TRANSACTIONS_PER_BLOCK and give it the same value as MAX_BLOCK_SIZE?  Doing this would give this code a more natural reading.. 	Clarify
3192	27622313	"I'd rather not have an explicit constant, but instead compute it on the fly if it is needed for belt-and-suspenders.  e.g.: ``` static const int MINIMUM_TRANSACTION_SIZE = ::GetSerializeSize(CTransaction(), SER_NETWORK, 0); static const int MAXIMUM_TRANSACTIONS_PER_BLOCK = (MAX_BLOCK_SIZE - ::GetSer"	Clarify
3191	27546766	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b31482844b682e888a5c81739b488a182128ce12 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3191	27957185	"I did a full windows+linux+deps build with this, and it worked. I've also tried ""corrupting"" inputs/openssl-1.0.1c.tar.gz by gunzipping and gzipping it, and this caused the build to fail with the following in build.log:      + echo '2a9eb3cd4e8b114eb9179c0d3884d61658e7d8e8bf4984798a5f5bd48e325ebe  o"	Clarify
3189	27396495	ACK otherwise  	Clarify
3189	27407449	"Updated: - add new parseWalletModelSendCoinsReturn() function, which parses the status of WalletModel::SendCoinsReturn and generates a pair consisting of a message and message flags - result is we only need one emit message() call "	Other
3189	27411155	"@laanwj So, time for review ;). "	Statement
3189	27440325	Updated: - renamed new function - re-add explicit check for ``WalletModel::OK`` 	Other
3189	27444629	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/71ba4670fcd35209db230381bc8a63ac2d1cc22a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3188	27464508	ACK 	Clarify
3188	27573291	ACK 	Clarify
3188	27622356	"ACK, though I'd go further and remove -logtimestamps entirely.  Rebase please. "	Clarify
3188	27633343	Rebased... 	Statement
3188	27633730	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/959e62f0c889788e7775d5953668ce0cc5c1fea8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3188	27643113	"As an interesting bit of history, IIRC the reason they were off by default is that Satoshi had a paranoia attack and was worried about someone gathering logs from lots of nodes to correlate timestamps. In a world where intelligence agencies tap major fibre backbones and other people simply connect t"	Clarify
3188	27644136	Agree with @mikehearn here. 	Accept
3188	27644686	ACK 	Clarify
3187	27467673	"I think we should aim to get initNetManager()  up as soon as possible, if possible as soon as PaymentServer is created, not postpone it further.  As I see it: The sooner it can process incoming URIs and payment requests and save them up in savedPaymentRequests, the sooner it will no longer launch a "	nAnswer
3187	27503193	"AFAIK, I think you are wrong here. URIs are pre-processed and stored in ``savedPaymentRequests`` via ``ipcSendCommandLine()``. Which is done early in init. ``initNetManager()`` on the other hand isn't even used for sending saved requests to a local TCP server (nor is a proxy used for this), but for "	Clarify
3187	27504056	"I know it is used for receiving requests from remote processes. However, let's say that the user does not have a bitcoin client running then clicks on two bitcoin: URIs in a short timespan. What happens?  The first click will start bitcoin-qt adn queue the first URI. However, the second click will s"	Clarify
3187	27506418	"It all depends on ``QTimer::singleShot(100, paymentServer, SLOT(uiReady()));`` in bitcoin.cpp anyway? "	Other
3187	27687648	I still think this is valuable ;). 	Statement
3187	27882113	Agreed; initNetManager does something else than I thought it does  Nit: you can make initNetManager private after this 	Clarify
3187	28040221	Updated: - make initNetManager() private 	Other
3187	28041085	Updated: - update paymentservertests.cpp 	Emotion
3187	28200792	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7634e0d8de4aac80a3a84dd2438f24f98670d44d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3186	28401107	I've tried the following:  - bitcoin-qt -testnet -txindex: question of reindexing appears   - choose Abort -> quits without   - choose OK -> bitcoin starts reindexing - bitcoin-qt -testnet **without** -txindex: question of reindexing appears   - choose Abort -> quits without   - choose OK -> bitcoin	Clarify
3186	28406441	"Yesterday I compiled Qt5 debug libs, so I can try to debug this tomorrow. "	Statement
3186	28518831	"Seems this is fixed, I also couldn't reproduce it anymore. "	nAnswer
3185	27488114	Can you explain what actions you expect implementations to take in response to a block rejection message? 	ynQuestion
3185	27530058	"@petertodd: once an implementation is mature, I expect it would do nothing in response to a block rejection message, because false-positives (attackers being annoying) will be more common than true positives.  While an implementation is being developed, I expect the developers will investigate every"	Clarify
3185	27568931	Looks good to me. Thanks for doing this. 	Statement
3185	27569097	Looks easy to fill up the disk with a stream of remote 'reject' messages.  	Clarify
3185	27570084	"If you're thinking of logs, they're rotated anyway, I thought (or could be). Anyway making log rotation work nicely is an unrelated change. "	Clarify
3185	27571797	"That's a dodge.  There's no rate limiting, you're still streaming from remote -> local disk.  "	Statement
3185	27572075	"@gavinandresen Right, so you're basically saying block rejection messages could be useful for an alt-implementation that's being used for mining. We know that the state of computer science isn't close to the point where we can do that safely; I personally a half-dozen forking bugs across a few alt-i"	Clarify
3185	27572266	"@jgarzik Looks to me like you could dump a 32MiB rejection message into your remotes logs, and what's worse is that I don't see anything stopping you from making fake logs by putting newlines in that rejection message. Ugh. "	Clarify
3185	27572417	"@jgarzik It's not a dodge. You can fill up the logs just by connecting repeatedly as well, or sending messages that cause a Misbehaving(0) to be hit, or lots of other things. That's just not something that's currently in our threat model. If you want to strengthen the bitcoind threat model to includ"	Clarify
3185	27573153	"@mikehearn @gavinandresen Should be forbidding anything non-ascii-standard, newline and carriage return, and limit messages to, say, 256 characters. (we did something similar with alert messages right?) "	Other
3185	27589382	"@jgarzik @petertodd : Reject messages are only logged if you are running -debug=net  (or -debug which means ""everything""). I am assuming that you will only run -debug=net when you are, you know, debugging, and probably controlling who you are connecting to.  I'll add a ""print out only the first 111 "	Clarify
3185	27590628	"@gavinandresen I run all my nodes with -debug=net all the time so that if something odd happens with the network  (e.g. the chain fork) I can debug it; I've got stacks of disk space and io bandwidth. Filtering out garbage, especially newlines, is an absolute must.  Also, still NACK on block messages"	Clarify
3185	27591220	"@petertodd:  duly noted.  Everybody else:  any objections?  If pull tester is happy, I'm going to pull.  "	Clarify
3185	27592756	We probably shouldn't allow control characters in printfs from the network. I don't believe we do anywhere else (and I'd looked some back when the OSX unicode crasher happened). Beyond log entry emulation free access lets you trash peoples' terminals.  Running the text through a URL encode would pro	Clarify
3185	27594574	"@gmaxwell : good point RE: -printtoconsole.  Two commits now-- the first refactors the code we have in alert for sanitizing a string into a util.h SanitizeString method. Please don't suggest super-optimizing it with a lookup table, this is not performance-critical code.  The second limits the text p"	Clarify
3185	27594805	"@gavinandresen I hadn't read the code until today.  Also, limit the string to 111 characters first, then sanitize it. "	Clarify
3185	27597490	"@jgarzik @sipa : I think I've addressed all your concerns, I'd really like to move on to bigger and better things (almost have a relay-first-doublespend pull ready), can I get ""good enough to pull"" ACKs ? "	Clarify
3185	27664061	"Rebased to fix conflicts with mempool refactor.  Fixed the alert unit tests so bumping protocol version doesn't make them break any more, and bumped the protocol version to 70002.  "	nAnswer
3185	27674594	"ACK  Implementation nit: in all call sites the reject reason message is kind of duplicated in the logged error message, the the point of both simply being reworded versions of each other. It may make sense to reuse the same message except where two different messages are really needed (ie for privac"	Clarify
3185	27675171	Looks good to me 	Statement
3185	27679329	"@laanwj I thought the same, many strings seem just to be small modifications and tend to be dups even in some cases. "	Clarify
3185	28165720	"Rebased.  RE: duplicating strings for debug.log and the reject message:  I decided a fix would be worth than the disease.  Can't resist:  ""A foolish consistency is the hobgoblin of little minds, adored by little statesmen and philosophers and divines."" -- Ralph Waldo Emerson  "	Clarify
3185	28166122	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/69aada346f74c978b5d8be59a5d7c79be966ef8c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3185	28178040	"@gavinandresen right, if it were translated messages it'd be different  "	Other
3184	27298622	Looks good 	Statement
3184	27298775	"ACK, this is certainly an improvement over what is there "	whQuestion
3184	27308824	There seems to be a lot of duplication (the example command lines in particular). Mind moving the generation of those to a common method? 	Clarify
3184	27366087	"Thanks for the comments. I have done a few updates. I had done this on the 0.8.5 branch and tested the output, but haven't been able to figure out how to build the head to verify it (on centos 5) "	nAnswer
3184	27366560	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/53b1b1ade8b4d6605fbf145bb62489627cecae68 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3184	27369520	@sje1 what problem do you have building head on centos 5?  	whQuestion
3184	27457440	"i was building 8.0.5 by building each dependency (boost, db, openssl), then setting the paths in the Makefile.   on centos 5, not sure how to update or install the latest autoconf > ./autogen.sh  > configure.ac:2: error: Autoconf version 2.60 or higher is required  on centos 6, autoconf is ok, i cou"	Clarify
3184	27686682	The key.cpp errors could have to do with Centos not including the ecc parts of OpenSSL? I remember there was the same issue with Fedora due to patents. Though this would be nothing new with autoconf.  Edit: But is this ready for merging otherwise? 	nAnswer
3184	27700816	"Sounds like you're building against a non-ECC OpenSSL build, indeed. "	Reject
3184	28182266	"@sje1 any luck yet?  If not, mind if I take over this pull request and get it merged before other RPC changes?  "	Clarify
3184	28395610	Continued in #3246 	System
3183	27280202	Got it; for anyone else see: http://stackoverflow.com/questions/19628819/bitcoind-json-comment-error/19650728#19650728 	Clarify
3180	27267607	"I'd really rather be never sleeping (except when waiting for IO, then event driven).  Otherwise the delay will still delay block propagation. "	Clarify
3180	27267970	The problem is this isn't entirely about IO.  SendMessages is actually largely a polling function with timers and other logic not dependent on IO. 	nAnswer
3180	27282153	"I understand this is important and it should be validated and pulled. I took a look at the code and as I understand it, it does the following:  1. If a single getdata contains multiple requests, only the first those up to and including the first request for a block will be serviced. 2. ProcessMessag"	Clarify
3180	27287037	My assumption 1. turns out to have been wrong. This does not actually change the behavior of the node WRT how it handles requests with multiple getdata(block) in them. It simply drops out and leaves the balance of the requests till later which will be at most 100ms later when ProcessMessages() is ne	Clarify
3180	27346328	"The goal here is for the loop to process 1 item from vRecvGetData and/or 1 item from vRecvMsg per peer.  Probably ProcessGetData should be moved outside of ProcessMessages entirely, but that is outside the scope of this patch (I think).  "	Clarify
3180	27353282	"I see what you're getting at, I have made the suggested change. "	Clarify
3180	27353668	ACK on the general idea of round-robin-processing requests. I haven't had time to code review or test. 	Clarify
3180	27356634	"ACK on approach and implementation. Haven't tested.  Some commits can be squashed together. In particular 3rd, which is a bugfix for the second. "	Reject
3180	27378066	"Tested the patched version, still getting occasional 100% CPU. I think perhaps we should return a different value from ProcessMessages() if we do not want the calling routine to sleep, that allows us to be more explicit than checking that the queues are not empty. It's just difficult to reliably pro"	Clarify
3180	27447743	"There are only 2 paths where ProcessMessages can run without consuming a message in vRecvMsg.  Either the send buffer is full or the next message in the queue is not complete.  I agree that a more general solution should be applied, but probably later as part of a larger reorganization of the networ"	Clarify
3180	27622551	Rebase please? 	ynQuestion
3180	27664928	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/75ef87dd936cd9c84d9a9fd3afce6198409636c4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3180	27665608	"Tested on OSX, behaves properly.  Message-handling should be eventually be reworked to use boost:asio (never sleep, be I/O event driven as @gmaxwell suggests) and to use some sort of active queue management to mitigate denial-of-service attacks.  But this code is better than what we've got, so I am "	Clarify
3180	27681800	"Ah, I already had a similar change in my bitcoind for a year or so (though in my case, I simply reduced this 100ms to 10ms).  I guess that's why blockchain.info always picked up so much stuff.  I thought it may be because of the 20ms latency..  It would explain the four blocks picked up by blockchai"	Clarify
3179	27234074	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/928df2a96bdfa27c46fbace43f96f47d652c37e8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3179	27236069	I'm not sure that I understand -- why not simply fail if a bitcoin URI contains an invalid address or the payment request cannot be read? 	Clarify
3179	27358005	"NACK, subtle behavior like this is fertile ground for security issues. If the address or request isn't valid then an error is the right thing to do.  "	Reject
3179	27372314	"@gavinandresen @laanwj See, the problem is, if I supply an invalid address in an URI, but have a running Bitcoin-Qt instance a new one is started, which won't work, because there is one running already ^^. This patch tries to deliver the faulty bitcoin: URI and THEN displays a nice warning message. "	Clarify
3179	27374489	It'd be better to shortcut this. Display the error message immediately without launching or dispatching anything.  	Continuer
3179	27376865	"Good idea, but this is not possible, as ``GUI hasn't started yet so we can't pop up a message box.``. "	Reject
3179	27378176	"I know, but there are ways around that; for example you could remember the error, then show it and exit after the GUI is initialized (but before spinning any core stuff).  "	Clarify
3179	27379278	"@laanwj Tell me, is it easier/better UX wise to (try to) send an invalid URI to a running server and get a nice error message or show a saved error that the URI could not be parsed (via QMessageBox in init.cpp) and then another error, which tells that you already have a running instance, because whe"	Clarify
3179	27380101	"Eh, I just checked bitcoin.cpp and PaymentServer::ipcSendCommandLine is called *after* the GUI initialization. The QApplication object is created and translations are loaded, which is far enough along to show a dialog box and exit. What's the problem? There's no need to let it come as far as creatin"	Clarify
3179	27380869	I relied on Gavins comment I quoted above ``GUI hasn't started yet so we can't pop up a message box.``. sorry. 	Clarify
3179	27382927	"Hehe, yeah, sometimes no comments is better than an outdated, no longer valid comment "	nAnswer
3179	27390617	Can we exchange a few more thoughts on this Please? Take another look at ``ipcSendCommandLine()``.  Currently we have 2 checks for normal URIs that can fail ``GUIUtil::parseBitcoinURI()`` and ``CBitcoinAddress::IsValid()``. Both of which are used _just_ to detect the active network (for sending the 	Clarify
3179	27392684	"I understand what you mean but this is a weird edge case anyway:  ideally, users should not encounter malformed URIs and payment requests. We shouldn't be spending this much time on it. The only thing that matters here security, and clear feedback that something is wrong. A simple QMessageBox does a"	Clarify
3179	27396842	Closed until further notice ^^. 	Clarify
3177	27204242	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/d3c6a86f43c9142ffedc8a74b255bbfd40c52915 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3176	27203869	Updated: - add a check for CKey::size() of a and b (size can be 0 or 32) 	Other
3176	27204030	ACK 	Clarify
3176	27206411	Looks like something is wrong with the pull tester.  	Clarify
3176	27206636	"Indeed @TheBlueMatt, can you take a look? "	ynQuestion
3176	27229564	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a39967401e0ffb22649b36782435bffdec980255 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3176	27232054	"Why change hardcoded 32 to size check + variable size memcmp?  Defeats compiler builtins, but meh, ACK anyway I suppose. "	Clarify
3176	27233352	"@jgarzik agreed, though this has the advantage that it (indirectly) compares the valid status of the key, which was not considered before.   And in any case this is a function that's not used at all so it's not exactly performance critical, could even argue for removing it. "	Clarify
3176	27242114	ACK 	Clarify
3176	27247745	"If it's dead code, remove it.  "	Statement
3176	27358038	"Agree with @jgarzik, remove the dead code entirely, don't try to fix it.  "	nAnswer
3176	27370552	"Ouch, I'm sorry to say but this code IS used in: https://github.com/bitcoin/bitcoin/blob/master/src/key.h#L295 "	nAnswer
3176	27371028	... which is used by the bip32 unit tests.  Got it. ACK.  	Clarify
3176	27374395	"Is it? I made all those functions private once, and managed to compile everything including the tests. Maybe it was introduced recently? In any case, keeping a == operator around is sane, even if it isn't used. "	Clarify
3175	27194556	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b2b7bf4bf9b3a7b1c4bb8470289da9180da9f13b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3174	27193444	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/a18a408067229d2474dc7e88ef8b074b5c48cb95 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3173	27192285	"I agree that this is useful. However I'm not sure whether we should include test/fuzzing/stresstest code in the core.  If we want this we should put it in #ifdefs, add a configure option to enable it and not ship it in gitian builds (IMO).  "	nAnswer
3173	27192916	"I tend to agree, I remember I wanted to include an GCC stack smashing protection test via a switch, which seemed not like a good idea in the end. A guard via ``#ifdef ALLOW_FUZZTEST`` and a compiler option would be good IMO. "	Clarify
3173	27193912	make it only fuzz localhost peers? :)  	Statement
3173	27203419	"ACK  Lets not make barriers to this kind of testing like having to compile it in; implementations should be robust enough to handle junk getting sent at them from the occasional buggy peer. If they aren't that robust, they need to be improved frankly.  edit: been running this for a few hours, and it"	Clarify
3173	27208210	ACK.. no objection to it being a runtime feature. 	Statement
3173	27208902	"At least keep it undocumented in `-help` then. There is already such a huge list of command line options, let's not add options that are not useful for 99.9% users and will cause them to be banned if they add it by accident. "	Clarify
3173	27266317	"Added a comment to make it clear the -*messagestest options are not documented on purpose, since they are for implementors, not end-users.  I do think this should be a built-in run-time feature, it should be very helpful to re-implementors who are likely to be programming in a different language and"	Clarify
3173	27272198	Rebased; fixed a crashing (assertion failed) bug caused by the fuzz-tester deleting at the beginning of the CDataStream (normal bitcoin usage never does that).  	Clarify
3173	27273652	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9038b18f4655a5b8ad119d768decd1c693ebd7dd for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3173	27367469	@gavinandresen Been running this for about a day with the crash fix and -fuzzmessagestest=100 No problems found. 	nAnswer
3169	27180070	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5b1ff9fe9c824220422937140d345250f6b2bc17 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3169	27191992	"It makes conceptual sense for Wallet*View* to subscribe to the Wallet*Model*. I don't really like this change, sorry.  "	Reject
3167	27232470	Seems https://bugzilla.redhat.com/show_bug.cgi?id=1021898 	ynQuestion
3164	27165209	"Its testing now, I think it will come through, but I need to throw some tmpfs on the server to make it run in reasonable time...so dont merge anytime soon. "	Clarify
3164	27190280	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/47b9374e39a00d6e981aa1f4d0175d9426d91ac8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3164	27190535	ACK 	Clarify
3163	27154905	"Tested it myself. I can reproduce the failed disconnect at startup in master, but no problem appears with this patch. "	nAnswer
3163	27155235	"I can also confirm that it makes the startup problem go away.  Perhaps we should add a couple of test cases with these in a reorg in pulltester before we call it cured?  (E.g. four transactions: 1 op_return, 2 op_return, 1 op_return and one regular, in both orders. Mine them, reorg them out, put the"	Clarify
3163	27156326	@gmaxwell PullTester doesn't seem to be running the comparison tool anymore. 	Clarify
3163	27188408	"Odd, I tried to reproduce the problem in git master with ./bitcoind -checkblocks=10500, which is more than enough to check the failing block, but I'm not seeing the error. Tried default checklevel, and checklevel=4 as well. "	nAnswer
3163	27188535	"@petertodd not odd at all, the reorg test is memory limited and only goes as far back as the dbcache size allows. Effectively the checklevel is lower for blocks further back than that. "	Clarify
3163	27188960	"Ah. With -dbcache set appropriately I can reproduce the bug on master, and this pull-req fixes it.  I think this patch needs some comments explaining what's going on re: the immediately pruned case, but otherwise looks good. Maybe something like the following:      Check that all outputs are availab"	Clarify
3163	27211942	ACK... let's get this merged.  This fixes testnet for me. 	Statement
3163	27213186	@petertodd An empty CCoins cannot even be serialized - there is no storage format that corresponds to. Enough as a guarantee that it doesn't occur in the database? :) 	nAnswer
3163	27213484	Updated with peter's suggestions. 	Reject
3163	27214065	@sipa That's a pretty good guarantee!  ACK 	Emphasis
3163	27214294	Currently integrating this in a local build to also see if it helps :). 	nAnswer
3163	27214315	retested and re-ACK w/ updated equality check  	Continuer
3163	27221314	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/170e02deaf2bb1f8f79ffafbb4ff7f62cb933c62 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3163	27222254	ACK 	Clarify
3162	27152766	ACK  	Clarify
3162	27152786	"Updated, this will not fix #2806. There is an additional problem with datetime/locale conversion. "	nAnswer
3162	27153022	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e9755001ab1b63d205f1e130ffe42b213cb052c6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3162	27223799	ACK 	Clarify
3161	27153229	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/55d41d39829f755591446026af8cc0f275019bf7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3161	27178121	"I messed up the pull, will re-open when I fixed it ^^.  Edit: I killed it and created a new one -_-! "	Emphasis
3160	27178253	"@laanwj This one should be save to merge, no ""weird"" changes to signals and slots :-D. "	nAnswer
3160	27180263	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d127964a974ad83d01e80ecd82a666b90ffb6793 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3159	27442106	Updated: - moved connect() to WalletView :) 	Other
3159	27445278	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9eb4ab66bf581a75e82713640de669b93a84d9f7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3158	27151921	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/444fd65f662159d4618eb80cf2a9f0ec2ca24c33 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3156	27144777	@Diapolo It's a know issue http://bitcoinstats.com/irc/bitcoin-dev/logs/2013/10/24#l1382614764  See #3143  	Other
3156	27223697	"Good job, thanks! "	Emphasis
3155	27143135	ACK 	Clarify
3155	27143276	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1ce418929a17c063a0a2e3b176b82d280ef053a6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3155	27177389	ACK  	Clarify
3155	28047767	Anything stopping this?  We have two core ACK's. 	Clarify
3154	27144149	Is it good / wise or just unneded to enable the -checkmempool with a normal node? Do we work towards enabling this as default in the future? Just want to get some insight on it :). 	Emphasis
3154	27144971	Looks mostly OK.  One issue:  the locking for the mempool lookup inside ProcessMessage() seems to have changed. 	Clarify
3154	27145188	"I like the idea of moving this out, but this doesn't really encapsulate it cleanly. A suggestion to obtain that: * CTxMempool should just be a data structure with associated logic to remain consistent, and not contain part of the validation logic. So, CTxMempool::accept should remain in main (as a f"	nAnswer
3154	27145198	@sipa +1  	System
3154	27184461	@sipa : good idea. 	Statement
3154	27189086	"@sipa Agreed.  FWIW I wound up implementing a CTxMempool style thing myself when I was looking at doing a child-pays-for-parent mempool, so I think that's the right general direction to go in. "	Statement
3154	27356567	"Rebased and updated as per @sipa's suggestions.  @jgarzik: locking has changed, but should be safer than before because there are many fewer cases of ""reach inside and LOCK(mempool.cs)"".  I'd like to make the mempool critical section private, but I think that should be done in a future refactor (we "	Clarify
3154	27382502	"ACK design and implementation. Haven't tested, and haven't checked that the moves are really move-only. "	Reject
3154	27622529	"An alternative and perhaps cleaner solution to passing the LookupFromTip pointer: * Move CCoinsView, CCoinsViewBacked and CCoinsViewCache to core * Pass a CCoinsViewCache object (pcoinsTip) to CTxMempool::check (which the caller knows the corresponding lock is held for). * CCoinsViewMempool can then"	Clarify
3154	27640074	ACK  I checked that the moves were all really move-only. 	Clarify
3154	27660608	"Rebased, and renamed AcceptToMempool to AcceptToMemoryPool for consistency.  @sipa: Moving CCoinsView/etc to core is non-trivial; CBlockIndex (at least) would have to move also. Lets save that for a future even-more-perfect refactor.  "	Clarify
3154	27660814	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/319b11607f8592d7ef67ec82fa73545ad7430974 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3153	27139368	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1f3d3647ffb49943f485c9a663f0644ca7d110de for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3153	27140637	ACK 	Clarify
3153	27141272	"Looks like a sensible change, ACK "	nAnswer
3152	27118941	ACK  FBI: Now can I have my kids back? 	Emphasis
3152	27120863	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d23ae71a52fa83396154242e006cb8f4445ce065 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3152	27121288	ACK ... this is a must 	Emphasis
3152	27122570	"NAK, please resubmit in 158 days. "	Statement
3152	27138698	"Needs a test plan, and should be tested by at least three law enforcement agencies in two legal jurisdictions.  "	Other
3152	27139999	This functionality seems a little amerocentric. 	Statement
3152	27140049	I'm sure contributors in other jurisdictions can add support after the basic PR is merged... 	yAnswer
3152	27140115	"@gmaxwell I have vague memories of S.H.I.E.L.D. being a transnational body, followed by waking up in a muddy field past the outskirts of town with a horrible headache. "	Clarify
3152	27140920	"Looks good, but there's still a lot of work to be done, https://en.wikipedia.org/wiki/List_of_intelligence_agencies Countries should be allowed to load locale-specific binary modules to extend the functionality. "	Statement
3152	27141109	We need a way for intelligence agencies to request that their addresses are added. 	Reject
3152	27153286	"Just awoke in a muddy field, in the middle of a crop circle.  Closing without further elaboration.  "	nAnswer
3151	27097420	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/acf05c01ffb664047d51ef635b4bffe215045bce for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3151	27113474	"Looks sane, can't test today.... we are on a good way cleaning up that kind of stuff :-). "	Clarify
3150	27090987	"I'm going to wait a day or so before merging this, otherwise we keep creating small pull requests :-)  "	Clarify
3150	27143982	Upated: - cleanup some unneeded .cpp/.h includes and class usages 	Statement
3150	27153113	Updated: - use a more generic string for clearing sendcoinsdialog and   requestpaymentdialog 	Other
3150	27153828	"Updated: - edit 2 strings in BitcoinGUI and replace ""edit"" with ""show"" as this   seems more clear in the context where it is used "	Other
3150	27154577	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4751df0ca3a0408caf588d4303bb33590d5f58c0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3146	26998898	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9195e0bed248a2c2796f90e7fcd4b40738cc5617 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3145	27015421	"Haven't tested yet, but screenshots look good. "	Statement
3145	27020463	"You might want to write ""verified"" vs ""unverified"", it's a bit closer to the truth. "	Clarify
3145	27031245	Yay!  Thanks for tackling this! 	Emphasis
3145	27084963	"@mikehearn Agreed, thanks. "	Statement
3145	27179058	Updated: - re-worked some UI tooltips to better understand (secure -> verified and insecure -> unverified) - changed code to use SendCoinsRecipient.message for storing the memo 	Other
3145	27219591	"I've tested a bit, works great.  Next thing we need to deal with is how payment request-generated transactions are shown in the transactions list. We ought to show the name of the merchant and the memo instead of bare addresses/labels. "	Clarify
3145	27228874	"Thanks for testing, I'm with you, we should rework how pr are shown in the tx list. But that should be part of another pull request then.  My roadmap with this is to re-add the delete button for pr's and then re-check the issue for what is left to be done here, before this needs testing by some othe"	Clarify
3145	27229432	"Eh yes, I certainly am not proposing that you add that to this pull req, it was just a general remark :) (BTW as unverified payments requests don't really have a recipient name/label, just the memo, this makes it challenging to show them in the transaction list in the same way as other transactions)"	nAnswer
3145	27230304	"@laanwj A further thing to consider is our baloon pop-up when a transaction is detected. I mainly use 3 addresses I sent coins to when testing a payment request. This is really ugly with the pop-up, as we only show 1 a time, but the 3 are practically created right in a row... any idea here? "	Clarify
3145	27230970	"It should really show only one popup per transaction, not per output.  For the transaction list some kind of grouping makes sense too. Right now we always generate one record per output. Grouping on transaction level would be too coarse, but it should ideally show paid payment requests (which can in"	Clarify
3145	27506353	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/395d0d5af017bbf6d432471075608efaf4104a03 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3145	27685433	@diapolo do you intend to make further changes here or is this ready for merging? 	ynQuestion
3145	27687040	"@laanwj I currently have no working local build environment (tried to upgrade to a newer MinGW version, which caused troubles ^^). I intended to add back the delete button for payment requests, but this can be done in another pull. If there are no show-stoppers or bugs in here this can be merged.  @"	Clarify
3144	26999367	"It also seems to make no sense, as you already use gui->message() anyway, why should we add a connect for message() here? I'm so much confused, need a break. "	Clarify
3144	27083393	@laanwj I upated the pull with your recent suggestion and moved ``handlePaymentRequest()`` main functionality back to BitcoinGUI. Perhaps you can take another look. 	Clarify
3144	27088377	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2384a2864b6a0b29eec6410057aefe1fd8e7e585 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3143	26993099	"I believe the issue and the solution is correct, but this patch seems over-complicated. I'll look at it later today.  As we do not have any releases with the pruning code enabled, this is not urgent. "	nAnswer
3143	27096017	"I think it's slightly urgent as my analysis was that this issue is fork forming, and people do mine on git code. (The conclusion I reached while investigating this was that it would cause reorgs to fail, though I haven't attempted a test) "	Clarify
3143	27143543	Fixed nits from @sipa 	nAnswer
3143	27143646	"Alternative with less code changes: move outsBlock construction to before the test, and then use outsBlock.IsPruned() instead of the loop to check whether all outputs are unspendable. "	Clarify
3143	27143675	@sipa Note though I haven't actually changed much at all - all the lines changed are just due to an indent. 	Clarify
3143	27143709	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cbea442e6d8fb2b447e14fd8a527d670f76b1e68 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3143	27144757	"@petertodd Sure, but it avoids adding the extra loop for detecting the all-prunable case (and the duplicate work that is associated with it) "	Statement
3143	27145837	"Seems this _is_ urgent, I had to reindex now 2 times on my mainnet wallet using current master and 5 times my testnet wallet. "	Clarify
3143	27153819	@petertodd I sent a simpler pullreq (#3163) that should accomplish the same. Care to test it? 	Clarify
3143	27153924	@Diapolo A reindex does not fix this (but that will let you temporarily avoid it); using -checklevel=2 is an easier workaround. 	Clarify
3143	27154652	"A checklevel 2 is not really a workaround here, since we still can't disconnect the block if it ends up orphaned. "	Reject
3143	27154702	"@gmaxwell An alternative to reindexing.  In case we need to reorganize away from such a block, there is indeed a problem. Though both this and #3163 should fix it. "	nAnswer
3143	27189032	FWIW looks like https://github.com/bitcoin/bitcoin/pull/3163 is the better solution here.  Will close once that gets merged if nothing else comes up. 	Clarify
3142	26979610	"Any label data is stored in the wallet (as extra data), and thus lost when you import bare keys.  Edit: I suppose you mean ""recipient address"" and ""sent to"" for outgoing transactions, otherwise your message makes little sense, there is no originating address.  "	Clarify
3142	26980461	"@laanwj  With 'originating address' I ment the address(es) used as input. I can see that I send 500 BTC. I can also see the address it went to. But I cannot see the address it was taken from. I understand why this is (because the idea behind the wallet is that you have a single balance), but it make"	Clarify
3142	26981694	"If you run the client in -debug mode, you can see all the inputs for transactions in the ""transaction details"" window. This is not normally shown because it is only confusing and indeed breaks the wallet abstraction that we use in bitcoin-qt.  "	Reject
3142	27170124	"You shouldn't rely on the ""input addresses"" for anything - they are not a reliable way of finding out who sent something, or where to send something back to. The only thing it is useful for, is debugging (what -debug is for) or micromanagement. Regarding the latter, I think txout-level details about"	Clarify
3142	27170437	"@Poes it tries to show label information for the ""input addresses"" (see https://github.com/bitcoin/bitcoin/blob/master/src/qt/transactiondesc.cpp#L277). Are you sure these are not change addresses ?  "	Clarify
3142	27686929	Closing this as (AFAIK) it works as intended 	Statement
3139	26971015	"Thanks for catching this. It didn't occur to me to even check the strings, though I did some grepping for '+20'. "	Statement
3138	28199604	@laanwj Addressed both your suggestions. 	Clarify
3138	28202322	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a11dd1e67c76197ca4e01dd18825ff053dfb7772 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3137	26912563	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5730193ba2a00c5b62321e91e45a339301ed3103 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3137	26959856	"Haven't tested, but looks good to me. "	Statement
3137	26969380	ACK apart from minor nits mentioned 	Clarify
3137	26970586	Updated: Fixed @laanwj's nits. 	Clarify
3135	26905874	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8abac716eabceb0696ef7a5d79752c87101c87d9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3134	26899388	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/840905a8fdbac12095ac2ec1aed19181f47230b3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3133	26887775	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4538130790da2ef2affda53b40375feaae3414f1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3133	26892382	Going to make a test the other way around (rpc_parse_monetary_values) too.  	Clarify
3131	26894744	@laanwj Do you have a clue? 	ynQuestion
3131	26896398	"No, I don't know.  "	Reject
3131	26896735	Indeed it was reduced. See #2947. 	Statement
3130	26884114	"Haven't looked at it in detail yet, but moving the message to PaymentServer makes sense as it only re-emits a message.  "	nAnswer
3130	26971397	"I don't think we should make the paymentack message a tray message. As we are not storing it anywhere for later reference at the moment (or are we?), it's good to give the user some time to read it or even copy it.  "	Clarify
3130	26972201	"@laanwj That's fine with me... perhaps there are better methods for handling this message, but that's out of the score of this pr. "	Reject
3130	26972554	Updated: - make paymentACK message a modal information dialog 	Other
3130	26993217	"Updated to reflect @laanwj's suggestion: - add new slot handlePaymentACK() to paymentserver, which handles paymentACK messages (currently we just display them) "	Other
3130	26993536	ACK 	Clarify
3130	26995444	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/08dd1b7be172f7ea580dc9bdf20ac15ea9a2ed31 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3128	26793858	I suspect https://github.com/bitcoin/bitcoin/pull/2740 broke the pull-tester. 	Statement
3128	26875366	"Do we need both TX_NULL and TX_NULL_DATA? Seems to me it should just be TX_NULL_DATA, and supporting that would (I think) be a one-line change: ``` mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN)); ```  If we ever write higher-level code that extracts the data from a TX_NULL_DATA, "	Clarify
3128	26875413	"... wait, no, I'm wrong, mTemplates is a map, not a multimap... Maybe it should be a multimap, though.  "	nAnswer
3128	26875522	"@gavinandresen Regardless of map/multimap, I had the same thought.  TX_NULL_DATA can be defined as OP_RETURN, with optional trailing pushdata <= 80 bytes. "	Statement
3128	26895529	"Well if we want to do that it'll need a separate code path in Solver(), similar to how P2SH is handled specially. I think you can make a (weak) argument that NULL and NULL_DATA make lives a little easier, because you always know that only the latter has data that your app should try to parse. (remem"	Clarify
3128	26960098	"Huh?  This two-line change seems to work properly:  ``` From d485640daee9ecbbdd3f39ca7ab1cda83b99c4a5 Mon Sep 17 00:00:00 2001 From: Gavin Andresen <gavinandresen@gmail.com> Date: Thu, 24 Oct 2013 11:20:23 +1000 Subject: [PATCH] 0-byte OP_NULL_DATA  ---  src/script.cpp                 | 3 ++-  src/t"	Other
3128	26960416	"@gavinandresen Oh, doh, yeah lets just do that + the bugfix and ScriptSigArgsExpected() change I made. "	nAnswer
3128	26975289	Now using multimap so there's just TX_NULL_DATA 	Statement
3128	26977191	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/005609539b2184a474ffe9ebfe883984c900a3fb for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3127	26790385	ACK  	Clarify
3127	26791997	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/406b1f05f61a7bba7ef6860c031a7a7c3e019100 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3127	26792322	"ACK (untested, but it's just a revert) "	Statement
3127	26792909	I guess we should add a test to prevent this from happening in the future.  	nAnswer
3127	26793016	Do we have any way to test RPC in the current codebase?  	ynQuestion
3127	26795558	"Well, there is rpc_tests: https://github.com/bitcoin/bitcoin/blob/master/src/test/rpc_tests.cpp  But there is nothing that tests the JSON parsing / formatting explicitly.  "	Statement
3126	26789499	I suspect #2740 (untested). 	Statement
3126	26789800	Verified:  reverting json-spirit commits 2ecb7555a9df1e843fd25f588819e4ca1d94b266 and 2227389fa8fa1b9ff19234838fc7b641e935125b fixes this issue. 	Statement
3126	26791137	Reverting only 2ecb7555a9df1e843fd25f588819e4ca1d94b266 does not fix the problem.  It's the core json_spirit update that is to blame.  	Reject
3126	26791837	Sucks... 	Statement
3125	26781583	"Ack, this is after SelectParamsFromCommandLine so Testnet() calls work.  "	Clarify
3124	26780587	"Warning: I'm extra grumpy today for no good reason.  I still hate these types of pulls, they just create merge conflicts for no good reason in my opinion. It is fine to cleanup code as it is rewritten...  "	Statement
3124	26781276	"@gavinandresen I'm fine with you beeing grumpy, if you are fine with me beeing grumpy on devs that don't care about cleaning up left-over spaces and such (not specific to anyone, just to be sure ^^). "	Reject
3124	26781477	"I've never really understood the whitespace shuffling all over the codebase either.  Though ""cute"" space-aligned tables like in getinfo() invite this kind of behavior. Hey, one of the keys it too long, let's shift all the others!  "	Clarify
3124	26781496	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/56e527e3052013630d4de33b10bbbb2bf613b937 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3124	26781811	"On the other side, most of use likes when the code is clean and well structured. It protects the general quality of the code. It's like entering a very clean house. You will automatically take more care about stuff in it.  Maybe someone take a closer look at cURL's build process. There is a check fo"	Clarify
3124	26782136	"I prefer people to focus foremost on clean semantics, interfaces and data structures.  Sure, the formatting should not be a mess, but we shouldn't be extremists about it.  I certainly don't want a commit hook or pulltester that looks at formatting. It's better to be accommodating of people's slightl"	Clarify
3124	26782173	Obviously too controversial again... 	Accept
3123	26768771	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/14f870cee50f791bfa9c08bf1d60f8a3b9aeab23 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3123	26781382	ACK 	Clarify
3121	26744933	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/d2078c63193c6105e60e56c1e7a7adc3aed31edd for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
3121	26761801	"The makefile buildsystem has since been replaced by autotools in git master. Does autotools do this right, or do we need an equivalent fix there? "	ynQuestion
3121	26782232	@theuni Can you take a look? 	ynQuestion
3121	26798910	I suppose this is useful for @luke-jr for his stable branch.  As for the autotools build system this change is not needed. mingwthrd is detected and -D_MT is added: https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L194 	Clarify
3121	26860313	"yes, autotools should be handling this correctly already. "	yAnswer
3121	26860427	"Note that I could not find any testers for native win32+autotools. @phelixbtc If you'd be willing to be a guinea pig, I'm happy to get it working there. "	Clarify
3121	26883803	I'll try my very best. Should I start out with current master? 	Clarify
3121	27022777	Yes. Are you available to hop on freenode for a realtime hack-a-thon? 	ynQuestion
3121	27179556	@theuni: tried to email you... contact me at blockchained.com  I assume this will not go into 0.8.5 then... 	Clarify
3121	27179635	"0.8.5 is already released weeks ago. It'll probably be in 0.8.6, but that may be after 0.9.0 "	nAnswer
3121	27543671	Closing; makefile.mingw is no more.  	Statement
3119	26680999	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/db0e8ccd90c741ee52726db90845aaaebe370f24 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3119	26681423	ACK 	Clarify
3119	26681439	"To be legally correct, I think we want to only update copyright for files modified in year 2013...  ACK general concept  "	Clarify
3119	26682122	@jgarzik I think he checked that  	Clarify
3119	26682211	"I verified it before merging:  ``` $ for A in *.cpp *.h; do if [[ ""$(git log --no-merges --since='1 jan 2013' -n 4 --pretty='format:%ad' ""$A"")"" == """" ]]; then echo ""$A""; fi; done bitcoin-config.h mruset.h threadsafety.h ```  Neither of which is touched by this pullreq. "	Clarify
3117	26665862	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3b9ecfed8253ba87777462b3b2cbb1a8fb2f1053 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3117	26671378	ACK 	Clarify
3116	26672537	"I'd rather wait until #3099 is merged, as there are a lot of message changes there.  "	Clarify
3116	27088460	@laanwj It would be very nice if you could wait let's say 2 more days for the merge to mature and afterwards create a new master file update :). 	Clarify
3116	27090033	"I was just going to do this, but if you think waiting two days is better we'll do that "	Statement
3116	27090304	"Just crawling through the new ones, will give a shout, if done... guess tomorrow is realistic. "	nAnswer
3115	26665663	"ACK concept, and code looks good to me.  Needs at least a sketch of a test plan that exercises all of the signals.  "	Clarify
3115	26670132	"Haven't tested yet, but code lookg good and I like the approach.  "	Statement
3115	26671293	"@laanwj The reasoning is that there are callbacks from the node/validation to the wallet; they're really just notifications in general, as the node code shouldn't care about what the wallet does with it (in fact, the signal names shouldn't contain ""wallet"" even, though I chose not to change them her"	Clarify
3115	26671932	"Ok, thanks, that makes it clear, I was just not sure if it was overlooked or on purpose.  I like the idea of renaming the signals to be more general (so that theoretically non-wallets could also use the API to keep track)      SyncWithWallets -> SyncTransactions     EraseFromWallets -> EraseTransact"	Clarify
3115	26674796	"@laanwj Modified the signal names a bit, and added comments. "	nAnswer
3115	27145711	Rebased. 	System
3115	27146331	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/722fa283d04dfe9c70418e69535a08eea06b4377 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3115	27151500	"@gavinandresen Test plan: * Create a transaction in the GUI, and check whether the number of peers that have seen it goes up. This exercises the Inventory signal.   * Leave the client open until it confirms. This exercises the SyncTransaction signal. * Every at most 30 minutes, ResendWalletTransacti"	Clarify
3115	27357628	"ACK.  Ran through test plan with a Bitcoin-Qt in regtest mode and two -regtest bitcoind's, all tests passed.  "	Other
3114	26884870	ACK  	Clarify
3114	27145537	Rebased to make pulltester run again. 	Statement
3114	27145694	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a616206865d62106944300d7b912e3af8d357610 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3112	27140486	It appears that this script is expecting getblock to return the block data as a hex string. Is this supposed to work with a specially compiled bitcoind? 	Emphasis
3112	27141218	"@weex it returns the block as a hex string, if you call it in non-verbose mode, which the script appears to do (I just glanced at it)  Also, I just tested it:  $ python ./linearize.py a.cfg Wrote block 0 Wrote block 1000 Wrote block 2000 Wrote block 3000 "	Clarify
3112	27141250	Closing.  It is meant for 0.9. 	Statement
3109	26650837	"I think this is the right thing to do, I didn't yet check the code though. "	nAnswer
3109	26650958	"If I remember we have a file in doc, which needs to get a small update after this merge also? "	Clarify
3109	26652430	"Ok, updated for your comments  "	Emphasis
3109	26652698	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/163145938ca2ff52e633136ca49e89f880f8e89b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3109	26666491	"ACK, compiles and runs nicely on OSX.  "	Reject
3108	26651151	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3108	26663267	"@laanwj As I'm working on fixing current problems with payment request handling it would be cool to quickly merge this, if ACKed. "	Clarify
3107	26583979	"We had that discussion some time ago, I'm not sure about the consensus. If I remember correctly we don't want to update ALL copyright strings, new files should contain a current year, the client meta-info needs to be current... "	Clarify
3107	26585901	"In principle, people that update an implementation file should update the copyright notice.  So if the file is touched for non-trivial reasons this year it warrants extending the copyright for that file to 2013. This must be considered on a per-file basis, so substitute-all commits will not be accep"	Statement
3106	26562473	Stolen from the original pull for these files #549 from @enmaku 	Clarify
3106	26563776	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6e01daae43cdabe8f939688a306b1b02361e030b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3106	26662122	ACK 	Clarify
3105	26535488	"Agreed.  Also, I would like to see Bitcoin-QT (and bitcoind?) support the simple wrapper that multibit employs.  "	Statement
3105	26536021	I'm not familiar with multibit.  What does its simple wrapper do? 	Emphasis
3105	26536365	"That's a good suggestion, but I'd like to keep the distinction between the wallet abstraction (where addresses are things to receive transactions with, transactions don't have a sender, coins belong to a wallet) and the internal representation (where coins are assigned to addresses). Coin control br"	Clarify
3105	26536386	"It looks like the ASCII armoring provided by PGP:  ---BEGIN BITCOIN SIGNED MESSAGE--- etc.  Makes life a bit easier when sending and receiving via email attachment, easier to detect truncation and other attributes.  In Bitcoin-QT, a user could select a file with a file dialog, verifying (or signing)"	Clarify
3105	26537979	@dooglus  I am confused by this issue.  The sign message dialog in Bitcoin-qt lets you freely type in or paste the address you want to sign with already. There should have been no need to use the console.  	Clarify
3105	26554479	"@gmaxwell That's a good point.  I was thinking I had to use one of the addresses in the 'receive' tab, because that tab's 'sign message' is inactive until I select an address.  But now I see I can also pick 'sign message' from the file menu. "	nAnswer
3105	26555135	"Already possible, so closing "	Statement
3105	26556491	"I'd argue that it *shouldn't* be possible. Signed messages only work for receiving, not for sending. It doesn't make sense to sign with a change address. "	nAnswer
3105	26558425	"@luke-jr Signing a message with a change address proves that the signer controls the change address that sent a transaction.  Why would you argue for removing useful functionality?  What does it even mean to say ""Signed messages only work for receiving, not for sending""?  Signing a message with an a"	Clarify
3105	26576687	"@dooglus Signing proves you *receive* at the address. Just because you receive at a given address, does not mean you sent the coins in a later transaction consuming the outputs (and indeed, the contrary is often true). Addresses are only used for receiving, not for sending.  If people need the abili"	Clarify
3104	26510649	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1728bf0873590c6905e892044f9f87ee97ff3dbc for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3104	26672002	"Agree with the idea of using better ciphers if available.  However, I would first like to understand what ""!AH"" means (it's impossible to google for) before we just throw it out. "	Clarify
3104	26672316	"@laanwj   Reading from the OpenSSL cipher [docs](https://www.openssl.org/docs/apps/ciphers.html).      If ! is used then the ciphers are permanently deleted from the list. The ciphers deleted can never reappear in the list even if they are explicitly stated.  However, 'AH' isn't listed as one of the"	Clarify
3104	26690078	I don't remember why I specified !AH -- it is very possible it was a typo.  Merging before the shed gets more paint on it.    	Emphasis
3103	26469692	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/31127f3161d9b7cf6f0cecbfcf86e4be152bfb35 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3102	26431838	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dc0f4dfebf05e7b9261b593302cb3a01ab12d767 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3102	26432994	How is someone supposed to drop a URL into the client without it being shown already? :p 	Clarify
3102	26581469	"LOL, right! "	Accept
3101	26428217	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/46b57eb500a9060f356967a9519101f14f876ffb for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3100	26837198	@laanwj Is this still the case? AFAIK Gavin recently fixed a RPC shutdown problem related to a NULL pointer. 	Clarify
3100	26842187	Well it was an issue when I tried about a week ago. I don't think anything has changed to the RPC handling since then. You can't reproduce it? 	Clarify
3100	26846396	"Indeed, with server=0 it gives me an assertion in bitcoinrpc.cpp: ``rpc_io_service != NULL``  Caused by ``RPCRunLater()`` call in ``walletpassphrase()`` (in rpcwallet.cpp), because ``StartRPCThreads()`` isn't called when ``fServer`` is false, which inits ``rpc_io_service``. "	Other
3100	26903697	@laanwj What is the best way to fix this? Check for ``fServer`` in ``walletpassphrase()``? Are there more RPC commands that fail when ``fServer`` is false? 	whQuestion
3100	26907061	Only walletpassphrase uses RPCRunLater at the moment. So adding a check to that command specifically will do.   	Statement
3099	26425325	Can you give a screen how it looks when clicking on ``Used sending/receiving addresses...``? 	whQuestion
3099	26425990	"Same as before really, ![addresses](https://f.cloud.github.com/assets/126646/1343477/2c70707c-3674-11e3-95eb-3c11caeb3209.png) **Edit: send/verify message has been removed**  "	Other
3099	26426327	"Didn't test, but looks very nice :). Hope you re-enable sign/verify message links and all is fine. "	Clarify
3099	26508151	"If it's ready only, it's kinda weird to have widgets that look editable for the info.  Also, this dialog would be a great place to save a PaymentRequest message to a file! Although the payment protocol is probably going to be used mostly by servers, being able to save to a file and/or drag/drop into"	Clarify
3099	26509940	"At least for copy&paste reasons text from that window should be selectable, dunno if there is a way to make clear UI-wise it's read-only. "	Other
3099	26524215	"@mikehearn Agreed on generating a payment request. That was one of my ideas behind this, but I'll leave implementing that to a later pull.  As for the fields, yes it's not ideal like this. I'd like to make it a text that can be copy/pasted in one go, not multiple fields. And as @Diapolo says there i"	Clarify
3099	26575517	"@diapolo I think I'm going to remove the sign/verify message buttons from the address lists. After this, they can be launched from the menu directly more quickly. And confusion such as in #3105 will no longer happen then.  Edit: I also want to make it possible to copy/paste or drag/drop the QR code."	Clarify
3099	26582140	@laanwj I'm fine with removing them. 	nAnswer
3099	26587880	"I've added a context menu to QRcode, and it now supports dragging  ![qrcode_context](https://f.cloud.github.com/assets/126646/1359772/1ae56574-37e6-11e3-8065-a717e15b6b02.png)  As it can all be done through the context menu (which people expect from saving images in browsers) I'm not sure whether to"	Clarify
3099	26591051	I've made the URI look like an URI and added a button to copy it. Also I've merged everything into one HTML area to simplify the dialog and make it possible to copy/paste everything at once.  ![newreq](https://f.cloud.github.com/assets/126646/1360439/c9ac093c-37f5-11e3-972e-81ddc0b1102d.png)  	Clarify
3099	26609268	"Whats the rational for even having the reuse box? The only thing I could come up with was trying to avoid adding state to a wallet and breaking backups, but change is going to do that silently in any case (and if we're going to worry about that we should probably just do a fast determinstization of "	Clarify
3099	26610749	"I can't really imagine either what it's useful for. But I'm sure people will complain if we actually make it impossible. We could go even further to obscure the checkbox, but removing the feature completely is a step too far (maybe in 0.11 :-).  "	Clarify
3099	26611323	"@laanwj Really?   Hm.  I think the thing people will miss is not that, but they'll want a reasonably easy way to get a list of previously used addresses.  E.g. ""What address did I just give bob?""     So why not add a request history button/page/tab and then something to click on there to repeat/edit"	Clarify
3099	26611954	"Yes, a request history would be a good idea too. It could simply store the last N generated bitcoin URIs. I'm not going to add that in this pull, though.  If you want an address to receive an unspecified amount you can just leave the amount and other fields empty (except for possibly the label). It "	Clarify
3099	26877420	"Nice!  Compiles and runs on OSX, and I like the functionality.  "	Statement
3099	26897468	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c0e322aea7872c3e4eecde227dfe7ccef852a78c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3098	26391411	"ACK; good enough to merge in my opinion, but @jgarzik : any objections to moving linearize tool from misc/ ?   "	Clarify
3098	26391722	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/27e2d8bfb5678e79d956b9f1aa50c1b14177d748 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3098	26396552	ACK  	Clarify
3098	26413712	ACK  @gavinandresen: no objections  	nAnswer
3097	26387830	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dd9bd863cfc52c17753c75a983ea49870e9b1c53 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3094	26334804	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/75fa27eacaa12ce9c9630db787f69fd0d70bcfc3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3094	26393345	"ACK, tested and works nicely.  "	nAnswer
3093	26365272	Good catch!  	Emphasis
3092	26331847	ACK 	Clarify
3092	26332085	"I am testing the new build instructions with Ubuntu 13.04.  - Figuring out the dependencies is hard, given that different Ubuntu version schemes are used (sometimes Ubuntu Precise, sometimes Ubuntu 12.04). It's sometimes not clear if the doc implies ""and later"" or ""and earlier"".  - $ ./autogen.sh  C"	Clarify
3092	26332782	"For libtoolize, can you try to install ""autotools-dev""?  "	whQuestion
3092	26333330	@laanwj autotools-dev is already installed. 	Statement
3092	26333405	libtool then  	Statement
3092	26334045	"package libtool is fine, autogen succeeded. Now ./configure fails at  checking for Berkeley DB C++ headers... no configure: error: libdb_cxx headers missing  I assume this is due to libdb* packages missing, however none of the alternatives worked for me:  Package libdb4.8++-dev is not available, but"	Clarify
3092	26334233	You're using these?      db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin)   	Clarify
3092	26334447	"No, I was hoping I can satisfy all dependencies from the Ubuntu repositories. Is this possible? "	nAnswer
3092	26334797	"That's not possible, there are no bdb 4.8 packages in the repository for 12.04 and later. You can use a newer bdb but once you use that you break binary wallet compatibility thus is not recommended (that's literally in the build instructions).  "	Reject
3092	26335172	"If you were already compiling bitcoin(d/-qt) before on ubuntu, you were likely using bdb 5.1 anyway, and you already lost that compatibility. In any case, nothing a db_dump + db_load can't solve if you really need to downgrade bdb. "	Clarify
3092	26335490	"Yes, for now I installed bdb 5.1 from the Ubuntu repositories again.  Also, I needed to install ""libprotobuf-dev"" (missing in the doc).  "	Clarify
3092	26335672	" Now, I get  checking if qt should be enabled... configure: error: ""qt support requested but qt could not be located. use --without-qt""  I have installed libqt5gui5 libqt5core5 libqt5dbus5 qttools5-dev-tools as documented. Did not try the qt4 path. "	Clarify
3092	26335754	I'll add libprotobuf-dev.  Ok so it seems that @diapolo is right and Qt5 is no longer supported at the moment :( 	nAnswer
3092	26336195	"Ok, going the qt4 route then.  Is ""checking if ccache should be enabled... configure: ccache not found. Falling back to default CC no"" expected?  "	Reject
3092	26336326	"Yes, ccache is not necessary for a build but can be used.  "	Reject
3092	26338186	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/62568f9a1e98065bd51069649f23a337eab89f94 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3092	26340336	@laanwj what would be the package for ccache?  I managed to build bitcoin-qt using the instructions. Thanks for your help! 	Emphasis
3092	26349601	I think the package is simply 'ccache'. 	Clarify
3092	26349975	"Yes, that works. "	Accept
3092	26386902	Missed the index link in the /doc readme. See #3097 	Statement
3091	26323978	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/96b9603c01dd4b6d337f431b508a4364c4fbfe01 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3090	26321453	"Indeed, this should clearly be !memcmp(...). That's quite a sneaky bug.  Phew, luckily the key  == functions are not used anywhere. I made `CKey:==`, `CExtPubKey:==` and `CExtKey:==` private and everything still compiles.  Not meant as excuse not to fix this, but at least there's no security problem"	Clarify
3090	26322899	"^ ^ , I saw many many unused codes in bitcoind, I am rewriting a c++11 version without boost & jsonspirit.  hope I can help.   "	nAnswer
3089	26282457	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5009710994b0aa92cb73b6a3d804ce8d56f7d931 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3087	26230573	Added a commit that makes some validation globals static (and private). 	Clarify
3087	26305306	ACK  	Clarify
3087	26454237	@Diapolo removed the superfluous comment. 	Continuer
3087	26876844	"I think ""we"" should get Matt's blockchain tester tool working with the pull-tester again before merging this.  "	Clarify
3087	27042092	@gavinandresen What is broken? 	whQuestion
3087	27538924	Rebased to trigger PullTester rerun. 	Statement
3087	27540289	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/caca6aa4eb54b71b5e4e9ccfa69341f985b178d9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3087	27622442	Any objections? 	ynQuestion
3087	27622469	ACK. (Now that it has a comparison tool pass!) 	Emphasis
3086	26205788	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c00237de9d4a4bce9f9e536e9e71fa2b5b0ffef5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3086	26209957	"I performed 'sudo add-apt-repository ppa:bitcoin/bitcoin' and 'sudo apt-get update' commands prior to my attempt to grab the bitcoin source code with 'apt-get source bitcoin.'  I was able to grab the source code fine, but the sub command gpgv reports it can't check the signature since the public key"	Clarify
3086	26219931	"Thanks for responding Michagogo, you kept me from going down the rabbit hole and forced me to Google deeper to find the solution.  I am still wrapping my head around this, but I was able to get rid of this error by grabbing the key for Matt Corallo (BlueMatt) <matt@bluematt.me>, from the keyserver a"	Clarify
3085	26202183	"On my phone, so haven't reviewed this thoroughly nor can I add a comment directly on the diff, but the bump of version numbers wasn't an oversight or anything -- master was built on top of 0.8.2,  and 0.8.(3-5) were branched off of there. If you'll look at the tags, the last (or one of the last) com"	Clarify
3085	26202486	Maybe this helps illustrating: ``` 0.8.0 -- 0.8.1 -- 0.8.2 ---------------------------------- HEAD (-- 0.9.0)                         \                           \- 0.8.3 -- 0.8.4 -- 0.8.5 (-- 0.8.6) ``` 	Other
3085	26207310	Gotcha and reverted. Anything else? 	ynQuestion
3085	26207973	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0aa9851b188d5f5144debfabb249bd44ec56ea65 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3085	26227442	ACK 	Clarify
3084	26201313	ACK 	Clarify
3084	26322543	"@sipa Rebased, should be merge-ready. "	Statement
3084	26323771	"ACK, good catch "	Accept
3084	26324413	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/47970dac41f685810663e44c058a37fd1485a532 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3083	26305261	"untested ACK.  ACK, presuming getblocks and getheaders style downloads from older clients has been tested.  "	nAnswer
3083	26321693	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f9b15a4fc94cdd4b535a2f7b1eccc04332367d00 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3083	26370768	"@jgarzik We should test that, indeed. @gmaxwell Feel like testing sync by/from a node with this patch? :p  "	Other
3083	26371125	"Sometimes I miss the practical pros such pulls give, like 5% faster in IBD or something easily understandable. Can you give an insight if this is the case here :)? "	Clarify
3083	26373684	"There's two improvements here.  The first is just a cleanup. The CBlockLocator datastructure is part of the P2P protocol (so something very basic), but its methods directly refer to some of the validation engine's globals. That's really ugly, as a user of that class you won't expect that using some "	Clarify
3083	26374637	"ACK description wise, sounds like a very good idea! And thanks for taking the time to explain it to me :+1:. "	Emphasis
3083	26380080	"ACK.  Code changes look good, and I tested following combinations against new code:  old code, partial chain, main network old code, partial chain, test network old code, fresh sync, test network  "	Clarify
3082	26201614	"Some comments on the help output:      Usage:       bitcoin-rpc [options] <command> [params]  Send command to -server or bitcoind  Not sure if it was introduced by this commit, but I have no idea what ""sending to -server"" would mean.        -rpcport=<port>        Listen for JSON-RPC connections on <"	Clarify
3082	26207209	"    Not sure if it was introduced by this commit, but I have no idea what ""sending to -server"" would mean.  That was not introduced in this commit. It is also in bitcoind, I literally took that over. I suppose it means ""a bitcoin-qt started with -server"".  Agree on the rpcport having different meani"	nAnswer
3082	26216766	"Updated the help message accordingly, and added mention in bitcoind help message that using it as client is deprecated.  "	nAnswer
3082	26219652	ACK.  One nit: -rpcsslciphers isn't used by the RPC client either. 	Statement
3082	26229337	"Good work. Any stats on the performance over Bitcoind?   Any idea on the time period for deprecation and drop of RPC from Bitcoind? A fair amount of codebase in based on Bitcoind, so that might cause some breakage even if it is deprecated for a while.  "	Clarify
3082	26229504	"I expect performance to be exactly identical to bitcoind for now.  Once we can create a stripped-down version with less dependencies, startup time may be reduced a bit. But really, it's just thin wrapper to expose an interface intended for computers to humans. If performance matters to you, you shou"	Clarify
3082	26239184	"Performance wasn't the concern here, just sanity. Why would you need bitcoind on a system that only does requests? And good luck browsing through the bitcoind help message to find options that concern the client. Even as bitcoin developer I needed three reworks to get those right. There is just no e"	Clarify
3082	26324716	"Ok I've hidden -rpcsslciphers for the client. I still think it would be useful to have it in the client as well (SSL_CTX_set_cipher_list isn't even called in the client), but that is off-topic for this pull. "	Statement
3082	26670150	"In case we agree with adding a seperate RPC client, can we please merge this soon? Every change to the help message results in an ugly merge in init.cpp. "	nAnswer
3082	26671252	"@gavinandresen @jgarzik @gmaxwell Any general opinion about this?  IMHO, the fact that bitcoind is both a client and a server is confusing, and that alone warrants separating them (though certainly not instantly, too much legacy code relies on bitcoind for now). "	nAnswer
3082	26671772	"Right, a lot of code relies on bitcoind being a client, that's why this doesn't disable or change the functionality in bitcoind, it just adds a new executable with only the RPC functionality. Removing is completely separate and should be left to a further future release when people had the chance to"	Clarify
3082	26673388	"@laanwj If we ever choose to actually separate the code, there is always the option to make bitcoind exec() bitcoin-cli in case some command is provided still. "	Clarify
3082	26673898	"ACK, with optional, feel-free-to-merge-without-this comments,  1) I would name it ""bitcoin-cli"" or ""bitcoin-remote"" mirroring some existing practices.  2) Remove, rather than deprecate, ""bitcoind <command>"" usage.  Will break some scripts, but so what.  I'm more willing to break stuff like this, as "	Other
3082	26674010	"Is there any reason this should be Bitcoin-specific? Couldn't a generic-JSON-RPC CLI client (perhaps written in Python?) work just as well, without complicating the codebase unnecessarily? "	Statement
3082	26674284	"@jgarzik Bitcoin-cli/remote is fine with me, I don't have any opinion on the name. I still prefer a two-step deprecation process though.  @luke-jr How is this complicating the codebase? If anything, this is the beginning of a clean-up. I did some code movements in the original commit to separate dif"	Clarify
3082	26676366	"@sipa I like the idea backward compatibility using exec() to call bitcoin-cli. I assume care of course must be taken to prevent malicious injection via Bitcoind.   @jgarzik I agree that it needs to removed, but I'd rather devs have at least one release cycle to use bitcoin-cli and change their core "	Clarify
3082	26676733	"Complication, for example see all the different conditionals in strUsage now.  Argument parsing might be an issue, I suppose - are there any cases where a Number might be confused with a String or vice-versa? JSON doesn't have doubles or integers, just Numbers - a client or server that makes a disti"	Clarify
3082	26681172	"@luke-jr yes, the helpmessage function is complicated somewhat by this, but that's the only one. To make it more readable it could be formatted as a table with a bitfield per option (which client kinds it applies to), if anyone cares enough to do that.  A seperate git repository sounds pointless. It"	Clarify
3082	26681993	"Well I guess actual separate repositories is one potential future, but I doubt we'll get to the point with the current codebase where that makes sense.  I am in favor of a nice and shiny python RPC client, which supports things like tab completion, and inline help, and batch processing, and pipeline"	Clarify
3082	26682228	"@sipa That kinda sounds like a fun project for me, after I do a few more documentation sweeps. I can add unicorns as long as you don't mind them being [green](http://gunicorn.org/).  "	Clarify
3082	26682344	"Wouldn't tab completion ideally be something in the shell instead of in the executable itself? Ie, bash has extensible command completion. "	Clarify
3082	26682386	"Fair enough- I wasn't entirely serious of course. I just mean that a featureful RPC client sounds useful, and Python (or any script language) sounds more appropriate for developing that than C++ - and easier to review. "	Clarify
3082	26682718	"A python RPC client would definitely have benefits except for ease of cross platform distribution.  For example, it appears that py2exe can't be cross-compiled from a Linux host and also relies upon Microsoft DLL's. "	Reject
3082	26683496	@sipa Which is why I said it would be a fun project. One or two of those features would be really easy to hack together using existing libs.  @wtogami Hmmm. Didn't know that py2exe had that limitation. Perhaps an alternative might provide the needed cross platform distribution. A quick google search	Clarify
3082	26691897	FWIW: At least my Python install (on Linux) has a bunch of exes for building Windows stuff with. 	Statement
3082	26692092	"Any sort of python clientage is outside the scope of this pull request.  This PR is fine *right now*, even if a future decision replaces the C++ client with something else down the road. "	Clarify
3082	26695157	"@sipa I now understand, you're thinking of some kind of interactive client, not so much the rpc client it is now that is used from the shell or shell script. Sure, that'd be a useful project. I played with that idea while making the debug console, but it stayed at that as we don't want a scripting l"	Clarify
3082	26697663	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2a03a39020da5ae38f05c38a5bf92c023acdeb90 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3081	26139049	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/733511eda044637cf2f4381ff610f803b55785a0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3081	26169729	ACK 	Clarify
3080	26135772	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/06dfd23d4106de6672ac451b29ae16c97d7fb76b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3080	26329630	@laanwj Could you check= Should be just a bunch of non-controversial changes :). 	Statement
3079	26118671	@ThePiachu  Are you actually sure that you're restarting it?  What you're describing isn't obviously possible:  Where would it get the other string from?  I would suspect that the issue with your long password was the presence of characters like ?&<># getting munged in the encoding for http. Is this	Other
3079	26234909	"Hmm, trying to reproduce this issue today was unsuccessful. I guess it must've been some sort of fluke last time, or I was doing something wrong.  At any rate, the password was just alphanumerical characters, no punctuation or anything.  I will just close the issue since I can't reproduce it any mor"	Clarify
3078	26114425	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2b51a4d72527827fc3876633902e4590144005df for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3077	26129497	Encapsulating some of the global state is a great idea either way.  	Clarify
3077	26135767	"Seems OK except for some English that bugs me:  ""tip"" does not necessarily imply ""best tip"" to me. "	Clarify
3077	26139826	"If you're talking about CChain, that's intentional: it's just a chain of blocks, and a chain has a tip. It has no concept of ""best"".  One particular (and for now, only) instance of CChain, chainBlocks, represents the currently active (=synchronized) block chain, which indeed follows the notion of be"	Clarify
3077	26140666	"In the local context of the CChain class itself, ""tip"" makes sense.  In the wider context of the entire codebase, it makes the code less readable, because our blockchain can have multiple tips, only one of which is active/best. "	Clarify
3077	26140936	"I see what you mean. I think part of the problem is that many people use the term ""block chain"" to in fact refer to the entire block tree, which consists of many chains - while in this context it actually refers to just the active chain within it.  Suggestion: call it chainActive or chainSynchronize"	Clarify
3077	26141505	@sipa You've got it.  Any of those suggestions is fine.  	Clarify
3077	26151319	"On 10/10/2013 02:10 PM, Pieter Wuille wrote: > This removes several globals (pindexBest, hashBestChain, nBestHeight, nBestChainWork, vBlockIndexByHeight), and turns them into an instance of a CChain class, chainBlocks. >  > This is a preparation for a second iteration of headersfirst which I&#39;m i"	Clarify
3077	26151839	"That is completely outside of the scope of this (or any single) pull request, and requires pretty much a full redesign of how Bitcoin's consensus mechanism works.  If you don't want to download or process the whole blockchain, run an SPV client (multibit, bitcoin wallet for android, ...). There are "	Clarify
3077	26152995	@jgarzik Updated the variable name to chainActive. 	Clarify
3077	26153246	ACK  	Clarify
3077	26197113	(moving some extra commits to another pullreq) 	Clarify
3077	26197281	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4c6d41b8b653ef90639b1a32f6aab0bb1cef90c5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3077	26305185	re-ACK  	Statement
3077	26307214	ACK 	Clarify
3076	26091009	"phexdigit is used in bignum.h too, this can share the same definition now  "	Emphasis
3076	26114705	"if you like the idea of this pull request, I'll create a v2 that makes bignum use the same array.  "	Clarify
3076	26672133	"Some further comments then IMO this can be merged  uint256.h:      inline signed char HexDigit(unsigned char c)     extern const signed char p_util_hexdigit[256];  * this function and data structure declaration should be moved to `util.h`, because `util.c` is where the implementation is. Any reason "	Clarify
3076	26915390	"Wladimir,  I agree with changing input param type.  However, the function cannot be moved in util.h Why? Because this would create a circular dependency.  uint256.h would need to include util.h and util.h already include uint256.h. This is arguable that in that case, the array definition could then "	Clarify
3076	27070656	"I understand... bitcoin has always been rife with circular dependencies and I wouldn't want to reintroduce one. Creating two new files is overkill, most of the core devs don't like to have many small header files (though it would be more modular, it would also be harder to remember where things are,"	Clarify
3076	27187377	"Wladimir,  thanks for contributing to my git education. It has been my first commit squashing ever :-) "	Statement
3076	27187848	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f171ec0c7d084b6bb163d1466edd814cf4dcbc93 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3074	26115142	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b0091bb8961eb9c6eda1aabba7182794b3d0d477 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3074	26226274	"ACK unless there is someone depending on this. Perhaps some people are - I don't know.  As this is one way through which ""no key reuse"" was encouraged, I'm sort-of sad to see this go, though it's unlikely to be a big deal, as the default key isn't shown anywhere. "	Clarify
3074	26246977	It wasn't a good feature against key reuse.   - There are concurrency problems waiting for anyone relying on this in larger sites (that means -- anyone waiting for more than one transaction at a time) - As this is only active in bitcoind and there is no way to interact with the default key at all  I	Clarify
3074	26673233	ACK 	Clarify
3073	26033269	"I'm fine with that change, I remember it was a pain to see some issues raised, because of wrong data-dir paths because of caching etc. "	nAnswer
3073	26115339	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/23e0d45b79f1885a318f9eed6a7c5ceb6e449206 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3073	26226402	"OpenDiskFile() calls GetDataDir, so during IBD and initial startup it is called many times. It's unlikely to be a performance burden, but it seems silly to make that many system calls (yes, I realize we call open() and read() and gettimeofdate() much more...) over and over again, trusting that it wi"	Clarify
3073	26312043	I think it's silly to use this kind of caching logic for what is a simple string operation that is only invoked before opening a file.  With the system call you mean the fs::create_directories (as getenv is not a system call)? I agree that's a bit silly to do every time. It would be better to create	Clarify
3073	26647452	I don't care enough about this to keep it open.  	Reject
3072	26133588	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/f0bc89e011eda6620ec091523773c82d09398c82 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3072	26153505	"According to the pull tester this has a build problem on win32, though I but have no clue why. I'm missing some include in bitcoinrpc.h, but which one?  "	nAnswer
3072	26153905	"@laanwj This seems relevant: http://boost.2283326.n4.nabble.com/boost-asio-UnregisterWaitEx-RegisterWaitForSingleObject-has-not-been-declared-td4633963.html  Review comments:  It would be nice if this were split into smaller chunks.  At a minimum, I would recommend two commits: * Code movement of ex"	Clarify
3072	26162172	"Ok, thanks for a the link re: boost.  Smaller chunks? Usually the question is to squash together the commits not the other way around.  "	nAnswer
3072	26163174	"Sure.  It is also possible to go too far with ""everything in one patch""  :)  The ideal is a progression of logical code transformation steps, much like the steps in transforming an algebraic equation or math proof.  Each step must be buildable and testable, so as to not break ""git bisect.""  Code mov"	Clarify
3072	26171621	"I'll make a version without any code movement. That part was an attempt to split off the parts that don't rely on the database/block chain code, but it turned out pointless anyway. "	nAnswer
3072	26174852	Closing in favor of #3082 	Statement
3072	26201830	"Hmm, in what way does chainparams depend on leveldb/bdb?  EDIT: transitive dependencies from chainparams I can find: bignum, uint256, util, core, protocol, netbase, sync, version, ui_interface, serialize, script, compat, hash, clientversion, allocators, keystore, key, crypter. "	nAnswer
3072	26207009	"Through chainparams it pulls in almost all the implementation files.  The only way to solve this would be to make util no longer depend on chainparams, or split up util into a part for the rpc client and a part for the server (after all, the rpc client doesn't even need the network-specific director"	Clarify
3072	26217760	"Ok, with two simple modifications (adding a dummy main(), and moving uiInterface from init.cpp to noui.cpp), the following compile succeeds:      g++ -o blah noui.o allocators.o netbase.o script.o core.o version.o keystore.o key.o util.o \     protocol.o sync.o chainparams.o hash.o crypter.o -lcrypt"	Clarify
3072	26218440	"But that's still way too much for the bitcoin-rpc client. There is no way in which the RPC client needs the core, script, key, hash, chainparams, sync, protocol or even allocators. The client part doesn't depend on that, it does no handling of keys or blocks.  The only thing it needs is part of the "	Clarify
3072	26218472	"@laanwj Agree it's still way too much, and let's merge #3082 first. I was just thinking about modularizing the source code in general :) "	nAnswer
3072	26219461	"Maybe I'm dim, but how can RPC-client live without protocol? I mean, isn't that what it has to use when it asks a remote bitcoind to do anything?  "	Clarify
3072	26219496	protocol is the P2P protocol nodes talk to eachother. RPC clients just use JSON over HTTP. 	Reject
3071	25951625	ACK 	Clarify
3071	26115592	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d8315d1650373e6609cfda921160fd51f6608a99 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3071	26127338	"Seems reasonable and passes tests, get it in :). "	Statement
3069	25949844	"@TheBlueMatt Can you take a look at the @BitcoinPullTester failure, seems unrelated to my pull. "	Clarify
3069	25950202	Thanks for cutting this down to one change 	Clarify
3069	26032940	Is @BitcoinPullTester currently broken again? Would be nice if this (now small ^^) pull can come to an end. 	Clarify
3069	26101328	"Pull-tester *is* broken, I'm poking at it to figure out why.  RE: coinsSent:  I think @laanwj's intuition is right, adding to the address book should ideally be done as a coinsSent signal handler. I can imagine some future change where we want to add a coinsSent signal handler that does... something"	Clarify
3069	26137319	"I changed the code back to emit coinsSent() AFTER the addressbook code was done or skipped, so this can be merged soon.  As for the other suggestions to implement another coinsSent signal handler for adding to the addressbook, I'm still not sure how do do this, but can now be done in the future anyw"	Clarify
3069	26139699	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/48c011489b047389e7c1c3aa8634de5133ec5b5c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3069	26255777	ACK  	Clarify
3068	25881182	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c7b1d6bbc76b6d9ff8727416f0d2cce0c0141b22 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3067	26033357	Comments? 	ynQuestion
3067	26132536	Updated: - remove fDebug ONLY in code which is NOT performance-critical 	nAnswer
3067	26176839	"I don't think I like the ""-debug means -debug=all"".  I run with debug=1 in my bitcoin.conf, and will add temporary LogPrintf() statements as I develop code (and will remove them or change them to LogPrint(""category""...) before pull-requesting).  Just like I used to add printf() statements during dev"	Clarify
3067	26177496	@gavinandresen So what would you like -debug to mean then?  	whQuestion
3067	26194361	"I understand how logging with an empty category can be useful for temporary debugging, but from a user/external developer viewpoint, is it logical behavior? What would you expect plain -debug to do on a package that you don't know deeply yet and are trying to debug?  In any case I'd be fine with -de"	Clarify
3067	26204384	"I agree with @laanwj here - having a """" debug category seems counter-intuitive. "	Clarify
3067	26395016	"@sipa @laanwj @gavinandresen I'll summarize, what I think should be default behaviour (I don't say the pull is currently doing this already ^^):  Using ``-debug`` sets fDebug and we display ALL categories (``LogPrint()``). Using ``-debug=<category>`` sets fDebug and we display ONLY the speciefied ca"	Clarify
3067	26400131	"@Diapolo:  -debug and -debug=  are the same. They both will set mapArgs[""-debug""]=std::string("""")  Changing that so -debug and -debug= sets mapArgs[""-debug""] to two different things is likely to break things in unexpected ways.  EDIT: just realized I'm probably misreading, and you mean -debug being "	Clarify
3067	26400848	"Sounds good to me.  Related, but outside of this pullreq: I've been wondering whether categories shouldn't just correspond to threads, and indeed, whether we shouldn't just print them by default. Also, do we really worry enough to make -logtimestamps non-default anymore? "	Clarify
3067	26403021	"@gavinandresen: when learning a codebase or trying to find a problem in an otherwise unknown codebase I usually find it useful to enable all debug information, to get some idea what it is doing. It's of more limited usability once you have a better idea what you're looking for.  "	Clarify
3067	26508301	"@sipa @laanwj @gavinandresen Can you take another look?  I added some suggestions from above and as I wrote earlier, this is achieved now:  Using ``-debug`` or ``-debug=1`` sets fDebug and we display ALL categories (all ``LogPrint()``). Using ``-debug=<category>`` sets fDebug and we display ONLY the"	Clarify
3067	26508400	"@sipa Agreed, ``-logtimestamps`` should be default, as it's much more readable IMO. "	Statement
3067	26781141	"@gavinandresen @sipa @laanwj Rebased, fixed a merge-conflict. Can I get some final ACKs or futher comments? "	Emphasis
3067	26786152	"Great suggestions, re-working... "	Emphasis
3067	26787547	Updated: - help message - special-case -debug=0/-nodebug - replace my checks with generic checks (thanks @laanwj and @gavinandresen)  ``-debug`` overrides ``-debug=<category>`` and ``-debug=0`` or ``-nodebug`` override all others!  I hope this is now just a final review! 	Other
3067	26795879	Failure because of the json-pull... 	Statement
3067	26970159	Updated and removed an unneeded ``\n`` in ``InitWarning()``. 	Statement
3067	27143766	Can I get some ACKs :)? 	ynQuestion
3067	27153373	ACK apart from the nit above. 	Clarify
3067	27154547	"@sipa I reworked the help-message for -debug once more, it reads now: bitcoind: ``Output debugging information for <category>. Output all possible debugging information if <category> is not set. <category> can be addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net.``  Bitcoin-Qt: "	Clarify
3067	27154768	@Diapolo It's stil an extremely long line :) 	Emphasis
3067	27177300	"@sipa Like this? <pre> Output debugging information for category. Output all possible debugging information if category is not set. Category can be addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net. </pre>  Or feel free to just suggest a string, so we can merge this :). "	Other
3067	27204638	"New string with new-lines :-D.  bitcoind <pre> Output debugging information for category. Category can be addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net. Output all possible debugging information if category is not set. </pre>  Bitcoin-Qt <pre> Output debugging information fo"	Other
3067	27377314	I hope @BitcoinPullTester is now happy again and @gavinandresen or @sipa can give a final ACK. 	Clarify
3067	27398728	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3b570559f8d39a5d4cffd01b8091c3133f7750dc for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3067	27444504	ACK 	Clarify
3066	25876677	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/917ac1dcc1d060c2e5b2bd225de24309a14b8c4c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3065	26116242	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1b439d245efe286c8305f337d6d3bf4d566ebd87 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3065	26170442	"Are you sure the leveldb flag is needed, and not just rebuilding? You may need to clear your leveldb subdir after upgrading to post-autotools code. "	Reject
3065	26689833	Closing; compilation flags are passed down into leveldb by the autotools-generated upper-level Makefile.  And readme-qt.md is gone (see doc/build-unix.md). 	Clarify
3061	25785533	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f38e39df7f009d9d229b14447a2644db65c3d183 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3061	25792037	My main gripe here is that you're making the code longer instead of shorter. Have you benchmarked the improvement in any way? 	ynQuestion
3061	25792589	"That is really the sort of code I don't like to read, before AND after ^^. "	Reject
3061	25863055	"laanwj,  what metric are you using to make the statement that the code is longer?  Line code count may be misleading. Out of the 26 new lines, 9 are empty lines or lines only having brackets. Also consider that previous statement:  int64 n_abs = (n > 0 ? n : -n);   is in fact a packed if else block."	Clarify
3061	25863484	"I find the old code easier to read, and ease of reading is more important than performance. Especially for a routine like this, which I strongly doubt is on any critical code paths.   "	Clarify
3061	25864581	Ok. it is not a good pull request. Hell is paved with good intentions.  I have benchmarked my modifs and the results are almost identical between old code and proposal.  Any memcpy avoided by new code is offseted possibly by the fact it has now 2 string object. local str and strprintf return value w	Clarify
3061	25880294	@lano1106 thanks for trying to help anyway!  	Emphasis
3060	25857069	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a6ff5cd7541f420a8e7bc74f7514f163ac3900ed for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3060	25858285	Merged. 	System
3059	25782818	"How did you test the if (!fRet) case (that is, the case of an error during the startup process)?  I tested an alternative version of this patch that just does a join_all in the clean shutdown case by starting up / shutting down 100 times, so ACK on that part.  But I'm not willing to spend the time t"	Clarify
3059	25786745	"Gavin, I didn't test them, as this patch is based on an observation (missing ``join_all()``) and your comment in my issue-ticket. I'm fine with removing it for ``if (!fRet)`` and just placing a comment there instead. "	Emphasis
3059	25786897	Updated based on Gavins comments. 	Clarify
3059	25787640	"Nit: it's not true we ""can't"" test all of the startup failure modes, I actually DID test them all (by simulating all the failure cases with hacked versions of the code) when I did the thread work originally.  Absolutely clean shutdown when there is an error starting up is just too low a priority to "	Clarify
3059	25788105	"Updated comment, to address the nit :). "	nAnswer
3059	25805790	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c55d1600da35e3882f149b00f972c0ef9cb41dfa for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3058	25750512	"No, there is not much excuse for using a centeralized service. We should have stopped using this a long time ago. The bitcoin network itself already provides the required service.  ... it's also not that urgent anymore, since UPNP provides it in cases where the host is behind nat and gets the addres"	Clarify
3058	25767295	I rememeber I have an open issue somehow related to this and perhaps we can just find a way to remove the use of these kind of services... I think it's time :). It was #2280. 	Clarify
3058	26705677	"See #3088 for the solution. Closing this one, as it can be considered a duplicate of #2280.  "	Statement
3057	25747084	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5bc71a57daeaa0af54ff61c2dfbffd1357718e7e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3057	26031884	"As I understand it according to the C standard, this changes nothing.  http://c0x.coding-guidelines.com/6.3.1.8.html :      714 Otherwise, if the operand that has unsigned integer type has rank greater or equal to the rank of      the type of the other operand, then the operand with signed integer t"	Clarify
3057	26032008	"Yeah, even if it doesn't change behaviour, as was intended, it allows at first look what is done there IMO. If this is unneeded, just close the pull :). "	Clarify
3057	26032628	"It is important to specify `U` explicitly in cases where you're working with types of different rank, for example int and unsigned short. As the rank of the signed type is larger in that case the result will be a signed int, which might be not what you want.  Whether it makes sense to do it here is "	Clarify
3057	26043371	"NAK, not needed "	Reject
3056	25747426	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a8d0c1e8cceb343f03a304edfc6582657dc5d00c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3056	25763763	ACK 	Clarify
3055	25746023	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/178bff67c0fa5a9332ed959345c6dfd67fb4d078 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3055	25763794	"I feel somewhat safer if the .desktop specifies the whole path, at least for the executable.  "	Statement
3055	26102762	The Icon change is fine.  I would similarly suggest the full path for a distro package in order to guarantee that you are running the expected packaged binary instead of what may be installed elsewhere and earlier in $PATH. 	Clarify
3055	26226453	Agree with @laanwj and @wtogami. But perhaps these are more distro conventions than things we should be deciding? 	Other
3055	26227145	My earlier point is that it is awkward to have a distro packaging be reliant on what upstream is willing to include.  I would be in favor of complete removal of all distro-specific things.  There is a similar issue in the always out-of-date Ubuntu build instructions included in Bitcoin.  Let distros	Statement
3055	26244584	"@wtogami Distro packaging is of course not reliant on what upstream is willing to include. It's very hard to find upstream that is able to create a valid desktop file (categories are usually the biggest culprit), so distributions keep patching that stuff all the time.  At the same time it is nice no"	Clarify
3055	26246115	"The summary is that we're ok with the change in the image file name, but not with the change of the executable to a non-absolute path.  "	Statement
3055	26247027	"> At the same time it is nice not to carry a lot of patches in distribution packages, because it enhances upstream > codebase and simplifies maintenance of the packages. That's why I sent this pull request, but feel free to decline it if > you see it doesn't fit.  Broader discussion: Any distro-spec"	Clarify
3055	26248048	"Desktop file is not distro specific stuff. DSC, ""debian"" directory or SPEC file is. Please stop mixing two quite different things for the sake of your arguments (with which I do agree). "	Clarify
3055	26249626	I would agree with you except for contrib/**debian**/bitcoin-qt.desktop 	Clarify
3055	26253187	"Right, ignore the ""debian"". It grew from debian  a long time ago but the stuff inside the directory (like the desktop file and man page) is pretty much generally usable. "	Clarify
3055	26705731	"Closing this, nothing constructive is happening. Distributions are free to do whatever they want with the .desktop file that makes sense in their specific environment. "	Reject
3054	25736597	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c2b705f0ce0a1c51f71db62b757d43f752499e8a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3054	25737552	"NACK from me. Compilers are very good at optimizing away creation of temporary objects, and I'm against this kind of ""worry about micro-optimizations that used to matter in some compiler somewhere but aren't relevant any more"" change.  "	Clarify
3054	25742924	g++ 4.8.1 isn't that good then as I have verified that the generated binaries after the patch were smaller.  I have seen computation programs execution time reduced from 2 hours to 25 mins by doing just that.  Granted bitcoin is probably more io bounded than it is doing heavy STL iterations but why 	Clarify
3054	25743331	"Our bottleneck is testing and review, so the best way to slowly gain our trust is to help test and review existing pull requests, before adding to the general workload by submitting small improvements that must still be tested and reviewed.  RE: generated binaries are smaller: how much smaller for r"	Clarify
3054	25750200	> I have seen computation programs execution time reduced from 2 hours to 25 mins by doing just that.  And the improvement here was?  	Clarify
3054	25762528	"Gavin,  We are talking about 10KB on the 64-bits build but I think that you were right and I must say that this is before stripping the exec. After stripping they have the same size.  I have explored the question further with these small test program  lano1106@Wailaba2 ~/dev/test :( $ cat pre.cpp #i"	Other
3054	25763768	"We're not a big fan of commits that make changes all over the place. If you want to optimize, it's better to pick a function that's used a lot, benchmark it, then re-benchmark it after the changes.  "	Clarify
3053	25700283	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a5e685bcf8eea088ba2eea544dcf2b0ac29ff6cc for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3053	25703598	According to Wikipedia (https://en.wikipedia.org/wiki/List_of_IPv6_tunnel_brokers) you're correct.  ACK 	Clarify
3053	25705171	"Here's the address assignments page from IANA: https://www.iana.org/assignments/ipv6-unicast-address-assignments/ipv6-unicast-address-assignments.xhtml As you can see 2011: isn't a valid prefix. whois says hurricane electric has 2001:470::, and my IPv6 tunnels I have with them are all in 2001:470:: "	Emphasis
3053	25746015	2 dev ACKs with valid sources should lead to immediate merge for such small pulls IMHO :). 	Clarify
3053	25763926	@Diapolo it would have been even better if the submitter of the pull request cites sources 	Clarify
3053	25766986	"@laanwj You are right, perhaps the sources should have been mentioned in the commit-msg also. "	Statement
3052	25683805	You're right. Feel free to submit a pull request for this. 	Clarify
3052	26705779	This was fixed  	Statement
3049	25618221	"Indeed, the comment is wrong: https://github.com/bitcoin/bitcoin/blob/master/src/netbase.h#L57  I looked at the code, which seems correct (AND with 0xFE == /7 when I understand it correct @sipa): https://github.com/bitcoin/bitcoin/blob/master/src/netbase.cpp#L659 "	Clarify
3048	25675839	"NACK.  listunspent currently sorts by transaction id, because that is the key used to index the wallet database.  If you want sorted listunspent, here's a little python code that will do it ( ./bitcoind listunspent | python sortunspent.py )  ``` #!/usr/bin/env python # # Reads a JSON array, sorts by"	Clarify
3048	25677437	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/208e1802bd79741444cb70fb16b0328d7303d9da for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3048	25706092	"Keep in mind that the RPC interface is intended for software to use, not people.  Speaking of Python, Jeff Garzik's python-bitcoinlib library now has a decent RPC interface - you might find it useful to use it to write code to automate whatever tasks you find the RPC interface useful for. I'm workin"	Clarify
3048	25788206	"Thank you very much, both of you.  Gavin's Python program works perfectly for me, and I like how it is trivial. Thanks for it, now is my problem solved :-)  And yes, I agree that RPC commands should be processed by software, not people. Actually, this is only command that I feel necessity to use (so"	Clarify
3047	25676018	"NACK on the else if (howmuch == 0).  That is dead code, because the only two places Misbehaving(0) can happen are the two places where you put checks to not call Misbehaving in the first place.  Either keep the checks, or just have Misbehaving(0) simply do if howmuch == 0 return;  "	Clarify
3047	25682584	@gavinandresen Updated and removed the ``else if (howmuch == 0)``. Should be fine now. 	Clarify
3047	25683522	ACK 	Clarify
3047	25688582	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fbed9c9d6356f86e5507b3fc032f263a17137d57 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3047	25688776	ACK  Though I must say the code is a bit confusing to read. The argument of state.IsInvalid(nDoS) is an inout argument which is then checked in the same if() clause. 	Clarify
3047	25767071	You were thinking of this?  <pre> int nDoS = 0; if (state.IsInvalid(nDoS))     if (nDoS > 0)         pfrom->Misbehaving(nDoS); </pre>  Yeah would be easier to read... 	Other
3047	25787604	"@Diapolo Yes, I'd prefer something like that, as it gives more of a signal to the reader that nDOS is the result of the state.IsInvalid() call. Now they could think 'hey, it's never >0, let's cut that code out!', but never mind this is just bikeshedding... "	Clarify
3047	25788243	You know I take such comments very seriously and created #3064 to address it :). 	Clarify
3046	25467161	Changed to a thread-safe version. 	Statement
3046	25676213	"Please add a comment explaining why a simple static instance doesn't work, or somebody not running on Windows is likely to simplify this code in six months by reverting it to what we have now.  Also: what other initialized-at-startup-time objects do we have that use the LockedPageManager and tickle "	Clarify
3046	25745581	"I added comments and addressed destruction.  The objects types using the secure_allocator are SecureString, CKeyingMaterial, and CPrivKey.  SecureString is used as a parameter to some functions that could be used during object construction (or could end up being used by someone else in the future). "	Clarify
3046	26226567	"Managed instances are generally better practice than globally-contructed objects, as construct/destruct order isn't guaranteed between them. Also, if there are objects that have overhead in constructing, doing so lazily (=upon first use) is better for modularity (don't waste time/memory on stuff tha"	Clarify
3046	26227524	"> General ACK on the idea, though I'd feel more comfortable if the page manager would also get destructed again. Do you know if there's a best-practice idiom for that?  From what I understand (about C++), local-statics are destructed in the reverse order they're constructed before program exit.  So "	Clarify
3046	26227602	"```LockedPageManager::_instance``` is indeed destructed at shutdown, but it is a pointer; the object it points to isn't destructed. One option would be using a ```boost::scoped_ptr<LockedPageManager>``` instead of a ```LockedPageManager*```  EDIT: I misread, you're not constructing it on the heap, b"	Clarify
3046	26227932	"> EDIT: I misread, you're not constructing it on the heap, but in a method with a local static.  Yeah, it gets destructed in the atexit() code of the standard C++ runtime.  You can put a breakpoint in the base classes destructor to verify.  I'll fix up those other notes you mentioned.  "	nAnswer
3046	26666736	"Removed ""initialized in util.cpp"" comment. "	Statement
3046	26667538	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0b8f47dc531d3cbaf172a5e17f27524a40833dba for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3046	26671354	ACK 	Clarify
3045	25432728	ACK to this complex code change. =P 	Clarify
3042	25343607	"ACK, good thing to get rid of wine here  "	nAnswer
3042	25347641	"Also, why not wait with bumping the version until we actually do update the sources (to 1.8, or whatever is decided). It shouldn't matter for now. "	Clarify
3042	25347861	"I bumped the .zip revision because the payload actually was different.  Good catch, I forgot to s/1.8/1.6/ with this PR that doesn't actually upgrade miniupnpc yet.  Should we do the same thing as the previous PR, one commit for the wine removal, and another to upgrade to 1.8? "	Clarify
3042	25349888	"Fixed the patch to have 1.6 instead of 1.8.  I don't have time to test 1.8 right now, so let's limit this PR only to wine removal for now. "	Clarify
3042	25376841	"Since there are a few of us working on build/gitian related changes, I'd recommend not merging these right away, just let them stack up. Maybe give them some kind of tag on github.  It'll only serve to confuse to bump the version numbers a half-dozen times before settling down. "	Clarify
3042	25432803	VERSION file now supplies the string to the patch file.  This is now ready for commit.  This will be the last gitian change in the next few days to stop the churn and allow cfields to do the cleanups he wants. 	Clarify
3041	25328903	"I've tested and confirmed that the dependency descriptor does complete without error and produces the zip -- tomorrow I'll be able to verify that this does, in fact, build bitcoin for win32 successfully. "	Clarify
3041	25329753	"While this patch works, cfields has a better idea.  Closing this PR.  Something else will come soon. "	Clarify
3041	25343378	This has been superseded by #3042. 	System
3040	25356066	"Fine with removing the debug message, but please don't remove the NULL pointer check. "	Reject
3038	25312376	"This looks very helpful in debugging our shutdown issues, although does the completely unrelated spelling fix belong in this PR?  "	Other
3038	25317721	@wtogami OT: It has proven to be effective to add small style or spelling fixes to other pulls as otherwise no dev ever ACKs such pulls in a reasonable amount of time. 	nAnswer
3038	25317997	@Diapolo Certainly we can come up with a fast track procedure to accept obviously correct style/spelling fixes.  That would be better than the inability to ask people to keep changesets limited to a particular purpose because we don't do so ourselves. 	Clarify
3038	25318048	@wtogami I couldn't agree more :). 	Clarify
3038	25320506	"@Diapolo I often ignore Qt-related pull requests, as I'm not interested or familiar with that code; perhaps several others have the same tendency, which results in fewer people looking at your pull requests. Maybe that gives you an impression that they are overlooked.  I'd rather not mix unrelated t"	Clarify
3038	25348093	"Please remove the spelling fix from this PR and submit it separately, then let's start a policy discussion on the dev list on fast tracking such obviously correct meaningless fixes, pointing at that PR as an example of why it is needed. "	Clarify
3038	25431028	Updated to reflect our discussion :). 	Clarify
3038	25516090	Updated to fix a merge-conflict. 	Continuer
3038	25616153	Any reason not to merge this? 	ynQuestion
3038	25616464	ACK 	Clarify
3038	25619178	ACK  	Clarify
3037	25684001	Anyone? 	ynQuestion
3037	25762440	"I think you're correct, DetectShutdownThread should call join_all() after interrupt_all(). "	Clarify
3036	25684178	"@dsattler Is this still an issue, which version of the client were you using at that time? Can you try with latest 0.8.5? "	Emphasis
3036	25792163	"@Diapolo I'm running bitcoin-qt.exe Version 0.8.5.0, isn't this the latest version? "	Emphasis
3036	25792357	Yes this is the latest version... are you still missing transactions or was this a one-time fault? Have you access to your debug.log at the time the error was happening? 	Clarify
3036	25792875	"Fortunately, I have no missing transactions. I have successfully transferred all my bitcoins to an online wallet, so now I have a balance of 0.00 in my local wallet. But now every time I start the bitcoin-qt.exe the following error is shown: ![bitcoin-qt error4](https://f.cloud.github.com/assets/554"	Clarify
3036	25793689	You could try starting the client with a ``-rescan`` flag once. 	Clarify
3036	25795314	"I have just tried the ""-rescan"" flag, but no change. I have looked at the db.log and found the following entries:  Open file handle: C:\Users\dsattler.CCHQ\AppData\Roaming\Bitcoin\wallet.dat Open file handle: C:\Users\dsattler.CCHQ\AppData\Roaming\Bitcoin\database\log.0000000001 PANIC: fatal region "	Clarify
3036	25796195	This sounds like a really corrupted wallet.dat... I'm not sure how to help you. Backup your wallet.dat and try running ``-salvagewallet`` once more. 	Clarify
3036	25808264	That did the trick! I have already transferred some money back and forth with no errors. Thank you very much! 	Emphasis
3034	25186619	"We should use https where available and I tried https://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz, which works.  ACK if you update to https. "	Clarify
3034	25217547	@Diapolo Updated. 	System
3034	25225286	ACK 	Clarify
3032	25146017	"NACK, please use https://www.transifex.com/projects/p/bitcoin/ for updating translations. We won't merge language updates via pull-requests, sorry. "	Reject
3032	25170409	"yes, please upload this to transifex and it will be included automatically "	yAnswer
3032	25208221	"Ah OK, no problem, I'll upload it there instead. Thanks for your swift replies. "	Reject
3032	25295123	"@timsk looks fine to me, esperanto is at 100% now  "	Emphasis
3031	25088851	ACK if pulltester is happy 	Clarify
3031	25089828	ACK  	Clarify
3029	25132234	cfields indicated this ar is not deterministic by default so the hacks need to remain.  http://pastebin.com/raw.php?i=a89Hvm7Q The next update will include this commit to make all mingw builds static.  Discussion in #bitcoin-dev seems to indicate general agreement on upgrading all gitian win32 libra	Clarify
3029	25145916	"We currently require 2 VM images to create a release (10.04 32-bit used to compile linux 32-bit and windows binaries, and 10.04 64-bit used to compile linux 64-bit).  Ideally, a single 12.04 64-bit VM could compile everything; if you can get that to work, and produce binaries that work for Windows X"	Clarify
3029	25147320	"The added storage requirement for base-precise-amd64.qcow2 is only 739M.  That is necessary to modernize the toolchain, enable more hardening and possibly performance optimizations later.  The mingw back in the 10.04 era was pretty dire compared to what shipped in 12.04.  There was a productive disc"	Clarify
3029	25159926	Each commit here results in a working win32 build.  * cfield's commit allows the new mingw32 to build without errors and has no effect on the old mingw. * Upgrading to precise 12.04 is literally only that plus the mingw32 compat patch that was later added to boost-1.51.  * The following commit upgra	Clarify
3029	25168861	Changes ACK (though release-process.md has to be updated to download the new dependency boost-mingw-gas-cross-compile-2013-03-03.patch ) - haven't tested yet 	Clarify
3029	25170501	release-process.md has been updated for boost-mingw-gas-cross-compile-2013-03-03.patch 	Emphasis
3029	25170871	"ACK on upgrading win32 gitian to mingw-w64 and upgrading boost.  We probably want to converge to a single VM for everything, with ideally the following properties:  * Old glibc, so that the resulting binary works on many systems.  * Modern g++, so we can start using for example C++11 features and -f"	Clarify
3029	25205036	"OFF-TOPIC for this PR but responding anyway.  @gavinandresen Regarding ""Ideally, a single 12.04 64-bit VM could compile everything"", consensus is that it is infeasible as its built binaries would be incapable of running on RHEL6, a major server platform on which it is quite difficult to build Bitcoi"	Clarify
3029	25300947	"@gavinandresen Agree with merging this now, so we don't have to rely on an ancient GCC with limited hardening anymore for Win32, and postponing the discussion about what to do for the linux build environments later? "	whQuestion
3028	25320537	"ACK changes, but needs rebase. "	nAnswer
3028	25320927	Rebased (I hope I did that right) and added one more small fix. 	Clarify
3028	25476312	"Switched from http to https for those downloads that support it, and rebased (a second time, onto Jeff's null wallet commit) "	nAnswer
3028	25657912	Re-rebased. 	System
3027	25063522	"Can you post a before / after comparison, I'm not sure what this fixes ;). "	Clarify
3027	25088660	"There is a huge gap between ""Label:"" and ""Amount:""  Before: http://imageshack.us/a/img694/2323/9gcp.png After: http://imageshack.us/a/img191/7172/jctj.png "	Other
3027	25100825	"ACK, I confirmed this fixes the issue! "	Emphasis
3027	25110463	"Someone should test, if this change affects the payment protocol design. "	Clarify
3027	25146045	"Secure payments ui looks good, will post a screen in a sec...  ![secure payment ui](https://f.cloud.github.com/assets/1419649/1215800/65b258c4-2674-11e3-8fd6-8328db10f883.png)  So still ACK! "	Other
3026	25009018	ACK  	Clarify
3026	25077882	Seems I ran into this after compiling latest master and started a reindex after the check failed... if this helps fixing this I'm for merging this asap. 	Clarify
3026	25079367	"Untested, but looks good to me-- ACK. "	Statement
3024	24920395	@mikehearn I wrote up that proof-of-tx propagation idea we talked about a few weeks ago and posted it to the email list.  Given that fee estimation is still going to result in users getting their transactions stuck with few ways to fix the problem I think we'd be much better off pursuing tx-replacem	Clarify
3024	24947299	"@petertodd:  re: replacement: I haven't seen any reports of people using un-hacked reference code having transactions permanently stuck, so I don't see any need for transaction replacement yet. And this code should be strictly better at getting the fee or priority right the first time than the hard-"	Clarify
3024	24961518	"@gavinandresen I've seen them get stuck for a dozen blocks - pretty poor user experience. No amount of fee estimation can predict the future, IE the network getting backlogged due to a string of bad luck. "	nAnswer
3024	24961638	"I think getting wallets to deal well with non-confirming transactions is required for this anyway. We should detect conflicts of wallets with the mempool and the blockchain, and be able to mark non-confirming transactions as dead. If we have that, we'll have much more freedom to experiment with thin"	Clarify
3024	24962258	"@sipa https://github.com/bitcoin/bitcoin/pull/2596 was going to be able to better handle those cases, although I haven't seen any action on that patch lately.  I think the correct logic is for the wallet to replace any existing transaction it sees with another transparently provided that at least on"	Clarify
3024	24962486	"Is there a summary of the logic used? How does it handle out-of-band mining arrangements, spam filters that use different logic than its own, etc? "	Other
3024	24962795	"@luke-jr That's the reason for suggesting looking at transaction remaining in the memory pool, rather than transactions being accepted.  See it this way: the P2P network is one way to distribute transactions to miners, but we shouldn't assume it's the only one. The memory pool is how we observe this"	Clarify
3024	24963784	@sipa @luke-jr That's not what this patch implements: https://github.com/gavinandresen/bitcoin-git/commit/61bd47fa9b495ef99df9c3b995ac067344981b88#L4R19 and https://github.com/gavinandresen/bitcoin-git/commit/61bd47fa9b495ef99df9c3b995ac067344981b88#L4R340 - tx estimate data is added when a transact	Clarify
3024	24964095	"@petertodd Oh, I didn't claim this patch did. Just explaining why I suggested using not-included-transactions (which Gavin mentioned in the pullreq). "	Clarify
3024	24964200	"@gavinandresen Maybe looking at mined transactions gives a bit better estimation than by looking at those that don't, but if that means a system that is more easily gamed (which is what it seems, to me), that's not necessarily worth it. "	Clarify
3024	24964444	"@sipa Oh, sorry. Agreed on disliking easily gamed systems, especially given that we've got some fairly large transaction makers like bc.i who might very well have enough volume to create large amounts of out-of-band payments. (@luke-jr eligius has an agreement with mt. gox or something to mine tx's "	Clarify
3024	24965097	"@luke-jr Also come to think of it the estimation code can't handle child-pays-for-parent properly either, particularly cases where one child pays for multiple parents. Similarly it doesn't properly handle anomalies in the average fee-per-kb paid by larger transactions compared to smaller ones, which"	Clarify
3024	24966361	"@sipa On the other hand, only looking at not-included-in-blocks fails to account for better spam filters on miners (for example, many miners filter out DP spam using non-mainline algorithms). So we definitely need to consider both sides of the spectrum.  @petertodd I think you have a good case that "	Clarify
3024	24983496	"We're not going to do anything that breaks unconfirmed transactions.  bitcoinj already has some support for dead tx handling, although it's incomplete/buggy. However it's for double spends. We don't have reports of transactions getting stuck due to lack of fees from people using un-modified bitcoinj"	Clarify
3024	24989399	"@petertodd : I am not claiming that this is the perfect solution. I am claiming that it is strictly better than the code that exists in the reference implementation today. You have a habit of claiming that things are ""impossible"" and simply being wrong (estimating can easily be extended to related-g"	Clarify
3024	25005323	"@mikehearn Any users of bitcoinj out there who are often making large (1K+) transactions? Because the default rules are to have a minimum absolute transaction fee most people are paying at least twice the minimum fee/KB, and there's lots of traffic paying absolute minimums. In any case ""stuck"" is re"	Clarify
3024	25005800	"@gavinandresen  ""Child pays for parent""  @petertodd you sure about that? CPFP means that a block may contain a bunch of too-low-fee transactions which just got accepted because of a high fee parent. This means that CPFP will also distort the metric here.  "	Clarify
3024	25006014	"@gmaxwell I pointed out that problem above; by ""current algorithms"" luke and I mean what is in the current version, not this patch. "	Clarify
3024	25042780	"@mikehearn ""Stuck"" means never confirming, not merely delayed (as is the case with no-fee transactions that don't meet the 27kB limit - eventually, they'll get to be in the highest priority 27 kB!). The delay for no-fee transactions is by-design and intentional. It's fine for mempool-less nodes.  @g"	Clarify
3024	25047743	"@luke-jr You know, given you already do this for MtGox it'd be really useful if Eligius had a program that used the inputs.io API to accept off-chain payments to artificially add priority to a given txid. At the simplest you'd just have to publish an inputs.io account name (""prioritize_tx@eligius.st"	Clarify
3024	25683827	"Mempool-less (i.e. SPV/ultralite) clients aren't going to create transactions that routinely take hours or days to confirm, that's not what users want. I don't know who or what is using the free area right now, but I guess it's not smartphone clients. "	Clarify
3024	25948290	Perhaps look into conditional situations from other preprocessor variables that cause PVECTORED_EXCEPTION_HANDLER to be defined or not.  ```i586-mingw32msvc-g++ -E -dM $(mktemp --suffix=.h)```  You can read the actual preprocessor defines from here.  Add more compile flags to match the exact build e	Clarify
3024	25948333	I believe the concerns above pertaining to the real potential for stuck transactions from fee misestimation have not been adequately addressed. 	Clarify
3024	25949898	"@wtogami: RE: stuck transactions:  Ok, let me see if I can address those concerns.  Before this pull request, clients assume that if a transaction has a fee greater than 0.0001 XBT or a priority greater than 54million then it will be confirmed.  So, before this pull request, if transaction volumes g"	Clarify
3024	25951201	i586-mingw32msvc?  Should pulltester be using that when the official win32 gitian binary will be built by 12.04's i686-w64-mingw32 instead? 	Clarify
3024	25961045	@wtogami I agree and I'm sure Gavin and Matt are working on upgrading the @BitcoinPullTester build environment. It should match the one in our release process as close as possible IMHO. 	Clarify
3024	25961921	@gavinandresen My point was the mining code still has fixed CTransaction::nMinTxFee and CTransaction::dMinFreePriority logic; the fee estimator will happily estimate fees that are less than those minimums and transactions will get stuck in that case. If you make the fee estimation have a fixed lower	Clarify
3024	25968848	"@petertodd: RE: fixed lower:  that would ruin the entire point, which is to let fees float up or down based on miner behavior.  RE: ""we have the opposite problem now"" : EXACTLY MY POINT. The hard-coded fees are not high enough to guarantee speedy transaction confirmation.  RE: what to do if a transa"	Clarify
3024	25970908	"@gavinandresen Both cases where I show estimatefees being fooled into a too low fee are things that can happen without actual transaction volume pressure, and result in worse outcomes than the current code; add a fixed minimum and estimate fees will never make a worse decision than the current code."	Clarify
3024	26028815	"Also, this patch is broken right now on my system and always creates transactions with no fee at all, even on low priority coins, and even when the paytxfee option is set. (estimatefees returns fee value estimates, so I don't think it's a startup issue) "	Clarify
3024	26037354	"I think it might be time to introduce a more general error message construct into the protocol. TX rejection is just one way that nodes can choose to drop or reject messages. There's also block rejection, command rejection, etc.  Although it's a little bit more work (sorry Gavin!) it's probably not "	Clarify
3024	26116316	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/d3f8fef5726f8588c118b7562004c93f021a2e5e for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3024	26176003	"I'm going to close this as ""not ready for merge.""  My TODO before bringing it back:  1) Test plan 2) Figure out some way to unit test CreateTransaction and the should-a-transaction-have-a-fee logic. 3) ""error"" protocol message   "	Clarify
3023	24888205	    $ gpg --list-sigs 9692B91BBF0E8D34DFD33B1882C5C009628ECF0C     pub   2048R/82C5C009628ECF0C 2013-05-23     uid                          Michagogo <michagogo@server.fake>     sig 3        82C5C009628ECF0C 2013-05-23  Michagogo <michagogo@server.fake>     sub   2048R/BC00347E7874C406 2013-05-23   	Other
3023	24888997	"@petertodd Nobody has signed git commits in our repos right now...  I agree with the name/email, though I don't think it defines who you are as a person. ;) "	Clarify
3023	24889330	"@luke-jr I have: ```git log --show-signature | grep Good\ signature```  Discussed it with michagogo on IRC: we think setting weight=1 is reasonable, and would allow setting ""minimumweight=121"" to say that a build requires three core devs + 1 additional sig. (or something similar) "	Clarify
3023	24889531	"@gavinandresen When you said it should be eleven, was that serious? Was there an actual reason behind that? "	Clarify
3022	24739649	"It's right there in the IRC channel title:  there is no ""from"" or source address in bitcoin.  "	nAnswer
3022	24740218	"A bit more helpful perhaps: * If you need a way to distinguish incoming payments from eachother, use a separate receive address for each (using a different receive address for every transaction is a good idea in general for your and the network's privacy). * If you need a way to do refunds, ask an a"	Clarify
3022	24741546	"sipa: i need to get address of guy, who sended money. I already separated payments, i need address, to prevent manual input it on site. "	nAnswer
3022	24744086	"@Enelar Then you need something other than Bitcoin transactions. They do not contain a from address, as have been extensively explained to you here. "	nAnswer
3022	24744552	"Before, i am used blockchain.info, but right now, because of DDOS, they prevents robots work(curl). Thanks guys, for answers. One more question. Is there some problem to read all the block, and search who sended you transaction? "	Clarify
3022	24744724	"There _exists_ no from address. What blockchain.info gives you, is the address the input coins to the transaction were previously sent to. As explained, this can only function as 'from' address under certain assumptions which aren't always true. Furthermore, it's bad practice. "	nAnswer
3022	24745154	"Well, whoa.. thanks. And, is there method to get input transaction address in original client? "	ynQuestion
3020	24736766	I do not see any LogPrint() nor LogPrintf() in the tests... printf may be intentional. 	Statement
3020	24737164	"Indeed, perhaps @sipa or @gavinandresen can comment. At least the comments and the change in wallet.cpp seems still be needed :). "	Clarify
3020	24793065	"ACK on the wallet.cpp and main.cpp fixes.  Unit test should not LogPrint or printf at all, the test-runner gathers output.  "	Continuer
3020	24793598	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9a1b4b564a13f5d717538c89762e88b6eaf83525 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3020	24794428	ACK after getting rid of the tests/ changes  	Clarify
3020	24797268	"Reverted the test changes... @gavinandresen I don't want to touch the tests, you are free to remove any output related stuff that shouldn't be in there. "	Clarify
3020	24797329	ACK 	Clarify
3019	24729101	ACK 	Clarify
3018	24729162	A look into the debug.log after the crash would be nice... which version are you using? 	Clarify
3018	26711493	"There seems to be no assertion message or line number in the message. The only thing that can be concluded from the debug log is that it happened somewhere while loading the block index.  We can't debug this with the information available, sorry.  "	nAnswer
3016	24708319	"Pieter and I had discussed this a few weeks ago before his vacation.  ACK code,  also, I ran 30,000 signatures through this and confirmed that the average signature size is reduced by 0.5 byte, the maximum is reduced by 1 byte, and all 30,000 resulting signatures validated. "	Clarify
3016	24708824	ACK 	Clarify
3016	24786146	"Ignore pull-tester errors for now, I'm debugging it... "	Emphasis
3016	24903615	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e0e14e43d9586409e42919f6cb955540134cda2a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3015	24700489	untested ACK  	Clarify
3015	24702020	"Fixed cosmetics and added a change to fail if windres isn't found for win32 build, since it's needed for bitcoind.exe now. "	nAnswer
3015	24702267	"Untested ACK, but I prefer if you could fix my nits ;). "	Clarify
3015	24703612	"Nits fixed, last time I hope :)  Uploaded here if you'd like to verify, I have no win32 machine: http://coryfields.com/bitcoind-versioninfo.exe "	nAnswer
3015	24722392	"ACK to the Win32 version info change. @theuni I verified the executable, looks great, thanks.  ![bitcoind](https://f.cloud.github.com/assets/1419649/1171245/4cea8402-2100-11e3-8d56-87c6ef190f4d.png)  "	Clarify
3015	24791738	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5ceb9c963700d4639fb3210b98aa028113e2a9c4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3015	24792227	ACK 	Clarify
3015	24797443	ACK 	Clarify
3014	24693253	ACK  	Clarify
3014	24695076	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7f1c162aaee251d988e0459ba7c7e67d5dd57e70 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3012	24671180	"No content in this issue, closing.  "	nAnswer
3011	24667278	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/8bd6d19a92ce7da70446f419697c7a60ea9470fe for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3009	24656223	"Agree 100% that calling this printf() causes no end of a annoying problems and minor confusions.  Went ahead and merged this, because otherwise it will quickly and perpetually be out-of-date.  If anybody thinks this is NAK-worthy, still speak up, and we can back it out (though I hope not). "	Clarify
3009	24656883	Posthumous ACK. 	Clarify
3009	24657212	"ACK, finally!  "	Emphasis
3009	24779176	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/881a85a22d76c875f519cd54388a419ec6f70857 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
3008	24918744	"The free transaction area is still useless because in reality if you create free transactions, you never know when they will confirm. So I don't see why we even bother keeping the ""free area"" at all. "	Clarify
3008	24919650	Getting rid of free transactions and hence priority would simplify a lot of the codebase - my child-pays-for-parent mempool patch ignored priority for that reason. 	Clarify
3008	24920631	That wasn't what I meant. Free transactions are good. People like free transactions. But free transactions that are in practice useless and never generated by real-world wallets are bad. They give an easy ride to people doing custom stuff and ordinary users lose out.  It'd be better if there was a s	Clarify
3008	24921014	"@mikehearn Before you try to propose that get some good figures on the marginal cost each KB of transactions costs miners, particularly smaller ones, in terms of increased orphans. I did a rough estimate and came up with IIRC 0.00025 BTC/KB myself.  FWIW that's exactly what I had in mind with my mem"	Clarify
3008	24921554	"It's also worth considering that allowing unlimited free transactions is basically saying that owning BTC is a right to use up a certain amount of blockchain space per block indefinitely.  That's the kind of thing that will give an easy ride to people doing custom, and undesirable, stuff like dumpin"	Clarify
3008	24926581	"We are not getting rid of free transactions until blockchain evidence proves it is pointless.  e.g. if no non-free transactions are mined in a 3 month period, the code is clearly pointless.  We are nowhere near that point yet.  Miners appear to currently be happy with free transactions, as long as t"	Clarify
3008	24927864	"Currently fees aren't funding hashpower, we're a long way from that day, so they act just as an anti-flooding mechanism. Using up coin days is just as good a method for that as using up bitcoins themselves, hence the desire to keep free transactions - it's a HUGE draw for merchants and a free tx is "	Clarify
3008	24931535	"@jgarzik cost-vs-benefit: given how almost all third-party wallets ignore priority in favor of adding minimum fees obviously there isn't much demand for the feature; while that isn't a reason to remove the code immediately, it is a reason to not bother re-implementing it in a rewrite.  @mikehearn If"	Clarify
3008	24933321	"@mikehearn I would agree with what you're actually saying, except I don't see how it wouldn't just result in every block being the maximum size miner's are willing to create. This size is rationally smaller than the size they're willing to create full of free stuff because a lot of free stuff is DOS"	Clarify
3008	24933992	"Oh, ok, that's more reasonable.  Overall the issue will sort itself out once blocks regularly hit 1MB, and a real pricing market emerges.  Right now many of our signals are artificial and hardcoded, rather than dynamic and market-driven.  "	Clarify
3008	24935339	"@jgarzik Yup. Converting everything to BTC makes things like artificial priority modifications, perhaps due to an out-of-band fee payment promise or just because the tx one of yours, easier to reason about as well.  Anyway essentially all of this stuff is us saying ""We know the technical limits are "	Clarify
3008	24948076	All this talk about free transactions is lovely... ...  are there any comments relevant to this PARTICULAR baby-step change?  	Clarify
3008	24993334	"The change is OK as long as you realise it only helps people using Bitcoin-Qt. Other kinds of wallets won't be generating free transactions even with this modification, because they'll continue to be too unreliable. "	Clarify
3008	25023164	"(responding to some concerns I've seen elsewhere)  The first commit does make sending small utxo-spamming transactions cheaper, but that's such a niche case I think simplifying wallet code is more important. (I've had tx's get stuck on testnet at least because I forgot that case while writing wallet"	Clarify
3008	25205750	"Instead of removing the ""CENT-output free transaction rule"" you may want to consider doing this:          if (GMF_SEND && nMinFee < nBaseFee)  So only remove for gmf_relay. Otherwise you still have the risk of people creating never confirming free txs. The code could then be removed completely in th"	Clarify
3008	25685227	"Putting aside the strategy discussions: LGTM, this change looks good to me. "	nAnswer
3008	25687079	I am in agreement with @cozz in that the network needs a way to smoothly transition into this. 	nAnswer
3008	25687577	"@wtogami There are very few >1000byte free transactions being created, and nearly only the Bitcoin reference client creates free transactions; the network doesn't upgrade to new versions overnight giving a transition period anyway. "	Clarify
3008	25689220	"I was thinking about the other removed requirement, > 0.01 BTC, which is very common. "	nAnswer
3008	25690366	@wtogami The wallet doesn't use GetMinFee() to determine if nMinTxFee must be paid so it'll continue to create nMinFee-paying transactions when there is a subcent output; see CWallet::CreateTransaction() 	Clarify
3008	25694142	"@cozz : good idea.  I updated the first commit with your suggestion, and added comments on two places in the code that can be simplified once the network upgrades.  @petertodd : I think you're confused by the code that avoids creating a free transaction with a change output less than 0.01.  The edge"	Clarify
3008	25694419	"@gavinandresen Yeah, I think you're correct there, my mistake. "	Clarify
3008	25697058	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/16b3ff66e0137b68de0d08ad88ce9798bce2d68d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3008	26796282	"I was surprised that this was merged without any explicit ACK's.   It isn't necessarily bad, I am just curious why 1KB was chosen as opposed to any other arbitrary size? "	nAnswer
3006	24585631	"This is from my debug.log:  <pre> Bitcoin-Qt: ""NotifyAddressBookChanged : 3QJmnh  isMine=0 purpose=unknown status=0""  </pre> "	Other
3006	24586611	"It seems in ``WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &transaction)`` there is something happening, which causes this. I tried to output ``rcp.address`` and ``rcp.label`` to debug.log and both are plain emtpy.  I debugged further and found out that this gets called"	Other
3006	24709978	I bet this is fixed with #1850 ? Maybe finally an easy test case for it... 	Clarify
3006	25683961	@laanwj This needs your help... 	Clarify
3006	25802085	"That's a very strange address indeed. I've done the paymentrequests tests myself and did not encounter this.  @diapolo Can you confirm or deny @luke-jr's suspicion that this is solved with #1850? It could indeed have to do with a non-standard output somehow being converted to an (invalid, unlabaled)"	Clarify
3006	25802728	"@laanwj I'm going to integrate @luke-jr's patch, can you try to use the label, address and condition in my initial post to see if you can re-create the issue? "	Clarify
3006	25803699	I included @luke-jr's patch into my local build and still get the weird ``3QJmnh`` address added to my addressbook. Perhaps it is important to mention that my testnet wallet is encrypted.  Here is the link to the payment-request: https://bitcoincore.org/~gavin/createpaymentrequest.php?merchant=bitco	Clarify
3006	25883016	"@laanwj Alright, we HAVE a problem in ``void SendCoinsDialog::on_sendButton_clicked()``, when we have a payment request, ``entry->getValue()`` has nothing in address or label, just amount and authenticatedMerchant are filled. We shouldn't try to add anything to our addressbook, when we have a paymen"	Other
3004	24547573	Reporting bugs on month old git snapshots is not very helpful.  Can you tell us if it works on either v0.8.5 or current git?  Rescan should not have the effect you've described. It doesn't have any influence on the blockchain handling. 	Clarify
3004	24548157	"You didn't read far enough into my description, ""I have also kept updating to git head after every version to see if the problem resolves"".  > Rescan should not have the effect you've described. It doesn't have any influence on the blockchain handling.  And yet it does. Maybe it threading or locking"	Clarify
3004	24548725	Can you remove your checklevel=2 setting and see if you get any errors? 	ynQuestion
3004	24549806	No errors:      2013-09-16 22:12:20 init message: Verifying blocks...     2013-09-16 22:12:20 Verifying last 288 blocks at level 3     2013-09-16 22:21:42 No coin database inconsistencies in last 247 blocks (49357 transactions)     2013-09-16 22:21:43  block index          581930ms 	nAnswer
3004	24553081	"Just a data point: I'm also running OSX 10.7.5, and have never seen a hang-on-startup.  What version of Boost are you compiling against?  This sounds a little like the hang-at-shutdown problem that was caused by a bug in some versions of boost::microsleep.  "	Clarify
3004	24553463	    > port installed | grep boost     boost @1.54.0_0+no_single+no_static+python27 (active) 	Other
3004	24558628	Not boost (I'm running exactly the same version).  Does it hang if you run -testnet or on an empty -datadir ?  	Clarify
3004	24559577	"No, -testnet on an empty -datadir works fine. I also stopped and restarted it several times and it worked ok. "	nAnswer
3004	27350628	"I tried latest git HEAD again and it no longer hangs for me on startup. Never did figure out in which version this problem started, but I did notice something strange in the logs. I had a few old transactions that had never been accepted because I didn't add a fee, but bitcoind was still trying to r"	Clarify
3001	24490451	I've seen this too. ACK. 	Clarify
3001	24491564	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cae63be6c95b19c236a2333c1f2456e016e13f0f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3000	24487171	I have no ability to test this. 	nAnswer
3000	24487521	"Direct apple specific test for now so that this is easily backported, though it should be generic enough to apply to all darwin, I think?  "	Clarify
3000	24487528	untested ACK  	Clarify
3000	24487986	ACK. Stepped through in the debugger on OSX to make sure the #ifdef is correct. 	Statement
3000	24488879	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e7bad10c12ce9b5d424ac273c1c977b88469d46c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
3000	24493232	"This is probably a dumb question but what exactly is meant by ""untested ACK""? "	Clarify
3000	24498770	"It means the code was reviewed by reading it, but not actually trying to see if it works. In this case the fix is obviously correct.  I wonder where else fsync might be lurking. "	nAnswer
3000	24503194	ACK. Didn't test either. 	Reject
3000	24510172	@mikehearn in our codebase that appeared to be it. 	Statement
2999	24476725	"(Note that this only works for the 0.8.X branch, the build files need rewritten for autotools, but Ill do that when 0.9 is released/rc'd) "	Other
2999	24477189	+1. I carry the same desktop file patch for openSUSE packages.  Also don't use absolute paths in executable/icon file and no file extension for icon. (If these are in standard paths - and they are - the desktop environment will find them).  ``` -Exec=/usr/bin/bitcoin-qt %u +Exec=bitcoin-qt %u -Icon=	Reject
2999	24623615	"@TheBlueMatt The typedef remove is being bikeshedded in #2980, so please don't duplicate it here.  Also, if this only works on 0.8.5, why is this being pullrequested into master? "	Other
2999	24637503	"Heh, can I vote for red? I prefer red bikesheds over all other colors. Because contrib/debian is always out-of-sync and I usually update it on here after upload when something other than version numbers change. The 0.9 update will probably come after 0.9 releases when i get a chance to code it up. "	Clarify
2999	24639254	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9085c8c7c3e1223349151281130f92dc7df8bd62 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2999	24651732	@TheBlueMatt please also include suggested changes from my comment above (icon+executable in desktop file). 	Clarify
2999	25320793	"I'm not very familiar with this, but @prusnak's request seems reasonable. "	nAnswer
2997	24471797	"Some misbehaviour simply has score 0, for various reasons. I think the log message should just be made different in that case. "	Clarify
2997	24472555	"Agreed. These all get a little spammy after a while, and it looks out of place to have no score incremented for an offence.        ERROR: CTxMemPool::accept() : ConnectInputs failed d0b4b3abdd421a0bd288ae735d3389c4bb039249b1e958773aa2fb7f76fc793e     Misbehaving: ****:8333 (0 -> 0)      ERROR: Proce"	Other
2997	25684098	@63 Should be fixed by #3047! 	yAnswer
2997	25689111	"Did not go unnoticed @Diapolo, thanks.  "	nAnswer
2996	24451696	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a0c3ab7ed1011c66b5137a77f701b00be376dda1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2996	24460852	ACK  	Clarify
2996	24461077	ACK. Worked for me on OSX/qt4.  	Statement
2996	24657573	"Works for me.  Though this doesn't work at the top level, but only in src/qt, is this on purpose?      $ ./autogen.sh     $ ./configure     $ make translate     make: *** No rule to make target `translate'.  Stop.   "	nAnswer
2995	24450459	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b26f9d893cb3b8b5ff74e7c71217181def1c2783 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2995	24857192	ACK 	Clarify
2994	24584016	"Updated to prefer user-defined labels over supplied ones, so saved labels in the users address book are not overwritten. "	Reject
2994	24859789	Rebased to fix a merge conflict. 	Continuer
2994	25199892	@laanwj ping 	System
2994	25293759	I'm not so sure about this. I'd like it to show the merchant's specified information at least in the payment form. When will this be triggered? The merchant shouldn't be reusing addresses in the first place for *secure* payments.  Also how does this fit into avoiding address reuse and deprecating th	Clarify
2994	25298116	"@laanwj This change just ensures that address labels, that ARE in our address book are shown, when using a normal bitcoin: URI or insecure payments. And because of that ensures we don't overwrite labels in the users address book.  So for secure payments there is no change at all, we will see the mer"	Clarify
2994	25516219	Rebased and fixed a merge-conflict. 	Statement
2994	25924566	"@laanwj I would love to get an agreement on this pull, see my comments above :). "	nAnswer
2994	25965278	"I'm just not happy that this adds more special cases, more complexity to the address book code, even though nothing is really broken. "	nAnswer
2994	25965701	"So to be clear, you think it's fine if some URI or payment-request is overwriting your user-defined labels? It's also fine to not recognize it's an address that is in your addressbook?  The other way around, if an URI doesn't specify a label currently our addressbook isn't even searched for a label "	Clarify
2994	25965957	"Yes, I think the two should be separate. When opening a bitcoin URL, the program should display the information from the URL. After selecting an address from the address book, it should display the label from the address book. These are disparate sources of recipient information, so trying to combin"	Clarify
2994	26134409	"Would you agree to display our user-defined label, if the URI or payment-request doesn't contain any information? "	Clarify
2994	26334424	"Updated: Changed back so that supplied labels override user-defined ones, but displays user-defined labels, if there are any and none was supplied. "	Other
2994	26338958	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6581b893af9e8aed9aeabae87041aaf0faccd49b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2994	26396253	"@diapolo agree to close this one? As we want to reduce interaction of payment requests with labels, it makes no sense to show user-defined labels with payment requests in any circumstances.  "	nAnswer
2994	26397346	"Yes that's fine then, I'll perhaps just introduce the ``updateLabel()`` function in another pull, because I remember it was a pain looking for that code ^^. "	Clarify
2994	26408429	"Yes, that's fine -- though be careful touching any of the address book view stuff, as I'm now working on reorganizing it as I planned before. Finally making a real ReceiveCoinsDialog that doesn't show a list of receiving addresses but a form to request payment.  "	Clarify
2992	24412332	will have a look. 	Statement
2992	24443504	"That's going to be interesting, I wonder if lupdate has other ways of locating the source files. "	Clarify
2992	24443766	"So what we need is a ""make translation"" or something that runs the above commands, and automatically provides all the source files (including .ui forms IIRC) to it. Can this be done using autoconf/automake or do we need an additional script? "	Clarify
2992	24449763	"As I didn't yet switch to autotools, I can create a current translations update and will maintain the .pro file localy until Qt5 support is included and it's mature enough for me to switch to autotools. "	nAnswer
2992	24449790	"I have this changed locally (almost word-for-word what @laanwj said, coincidentally). Will push it up in a few min. "	Clarify
2992	24450003	See https://github.com/bitcoin/bitcoin/pull/2996 	Statement
2992	24643339	So can anyone with autotools generate a current english master file and create a pull for it :)? I would love to see it's working. 	Clarify
2992	24657666	@diapolo https://github.com/bitcoin/bitcoin/commit/9a4a7d3c6a6413b952dde12c899cf74a3fab8452  	System
2991	24443297	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2b078e6b6a8e60122bc59f84b4774f774d8a4e39 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2991	25298188	"@laanwj This should be looked at before the next translations update, so as you seem to be active today you can perhaps review it :). "	Clarify
2991	25315718	Why go that far to remove the %1's from the translation strings? Having them in the translation string gives translators more flexibility where in the translation to put the values. In some languages with other word orderings that may be useful. Breaking up the strings means that translators get to 	Clarify
2991	25317918	I reverted the changes for ``Total Amount %1`` and ``Invalid payment address %1``. 	Clarify
2991	25448971	"Updated, so we now have a ``tr(""%1 to %2"")`` instead of different translatable strings for sendcoins. "	Other
2991	25450695	Updated to use monospace for addresses and remove the fixed font-size. 	Clarify
2989	24293538	"Whoops, this wasn't ready yet. "	Statement
2988	24280270	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e00d03efc3cea1aa92da6287ffb167ef8a51af4f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2988	24284858	ACK 	Clarify
2988	24285059	Why do we need a stopgap?  	whQuestion
2988	24285619	"@gavinandresen this was a bug that slipped in, -O2 was supposed to be in the original autotools PR. Apparently some of the hardening options create strange warning/errors when combined with no optims.  I proposed that now was a good time to evaluate how debug/release usage should work (or if the dis"	Clarify
2988	24288755	"some of the hardening options create strange warnings/errors with no -O  :  that makes me nervous. Is that documented behavior?  A bug in some version of gcc?  Are we using that gcc for pull-tester or gitian?  Sorry for being grumpy, but that's why I don't like stopgap solutions; they tend to beco"	Clarify
2988	24289108	https://isisblogs.poly.edu/2011/04/11/fortify_source-semantics/ -> YOU MUST TURN ON OPTIMIZATION -01 OR GREATER FOR FORTIFY_SOURCE TO WORK. 	Clarify
2988	24289195	"stopgap is really not the right description here. This returns us to the previous working behavior. It's only stopgap in that I have a desire to change that previous behavior.  From gcc man pages:  NOTE: In Ubuntu 8.10 and later versions, -D_FORTIFY_SOURCE=2 is set by default, and is activated when "	Clarify
2988	24290035	"Seems wrong to add -O2 to ./configure --enable-debug.  I know I've had issues in the past trying to step through -g -O2 compiled code in the debugger.  Is the real issue that --enable-debug and --enable-hardening are incompatible? It'd be fine with me if the default was release builds, and if you wa"	Clarify
2988	24290746	"@gavinandresen I would agree with that, yes. Hardening and debugging pretty much conflict as concepts.  But if we go that route, I would go further as to say that there's no longer any need for the hardening option, it's simply always on in release mode and never in debug. "	Clarify
2988	24291518	ACK from me on always-harden-release and removing the --enable-hardening option.  Good Idea.   	Clarify
2988	24291914	"@gavinandresen ok, then the last hurdle is figuring out what to do with OSX, since debug/release vary so much. I was hoping to bite this off in different chunks, but I suppose it's better worth doing as a whole.  OSX is currently back-compat to 10.5. As you've mentioned, this should change to 10.6. "	Clarify
2988	24293293	"I think it would be better to drop -arch and -mmacosx-version-min entirely from the mac builds.  I'll still build releases on my 32-bit OSX 10.6 machine. Eventually maybe we'll cross-compile releases in a gitian VM. (both of those cases will likely need their own wacky flags).  In any case, I don't "	Clarify
2988	24294869	"I disagree very strongly with that. That means that every dev is targeting different architectures and sdks with their builds, meaning that the release binary will be completely different (read: different compiler, min sdk, target sdk, and architecture) than what devs have tested. That is a huge amo"	Clarify
2988	24298739	"I don't think this is the best place to discuss alternative toolchains on OSX.  Please just make the default release builds. Hardening enabled by default, I don't even care if there is a disable hardening but since there has to be detection to make sure the options don't break the build it's probabl"	Clarify
2988	24386016	"@gmaxwell: So your suggestion is: * Debug is ""-O0 -g2 -ggdb"" * Release is ""-O2 -g0 + hardening"" * Default is release Or do I miss something?  I think I'd prefer -O1 for debug builds, and having hardening enabled there too, as it doesn't interfere that much with debugging, but has a large performance"	Clarify
2988	24389836	"NACK from me on -O1 debug builds.  Just today I ran into odd issues with lldb I suspect are caused by -O1 debug builds... (might not be, but ""principle of least surprise"" would be no optimizations at all for debug builds).  "	Clarify
2988	24390180	"Many programs have a ""release with debug symbols"" mode for building, maybe that's a useful compromise for the people that want to debug/valgrind a hardened and optimized build. "	Reject
2988	24393393	"A **lot** of work has gone into making ""-O2 -g"" a sane and workable default, in the upstream compiler and packaging world.  Obviously it is not *perfect* for debugging, as the compiler may transform a statement you wish to debug, but literal man-years have gone into making it as usable as possible. "	Clarify
2988	24393514	"Further, I really see no point in separate ""debug build"" and ""release build"" concepts.  We should always build with a default, -O2 -g + hardening.  If the default is not suitable -- I often disable -O for serious debugging too -- then we can add ""--disable-opt"" or ""--enable-debug"" if the developer r"	Clarify
2988	24395382	"IMO overridding CXXFLAGS on configure is easy enough. I also find -O2 makes debugging impractical, but not a huge deal if it can be overridden. "	nAnswer
2988	24405711	"@sipa I have never seen hardening interfere with debugging, so I think it should always be on. (though perhaps we turn off the couple things that cause warnings at O0 just to remove the noise.  Jeff is right that a lot of work has gone into making debugging work at O2 -g.  make debug is for when tha"	Clarify
2988	24409007	"Some numbers, on x86-64/Linux:  CXXFLAGS=""-O2 -Wall -g"" ./configure --without-qt --with-incompatible-bdb ``` jgarzik@hum:~/repo/bitcoin/src$ ls -l bitcoind -rwxrwxr-x 1 jgarzik jgarzik 63680406 Sep 13 12:52 bitcoind jgarzik@hum:~/repo/bitcoin/src$ strip bitcoind jgarzik@hum:~/repo/bitcoin/src$ ls -l"	Other
2988	24409280	"@gmaxwell Starter links, https://fedoraproject.org/wiki/Packaging:Debuginfo?rd=Packaging/Debuginfo https://fedorahosted.org/elfutils/wiki/DebugInfo  Though I think that the size of our executables is a low priority [unless it's a fun project you just want to obsess over ;p]   Shipping debug info in "	Clarify
2988	24409766	"FWIW, if we ship with debug symbols, I also have a backtrace.dll (mostly written be other people) that can be used with a simple LoadLibrary call and dumps a backtrace to stderr (which we could reopen to debug.log if desired) on crash. The only downside (although my users thing it's a good thing) is"	Clarify
2988	24410646	"Another note too, let's examine the problem a bit at a higher level:  work *with* autotools not against it.  Remember that many platforms will go ahead and override CFLAGS / CXXFLAGS with the platform standard during the Red Hat / SuSE / Debian package build process.  All this work trying to find th"	Clarify
2988	24412569	"@gmaxwell Split debug stuff is no problem, I can create a target for those once the dust settles here. "	nAnswer
2988	24421255	"@jgarzik fwiw, ""-g -O2"" is the autoconf default. That's what most would expect to see as a result of a vanilla ""./configure"". "	Statement
2988	24466663	"Could we please restore the default behavior of pre-autotools (-O2) then proceed with the bikeshedding?  I don't care how -O2 is restored, just do it and decide how to do do it ""proper"" later? "	Emphasis
2988	24471805	ACK - this or just reverting to autotools' default. We can bikeshed later. 	Clarify
2988	24659869	"Upstream now does -O2, superceded, closing. "	Statement
2987	24267672	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dab9fb41c7a4033b45c602840ee94b8039b6704b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2987	24282703	"Related: I've been working on un-hardcoding fees, and part of that work is an 'estimatefees' RPC call.  I think that is really what people want to know, not after-the-fact whether or not the fee paid was 'voluntary' or 'mandatory'.  See my smartfee branch for details (but beware it is a work in prog"	Clarify
2987	24308822	"Yes. estimatefee RPC call looks great (not checked in detail).  This pull does mostly change the QT behavior. 1) create a transaction and ""read out"" if a fee was applied and if the fee was added because a voluntary fee was set or because the added fee was required. 2) display the transaction (and in"	Clarify
2987	26689645	"Needs rebase, although I'm not convinced this change is worth the cost of making all of our translators tweak all the language strings just to tell the user a piece of information that might be interesting but is not useful.  "	nAnswer
2987	28146486	"Agreed with gavin here.  As the client currently has no way to compute or negotiate what is a required to get into a block, making a voluntary/required split in this way only adds to confusion.  We can update the GUI again after smart fees have been merged. What would be ideal is a user-settable tra"	Clarify
2986	24209521	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/d374b89e62ba257017c29e210af3be6433aa6c5a for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2986	24662234	Rebased needed. 	Statement
2986	25320833	Is this still needed? 	ynQuestion
2986	25323907	At least parts. I need to rebase it. 	Statement
2986	25676501	Closing to clean up pull request clutter. Re-open when you've rebased / pulled out the parts still needed.'  	Clarify
2985	24192139	"I'm a bit divided on this; on one hand, this is very useful if the tests are to be distributed/installed. On the other hand is that a common use case? I always run them within the build directory.  What if one wants to edit the test data while testing? One of the advantages of data-driven testing is"	Clarify
2985	24196048	"@laanwj It's common for me, as I'm usually doing cross/gitian builds. This would encourage devs to use tests when interacting with users, as-in: ""please post the output of the tests"", which can now be easily run by users and trusted by the bug-hunter. "	Clarify
2985	24215422	"But you could also do that by making the tests expect the data in a subdirectory of the executable, and then send a package with tests + data together.  In any case I'm not against this, but in my own projects I usually do testing with a python harness and having to compile as little as possible whi"	Clarify
2985	24215796	"I think this is a step in the wrong direction. I have never wanted to give an end-user unit tests, but found it incredibly helpful to be able to rapidly run tests by just editing a .json file and then re-running ./test_bitcoin. "	Clarify
2985	24286505	"Fair enough. Different perspectives I suppose, and ease of use by the devs trumps everything else for sure. But just to throw out a data-point from my desktop: ``` #change the test cory@cory-i7:~/dev/bitcoin/src/test(included-tests)$ touch data/base58_encode_decode.json  #make check will rebuild as "	Clarify
2985	24386363	"With such small build times, I don't really care about it. I don't think this is really a problem, but avoiding the absolute paths mess is certainly an advantage. "	nAnswer
2985	24461742	"Data is a very good way of making me change my mind.  Recompiles are fast enough, so ACK after rebase and making pull-tester happy.  "	Clarify
2985	24489721	@gavinandresen Could you please install 'bsdmainutils' in the pull-tester? After that i'll rebase on master and push for a new test. 	Clarify
2985	24491556	I installed bsdmainutils in the pull-tester's chroot environment.  	Statement
2985	24532388	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/152e51c7af2624831cc4796e06bf3b72787cc85f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2985	24552854	Where are we on updating documentation for autotools?  The new bsdmainutils apt-get dependency needs to be documented.  FYI: /usr/bin/hexdump seems to be standard on OSX.  	whQuestion
2985	24553019	"I think after the debug/release stuff gets fixed up, that marks a good time to do the thorough docs overhaul.  Ack on OSX, it seems to be standard (and compliant for once, woohoo!) from at least 10.6-10.8. "	Clarify
2985	24556530	ACK; seems to build and run fine. 	Clarify
2982	24058724	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f8b7aa862519ab2efd1ce327d2ed4bea1325dc11 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2982	24059408	ACK: tested on OSX.  	Statement
2982	24062059	ACK: works for me on Ubuntu 12.04 64 bit  	Clarify
2982	24062976	"https://github.com/gmaxwell/bitcoin/commit/f8b7aa862519ab2efd1ce327d2ed4bea1325dc11 Testing backport to litecoin-0.8.4.1.  Assuming I did it correctly, your bitcoin-0.8.x backport will be slightly different from this. "	Statement
2982	24065829	ACK  	Clarify
2982	24067199	ACK 	Clarify
2982	24081480	"I can confirm that this patch fixes the issue for me, and tests run without errors. "	Reject
2982	24085189	ACK code changes; didn't test. 	Clarify
2981	24020103	"Limited testing on IRC indicates that -onion  may be misunderstood as enabling accepting hidden service connections. This is strictly less dangerous than the current misunderstanding, but perhaps some other flag would be better.  Pieter suggested -onionproxy  but I'm hesitant due to proxy perhaps ge"	Clarify
2981	24033126	"Logic would be cleaner if you use util.h SoftSetArg; e.g.  if (mapArgs.count(""-tor"")) SoftSetArg(""-onion"", mapArgs[""-tor""]);  "	Clarify
2981	24033171	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/102518fdb711b646dec8f0cc26fa170364bf2e0b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2981	24065236	I agree with renaming it 	Accept
2979	24012386	https://github.com/wtogami/bitcoin/commit/aa176a07374f456b9e3a3c030f5ea8fe475a9984 Please add libdb4 to the db4 search paths. 	Statement
2979	24012827	Please also search for lrelease-qt4 and lrelease-qt5 instead of just lrelease.  	Reject
2979	24015563	"configure: Prefer specific known-good versions of Qt metacompiler tools  Please add the -qt5 equivalents after the -qt4.  It works for me if I completely remove the qt4 headers and tools.  Yes, it needs more work so it isn't confused when both are installed. "	Clarify
2979	24015590	"@wtogami Qt5 support can be something for a future pull request. As long as it doesn't build correctly (I don't think having to remove Qt4 counts), configure should fail. "	Clarify
2979	24015733	"Nice improvements to the configure script!  When trying the current master, I found that ./configure --enable-hardening would not build unless I added -fPIC option to CXXFLAGS.  Should the configure script be made aware of this, and automatically add -fPIC if needed?  Or is this just a local symptom"	Clarify
2979	24015780	"We should be enable hardening all the time, with an AC test to make sure the hardening flags work, and whining at you if they don't.  ACK on the BDB changes, though I've not tested yet.  "	Clarify
2979	24016142	"I also wondered why that wasn't already the default, as it seems like a good idea.  Perhaps --disable-hardening for those who explicitly wish to disable hardening for whatever reason (old build tools, debugging, etc.)?  "	Clarify
2979	24016182	"If your build tools are that old, your OS likely lacks dependencies needed by Bitcoin anyway.  For now please focus on getting this to build on all common operating systems, every typical variant of Linux, and all gitian targets. "	Clarify
2979	24016332	"I strongly recommend two more ""fixes"" in order to prevent confusion and many useless bug reports from hundreds of future builders.  1) Automatically remove the old leveldb.a from pre-autotools builds.  If necessary name the new target something else so it is easy to distinguish the old leveldb.a fro"	Clarify
2979	24016477	"@wtogami  The proposed solutions are largely an artifact of transitional code.  New checkouts should not see the problem, and pre-autotools builds will quickly plunge in frequency, in a few months after release.  Seems like an issue for release notes, something easily grep-able and google-able for p"	Other
2979	24018222	"Speaking of release notes, an easy documentation bug to fix.  In doc/build-unix.md where it says `CXXFLAGS=""-i/usr/include/db4.8""`  The -i should be -I (capital I, as in India).  "	Clarify
2979	24019217	"I feel like i now never could contribute again to compiler switches, hardening or whatever. That autotools stuff looks like magic an I miss my .pro file ^^. I have yet to try builing bitcoin-qt with this.  I whish Qt5 support is working as I don't use Qt4 anymore. "	Clarify
2979	24019265	"@Diapolo  The secret of autotools is that no one else in the world understands it either.  Really you just randomly poke at it until it works. Once you've done this long enough everyone will assume that you actually know what you're doing, and you can smirk quietly and carry on the great secret. :) "	Clarify
2979	24019700	"`<gmaxwell>` ... this is being compiled without optimization 0_o `<warren>` gmaxwell: yeah, I complained about that.  -O1 is needed at least for hardening to work `<warren>` gmaxwell: our old default was -O2 right?   `<gmaxwell>` we absolutely shouldn't be compiling with just O1. `<gmaxwell>` right."	Other
2979	24021412	"@Krellan Programs are not supposed to be built with -fPIC (it's for shared libraries only), so I'm not sure where your problem is coming from. I'll make a note to remove the CXXFLAGS from build-unix.md (it's no longer necessary).  @wtogami bitcoind was never built in the base directory, so the locat"	Clarify
2979	24021473	"@luke-jr Oops, I meant bitcoin-qt. "	Clarify
2979	24027314	"@luke-jr As for -fPIC, nonetheless, it seems to be required.  Can you compile on your system with `--enable-hardening` without adding -fPIC?  I can't, without getting the error message about relocation and the reminder to use -fPIC.  With ASLR hardening, the address space is randomized, so position-"	Clarify
2979	24027665	Does it work with -fPIE (and not -fPIC)? That's what some hardening systems use (I don't know what --enable-hardening is supposed to do) 	Reject
2979	24028003	"Perhaps a hardened executable requires a randomized address space, rather than compiler-chosen static offsets. "	yAnswer
2979	24033280	NACK.  Breaks on my macports/OSX machine:  checking for db_version in -ldb_cxx-4.8... no checking for db_version in -ldb_cxx... no configure: error: libdb_cxx missing  Compare with master:  checking db_cxx.h usability... yes checking db_cxx.h presence... yes checking for db_cxx.h... yes checking for	nAnswer
2979	24044505	"Please hold off on these for a day or two, I have portability concerns with many of them. I'll be back in the office on Mon/Tues. "	Clarify
2979	24044682	"Hardening should be on by default already, the help string is just backwards. "	Statement
2979	24045518	"@Diapolo: I have patches for enabling qt5, and it builds fine. But I excluded it from the initial autotools pull to avoid overcomplicating it. "	nAnswer
2979	24047880	"I'd like to point out that I made a big effort to make this functionally the same as the old build (I'm not claiming that I succeeded, far from it I'm sure). But the old build was very static and manual, so new options open up now that users can easily configure the build.  If the behavior doesn't m"	Clarify
2979	24054963	"Hardening definitely requires some form of position independent executable, for address space randomization. And I think PIE only applies to libraries. Not sure tho, the difference between PIE/PIC is a bit hazy to me.  "	Clarify
2979	24062045	"I agree that we should harmonize hardening options and review them for all OSes. Also there is still my old pull I remember, which activates ``-fstack-protector-all`` for Windows, which never worked because of our ancient compiler suite. Shouldn't we now switch to something newer in order to allow t"	Clarify
2979	24067599	Is the mingw Ubuntu 12 toolchain new enough? 	ynQuestion
2979	24067793	"hardening flags can be seen here: https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L296  For the most part, each one is tested and applied wherever possible, to avoid the need to specify per-toolchain. "	nAnswer
2979	24069511	"@wtogami yes,the mingw-w64 (don't mind the name, it's for 32 bit as well) cross compilation stuff in Ubuntu 12.04 is new enough for hardened builds (w/ stack-protector-all) to work correctly on Windows.  "	Clarify
2979	24200015	ACK. 	Clarify
2979	24204165	ACK. Builds for me now. 	Statement
2979	24204404	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1e9d3b1392b604fafc6802e4d43469f519d14424 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2979	24204715	This seems to lack -O by default.  gmaxwell says it will probably be in the next pull though. 	Clarify
2979	24205957	"Yep, it's part of my autoconf_pt2 branch (out of 4). "	Statement
2978	23914357	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a22eed6a1ef5a1bb11c6ebee5554ca9919901eb9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2977	23864321	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/af079f0b21080cb088044ed40d2974120b9f11a9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2977	23867896	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/51c2fa16bb7db29ee08f9ba8b751665837f535c1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2977	24016669	"How did it work without an ""unzip"" dependency before? "	whQuestion
2977	24019837	I don't think it ever did. Is anyone else doing gitian builds from the current master? 	ynQuestion
2977	24020133	"My mistake.  It exists in 0.8.x.  It was removed?  Yes, needed.  ACK "	yAnswer
2976	23929212	"ACK, nice you removed those ``c_str()`` calls. "	Clarify
2976	23932775	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2973	23926255	"@laanwj Alright, should be complete and I removed all ``()`` like you suggested. An additional idea now would be to send all these to our debug window, what do you think? "	Clarify
2973	23929971	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/42018eff07d235930ca91fa9e76e7ac128183438 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2973	23931346	"I don't think it is useful to send all the logging to the debug window, I've thought about that in the beginning but we simply log so much for that it would bog down the GUI and it would not be useful either. At least with the current console widget. I guess it'd be possible to add a tab ""logging"" w"	Clarify
2972	23861424	"That would be redundant. You can already get this information using `getinfo` command, field `paytxfee`.  "	Clarify
2970	23769332	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/168573fe20aaae7fb0bccd1175047e538cde05d1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2970	23776475	Did you check that ``TransactionRecord::getTxID()`` is ONLY used for copying the TxID (to clipboard)? 	whQuestion
2970	23785076	This loses information for received transactions. Maybe it should be shown in the details? 	Statement
2970	23807635	"@Diapolo It appears to only be used for the copy-to-clipboard and CSV export functions.  @luke-jr Yeah, I think the details window is the appropriate place for the subtransaction index. It should probably also be included in the CSV export as it's own column.  "	Clarify
2970	23853017	"Not sure that I agree with this. Only when the subtransaction (output) id is added, the identifier uniquely identifies a transaction record. If you change this, only change the ""copy"" and not the other functionality such as CSV export. "	Clarify
2970	23854325	The inability to get a vout at all on blockchain.info was seriously screwing with me earlier. Why would we want to exclude the vout index here?  	ynQuestion
2970	23857308	"Ok, consensus seems to be not to merge this as-is, so I'm closing this. Adding the subtransaction to the details window is still a good idea though.  "	nAnswer
2970	23881969	"Is appending a hyphen and the subtransaction ID considered the ""standard format""? If so, why doesn't getrawtransaction support it?  > $ bitcoind getrawtransaction a642029ef09d7780c9e13fea3ad8706098f919cb4174870b6284e27353ab1aa7-000 1 > error: {""code"":-8,""message"":""parameter 1 must be hexadecimal str"	Other
2970	23884695	"Because all the bitcoind RPC functions work on whole transactions, not sub-transactions. Only the GUI has that distinction. Getrawtransaction on one output would mean nothing. "	Clarify
2970	23885300	"Right, that's my point. Everything that refers to the transaction ID specifically does not include the subtransaction index. I believe we are going to confuse users by muddling the term transaction ID to sometimes mean the entire transaction and other times mean the transaction ID with the subtransa"	Clarify
2970	23925320	"I think the txid-vout format is pretty clear. It specifies a hierarchical subdivision with -, and the user can delete the part after - easily if he doesn't need it. As there is not a standard format, I think it will do as well as any other.  In the details window I could call it TxID-vout instead of"	Clarify
2970	23925765	"Createrawtransaction and signrawtransaction take a vout, though they take them as separate vout arguments.  Having the vout is _essential_ to authoring transactions. It's also important when handling payments in order to prevent duplicate keys on the txid when you're paid multiple times in a single "	Clarify
2969	23768041	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9a814a96ebf67a29731e8b946026ddcda8d95bbe for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2969	23776367	"NACK, please only use https://www.transifex.com/projects/p/bitcoin/ for translation updates. Can be closed.  "	Statement
2969	23778979	OK. Please consider adding guidelines for translators in project wiki page. 	Statement
2969	23779309	https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#syncing-with-transifex 	System
2968	23761711	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/c35d9c0952c41af08c48aab907d3aae1a2d8ee10 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2968	23762919	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/55ed3f14751206fc87f0cbf8cb4e223efacef338 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2968	23776398	Seems reasonable... 	Statement
2968	23862789	"This will hide the warning, but is that the entire problem? will the block chain download continue?  "	whQuestion
2968	23869413	"The warning doesn't effect the download at all, and is generated sometimes when a ""fork"" is detected because we get blocks while we were in initial download. "	Statement
2968	23871942	ACK in that case  	Reject
2968	24012627	ACK 	Clarify
2967	23668014	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ccf3af77c10c3b06acde8ee55930051a862bd728 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2965	23621752	This should at least be investigated before 0.9.0. 	Statement
2965	24729338	@CodeShark Can you take a look please. 	Clarify
2965	25684335	"A possible deadlock is a thing we should fix ASAP, can any core dev take a look? "	ynQuestion
2965	26006715	I had actually replaced these locks with shared locks that shouldn't have this issue - but apparently they caused pulltester to choke so they were removed. The only place where locking is necessary is when modifying the setpwalletRegistered structure itself (ie inserting or deleting). 	Clarify
2965	26008329	Did anyone ever figure out why the boost::shared_lock solution didn't work? I had tested it on my own system and didn't have any problems with it. 	Clarify
2965	26033308	@CodeShark Could be because of old compiler/build environment and old Boost version used!? 	Other
2965	26626010	"I believe the solution here is to use boost::signals2 to register the wallet callbacks; signals2 is actually specifically designed to be thread-safe, while being concurrently modifiable. "	Clarify
2963	23607365	"Mind that we call OutputDebugStringF directly in some places, in transactiontablemodel.cpp, for example. These would need to be replaced with qDebug() as well for this to work.   "	Statement
2963	23624078	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e664c3d70cf5f1db134094a728b15d09146e9a6e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2963	23633393	"@laanwj Yeah I have another pull ready, which changes all usages of ``OutputDebugStringF()`` into ``qDebug()``. "	Clarify
2961	24047466	Needs rebase 	Statement
2961	24061707	Rebased 	Statement
2961	24065172	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2958	23601721	"I'm following the payment request testplan: https://github.com/gavinandresen/QA/blob/master/PaymentRequestTest.md  ""Unsigned payment request"" - OK  ""Signed payment request"" - OK  ""Signed payment request, multiple addresses"" - Overview is correct, sent transactions are correct - Strange: no label is "	Clarify
2958	23604964	"I didn't try to compile, but you can get a looked-at-the-code ACK. We should merge and improve the rest afterwards. "	Statement
2958	23625014	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9e8904f6aeb6e98b4781fcf408b0a2bee550051d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2956	23577233	"I dont like this, as I remember we had such a discussion some months ago an decided to leave it as is. If we change things everytime a user complains, we should immediately restart to work on the progressbar :-D. "	Clarify
2956	23578976	I saw a really interesting multi-step failure from an experienced Bitcoin user:  They imported a private key from some third party (I didn't ask I assume it was a contest or something).  Much later they needed to receive some Bitcoin so they picked an address of their receive page.  Sometime after t	Clarify
2956	23606536	@laanwj Can you also make a small comment here? 	ynQuestion
2956	23607250	"WTF, I thought I already replied here.  NACK. This was rejected before, mainly because Address Book is too long in some languages.  I agree with @gmaxwell though. We need to get rid of receiving and sending addresses and bury them as historical data. The current process encourages address reuse. See"	Clarify
2956	23619783	"Sure if you can think of something better to change it to, be my guest.  Tho I'd prefer to not change the string before they get removed anyway, as this will only get the translators more work.  "	Clarify
2956	23619884	"How about ""Other peoples' Bitcoin addresses that you have saved in order to send Bitcoins to, even though you shouldn't save and reuse these addresses""? ;-)  Seriously though, I'll think about it and if I think of something I'll come back. "	Clarify
2953	23517073	"No, assert is just a function. It's always ""enabled"".  -g tells the compiler to generate debugging symbols. "	Statement
2953	23517168	"It's a macro, actually, and compiling with -DNDEBUG disables them. We only have cheap assertions and leave them enabled all the time. Frequently crashing is preferrable to ending up in an unknown state. "	nAnswer
2953	23517216	"Also, the Windows release binaries are built using makefile.linux-mingw. "	Clarify
2953	23517455	"OK, I understand.  Would it make more sense to, er, ""crash gracefully"" rather than presenting an assert message to the end-user though?  @luke-jr the ""assert.h"" file (gnu for example) has code like this:  #ifdef NDEBUG  #define assert(EX)  #else  #define assert(EX) (void)((EX) || (__assert (#EX, __F"	Clarify
2953	23542026	"Yes, a crash handler that sent the data to the developers would be more useful. The problem is that bitcoin is kind of sensitive in this regard and we can't just send a memory dump etc as it may contain private keys or other sensitive data. See also #2551.  "	Clarify
2952	23625501	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a64565da35a46a82d791455c15219f38ab83b14b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2952	26212386	https://github.com/bitcoin/bitcoin/pull/2966 is the preferred solution 	Statement
2951	23496004	"Was this necessary because of the payment-request pull? Code looks good (didn't try to compile), I'm just asking myself, what rule is used to indent over-lenght function calls :). "	Clarify
2951	23499158	"Yes, it was introduced with payment requests.  No specific rule, but once lines get crazily wide I think it's a good idea to split them...  "	nAnswer
2951	23622470	@diapolo but ack otherwise?  	whQuestion
2951	23626077	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dcd0b0775ef63ac9e067d9eb67012332f1a72bd7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2951	23634076	"Compiles fine, code looks correct, no strange behaviour observed, so ACK! "	Reject
2950	23476503	Cool. This is interesting because on a wallet with lots of keys the initial startup is shockingly slow. 	nAnswer
2950	25677739	"Please add a comment to the ""key"" / ""wkey"" case statement that explains the old/new data schema. Maybe:  ``` // Old wallets store keys as ""key""[pubkey] => [privkey] // ... which was slow for wallets with lots of keys, because the public key is re-derived from the private key // using EC operations a"	Other
2950	26212584	@gavinandresen comment added 	Other
2950	26212841	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bc68788317a4ece16f0cfb0cb7eb1e0e220cbc6f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2950	26381977	"ACK. Tested loading old wallets with the new code, and loading new wallets with the old code, all was good.  "	Statement
2949	23455566	ACK  	Clarify
2949	23505045	"Instead of a bool, how about an amount of fees? If provided and the transaction fees don't match the value, fail. (This can be in addition to the default rejection, for backward compatibility) "	Statement
2949	23507854	"@luke-jr Good idea, although I won't make it a <= test, not a == test.  Actually, no, I'm going to take that back: app developers are just going to call sendrawtransaction with their nFees, which is likely to be calculated wrong anyway... So stick with the hard sanity limit. "	Clarify
2949	23627125	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9d14e689c86a395c11a530767db4ddf895446ba8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2949	24497974	"Sanity testing on fees would certainly have helped me.  I've been using sendrawtransaction in a variety of circumstances for 5 months now.  I was pretty confident with the raw transaction tools, and (until today) had created over 200 transactions without any issues.  Then while creating a raw transa"	Clarify
2949	24519574	Any reason to merge this? 	ynQuestion
2948	23571853	"I wonder if createrawtransaction shouldn't support something like {""1aaaa"":1.0,""change"":1.0}  and {""1Aaaa"":1.0,""fee"":1.0} the latter failing if the inputs are not known to it. "	Reject
2948	23627702	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e5e9904c1c87fcdddf01e563ffe28cc56aea4f29 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2948	23630608	"@gmaxwell I'd like to see such ""magic"" targets (fee, change) as well. I suppose the logic would be: if change is specified, it's replaced by a random change address pulled (and marked) in your wallet. If fee is present, it must be the exact different between inputs and outputs. "	Clarify
2948	23631279	@sipa +1  	System
2948	23680240	"Another @sipa +1  This pull: looks good to me, ACK.  "	Clarify
2948	23688005	ACK.  	Clarify
2947	23461533	ACK 	Clarify
2947	23628240	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bf3a20a6e8cafdf723ef101af078df303ea06fec for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2946	23439286	Why? Wouldn't it be better to specify declaratively what can be specified declaratively?  	whQuestion
2946	23471871	"@laanwj I don't like that we currently have mixed ways of using these Qt signal stuff. If we define ""it's okay to use connections specified via the Qt Designer"" that is fine with me, but then we should rework the code to move this into the .ui files.  Perhaps that would also remove some of the on_XY"	Clarify
2946	23481594	"The on_XYZ_clicked stuff is generated by Qt creator as well, ie when you click on a widget and then add an event handler. In a way it is declarative, the name of the function declares what it should be bound to.  "	Statement
2946	23488218	"Wait :), I always manually added these on_XYZ_stuff ^^, didn't even know this can be achieved via Qt Creator ^^. Holy fuck...  Anyway, should we define devs have to use connections() via .ui files, if possible then? "	Clarify
2946	23491695	"Sure... I don't really mind that much, devs can use them if convenient, no need to either forbid them or mandate them.  "	Reject
2946	23492455	"If you don't care, I have no chance forcing them :-P, so closed ^^. "	Reject
2945	24576023	"I've been playing with variations of this for a couple hours, and wrote a unit test (I'll email you the patch).  ACK in general, with one nit:  It looks like 109 isn't the right number, I'm getting P2SH signatures that are 108-110 bytes big. @sipa : what is the maximum DER-encoded signature plus com"	Clarify
2945	24608419	"@gmaxwell @gavinandresen Signatures can be up to 73 bytes long,(1) so that gets you 73+1 for the signature, and (33+1)+1 for the scriptPubKey, and another byte for the length of the scriptPubKey, 110 bytes in total.  1) https://en.bitcoin.it/wiki/Elliptic_Curve_Digital_Signature_Algorithm <- I wrote"	Clarify
2945	24608664	"The average should be 109 though, and in fact, we could change the negate-S anti-malleability rule in a way that guarantees it's at most 109, and on average 108.5. "	nAnswer
2945	24612501	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d6eb259953699f5bea208ff41a0967d8ea513a70 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2945	24615453	"I think exact size doesn't matter too much, so long as its not so big that people have no disincentive to start stashing a bunch of junk in their scriptsigs, and not so small that people shy away from cleaning up.  109 was entirely too prime, so I put in 110. "	nAnswer
2945	24620084	Note that right now you can do the following:  scriptPubKey: 1 (pubkeys) m CHECKMULTISIG scriptSig: (37 bytes of garbage) (73-byte signature)  thus inserting ~37 bytes of garbage for free because we don't actually check that the CHECKMULTISIG dummy PUSHDATA is equal to zero in IsStandard() - do we h	Clarify
2945	24621225	"From coin control, I know that the biggest txin is 149 bytes.  To verify, I have printfed some ::GetSerializeSize(txin, SER_NETWORK, PROTOCOL_VERSION), the values are from 147 to 149. We have now 41 + 110 = 151. This is 2 bytes too much.  I have printfed this: (unsigned int)txin.scriptSig.size() and"	Clarify
2945	24621383	@cozz ... you were testing P2SH?  	whQuestion
2945	24622000	"@gmaxwell no, I am talking about a default tx, sorry for bothering. "	nAnswer
2944	23386128	<vendor hat: on> ACK <vendor hat: off>  	Other
2944	23628863	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b773da064d1da3a4c2054f5bbf7c04fcac72694b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2944	23705823	"ACK, sounds sensible "	Other
2943	23311069	ACK  	Clarify
2943	23397139	"I believe I've whipped the gitian weirdness into shape enough for initial merge.  Only real blockers as I see now are acks from various platform devs (osx, win32 cross, win32 native), and docs to accompany. I'm afraid I've reached my limit now, as far as those things are concerned.  Awaiting some in"	Clarify
2943	23535952	Doesn't work for me on OSX 10.7.5 with MacPorts autotools:  ``` tully:bitcoin gavin$ autoreconf --version autoreconf (GNU Autoconf) 2.69  tully:bitcoin gavin$ autoreconf -vif autoreconf: Entering directory `.' autoreconf: configure.ac: not using Gettext autoreconf: running: aclocal --force -I src/m4	Clarify
2943	23539033	"I grabbed automake 1.14 and tested locally. I just veified/pushed the fix for that problem.  New parts for my Macbook should be here tomorrow, Monday at the latest. I can test definitively then if you don't feel like being a guinea pig. "	Reject
2943	23540212	"Looks like the problem is trying to build for osx 10.5 from 10.7, which isn't going to happen without a good amount of local fiddling (likely installing xcode 3).  You might be able to get past it for now by disabling the release compatibility flags: ./configure --enable-debug "	Clarify
2943	23605354	"@theuni Do you use MacPorts, HomeBrew or something else on OSX? "	ynQuestion
2943	23620407	"Just pushed a boatload of fixes. Sorry for yet another round of changes, but this has turned out to be much more complicated than originally anticipated. I can squash down before merge, but I decided to push individual changes in case anyone is following the progress.  Fully verified on osx now that"	Clarify
2943	23621849	"ACK code changes, and seems to work fine on Ubuntu (13.04). @laanwj still wanted some improvement to the .pro file, though? "	Clarify
2943	23641487	"So... ... how do I tell autogen.sh and/or configure to use MacPorts?  Just running autogen.sh then configure I get:  ``` checking for SSL... no configure: error: openssl  not found. ```  ... with MacPorts openssl in /opt/local/{include,lib}   "	nAnswer
2943	23641552	"@gavinandresen Usually I do something like  CXXFLAGS=""-O2 -Wall -g -I/opt/local/include"" LDFLAGS=""-L/opt/local/lib"" ./configure  "	Clarify
2943	23641585	"Still working on the osx docs.. I spent all day working out possible configs from 10.6-10.8 (managed to get my hands on a 10.8 macbook), both macports and brew.  Short answer: sounds like you need to 'sudo port install pkgconfig'. After that, it should find everything for you. "	Clarify
2943	23678394	10.5 is officially dropped?  (Apple has.) 	ynQuestion
2943	23678627	"No, I don't have a 10.5 machine at my disposal. However, release binaries are still built as 32-bit 10.5 compatible after my changes.  Dropping 10.5 would make lots of things much easier, but I don't wish to mix a policy change (which OSs are supported) with a technical change (buildsystem switch) f"	Clarify
2943	23682205	"port install pkgconfig worked nicely. I'd volunteer to help write documentation, but, as you can tell, I don't know enough about autotools to be helpful. "	Clarify
2943	23682627	"No worries. The reason I'm hesitant to do the docs is because it essentially needs a rm -f *. The point of autotools is abstraction, so there's really no need for platform-specific instructions. There's also really no need for distinction between qt/non-qt builds anymore.  My intention is essentiall"	Clarify
2943	23682838	"I would propose low merge hurdles, namely * builds qt and daemon on at least one Linux OS * builds qt and daemon on at least one OSX version * builds qt and daemon on Windows, or has a clear path to doing so * pulltester  Anything else can and should be resolved in-tree.  Once the system is working "	Clarify
2943	23682936	"Whew, that's great to hear. Getting it merged will will really help.  I've been working on pulltester actually, and I""m nearly there. I've add lcov support to the buildsystem, as well as support for the java test that pulltester runs (side-rant: I find it troubling when these things are out-of-tree "	Clarify
2943	23695701	"Ok, that should do it for the pull tester. I've integrated lcov and the java test into the build. Also added a set of scripts for contrib that pull-tester can run from jenkins. The big benefit is that everything is now in-tree, so if they change in the future, there's no worry of getting out of sync"	Clarify
2943	23696107	"Nice!  If Matt doesn't get to it before me, I'll teach the pull-tester machine to Do The Right Thing (if test-scripts/pull-tester.sh exists, run it.  Else do what we do now).  "	Clarify
2943	23696498	"Sounds good.  It will need a little more love, as it will fail until the win32 deps are updated to the new version. The old ones were scattered around, the new ones are in a prefixed layout. IMO, that should wait until after this is merged, and just let it fail until then.  The old/new win32 deps ca"	Clarify
2943	23760958	"@gavinandresen If/when you go to update the bot, the params have changed to accommodate the out-of-tree java tool.  It should now be invoked as: ``` contrib/test-scripts/build-tests.sh /path/to/win32/deps /mnt/test-scripts/BitcoinjBitcoindComparisonTool.jar 6 ``` "	Clarify
2943	23763886	"Ok, I've pushed the last of my changes. I now consider this to be complete. I'm sure it's full of bugs and facepalms, but I think it now meets @jgarzik's criteria above.  pull-tester should be working pending teaching the bot its new tricks, and a rebase of this branch. The win32 build will fail unt"	Clarify
2943	23769820	"Squashed down and ready from my side, with the understanding that it will probably require some patience for a few days/weeks.  The individual commits (plus a few fixes related to rebasing to master) can be seen here if needed: https://github.com/theuni/bitcoin/commits/autotools-final-pre-rebase  I "	Clarify
2943	23860573	"Nice work, I tested around a bit and it worked wonderfully. One remark: Building from a different directory makes it croak on leveldb, ie.      bitcoin$ ./autogen.sh     bitcoin$ cd ../bitcoin-build     bitcoin-build$ ../bitcoin/configure     bitcoin-build$ make -j6     ....     Building LevelDB ..."	Clarify
2943	23861500	"Yea, out-of-tree builds can't really work without some serious hackery, which I've declined to add so far.  You can see how it _would_ work with 'make distcheck', which runs an out-of-tree build. The ""solution"" applied there is to copy leveldb to the build dir. "	Clarify
2943	23914192	squashed with the pull-tester updates and 2 additional fixes: - use c++ for all tests (means that osx framework checks get cxxflags) - bail if pkg-config is needed but not found 	Clarify
2943	23916063	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/35b8af92265ed74de63c3818e5290c27b3f35df2 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2943	23981175	"Also not working for me, as it isn't looking for bdb headers in the standard paths :( "	nAnswer
2943	23981350	"standard path varies even between Linux OS's, because BDB 4.x by default just installs into /usr/include/db.h. "	Clarify
2943	24011659	"@shripadk I think I see it. (Also, you need to install pkg-config from ports).  Could some committer kill the extra ] that snuck in here: https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L411 "	Clarify
2943	24012941	"/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]  This warning prints very often with a plain ./configure.  The default builds without any -O.  Is this intended?  > jgarzik said: AFAIK the default is -O2 -g  >  warren said: confirmed,"	Other
2943	24015342	"Not intended. Now that this has been merged, it's worth a bit of debate as to what reasonable defaults should be for debug/release configurations should be. Before, they were different per OS. I'd say that for debug, ""-g -O2"" probably makes sense. "	Clarify
2943	24015558	"I find -O2 makes debugging impractical, so I personally prefer ""-ggdb -O0"", but if -O1 is needed for security that's probably good enough (besides, -O0 doesn't even inline :p).  "	Clarify
2943	24167856	"Getting error while trying to build with Qt. ```checking if qt should be enabled... configure: error: ""qt support requested but qt could not be located. use --without-qt""``` How can i define the QT dir to use?  I tried ```--with-qt-incdir=, --with-qt-libdir=, --with-qt-bindir```. Would it not be mor"	Clarify
2942	23253422	"Sure, depends on how you define ""us"". There are certainly people who created their keys using one of the Android wallets and imported them into bitcoin-qt.  Most Android wallets took care by rotating the affected keys, that means moving coins on these keys to freshly generated keys. After working ar"	Clarify
2942	28295884	"This problem does not affect bitcoind/-qt directly. It can indeed be an indirect problem, but there is little to be done about this (apart for forbidding direct key imports and doing ""sweep""s instead, there is issue #2751 for that) "	Clarify
2941	23246171	"@medicinebottle   Running Bitcoin-Qt with -reindex should fix your problem. See #2674, #2405, #2426  If you're unsure how to do that, open Terminal.app and type       open /Applications/Bitcoin-Qt.app --args -reindex "	Clarify
2941	23249306	"Also try to take a look at 0.8.4 RC, which should include additional fixes for this issue. "	Clarify
2941	23249801	@Diapolo By the looks of the crash report he is running 0.8.4 	Clarify
2941	23256353	"Thanks for all the quick responses, I will reindex and hope that does the job.  Will post the result here later. Yes, I was running 0.8.4 at the time of this report.  "	Clarify
2941	23762848	Seems like everything is working fine.  I was in the process of reindexing and someone shut off my computer so just restarted the reindexing process again.  It was just nice to see my wallet open for the first time in a couple weeks. Thanks again.   	Clarify
2940	23226456	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/60fc1b403444eb0a9e3504c26ae3b9084f001493 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2940	23228169	ACK 	Clarify
2940	23475261	Should be save to merge IMO. 	Statement
2939	23226819	"No, this isn't what we want.  This will break hidden services.  See doc/tor.md.  Normally you set -proxy= when you want to use the proxy exclusively, and that disables listening by default.  #2927 already has listen=0 in any case.      "	nAnswer
2939	23226864	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0c3b1b56397f8d191ef6df589a38b43e9ab07c5d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2939	23228181	"NAK. Just -tor shouldn't disable UPnP; -nolisten and -proxy should, but already do, AFAICS. "	Statement
2939	23246165	"@gmaxwell Just to get this clear, when I use -tor this is for reaching Tor addresses (hidden services) and this patch would disable listening, if not explicitly enabled and would also lead to disable -upnp and -discover (if not explicitly enabled). How does this break hidden services?  @sipa I guess"	Clarify
2939	23246270	"@Diapolo because you could no longer receive incoming connections from other hidden service peers. If you intended to have no non-tor connectivity at all you should instead be using proxy. Perhaps this could be better documented.  No, this shouldn't disable listening for onlynet=tor either, since th"	Clarify
2939	23247378	"@gmaxwell Right, incoming connections would be disabled that way.  When I setup Tor and want bitcoin to only use Tor I do this via ``-proxy=127.0.0.1:9050 -externalip=XYZ.onion -onlynet=""Tor"" -bind=127.0.0.1`` (perhaps that configuration should be mentioned in tor.md?), which explicitly ENABLES inco"	Clarify
2939	23250492	"@gmaxwell I'll close this, would be nice if you could comment my above posting. "	Clarify
2938	23221501	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/81c04138fce10654f52c7ccab2ed349f0d5e3137 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2938	23228222	ACK 	Clarify
2938	23230872	Minor update: fixed two incorrect comments. 	Clarify
2938	23231787	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/214d45b6b9a4f25d7d8bd4e5443fa2bee485353a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2938	23239626	ACK  	Clarify
2937	23220118	We've been having a fine discussion here: https://bitcointalk.org/index.php?topic=279652.0  	Emphasis
2937	23220591	"Seems like an awful lot of code for one simple feature...  no technical objection but... meh.   I would rather a simple hook system (boost signals?) that delivers a pong response, to anyone who pre-registers a pong handler for nonce X.  That would keep most of the code more in the RPC side of things"	Clarify
2937	23224822	"Thanks for the feedback.  It did end up being more code than I thought it would.  Reason is, there's 3 different protocol variations to contend with (no nonce, zero nonce, matching nonce).  Also, there was no pong receiver at all, so had to add that as well.  I added a good amount of debug text in """	Clarify
2937	23228769	"ACK.   It's perhaps slightly over-complicated (rate-limiting user-requested pings?), but it's otherwise pretty much how I'd have suggested implementing it.  One nit: the ping RPC command could be a separate commit from the rest of the logic, but I don't feel strongly about this. "	Clarify
2937	23228789	"@jgarzik Agree that a hook-mechanism for dealing with incoming commands is probably the future, but we don't do that right now for other messages, and it's unreasonable to demand that in a pullreq like this. "	Reject
2937	23239127	"Thanks for the feedback.  I will remove the ratelimit for user-requested outbound pings, since you're right, that does seem rather overcomplicated.  Also, good catch on indentation, I didn't see that.  Darn editor :)  It is strange to see a ping with a valid nonce be replied to with a pong with a no"	Clarify
2937	23245689	"I updated the commit.  Got rid of the idea of rate-limiting user-requested RPC pings, that simplifies a chunk of code.  Cleaned up indentation.  The ""pingtime"" field shows only completed pings.  I took the liberty of adding a second field, ""pingwait"", that will only appear during the time a ping is "	Clarify
2937	23246945	"Why reinvent '/sbin/ping' ?  Why not just a little shell script that calls getpeerinfo, then uses the system ping to determine ping times?  I'm a less-code-is-better kinda guy.  "	Clarify
2937	23247313	"@gavinandresen There are many factors that affect Bitcoin P2P latency which you wouldn't notice through network-level ping (application throttling, peer having an overloaded receive queue, peer being DoS'ed, implementation problems...), and it will not work for every type of connection (incoming pee"	Clarify
2937	23248106	"Thanks sipa, very well said.  That's the key reasons to have a ping at the Bitcoin layer, not just at the OS networking layer.  "	Reject
2937	23396736	"I have put the ping/pong handlers in main.cpp on a diet.  Removed the printf statements, they have proved their usefulness during testing, but don't need to be in there permanently.  "	Reject
2937	23457819	"Thanks.  As talked about on IRC the other night, I restored some code that was in the before, to drop pong messages if they are received with a nonce of zero.  I am unsure what clients are sending these.  Their version string comes across as ""0.8.99"" but I haven't found any version history that woul"	Clarify
2937	23575074	What are the subVers of the bad clients? 	whQuestion
2937	23601453	"Investigating that now.  Frustratingly, it isn't happening anymore with my current set of peers that I'm connected to.  "	nAnswer
2937	23631057	"Made some changes.  1) Added more instrumentation to catch all of the anomalies that we've seen so far, in the pong handler.  Instead of previous bloat, they are all now unified into a single printf statement.  2) Incoming pong message size is now checked.  Unfortunately, I did not find any more pee"	Clarify
2937	23774758	Tested against latest top of tree and patch still applies cleanly.  	Statement
2937	24010723	Rebased the branch to catch up to latest master.  	Statement
2937	24963496	ACK 	Clarify
2937	25320951	"@jgarzik @gavinandresen @gmaxwell Any further comments? I'd like this merged, to be able to add some automatic latency measurement on top. "	Clarify
2937	25411179	"s/printf(/LogPrint(""net""/ and I'm OK with merging. "	Statement
2937	25418235	Great idea to use LogPrint instead.  Made that one-line change.  Also rebased it against the latest master.  	Clarify
2937	25683054	"Fixed the merge.  The ""ping"" command doesn't require access to the wallet, of course, so the new column is false for it.  "	Reject
2937	25689615	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/971bb3e901aad5d4f04a651e3e2a75161d3a4e2a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2935	23217438	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/24e5d7d5ae735b41beaaa7ef5feed845607c8280 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2935	23220825	"ACK.  Candidate for a 0.8.4rc2, if we do one (not a critical DoS issue only because creating an invalid block is so expensive).  "	Clarify
2935	23225500	"ACK. (Without an extranonce, I was having a hard time producing a block just for testing) "	Statement
2933	23215883	"This obviously depends on the LevelDB 1.13 changes being merged in the LevelDB repo first, but having it in a pullreq here already makes it easier to test. "	nAnswer
2933	23216543	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/877b5e3653f12882e12c75aa0bb5be47f847bd09 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2933	23220570	ACK  	Clarify
2933	23225472	You mentioned adding this to 0.8.4 too.  Is that safe? 	whQuestion
2933	23226110	I think it would be nice to have a reference to the LevelDB changelog in the commit-msg. 	Statement
2933	23228861	"@Diapolo Actually, it is there. Unfortunately, there is only a single commit in the upstream LevelDB repo from 1.12 to 1.13 (""LevelDB 1.13""), and it's listed in the squashed subtree commit.  If you want to see the full commit message, look at the leveldb repo (http://github.com/bitcoin/leveldb), in "	Clarify
2933	23228895	"@wtogami There's always some risk, and we should be careful when making changes to the leveldb subtree, as it may affect convergence in case of bugs. In this case, I think the potential benefit is worth the risk, and the changes look safe. "	Clarify
2933	23230960	"@sipa ""This obviously depends on the LevelDB 1.13 changes being merged in the LevelDB repo first"" <- by that do you mean this pull-req might be changed again if LevelDB changes what they decide to merge?  I'd spend an hour or two to go through the actual changes manually, but it's not worth it unles"	Clarify
2933	23231021	"@petertodd I mean in our LevelDB repo, (http://github.com/bitcoin/leveldb). Upstream LevelDB 1.13 is released, so no worries there.  Reason for this is that it's not entirely clear to me how we want to manage our leveldb repository, depending on whether we want to merge upstream changes before or af"	Clarify
2933	25320969	@jgarzik @laanwj @gmaxwell @gavinandresen Opinions? Do we need some testing before or after merging this in the bitcoin/leveldb repo? 	ynQuestion
2933	25321172	"@sipa I've given it some fairly basic testing now: ran the node under it, reindexed under it, and switched back to the old one. Everything seems okay. "	Clarify
2933	25321812	"I went ahead and created merge commits in the bitcoin/leveldb repo for 1.13 and 1.14 (and a signed tag for 1.13). 1.14 only has non-relevant changes for us, afaict. "	Statement
2933	26226797	Anyone object to merging? 	ynQuestion
2933	26305142	ACK  	Clarify
2933	26305551	ACK (if my prior soft nod wasn't enough) 	Clarify
2932	23475306	Any comments? 	ynQuestion
2932	23481851	"Sounds sensible to do all the parsing of parameters in ParseParameters. Maybe store the URL as well, and not only signal a boolean? This avoids having to scan the arguments again to find out what exactly the URL was.  "	nAnswer
2932	23490095	"Nice suggestion, but what happens, if the parameters would contain multiple bitcoin: URIs or is that even a possible condition? "	Clarify
2932	23496403	"Yes, I think that's a possible condition. You could make it store a vector of strings instead of one string. A length of zero would then mean ""no URL"".  "	Clarify
2932	24801258	@laanwj Changed to a vector of strings and modified paymentserver to benefit of the changes. Can you take another look? 	whQuestion
2932	24859658	@TheBlueMatt Can you restart a build if the pulltester errors are fixed? 	whQuestion
2932	25063488	"I'm still rather sure this is a @BitcoinPullTester related error, can some core-dev take a look at http://jenkins.bluematt.me/pull-tester/8f3cb255f195b4808ca5e64c01e6bc6c58cbf210/test.log "	nAnswer
2932	25297998	"@laanwj Can you have another look, I updated the code in bitcoind.cpp to what you had suggested :). Also ``fCommandLine`` is no longer a global now. "	nAnswer
2932	25315810	"Yep, haven't tested it though!  In time it'd be better to split off the RPC client to a seperate executable and remove the hack. Likely we'd need to do this in two steps 0.9.x) add rpc client executable (I leave it to other people to bikeshed the name), support rpc client in bitcoind for backwards c"	nAnswer
2932	25320988	@laanwj I'm very much in favor of splitting off the RPC client into a separate binary. 	Statement
2932	25433542	Your suggestions are good but far beyond the scope of this pull :). Any final comments/nits/ACKs? 	Clarify
2932	25467025	"Code changes are ACK, but anything that affects command line parsing needs to be extensively tested. So I'd like to see test reports from a few people (that bitcoin URLs still work, and other options still work, that the rpc client still works, and combinations...) before merging.  "	Clarify
2932	25676894	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4e5d555f05ccd25ddf0efb1c993b2d29de605e3e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2932	25677241	"util.cpp ParseParameters is the wrong place to look for bitcoin: URIs, in my opinion.  It should just return an array of strings that it could not parse.  The payment server code can then look through that array and pull out any bitcoin: URIs.  The payment server code currently looks for two things:"	Clarify
2932	26497136	"Agreed, checking for  bitcoin: in the core makes little sense as it has no knowledge of bitcoin URIs. Returning all non-parseable arguments is more flexible too. "	nAnswer
2932	26499518	"Indeed, I'll close this and return to the garage ^^. "	nAnswer
2931	23209140	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d9baa28f92603f8c26a50c6165234861deb6b536 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2931	23439991	ACK 	Clarify
2930	23209565	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/512379a27a0994d1056f06de2235e29f99fb399c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2930	23440892	ACK on the paymentserver part 	System
2929	23208822	You should squash into one single commit. 	Clarify
2929	23216823	Thanks for the feedback!  Done.  Nicely squashed now.  	Statement
2929	23220619	ACK the code change... what is the use case?   How is this useful?  	whQuestion
2929	23224873	"Thanks!  Use case is to help network troubleshooting.  In my example, I was having a tough time because I couldn't tell if my external IP address was being seen correctly by the outside world.  Bitcoin exchanges this information during the ""version"" command handling, and stores it in the ""addrLocal"""	Clarify
2929	23229004	ACK 	Clarify
2929	23233971	"Thanks.  I found the methods worked the same when simply reusing the existing CService, so there's no need to construct a CAddress here. I updated the commit, removing that CAddress.  "	Clarify
2929	23774716	Found and removed a needless usage of c_str().  	Statement
2929	24011560	"No change made, just rebased this branch to catch it up to the latest master.  "	nAnswer
2929	26689502	Rebase needed again.  	Statement
2929	26703987	Rebased!  Thanks for the reminder.  	Reject
2929	26705948	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/547c61f8d8b42296fd0a51bad4a2e3a3765aa7fd for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2928	23203321	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7bb0f6c5e89a4d5c9a6ef42f5643f42646da44c9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2928	23219423	ACK 	Clarify
2928	23229058	ACK 	Clarify
2928	23239350	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f1dbed9233fb138026c646db0ac34e83ae2114f1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2928	23240227	Fixed @sipa nit.  	System
2926	23158914	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6728e007767fbb2f8eebc1936a3386adda1dbd3f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2925	23137704	"The parentheses there were indicating that it was optional, e.g. perhaps instead you'd use bitcoind.  I've removed that text because it was confusing.  "	Clarify
2925	23150374	"Closing this as it's not a code issue, feel free to respond though if you don't manage to get the syntax right. "	Reject
2925	23158514	"aha, ok - i got it to function now (i also removed the . symbol from the datapath parameter) "	Statement
2924	23110628	Nice. But I worry that people might start getting antsy about bandwidth usage more than they already have... 	Clarify
2924	23111042	@luke-jr That's exactly why I wanted it - because I had moments of antsy-ness about network usage :) I think it's better to be transparent. 	Clarify
2924	23113576	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/04ffc8f3f4fa4da99567551fae1d6f47c1467edf for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2924	23118459	"Get rid of the tnow() function and use GetTimeMillis() or GetTimeMicro() instead.  Also add a ""getnetrates"" RPC call that dumps this data; it'd be useful for node-monitoring purposes. Specifically it should return the following:  totalin = nTotalBytesIn totalout = nTotalBytesOut timemillis = (double"	Clarify
2924	23134739	"@petertodd I was sure there'd be a better time func in there somewhere - cheers. @gmaxwell Thanks. Yeah, would be good to take it further. "	Clarify
2924	23137899	@petertodd The problem with those time functions is that they use wall-clock time. Is it possible to use boost's 'steady clock' or we need to support versions of boost that are too old for that? 	Clarify
2924	23145103	@sje397 I'm not familiar enough with boost to answer that.  Would someone else please answer his question. 	Clarify
2924	23149775	@sje397 : Looks like we gitian-build against boost 1.40.  Updating the version of Ubuntu we use for deterministic building and updating dependencies is on my want-to-happen-for-0.9 list...   	Statement
2924	23150664	"Looks very nice.  If you intend to keep tnow (I can see why, as you need monotonic time here, and AFAIK neither Qt nor Boost offers such a function) please move it to either util.cpp or guiutil.cpp.  "	Clarify
2924	23259555	Thanks Diapolo. 	Statement
2924	23267735	"I think steady_clock is available in boost >= 1.47, and QElapsedTimer supports monotonic time in Qt >= 4.7 - both unfortunately recent. "	Statement
2924	23270573	"Maybe it would be better to make the total byte counts static members of the CNode class, and do the timing on the gui side. "	Clarify
2924	23274333	"Sorry for the late refactor, but I think this cleans things up significantly. "	Reject
2924	23336537	"Qt code looks much better now, good job and thanks for listening :). "	Statement
2924	23337408	@Diapolo No probs. Thanks for your time and patience. 	Statement
2924	23338000	"I would say some core-devs should comment on the core changes and RPC stuff now and @laanwj should review the Qt code. If I find the time I'll try to compile your patch also if you consider it test-ready :).  One feature request, maybe you could add a clear button? "	Clarify
2924	23338457	"Yeah sure, please try it out. It does get boring pretty fast :) Along the way I added a couple of coloured lines next to the 'in' and 'out' labels to explain the graph a bit. "	Clarify
2924	23340401	"Alright, compiles fine and is working. A few comments:  1. I think it's better readable when you place a space between the values and the unit on the right (dunno if this is a locale thing, I'm just offering just my personal impression). 2. When changing the slider the graphs are reset, guess this i"	Clarify
2924	23342427	"Thanks again Diapolo. Yep, changing the slider clears the graph because I didn't want to get complicated with resampling or storing timestamps etc.  I moved the units into the translated string - that should make it more adjustable, e.g. for locales that might put the unit before the number etc. I p"	Clarify
2924	23342717	"I'm not sure what's up with your #5 - I get the graph moving steadily, even with no network connection. "	Reject
2924	23405868	"You were right, it is moving, sorry :). Thanks for the other changes!  One nit, I saw you connected the clicked() signal to clear() via .ui file, whereas I would prefer: ``connect(ui->btnClearTrafficGraph, SIGNAL(clicked()), ui->trafficGraph, SLOT(clear()));`` in the RPCConsole constructor.  I know "	Clarify
2924	23441147	Getting build errors here:      projects/bitcoin/src/rpcnet.cpp:214: error: conversion from 'uint64 {aka long long unsigned int}' to 'const Value_type {aka const json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > >}' is ambiguous     projects/bitcoin/src/rpcnet.cpp:215: err	Other
2924	23466558	"@laanwj Will look tonight. Odd that it passed the auto tests, and I didn't see it on osx or linux...will have to get my win build working I guess. "	nAnswer
2924	23499838	I would LOVE to be able to get graphs like Tor/Vidala for Windows allows (solid with mild transparency): ![tor](https://f.cloud.github.com/assets/1419649/1050949/6fc57228-10c2-11e3-917a-f6c4ea065554.png)  	Clarify
2924	23503879	"After removing the default string for the time window, you need to make sure the ``on_sldGraphRange_valueChanged`` code is called during init, because if not the initial display of selected slider value is missing. "	Clarify
2924	23879900	@laanwj Please try again - I think I've resolved those errors. @Diapolo I added the alpha background and fixed the issue with the slider value display. 	Clarify
2924	23984110	"Yep, builds now,thanks!  Edit: this is wicked cool, definitely want this in "	Emphasis
2924	24400893	"Looks much better with the alpha background, if you now rebase (because of that autotools stuff) and fix my minor nits, you have my ACK. "	Clarify
2924	24733532	"Done. Thanks again, @Diapolo....  Now to figure out how to build the thing without a pro file :) "	Clarify
2924	24734117	You don't need to build it for yourself without the .pro file (I also don't do this) you AFAIK just need to make sure you add the new .cpp and .h files in ``src/qt/Makefile.am`` to make pulltester happy and have this mergeable. 	Clarify
2924	24734438	Grr. Autotools is complaining about missing libdb_cxx headers - looking for version 48 and I have version 46 and version 53...  I'll fix that makefile. Thanks. 	Reject
2924	24734597	This is intentional. Use --with-incompatible-bdb if you want to use a different version than 4.8. 	Statement
2924	24735245	"Thanks @sipa - no worries installing db48... I just thought it was going to be a 5 min fixup, that's all... now it can't find Qt... I'll figure it out. "	nAnswer
2924	24737672	"Got it *almost* building, and modified src/qt/Makefile.am to moc and compile the new widget...  Any ideas about this build error?    OBJCXX   libbitcoinqt_a-macdockiconhandler.o In file included from /System/Library/Frameworks/Foundation.framework/Headers/Foundation.h:123:0,                  from /S"	nAnswer
2924	24740707	"Nevermind, it seems setting macports to use the llvm-gcc compiler works much better :) "	nAnswer
2924	24806380	ACK to current UI and Qt changes. I would love to see some core devs comment on the naming of ``getnettotals`` and it's fields (``totalbytesin`` and ``totalbytesout``) or even get ACKs now!  I'm happy to see this evolving even further :). 	Clarify
2924	25078798	@laanwj ping 	System
2924	25763825	@diapolo If this was a GUI-only change I'd have merged it quite some time ago.   Maybe split adding the RPC call into a different commit so it gets more review by the other devs? 	Clarify
2924	25767031	"@laanwj Well even if @sje397 leaves out the rpc-call, there are still changes to the core (at least adding some vars for counting the traffic), which needs core-devs ACK :-/. I'm fine with your split idea, if this helps speed things up... "	Clarify
2924	25821312	"Yes that's true, it's not possible to entirely split it into core + GUI parts. So don't do the split.  Let's just get at least one more ACK on the core changes.  @gmaxwell what do you think about the network changes? Your per-peer comment is not addressed yet but that could be done in a later pull, "	Clarify
2924	26226944	"ACK on the changes to core (didn't look at the GUI), apart from a few nits above.  Needs rebase, though. "	nAnswer
2924	26241760	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2924	26324694	Thanks guys! 	Emphasis
2924	26325326	Thanks to you for making this 	Statement
2923	23074970	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a505a99a08753fa3c3b890fc6222679539b2f64c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2923	23086111	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fbc91c10d818432070ef8bac56b07707f43ef0b1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2923	23109347	"Unfortunately, two different features got mangled together in the same pull request.  My bad.  Will close and resubmit separately.  "	Clarify
2922	23016815	@gavinandresen Please merge before the final 0.8.4 is built :-). 	Clarify
2922	23017473	Can someone take a look at https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#fetching-new-translations and make this compatible with my MinGW shell :-)? I don't want to update bitcoin.qrc by hand anymore. 	Clarify
2922	23019343	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/88ff65598760e3fac4c8a9d18e9003e5e386f479 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2922	23065989	" # Unmerged paths:  #   (use ""git add <file>..."" to mark resolution)  #  #    both modified:      src/qt/locale/bitcoin_en.ts  Please update and rebase against 0.8.4rc2. "	Other
2922	23068905	I have no idea what you are talking about? Perhaps 0.8.4 was not based on current master. 	Reject
2922	23069125	"0.8.4 is 0.8.3 plus a few bug fixes.  It has nothing to do with current master, and contains no new translatable strings. "	nAnswer
2922	23069246	"0.8.2 on May 25th was the last release tagged from master branch.  0.8.3 and 0.8.4 diverged from master after that point, and master is quite different now.  It may be possible for you to generate updated translations for 0.8.4 branch specifically, although I am not sure how accurate it would be if "	Clarify
2922	23069638	"merging: it's still a valid translations update, it just won't make it into 0.8.4  "	Statement
2922	23069807	"@gavinandresen It would still be a good thing, to get current translations into releases, which are not based on current master, but I can't think of a clean way to do this. As 0.8.4 may contain old strings that are not recent in current master anymore and as such are removed on Transifex and would "	Clarify
2921	22996457	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ee78b6c5292a6613d33223761c9a2548d936bd77 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2921	22997322	"NACK on the TimingResistantEqual optimization-- new version lets an attacker determine the length of the password.  RE: optimizations in general:  NACK unless you have a use case where performance matters.  If you do, then please share what is sped up, and by how much.  "	Clarify
2921	22997500	Got it. What about my commentary about the reset of the median filter. Is this a bug? 	whQuestion
2921	23000807	"CMedianFilter works correctly for me (patch for the median filter unit test):  ``` diff --git a/src/test/util_tests.cpp b/src/test/util_tests.cpp index abfd882..be4b2d3 100644 --- a/src/test/util_tests.cpp +++ b/src/test/util_tests.cpp @@ -32,6 +32,12 @@ BOOST_AUTO_TEST_CASE(util_criticalsection)   "	Other
2921	23069407	The median filter is only used on new connections and is used with very small filter sizes. It's deliberately very simple in implementation. 	nAnswer
2920	22997226	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/328433fbd5be0276da03a5199afc39ed5264c5e9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2920	23042188	"Thanks for taking the time to try out something here, but I'm going to have to decline this optimization.  The timing resistant equal is used to avoid leaking information about the length of RPC passwords in timing, your optimization would restore that information leak.  If you're interested in work"	Clarify
2919	22989553	Looks good to me-- compiles and runs on my OSX machine.  	Statement
2919	22990362	ACK 	Clarify
2919	22990886	"ACK: tested by importing a private key into a MultiBit connected to bitcoind running this patch, it sync'ed correctly and ended up with the correct balance.  "	nAnswer
2919	22992788	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a7f533a9723c7eafea4aea7d00fa9129a4ffe1d5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2918	22952462	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9d42c3282929ea3dcf9d21ff40e64cd5d5f9b8c3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2918	23488526	"Should be re-worked or closed, as we chose to keep the internal miner. "	Statement
2918	26236992	Please close. 	Statement
2917	22993547	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dcc1891c3b2bcecd1211b6b899696ae1e5e30aca for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2917	23008527	"NACK, as the internal miner is of great use in testnet. "	Statement
2917	23010972	"You can just as well use a normal miner for testnet, which reduces the differences from mainnet and probably finds blocks faster too. "	Clarify
2917	23064598	"If pooler's CPU minerd grows GBT support, and both it and bfgminer and reads bitcoin.conf to find the RPC auth mining details, then the lazy should have no problem with the testnet use case. "	Reject
2917	23069564	"I've never used the internal miner, not even on testnet.  It would be nice to still have a simple CPU miner in the bitcoin repository somewhere as example and for testnet, but I very much agree with removing it from the main executable.  "	Clarify
2917	23073891	"I'm in favor of this, even as a test the integrated one is not good because its ~entirely different code than anyone uses to mine the mainnet, and IIRC has previously had different bugs.  I also however, strongly feel that we should also package a usable miner, because thats part of a complete netwo"	Clarify
2917	23126434	NACK from me on removing the internal miner. I use it all the time to test stuff.  	nAnswer
2917	23200041	"If someone really wants to keep it, I see no enormous gain in removing it either. Though if this is closed, please split the wallet dependency removal. I think we do want that regardless. "	nAnswer
2917	23220660	"Pull #2928 addresses the wallet dependency removal, as that was needed for no-wallet mode.  Closing due to several NAKs (myself, gavin, Diapolo, TD).  The internal miner is used with regtest mode, notably, in addition to testnet.  "	Clarify
2916	22944227	"I can't test, but the change looks fine to me. ACK. "	Clarify
2916	22944325	ACK  	Clarify
2916	22945754	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b28d8b423bddc860c5858a9df2982ce825835350 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2916	22977012	"We did test this on Bitcoin and Litecoin builds.  https://github.com/wtogami/bitcoin/commit/353c0cc4e1a47b524fb9a5ce194bde8917cb630b Should the commit credit go to Dana Powers, and perhaps include a link to the leveldb bug something like this?  "	nAnswer
2916	22983232	Running with no issues on my Mac. 	nAnswer
2915	22940748	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4eecdcacafc7dc0a1fe38e64dddb8416baa07dde for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2914	22931419	Tested multibit and full node sync as well as a number of hours of regular network operation.  More testing with spv nodes would be helpful. 	Clarify
2914	22931444	Code looks good to me. I haven't tested it in practice yet. 	Reject
2914	22932210	"Looks good in general to me, but go fix the tests :) "	Statement
2914	22932615	@sipa ::nods:: As you wish. :) (where is my brown paper bag?) 	Clarify
2914	22935084	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2914	22977130	"FWIW, to help with sanity testing, Litecoin deployed this in testing on nodes with hundreds of of peer connections, both with and without bloom enabled. "	Statement
2914	22983762	"ACK, ran this overnight on my Mac with no drama.  "	nAnswer
2913	22927641	"    ""confirmations"" : 3158, $ for i in {250000..250011} ; do bd getblock `bd getblockhash $i` | grep time; done     ""time"" : 1375533383,     ""time"" : 1375534052,     ""time"" : 1375534117,     ""time"" : 1375534811,     ""time"" : 1375535273,     ""time"" : 1375535332,     ""time"" : 1375535598,     ""time"" : "	Clarify
2913	22929075	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bb237705d08bcf0a5963219c9ac4866e2f60b485 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2913	22936716	ACK 	Clarify
2913	22937149	ACK.  Time to regenerate the torrent...  	Statement
2912	22900466	You need a transaction index if you want to use getrawtransaction on spent transactions. Enable it using -txindex (command line) or txindex=1 in bitcoin.conf. 	Clarify
2911	22883647	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d1862bf309b047924a94005306e95524974d0907 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2911	22915662	"Next time, a better pull request comment would be welcome.  E.g.  ""makefile.mingw-linux already has these fixes, just porting them to makefile.mingw.""  "	Clarify
2911	22926166	OK 	Statement
2909	22863621	"Pretty sure this is to be expected, except for 7. A bug in the tools? "	ynQuestion
2909	22864788	It sounds like you're using a sparse/growable vmdk virtual disk and for some reasons the guest OS keeps using new disk blocks. What's the capacity of your virtual disk btw?  wrt the compact/defragment function in the tools: the first step of this process is to write 0s to the disks but if you run ou	Clarify
2909	22866819	This is expected behavior -- the block chain is very large. 	Clarify
2909	22867049	"@jgarzik That is correct, but irrelevant. The block chain is only 11 GB and is only written once, and he complains about much larger usage.  My guess for the reason is that the chainstate database is continuously being updated, and in total a much larger amount of data is being written for this. Ass"	Clarify
2909	22867630	I use growable disk (tried single and split in 2GB files). Capacity - 200Gb I think if i will use smaller disk - I will get error. But it need to be verified.  I alsoI think this is due to the constant creation and deletion of chainstate files. Size of the blockchain is irrelevenat. So big virtual d	Clarify
2909	22867695	"Still this explains it perfectly. The virtual block device does not know which parts of it are used by the file system, so every area ever written to requires disk space. This has nothing to do with Bitcoin. "	Clarify
2909	22868122	"I think that vmware should know which part of the filesystem is currently used and which is not. This is the only way that would allow vmware utilities to work If you make virtual machine, create and then delete very big file, launch vmware tool - drive will be reduced on the size of of the file. I "	Clarify
2909	22868782	"tried to use ""vmware-vdiskmanager.exe -k"" as maxime01 advised - disk size absolutely not changed.  "	Clarify
2909	22869506	"Most of your blocks are dirtied. You need to either: 1) vmware-mount your guest partition on your host and use vmware-vdiskmanager -p,  2) do something like ""dd if=/dev/zero of=/mnt/foo && rm -f /mnt/foo"" from within the guest before running vmware-vdiskmanager -k. "	Clarify
2908	22832734	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/637164b136fa324d0dc618e96a0091a979ceec02 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2908	22833304	Please fix this on transifex: https://www.transifex.com/projects/p/bitcoin/  Translations are pulled into this repository before releases. 	Clarify
2907	22819865	ACK 	Clarify
2907	22820902	"Updated the leveldb repo to a rebased version of our tree, on top of upstream LevelDB. "	Statement
2907	22821515	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9583b65429a3fe37ad51690de07fd26a593d7716 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2907	22822105	ACK  	Clarify
2907	22822216	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4a9a8f3f48f7820cff2964489f09a34160b1671b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2905	22772478	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9e037c27008cf0a6590759d64f2db53cdcc0cc94 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2905	23012254	"This breaks contrib/pyminer/, yes?  Porting contrib/pyminer to use getblocktemplate would be spiffy.  "	yAnswer
2905	23012436	@gavinandresen Good point. Does anyone object if I use my python-blkmaker module for the port? 	Clarify
2905	23064122	Just do it. 	Statement
2905	23230189	"Unless serious objections are raised by the community, ACK. A python reference miner sounds good, but can wait, I guess. We should probably at least remove contrib/pyminer in this pullreq too, though. "	Clarify
2905	23240825	"Rebased, and fixed a couple comment bugs.  Considered removing contrib/pyminer, but decided that was best left for a separate commit.  I agree it would be nice to update pyminer, or another simple reference miner, to use getblocktemplate.  Maybe cpuminer, with all assembly, 4way, etc. stripped out w"	Clarify
2905	23242258	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1f3bfa329f96b0e4564c410b539765909601ad1d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2905	23243152	"From the poolowners mailing list:  ""My pool still uses getwork for some miners...""  I'm not plugged into the mining world, so I'll let y'all figure out whether or not it is ok to obsolete those miners.  "	Clarify
2905	23243480	That comment was from me. I'm not opposed to getwork being removed although I do currently use it. If I choose to continue supporting getwork I can back it with GBT. I'll need to stick to an older bitcoind until I get this done of course but I backport security issues to what I'm running when I can.	Clarify
2905	23310100	"Well, based on the latest comments, it is easy to be safe and paitent and use 0.9 release as the opportunity to announce that getwork is being removed.  Add ""deprecated"" to the help text.  Therefore, closing this pull req.  "	Clarify
2905	23313545	"I am neutral on removing getwork, although there seem to be scattered reports of getwork on 0.8.2+ causing RPC problems?  I am not sure if this has been filed somewhere. "	Clarify
2905	23498764	I don't see any reason to try to put everything into a single git repository. libblkmaker already has a simple  C example that can be used as a GBT reference. 	Clarify
2904	22748512	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0eb506a01a32cc78609ee9071b0d5302488496ec for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2904	22810137	@wumpus @diapolo  Any comments? I don't normally change GUI code. 	nAnswer
2904	22810466	"I took a quick look at ``GetKeyFromPool()`` and AFAIK we want to get rid of that default address/kay anyway, right? That pull could also remove the fAllowReuse parameter from that function, as it's false after this pull everywhere in the code.  Code looks good and does what it sais, no need to enter"	Clarify
2904	22810891	"@Diapolo Good observation on default, I hadn't thought to check to find out if that were the last user of it. "	Statement
2904	23069801	Good change.  Agree with @diapolo with regard to default key and allow reuse.  	Clarify
2904	23157291	AFAIK GetKeyFromPool() is now true at least once after paymentrequest pull was merged. Can you guys have a look into if this makes sense. 	Clarify
2904	23187437	fAllowReuse gone and rebased post paymentrequests so I could remove the flag there too. 	Clarify
2904	23190464	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/71ac5052d83fcba21a09e5e2b7ad66faea6bd42a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2904	23203398	ACK 	Clarify
2904	23230226	ACK core changes. 	Clarify
2903	22732671	ACK 	Clarify
2903	22734496	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9afe5a2c32936ca97d66403bece02d663ec38264 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2902	22721329	"I agree with @petertodd here, it's hard enough sometimes to remind devs to add new options in the help message in the code ^^. "	nAnswer
2902	22721469	"I think I also agree with petertodd and Diapolo -- I've seen this stuff be out of date in other places, such as the wiki, and I think that in this case it's best to simply direct users to one central place. "	Clarify
2902	22721590	"Figured that would be a point. As a developer I though it would be helpful to have the API commands in file, so I could load them up in my editor. But I see what you are saying on how the probably will not get updated as they should.   I think I will make it a shortlist instead with the most importa"	Clarify
2902	22721683	"@super3 If you want to have the commands in a list, it's as simple as `bitcoind --help >> switches` for the command line switches, or `bitcoind help >> commands` for the RPC commands. "	Clarify
2902	22721856	"@Michagogo Well the plan was to go a little further than just listing them, but providing examples of usage as well. Should that be thrown into the /docs or the wiki or both? "	Clarify
2902	22722354	"Oops, didn't know those comments would actually post to the PR. "	Clarify
2902	22722674	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/52c61a28f383c4aa936d8912b2064be8f30a38a5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2902	22724697	Should be a little bit better now. 	Clarify
2902	22728612	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/64168b58b26ee152f944118ff70fc60f671d2ea9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2902	22733051	Agreed that running_bitcoin.md is a bad idea; just direct people to the command-line help and the wiki (having two places that are always out of date is better than three).  	Clarify
2902	23307989	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d9a4c6fa92e26785d124066de8df5b3ef9ac0d7a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2902	23488681	"You should squash into a single commit. I have no big tendendy towards or against this pull, it's fine to merge it from my side. "	Clarify
2902	26198341	Too minor of a change to do a pull. Closing and will add the good stuff to my next pull request.  	Statement
2901	22718790	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/116c9582760e1fc37408ce74abd0769062aa9025 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2901	22724581	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/588e13c40f4e66b3d789f9b426ef173acc21d9ed for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2901	22726418	"Completed review of all RPCs for require-wallet status, and fixed a couple bugs found in testing.  disable-wallet mode should be working in bitcoind now.  These are the RPCs that remain available: ``` addnode <node> <add|remove|onetry> createmultisig <nrequired> <'[""key"",""key""]'> createrawtransactio"	Other
2901	22726492	"Updating CreateNewBlock() to take a script, rather than a CReserveKey, should make it possible to enable getblocktemplate RPC.  "	Clarify
2901	22730662	"disable-wallet mode now skips BDB environment setup, reducing startup RSS here by over 40MB (h/t @gmaxwell)  "	Other
2901	22730900	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/db2b19ee838cdab513a6503ddefc16d985b59e87 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2901	22732801	Interesting how little code changes were necessary. 	Clarify
2901	22735704	Is there a good reason why this isn't intended to be merged? :p 	ynQuestion
2901	22736006	"Cannot be merged... as-is.  I wouldn't mind merging a cleaned up version, which attention paid to indentation and such. "	nAnswer
2901	22736068	Only argument I can make against it is that it's more configurations to test and getting the 40mbytes back from BDB on walletless nodes would be nice. 	Statement
2901	22736133	"Also, my paranoid fear is that I missed a spot in review and testing, and someone will figure out a way to crash a node by triggering a wallet lookup somehow, somewhere.  "	nAnswer
2901	22736172	All P2P-induced calls from main to wallet should go through the registration interface. 	Clarify
2901	22738594	"Code cleaned up, and perhaps merge-worthy.  "	Statement
2901	22738786	"TODO list: * getblocktemplate should be re-enabled, in some form (requires a key for the default txout script, due to CreateNewBlock calling convention) * I thought of another TODO item, then promptly forgot.  Nevertheless, a bullet point list is not a list without at least two items.  "	Clarify
2901	22749394	"Thoughts on just removing getwork, since it's useless with mainnet and getblocktemplate's use of CreateNewBlock doesn't need a generation transaction at all? "	Statement
2901	22749559	"Internal miner needs a generation transaction. :-/ But yea, removing getwork sounds great to me, except for the whole not solving the needing a generation transaction bit...  "	nAnswer
2901	22810648	Why are we keeping the internal miner at all? 	whQuestion
2901	22810877	"Because we have not provided an adequate replacement with the package, and it's commonly used and perfectly reasonable on testnet. "	Statement
2901	22811064	"@gmaxwell Agreed, it's the only miner I use with Testnet as it's so damn easy to use and JUST works. "	Clarify
2901	22825235	"With getblocktemplate and submitblock working, this type of node could still be used for p2pool or pools, with the payout address arbitrarily elsewhere for security.  That is already possible today with normal nodes with a wallet, but this at least shrinks the memory requirement per p2pool node, whi"	Clarify
2901	22939051	"The mining-removal discussion is outside the scope of this pull request, and is better discussed in active mailing list threads or pull req #2905   getblocktemplate can work just fine in disablewallet mode; just needs additional work appended here.  Hence ""TODO""  "	Clarify
2901	23070340	"Nice. Incidentally this would also be the ""no wallets loaded"" case for multi wallet support.  Haven't tested yet, but from looking at the code: validateaddress does a IsMine check (dereferencing pWalletMain) when the address is valid. Will this crash?  "	Other
2901	23221635	"Rebased on top of #2928 and fixed @Diapolo 's nit.  getblocktemplate now works in no-wallet mode.  OP updated accordingly.  Should be merge ready, modulo another IsMine() review.  I reviewed quickly based on @laanwj 's comment, but did not see the case.  Will look more closely with brain fully engag"	Clarify
2901	23240506	"Rebased, and fixed the bug found by @laanwj   "	nAnswer
2901	23310148	no-wallet mode is now ready for reviewing and merging.  	Statement
2901	23382090	"Nit / pet peeve:  negative options, because I hate double-negatives (-disablewallet=0 means ""yes I want a wallet please"").  Suggest that the option be: -wallet=  to mean ""no wallet, please.""  (default right now is -wallet=wallet.dat).  "	Clarify
2901	23482335	"What about ""-nowallet""? "	whQuestion
2901	23489967	"@laanwj ``-wallet=0`` IS ``-nowallet``, which I would vote for as a name for the switch. "	Clarify
2901	24018808	"I change my mind.  I like -disablewallet the way it is now.  -disablewallet is best as a distinct parameter for a specific purpose.  It is more confusing to overload -wallet= with another possible meaning, and you don't want it to attempt load a wallet file of that name if you have a typo.  Bleh, be"	Emphasis
2901	24019089	"As I said, -foo=0 is -nofoo for every parameter we use, why special case this one? "	Clarify
2901	24022976	"-nowallet is fine with me, as long as it does not break, or otherwise require contortions of, the existing wallet pathname support.  ""-nowallet"" seems quite natural, but a concern is that people were discussing -wallet=foo.dat -wallet=bar.dat and similar extensions for multiple wallet support.  I'm "	Clarify
2901	25308046	"Code looks good, apart from a few nits (see inline), needs rebase though.  I don't feel strongly about -disablewallet or -nowallet or -wallet=. We just need to know how it may later integrate with multiwallet (which naturally extends nowallet).  "	Clarify
2901	25547670	"Rebased.  This is merge-ready, except for option-naming shed-painting. "	Statement
2901	25680620	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5d4f3a1f0cbdf52257b41ea09d175c0018ad9434 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2901	26960224	"-disablewallet is a fine shade of paint for the shed; I think you should rebase, sanity test one last time, and merge.  "	Statement
2901	27182021	https://github.com/wtogami/bitcoin/commits/btc-0.8.5-disablewallet Disable Wallet for Bitcoin 0.8.5  Please ```s/Wallet disabled.../Wallet disabled!/``` 	Emphasis
2901	27354062	"https://bitcointalk.org/index.php?topic=320695.0 If end-users want to help testing of this patch, a backport is included in this build of Bitcoin 0.8.5 "	ynQuestion
2901	27606892	* Rebase * disablewallet=1 needs a GUI error message if someone tries it with bitcoin-qt * ```s/Wallet disabled.../Wallet disabled!/``` 	Emphasis
2901	27617571	s/Wallet disabled.../Wallet disabled!/ 	Emphasis
2901	28132274	@jgarzik Can you rebase please? 	whQuestion
2901	28294938	See #3240 	System
2899	22684196	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c6cb40f04bdad2bb9f60aa1c177a9b12122a0d0e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2899	22706472	Thanks! 	Emphasis
2898	22678310	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/954555bb264d301896c05dd282eaa346b6403287 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2898	22680965	"The gitian build process uses README_windows.txt, as does the NSI installer:      contrib/gitian-descriptors/gitian-win32.yml:  cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt     share/setup.nsi:    File /oname=readme.txt ../doc/README_windows.txt  ACK on removing the others. "	Clarify
2898	22682564	"Thanks for pointing that out @gavinandresen, and all the great work you do.  Git issues. See #2899 for a squashed commit.  "	Clarify
2898	22682707	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2704c89a5ec6f6d95cfde3fe0ebf60ebe7b83ac4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2897	22676208	Ugh interface change. Let me try this again.  	Statement
2895	22645285	"Accidentally typed in wrong window, probably triggered a keyboard shortcut to create a new issue. "	nAnswer
2894	22641462	"Not sure if this was a default config file, but I think this was overriding my settings every time I restarted bitcoin-qt:      noirc=1     maxconnections=300     server=0     paytxfee=0     allowreceivebyip=0  I deleted the file, and restarted.  After doing so, Bitcoin-qt re-initialized with a diff"	Clarify
2894	22642254	"The config file and command-line arguments always override GUI settings. This is sort of a weird situation, as the gui config is lower priority than bitcoin.conf. The result is indeed that if you try to change things from the GUI, which are already overridden, they will remain so. Perhaps they shoul"	Clarify
2894	22643264	"Thanks for confirming...  Just now, I just wiped relevant registry keys containing my settings for bitcoin (NT 6.1 x64 AKA windows 7) and did a fresh install because I was curious if a new .conf would be created.  Apparently 0.8.3 does not automatically create a bitcoin.conf file for the windows bui"	Clarify
2894	22672804	"Neither Bitcoin-Qt nor bitcoind ever create a bitcoin.conf file.  I'm closing this issue; it would be nice if Bitcoin-Qt kept you from shooting yourself in the foot this way, but that it is so low priority I don't think it will ever be fixed.  "	Clarify
2892	22500045	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2b6a8993fbcb94e318d32e4e157795e5b654bfb8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2891	22481044	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b35e99320001fe2efdd96cd35b0170e30773bd09 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2891	22732843	ACK 	Clarify
2890	22440585	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c7fa1a358620a785af50c56cc02284990f63c608 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2890	22454398	ACK 	Clarify
2888	22382150	This can be implemented much more accurately by computing the nChainWork difference divided by time difference. 	Clarify
2888	22385340	Should this also be squashed into a single commit for Bitcoin? 	Other
2888	22941689	I think the commits here look logical (and don't need to be squished) 	Statement
2888	22977265	Does @sipa insist on the rewrite to use nChainWork difference? 	whQuestion
2888	23194907	"@wtogami Yes, I think it's trivial to do right. "	Accept
2888	23195736	Beyond also sharing pieter's concerns wrt doing the calculation with pow() instead of directly. I think the default (no parameter) call having a variable integration window is weird. This means if you call it right after a difficulty change you'll get some insane random number. Had I implemented thi	Clarify
2888	23220758	"Agree w/ feedback.  Would like to see this merged, after revision.  "	Statement
2888	23490300	@coblee Any progress on this? Seems to be a nice feature. 	Statement
2888	23499458	I will get to it in a few days. Thanks for all the feedback. 	Statement
2888	23528039	"https://github.com/litecoin-project/litecoin/pull/69 @pooler has implemented sipa's requested change.  coblee wants to write tests before submitting this to Bitcoin.  I suggest squashing it a bit to have fewer, cleaner commits for Bitcoin. "	Clarify
2888	24384876	"Sorry for the delay, the change is tested and pushed. Please take another look.  @sipa, thanks for the suggestion.  @gmaxwell, the default behavior is to use the previous 120 blocks.  Thanks @pooler for the fix. "	Clarify
2888	24386588	"Code change looks good.  One idea (to be discussed, perhaps): shouldn't be use max(block.time for block in blocks) - min(block.time for block in blocks), to avoid weird edge cases with small numbers of blocks and non-causal timestamps? "	Other
2888	24390220	That's a fair point. I will make that fix. Will also need to handle a divide by zero edge case 	Clarify
2888	24413957	"Hmm, I made the change, but looking at it now, I'm not sure it's a good change. Making sure we get correct results for weird edge cases is probably not worth the extra cost in keeping tracking of a min/max over all the blocks, since people won't be calling this method with a small number of blocks. "	Clarify
2888	24474173	"Another idea (just up for discussion, don't rush implementing this): use the median-of-11 as timestamp for the begin and end block, which guarantees monotonicity (by network rule) and is likely a better estimator for actual time as well. The question is of course which window-of-11 to use; if you us"	Clarify
2888	24486943	@sipa  How does the estimator you use on sipa.be work? 	whQuestion
2888	24561302	"I still think there's no need to be so precise with getting the time right since this is just an estimate. With a large enough block count, the difference between each of these solutions (just GetBlockTime, min/max, median-of-11) will be minimal. So not worth the extra cpu cycle to get it ""right"". "	Clarify
2888	24562854	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d64eef48a45d1bbbbab5adf39d6ba1fe4537cea1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2888	25321329	"@gmaxwell Exponential window that measures rate and average timestamp of past blocks (which seems to be what you need for a most likelyhood estimator for an poisson process whose rate is an exponential function; I'm certainly not able to do the math for that again, but the resulting formula's became"	Clarify
2888	25435765	ACK 	Clarify
2886	22318126	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/42656ea2e552b027e174fdceab7348ffcb8245c4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2886	22435911	ACK 	Clarify
2886	22733277	ACK 	Clarify
2886	22733617	"ACK.  This does leak some timing data if bsize==0 or not, but I think this is inconsequential, I'm only mentioning it in case others didn't realize it and might care.  "	nAnswer
2885	22300720	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6407dc93a5165aaf016118bad211d8415b92f4e7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2885	23230316	ACK but needs rebase. 	Clarify
2885	23488734	ping @gavinandresen Wasn't this included in your paymentrequest-pull? 	whQuestion
2885	23534800	"@Diapolo : yes, this was part of the paymentrequest pull.  Closing.  "	System
2884	22327044	"@SergioDemianLerner +1  > ""Old clients that receive non-canonically-encoded transactions or blocks deserialize them into CTransaction/CBlock structures in memory, and then re-serialize them before relaying them to peers.""  What do you mean by ""old"" here? "	Clarify
2884	22354879	"@petertodd : for ""block"" messages, old means ""previous versions of the reference implementation.""  For ""tx"" messages, old means ""versions that have commit 'Simplify storage of orphan transactions'"".  Rejecting non-canonically-encoded ""tx"" messages should have no ill effects-- well, beyond creating Y"	Clarify
2884	22733448	"Strange that pull tester succeeds - IIRC there was a test that used an incorrectly-encoded vtx size in a block, to push it over the 1 MB limit? "	Other
2884	23220783	ACK  	Clarify
2884	23230355	"ACK. In a later version we probably want to make it a DoSable offence to use these non-canonical encodings, but right now that would cause network fork risk for pre-0.8.3 nodes. "	Clarify
2884	23231179	"ACK  FWIW if anyone wants to see it in action, here's block 100 with the compact int for the length of the transaction list changed to non-canonical format:      0100000095194b8567fe2e8bbda931afd01a7acd399b9325cb54683e64129bcd00000000660802c98f18fd34fd16d61c63cf447568370124ac5f3be626c2e1c3c9f0052d19"	Clarify
2884	23231197	"@sipa With the pull-tester I suspect what happened was it just expected the block to fail, so this patch just makes it fail for a different reason. "	nAnswer
2884	23238187	"@sip @petertodd : Sipa is right, this should have made the blockchain tester fail at block b64: ```         // Check that a block which is (when properly encoded) <= MAX_BLOCK_SIZE is accepted         // Even when it is encoded with varints that make its encoded size actually > MAX_BLOCK_SIZE       "	Other
2884	23306364	"There is a bug in the blockchain tester code; running under the debugger, I'm getting:  ``` 02:47:47 10 BitcoindComparisonTool.<init>: Block ""b63"" completed processing ... I had a conditional breakpoint set to trip with messages > 900,000 bytes, and on b64 I get: (gdb) p nMessageSize $6 = 999999 ```"	Clarify
2884	23461936	@gavinandresen My usual method is to import bitcoinj into eclipse and use the export menu from there. It would be easier if it worked in IntelliJ but I have yet to get IntelliJ's jar export to work. 	Clarify
2884	23883126	"@gavinandresen oh, Read the next comment, the signature size is non-deterministic, so try running it again and see if you get it over 1m (I believe you've got a 1/3 shot IIRC). "	Clarify
2884	23993267	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8dc206a1e2715be83912e039465a049b708b94c1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2884	25321366	"This still needs some work to understand the pulltester output, I guess? "	nAnswer
2884	25411020	"@sipa : I still think there is a bug in pull-tester. I'm torn on whether or not that bug should be fixed before this change goes in, because accepting this pull would just mean removing that pull-tester test (since the purpose of this pull is for the network to reject the thing pull-tester is testin"	Clarify
2883	22173924	"You need to be more detailed with the commit-msg, as no core-dev will merge such pulls... "	Statement
2883	22175123	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/982dabad33e1acc5c9ac59ba07ea44fa96cdcf77 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2883	22220486	A better commit message would be:  Use existing RPC_INVALID_PARAMETER constant 	Statement
2883	22236249	I changed commit msg now :) 	Statement
2883	22238219	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/15117692399a301e4a6f328016ef7e3cfe64d513 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2883	22239373	ACK 	Clarify
2882	22173900	"ACK, if you change the commit-msg to ``fix typo in README.md`` :). "	Clarify
2882	22174423	I changed now 	Statement
2882	22174899	ACK 	Clarify
2882	22178327	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b3915841b07222839efba7957978d911ca565254 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2881	22167435	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/265e2657b4d1fa1551787f17c35a35301c32a0e0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2880	22161782	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bdd34642dc7e6d5c2d8c7cf6b53e6041b89bf022 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2880	22715156	ACK 	Clarify
2880	22733525	ACK 	Clarify
2879	22096705	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0f1c8f23eb8d8e90cf429c2c182c3c10d5e3e39a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2878	22094636	"As a designer i would say, you cannot reproduce every effect and style with a SVG filter. Raster images have more possibilities and can look better then SVGs (in general). SVGs also sometime has render problems and look different on different render platforms. And theres also the performance/API iss"	Clarify
2878	22176975	"I prefer svg myself too. It is always possible to generate raster images from them (at any size) but not the other way around. Its even possible to provide svg versions for specific size ranges (ie <24x24) if that flexibility is needed.  Where available, svg versions are already present.  But do you"	Clarify
2878	22192114	"Unfortunately I'm not a designer (so that was just suggestion). And, to be honest, I'm mostly worried only about bitcoin (bitcoin-qt) application icon ;)  Actually, root problem that forced me to create that request is that some package maintainers [in Gentoo, for example], use "".ico"" application ic"	Clarify
2878	22198490	Hmm... i've once created a nice SVG of the (new) bitcoin icon. It's here: https://github.com/bitcoin/bitcoin/blob/master/src/qt/res/src/bitcoin.svg  It's also mentioned in the assets file: https://github.com/bitcoin/bitcoin/blob/master/doc/assets-attribution.txt  	Statement
2878	22435899	"Indeed, the bitcoin application icon has been available (in the repository) as SVG since the beginning of Bitcoin-Qt. This still holds for the redesigned one by @jonasschnelli .  Closing this issue.  "	Clarify
2877	22087766	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/923602f11d441435aabfa7772b2f2bc5869bb334 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2876	22061434	Small update: made -checkmempool default in regtest mode. 	nAnswer
2876	22062048	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/97bf6a7aef976cee0200c11f3915b4d7c0f33c10 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2876	22063706	"ACK; logic looks good, compiles and runs on OSX. "	Clarify
2876	22733772	Rebased. 	System
2876	22734086	"ACK. I think we should pull this, but I also think pulltester should gain a reproduction of it. @bluematt  where are we keeping issues for the pulltester? "	Clarify
2876	22740841	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2461aba1ac4e0673ed0568713b48e4bb37c8b041 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2875	22057923	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/e5547c5070b8486495a512903a37a516cdd219fb for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2875	22091519	"NACK.  First: Berkeley DB doesn't give any guarantees that removing a key/value pair will actually remove it from either the .dat file, the journal file(s), or the hard disk. I don't want to repeat the wallet encryption fiasco we went through, where private keys remained on disk unexpectedly.  Secon"	Clarify
2875	22116343	"Agree w/ Gavin, NAK  "	Accept
2874	22056487	"Please don't describe fee policy changes as ""fixing a bug"".  I don't think we should make this change. Further penalizing >0.01 BTC outputs seems unnecessary in light of the fact that very tiny outputs are not allowed, and really large dust paying transactions will not qualify as free. "	Clarify
2874	22056639	"@gmaxwell or only apply this check for incoming (mode == GMF_RELAY) tx? I think for relaying, (1+nsize/1k) * nMinRelayTxFee should be required. "	Clarify
2874	22056644	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6f5b5be7f8adab9ee49f5e93542d2be595fea564 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2874	22058770	"the size per KB _is_ required for relaying, except for transactions which are small enough and have high enough priority to qualify as free. "	Clarify
2874	22941033	"This code and change are pretty hard to follow, but I think the end result here isn't especially unreasonable. "	nAnswer
2874	23220794	"At a minimum this needs a lot more documentation, either in commit message or code comments or both.  No ACK without that.  "	nAnswer
2874	23223030	"@jgarzik @luke-jr @gmaxwell I no longer expect this to be merged. It may be still useful for pool operators as a new rule for tx relaying and should help reduce the mempool size, and not affecting most of legitimate normal tx that is smaller than 1k bytes. Thanks for reviewing. "	Clarify
2873	22013403	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9bc48eebf85c1d15f446cad1f92afb22b3a39bea for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2873	22733811	This seems like huge code duplication. Perhaps a bool to dumpwallet to hide private keys? 	Other
2873	22746044	"NACK.  It is easy to remove the private keys from dumpwallet output, e.g. ``` mkfifo /tmp/foo && (bitcoind dumpwallet /tmp/foo &) && cut -d ' ' -f2- /tmp/foo && rm /tmp/foo ```  Closing.  "	Clarify
2872	22004217	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f6603646f33c3664c3cb3e5faac253b25450a9b1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2872	22325930	@laanwj Can you take a look? 	ynQuestion
2872	22439249	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/33b1328909711d51ef1b8820fcf676256ad21776 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2872	23147116	Updated to revert the removal of NULL pointer checks to comply with @laanwj :). 	Clarify
2872	23148674	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dbc0a6aba2cf94aa1b167145a18e0b9c671aef5b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2871	21988981	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/159bc4819304c4394a92230c9e7b9f3416abe877 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2871	22006926	Seems ok to me. 	Statement
2871	22009502	"mapOrphanTransactions[hash] cannot be null; it will be initialized to an empty (default constructor) CTransaction when referenced. That should be impossible, because addOrphan/EraseOrphan keeps mapOrphanTransactions and mapOrphanTransactionsByPrev in sync. But even if some bug caused it to happen, i"	Clarify
2871	22097343	"Haven't tested, but looks good to me. "	Statement
2870	22095406	Fixed by #2871 	System
2869	21937726	"That's quite normal, unfortunately.  Note that it's not exactly ""idle"" - the reference client implements a full validation node, so it is verifying the correctness of every transaction and block it sees, which needs quite some data readily-accessible in memory to do efficiently. "	Reject
2869	28302732	"Yes, high memory usage is normal, see also #2353 "	yAnswer
2868	21885917	"@sipa prefers not to put this in wallet.cpp, closing  (the ancestor pull req, miner separation, remains open and valid)  "	nAnswer
2868	21896491	"Wow, I have influence!  Just to be clear, I do agree with the underlying issue of separating the wallet from the validation core, but IMHO the right way to do so is either by turning the wallet registration functions into boost signals, or by providing a CValidationEventListener in main.h that gets "	Clarify
2867	21888551	ACK ACK ACK 	Clarify
2866	21839607	ACK 	Clarify
2866	21841958	ACK 	Clarify
2865	21725712	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/84eb583d5e1726edeeda8ef368693caeaf55b04d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2865	21824532	ACK 	Clarify
2865	21835357	Does .arg take either %1 or %s ?  You changed %1 to %s ...  	Clarify
2865	21841901	"Damn, I updated this on my local machine, but didn't push to this branch, sorry. AFAIK it needs to be %1. Don't merge until I update the pull. "	Clarify
2865	21857452	"Now it's ``%1`` again, should be ready to merge. "	Clarify
2865	21929956	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bef9f573b54f6bbba6943559ebef933a025aa5d9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2865	22090505	"Verified the patch by running the pulltester-executable, can someone merge this so I can generate a new translations update? "	Emphasis
2864	21704939	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/716031385b45db9448a24718931e72a7f405e7ed for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2864	21723176	"This adds a poor layer of security on top of an RPC layer that we already recommend to *not* be exposed to the public Internet.  Even seemingly harmless RPC commands might stress the wallet and delay other RPCs commands, hold important locks, etc.  If you want to do this, the best suggestion is to c"	Clarify
2864	21738715	"@jgarzik Thanks for the suggestion.    If core devs don't want the patch, no problem.  I am curious where this recommendation is to not expose RPC layer.   I don't see it on the wiki jsonrpc pages, <a href=""https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list"">here</a> or <a href=""https"	nAnswer
2864	22685561	"Closing. I updated the  <a href=""https://en.bitcoin.it/wiki/API_reference_%28JSON-RPC%29"">JSON-RPC wiki page</a> with a warning about exposing the RPC port. "	Other
2860	21590993	"somebody else suggested 'Starting with -reindex will probably work just as well.' for a similar problem, i'd like to try that but don't know how, can that be explained in n00b? "	Clarify
2860	21596774	@macd0g   Assuming you have Bitcoin-Qt in your Applications folder.  Open Terminal and type    open /Applications/Bitcoin-Qt.app --args -reindex   	Emphasis
2860	21596984	Side note: you don't want to do this without having a *separate* backup of your wallet (made by the client itself). 	Clarify
2860	21609541	thanks both. sorted. 	Statement
2859	21694467	I think the best we can do is recommend that people either:  a) start up Bitcoin-Qt with the right arguments before clicking a bitcoin: URI    and/or b) Prefer to put options in a bitcoin.conf file rather than specifying them on the command line  	Clarify
2859	21710930	"@gavinandresen Do you think a small dialog box (with the possibility to cancel startup), giving users the hint, that it's wise to start the client before using bitcoin: URIs would be worth to add to Bitcoin-Qt? "	Clarify
2859	21713097	@Diapolo : No. The number of users who modify their shortcut to add command-line arguments is vanishingly small; bothering EVERY user with another dialog box for that tiny minority is the wrong thing to do.  	Clarify
2859	21714124	"I'm not sure about that guess, at least Windows users are more familiar with adding stuff to a shortcut than working with a bitcoin.conf IMHO. That box should only show up, when the client is initially started via clicking a bitcoin: URI and can perhaps be restricted to Windows.  There is no clean w"	Clarify
2859	21720853	"I agree with @gavinandresen. Especially now that it is possible to change the data directory without passing a command line argument, it should not be needed to pass anything on the command line. Everything can be set either in the options dialog or, if not, in bitcoin.conf.  "	Clarify
2859	21722030	Closing as non-issue then. 	Statement
2857	21485209	Seems it is not ^^... will take a look! 	Emphasis
2857	21490316	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dd833a4cd887bda58b8686a61287c342e9c56003 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2856	21474594	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2ba740688b82ab19a2878f54611d15b3850e0df9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2856	21514322	"@jgarzik Strange I'm missing your comment... anyway, this now only removes windows.h. "	Clarify
2856	21516904	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/852605d8d1b113bb11ed1f9e5ce2c92ac8fa2005 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2856	21694084	ACK 	Clarify
2855	21471999	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a034c7ebb6995c342fea289d04a6198d793eab08 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2855	21482011	"This should fix problems some people with mingw-64 compilers have.  <pre> In file included from alert.h:13:0,                  from alert.cpp:11: util.h:211:57: error: 'pid_t' has not been declared  void CreatePidFile(const boost::filesystem::path &path, pid_t pid); </pre>  I know error and fix seem"	Other
2855	21482051	ACK 	Clarify
2854	28296534	"From the RPC help:      ""Get all wallet transactions in blocks since block [blockhash], or all wallet transactions if omitted""  So `listsinceblock` shows recent *wallet* transactions, not all transactions.  Yes, it's a pity that wallet and blockchain RPC calls are not properly recognizable by name, "	Clarify
2852	21467308	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1b3656d50bda646822fd954714a88dea1528548b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2852	22733996	"Given that the only work-related RPC output is already measured in difficulty, perhaps use the same unit?  Another related and useful unit for transactions and blocks, is depth measured in ""equivalent current blocks"", namely the difference between chainwork of the tx/block under consideration and th"	Other
2852	22743697	I used the raw hex value as the units for chainwork so that alt-implementations could use it as a way of double-checking their calculations - right now if you write your own chainwork calculating implementation there isn't a convenient way of ensuring your results match the reference implementation 	Clarify
2852	22749754	"The internal encoding of chainwork isn't relevant to implementations, just the relative measurement... "	Statement
2852	22752789	"@luke-jr You're not going to get consensus-level behavior unless you use the same arithmetic as Bitcoin, which uses bigints, so you have no choice but to export an integer; that's exactly what my implementation exports. "	Clarify
2852	22756225	"@petertodd You're exporting an integer as a hexified String, rather than a JSON Number, which I think is what @sipa was suggesting. "	Clarify
2852	22757528	"@luke-jr Right, but the problem there is that JSON numbers are kinda-sorta double-precision floats - matching Javascript semantics - and support for bigints is pretty spotty in libraries.  Also sipa was talking about making the number in ""difficulty"" units, with has a 2^32 factor, so you'd always wi"	Clarify
2852	22757755	Already some libraries have issues with bitcoind's output. I don't think trying to workaround bugs that might or might not exist in other software should be a concern... 	Clarify
2852	22757900	"It's not a bug, it's just a limitation of JSON - bigints just aren't standard JSON. Bitcoin internally uses a uint256, so I'm not worried about exporting exactly that even if it's in hex. (like uint256 digests...) Anyway, as I said above:  ""Anyone who tries to bikeshed either the name or the format "	Clarify
2852	22758444	JSON doesn't place any precision limits on Numbers. 	Clarify
2852	22808353	@petertodd Do you have an actual use case where the full-precision chainwork is useful? 	whQuestion
2852	22822367	"@sipa Testing alt-implementations. chainwork is nasty, because subtle arithmetic mistakes in calculating it that only affect low-order bits are easy to not notice if any rounding is done anywhere, yet still can cause an (unlikely) fork. In addition it lets us easily compare different bitcoin version"	Clarify
2852	22822485	ACK 	Clarify
2852	23220809	ACK  	Clarify
2851	21428006	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9bf2a4aba2c22dc451ce000f7ef081b3d3562b84 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2851	21694102	ACK 	Clarify
2850	21408925	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e39ad7da9e993f93d115acefee8ec12c7cf198c3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2850	21604729	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3fbf6b01ac605f934c3d7e24a90b1939fafa7897 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2850	21605290	"@laanwj Can you take another look, I'm now checking for progress. "	Clarify
2850	21606601	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5bc6d8e5802500a6ffd737185f30283bc65eba58 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2849	21402657	ACK if pulltester likes it. 	Clarify
2849	21406609	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/aff83e9c028ad1f05886ae3079e40e659df5be41 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2848	21399491	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3960d2e4ab6b184c25b5ec5dc13b2d75cbc67520 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2847	21397379	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/84ef729aa1de762229c8a5c800cddff1a014fcca for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2845	21386657	"Can you also make the short password delay into an unconditional delay on failure?  Your current code timing-leaks the length, but I don't know if I care. You could avoid this by only comparing the input number of characters every single time, with a min() on the offset (take care to avoid a fence p"	Clarify
2845	21387068	"Woops, didn't mean to close it.  And I was thinking along the same lines, but with something a little simpler.  If the lengths don't match, you can just compare the actual password with itself (to get the timing right), but add 1 to nReturn also so it returns false. "	Clarify
2845	21387134	"The only reservation I have with that is that, depending on how you write it, it is code that the optimizer is very likely to optimize out.  E.g. if it were  if(len1==len2){} else {selfcompare}  that will quite probably get optimized. "	Clarify
2845	21387464	"I updated it to fix the length-leaking, seems like the simplest way to do it. "	Reject
2845	21389160	"@grayleonard   The extra loop with the ""return ++nResult == 0;"" is ... a little perplexing.  The % that sipa proposed (or the min)  should actually result in simpler looking code. Just move the length check to the end, and use the % to make sure that both only access valid indexes. Care to give it a"	Clarify
2845	21389330	"There's no telling what compilers will do to this. If you're that concerned about timing attacks, why not just do something like this pseudocode? ``` const minwait = 50; //msec timeBefore = GetCurrentTime(); result = val1 == val2; sleep(minwait - (GetCurrentTime() - timeBefore)); return result; ``` "	Clarify
2845	21389344	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bd8420dda743c36940d3986fb7e81a2f195495f8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2845	21389421	"Jeff argues that we should probably just drop basic auth entirely and require digest auth, which would solve this as a side effect. "	Other
2845	21389784	"@theuni we're deep in pedantry land, but expecting very high accuracy sleeps results in sadness. It's perfectly possible to leak data through a sleep like that. "	Clarify
2845	21389930	"@gmaxwell fair point on pedantry, but if you're on a system with <50msec sleep precision, i'd guess you'd have bigger concerns. In this case, it'd likely even spoil the very attack the evildoer is attempting. "	Clarify
2845	21390005	"Also -1 on convoluted schemes that the compiler might try to micro-optimize, or might impact the authentication result.  Heck, even unconditionally sleeping for a random interval would be better.  Remove the 'if' check on password size.  But yes, approaching 1.0 it is reasonable just to require Dige"	Clarify
2845	21394416	"@theuni From what I've read it seems like there are two ways to mitigate timing attacks - one can hold all responses with a constant delay, say 50ms.  The other returns faster, I've seen ~10ms in this instance from tests I've run, with a constant-time comparison algorithm.  Either one works.  I'm no"	Clarify
2845	21421606	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/351229cfc0d0f6c54af8e4d7ac7426c16e776fb1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2845	22734102	Superceded by #2886  	System
2843	21346896	It generates blocks on testnet as of HEAD~1 week ago.  I'll try with HEAD today. 	Clarify
2843	21407188	I tried again yesterday and was not able to generate a block with Bitcoin-Qt :-/.  @laanwj Could you also try this? 	Clarify
2843	21530850	"Mining on testnet, bitcoind/Linux/x86-64 2 cores, for a couple days now without finding a block.  Been 882 blocks since my miner found a testnet block.  "	Other
2843	21534368	Has there been a recent change in difficulty on testnet3 so that the CPU miner is unable to create a block or do you think it's bugged? 	whQuestion
2843	21536420	Difficulty is 180 right now... 	Statement
2843	21538770	"Alright today I was able to mine 2 blocks via the internal miner. blockhash: 000000007e965762bc7aef72f171d3e57387a33252e7caec72a1a76eca28de8 blockhash: 00000000889348cc14eb3336ce872bafe32c32217a4cfb673875ee2275ea8c27  I will close this, thanks for taking a look @jgarzik. "	Clarify
2842	21312830	Why not copy the SSL instructions into a doc/ssl-setup.txt? 	whQuestion
2842	21313163	"Dunno, seems like a topic for a different pull (as it would no longer be just a fix).  Devil's advocate: Because SSL is unsupported-ish (because only localhost is really supported for RPC). "	Other
2842	21331436	ACK 	Clarify
2842	21340438	"@luke-jr Fair enough, ACK. "	Clarify
2840	21526573	Added a few more lock improvements. 	Clarify
2840	22735325	Rebased. 	System
2840	22810513	Does this make the code more stable or is it a performance-improving patch? That locking stuff isn't my main expertise ^^. 	ynQuestion
2840	22822345	"@Diapolo It improves performance/throughput, by allowing more code to run without needing the cs_main lock, and conversely, holding that lock for a shorter time, so more other code can run in parallel.  At this point the improvements may not be noticable, but if we ever want a decently parallellizab"	Clarify
2840	26296967	"Rebased.  PS: the first commit may look large, but it really just changes some indentation. If needed, I can make a version that keeps the indentation identical for now. "	Clarify
2840	26306508	"Looks good to me except for an errant printf (reviewed using a graphical diff tool-- opendiff on the mac--  using its ""compress whitespace"" preference). "	Clarify
2840	26318652	Modified to not do indentation changes for now. 	Statement
2840	26373128	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7d38af3c493f9ea24c722ec2e6d3c51f4e851364 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2838	21295031	It's Basic authentication; easier just to decode the base64 ;p  	Statement
2838	21542349	Please use CVE-2013-4165 for this issue as per http://openwall.com/lists/oss-security/2013/07/24/7 	Other
2838	28296726	Solved by #2886  	Other
2837	21249103	It is disappointing that this moves away from the init.cpp section used specifically for command line parameters. 	nAnswer
2837	21284631	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/205b6c76a131b0690bd9b09af1f25fb486ab0d97 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2837	21284943	"RE: moving away from init.cpp :   Bitcoin-Qt and bitcoind startup are different, and I think it is cleaner to acknowledge that and have init.cpp be only the shared startup code.  I had to make similar changes for the payment protocol work, where Bitcoin-Qt checks command-line arguments and sends a p"	Clarify
2837	21292243	@gavinandresen I would actually like having the payment protocol functionality be available via RPC - like sending a (potentially unsigned) payment request to bitcoind and asking it to give you a payment/signed transaction back. There's no need for having that in a first release though.  @Diapolo I 	Clarify
2837	21293701	Updated to include a proper commit message and harmonize the used error messages. 	Clarify
2837	21302379	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9539c734289fd1f333f70e3c78180d7555c8f2e6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2837	21331279	"Fixed a missing ``.c_str()``, thanks @luke-jr. "	Other
2837	21385019	"I broke pull-tester, I'll fix...  "	nAnswer
2837	21386101	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3f3353af97948a2634b304455f83a175d0324044 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2837	21396665	Updated to include ``- use TestNet() call in splashscreen.cpp``. 	Clarify
2837	21400598	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/93eb0ca245bdaba8f5f4fde5a835acbc9a97c900 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2837	21931953	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/69267f1947d459bd7e02b573f0b6799424dc5d66 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2837	23210382	Closing as this was included in the payment request pull. 	nAnswer
2836	21285997	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/eda7605dfe27f84f320b9387e00fc98c7f4de63b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2836	21293992	ACK 	Clarify
2835	21231229	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bc06d51f837717943e9720575196be23335b96d6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2835	21231694	"AFAIK -s is need because we have a static boos library, -d of course seems wrong. From boost-win32.yml: ``./bjam toolset=gcc target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=ta"	Other
2835	21237182	">AFAIK -s is need because we have a static boos library, -d of course seems wrong.  --build-type=minimal outputs only a single library version with the -s- oppressed - at the advantage of being a little faster. It seems the library is identical. The cost is less clarity without the -s- tag so I will"	Other
2832	21013616	It would seem that things work fine without boost/version.hpp in walletdb.cpp? 	Other
2832	21015241	"Probably some other boost header (currently) includes it. Better to follow the docs and include the headers we want, though.. "	Clarify
2832	21211448	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d4e2b040ed5dc4f068c89039bc1a8610b68df5c7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2832	21292071	ACK 	Clarify
2831	21072527	"Guys,  I'm really sorry, but this was my fault, I was doing (perl):  sub backupwallet { my ($self, $param) = @_; $self->raw({method => 'backupwallet', param => [$param]}); }  I should have been ""params"" not ""param"" :(  I was unable to detect this typo because the server threw a 500 and did not retur"	Clarify
2830	21350404	ACK  	Clarify
2830	21647960	"Note: should be merged after sipa's watch-only address stuff is merged, and modified to work with it. "	Statement
2830	21694224	"Related to that, is addredeemscript useful, if bitcoind has no logic to actually spend coins sent to anything but what is creatable through createmultisigaddress?  "	nAnswer
2830	21694235	ACK on the other changes. 	Clarify
2830	21696294	"@sipa Actually bitcoind can spend any P2SH-encoded scriptPubKey that it knows how to spend, so you can (currently) put a pay-to-pubkey or a pay-to-pubkey-hash in redeemScript and things will work fine. In any case I think the feature of adding arbitrary redeemScripts makes the most sense in the cont"	Clarify
2830	24370141	@petertodd  Can you remove addredeemscript for now since it seems like the watch stuff is currently delayed?  	Clarify
2830	24371319	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/22536422878d05a7229f74726148dd50051c883f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2830	24371567	"ACK, changes look good and I tested all 0,1, and 2 byte scripts in decodescript and tried out validateaddress on some p2sh and non-p2sh addresses. "	Clarify
2829	21214833	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a59db19ee3b454680b3bb0aa881e601b9311a9ae for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2829	21662583	Do you plan on eventually implementing full BIP 32 support into Bitcoin-QT? 	Clarify
2829	21664080	@simondlr Of course. 	Statement
2829	21664672	@sipa Awesome! Looking forward to it. 	Emphasis
2829	22735127	@gavinandresen @jgarzik @gmaxwell Opinions? 	whQuestion
2829	22735696	"ACK.  On the basis that this has already been used to validate other implementations and has even turned up some bugs, I think it would be good to include this. "	Clarify
2829	22735887	ACK  	Clarify
2828	20934982	"Two comments: * Shared locks are not recursive, so if any of these wallet callbacks causes a call to main, which causes a new callback, you have a deadlock. I don't believe such cases occur, but it's worth making a comment about it in the code. * There is still a potential deadlock when callbacks ar"	Clarify
2828	21284075	"This pull seems to reliably cause the pull-tester bot to hang, I don't know why (maybe deadlock is being triggered by these changes, or maybe there's a bug in the pull-tester script).  "	Clarify
2828	21287999	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/36f03801dc66193bdbdee25a92b871202dbd36c6 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2828	21351645	"Agree, we cannot merge this and leave pull testing broken :/  "	nAnswer
2828	21362245	Perhaps another Boost bug related to an old version we use? 	Other
2828	21609156	"Well, I'm glad at least this pull request did something interesting :p "	Clarify
2828	23220889	Closing... re-open if/when issues are fixed. 	Clarify
2827	21232413	"I'd prefer factoring out this code to utility functions or an utility class, instead of just copying it.  "	nAnswer
2827	21232475	"@laanwj That IS a good idea, thanks. "	Statement
2827	21244463	@laanwj Can you take another look :)? 	Clarify
2827	21288231	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fc63a85f6deb17504c206796c9d7a87922588986 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2827	21293973	"ACK on code changes, haven't yet tested "	Reject
2827	21723224	Updated commit-msg and also removed <QSettings> and <QDesktopWidget> include from bitcoingui.cpp. 	Other
2827	21933145	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c431e9f1f03023d216db0ff48d3d598e705c97f9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2827	22090543	@laanwj Did you test the patch yet? 	ynQuestion
2827	22091772	ACK: tested on OSX.  	Statement
2826	21288441	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b3e0aaf36e294595c606af78feeeef158315a501 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2826	21292120	ACK 	Clarify
2825	20931315	"ACK    Reviewed patch, tested and confirmed in limited cherry-picks to 0.8.3.  I did not test master. https://github.com/litecoin-project/litecoin-0.8/commits/btc09backports https://github.com/litecoin-project/litecoin-0.8/commits/mark10b "	nAnswer
2824	20907699	Hm. Does pywallet not correctly handle the height records?  If its adding a key to a wallet it should zero it out.  	Reject
2824	20907757	"I suppose it does not, but even then - there shouldn't ever be a need to rescan except when loading a wallet, so this should be done via the command-line (-reindex) instead of via RPC?  Or is there a reason why an RPC is preferrable? "	Clarify
2824	21288660	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/965e091ef117c82e42e763114f747dfd7e76e749 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2824	22232835	"@sipa its only usefull if you forgot to run with -rescan so you dont have to stop + start again, anyone editing the wallet while bitcoind is running is stupid. id say this new RPC call would atrract alot of ppl exactly doing this, therefore its not a that good idea. "	Clarify
2824	22735308	NACK 	Statement
2824	22745854	"NACK from me, too.  Closing.  "	Statement
2823	20885663	Misplaced. 	System
2822	26706130	"Nodes can easily lie about the number of blocks, so this would be an easy way to introduce a DDoS attack. One could just pretend to have lots of blocks and everyone will switch to you and hold up the network. "	Clarify
2822	26707902	"Syncnode is going away anyway in headersfirst - we download from all peers that claim to have the block we're looking for (well, syncnode still exists, but it's just used to start the headers-sync process, which is really fast). "	Reject
2820	20727650	ACK 	Clarify
2820	20728979	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7772821a696645bd2f88c82652119c0986ab0453 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2820	20729329	ACK 	Clarify
2818	20607374	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dbe33ce0f793478efd1a0a1abf04c5d83ea77aa9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2818	21091327	"IMO, either the weight needs to be increased or it should wait until there are enough other keys that this makes a difference. At weight 1, I don't think it's possible for gitian-downloader to ever act on it. "	Clarify
2818	21091942	I'm not sure. Just wanted to point that issue out. 	Reject
2818	24857222	"ACK with adding Michagogo, I have no idea what weight to assign either though.  "	nAnswer
2818	24857306	Michagogo should have weight eleven.  Because it is my favorite number.  	yAnswer
2818	24870334	"I've updated with Gavin's suggestion, but it looks like it's not showing up here? The commit is at https://github.com/Michagogo/bitcoin/commit/0766e6ced5f1b914518837c2af7a2d77c0ed276d. "	Statement
2818	24877638	Recreated as #3023 because of the issue with the commit not appearing on this PR. 	nAnswer
2817	20573210	"Same thing, ACK "	Other
2817	20609056	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e9bfe6572900451e79fea7686625fd1a13eb9929 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2816	20570907	"Verified key AEC1884398647C47413C1C3FB1179EB7347DC10D with freenode NickServ user ""Warren"" (hostmask fedora/wombat/warren) registered 2002-12-13. "	Clarify
2816	20571000	https://litecoin.org/downloads/.warren/warren-gpg-transition-2013.txt.asc https://togami.com/~warren/warren-gpg-transition-2013.txt.asc http://wtogami.fedorapeople.org/warren-gpg-transition-2013.txt.asc https://people.apache.org/~wtogami/warren-gpg-transition-2013.txt.asc  If folks want to call to v	Other
2816	20603163	Looks good to me. I remember Warren from the Fedora-as-a-repo days. 	Clarify
2816	20605970	ACK  Warren's convinced me of his identity nearly to the point where I'd go ahead and sign his key. 	Clarify
2816	20610748	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a6635f6e95d3e5fbc9de3f8d13a9de669995a4b5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2814	21288669	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/584c5963412effab498fdcb42280fb3265759a00 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2814	23533982	bitcoin-qt.ljr20130721: src/main.h:1204: double CMemPoolTx::FeesPerKB() const: Assertion `nSumTxSize >= 0' failed. 	Other
2814	23534691	"@luke-jr FWIW sipa has told me that his headers first patch changes a lot of the code that this mempool patch touches, so I'm going to wait until he's done that before working on this further. "	Clarify
2814	26689104	"Closing; please open a new pull request after headers-first has been merged. I'm trying to clean up the open pull requests to ""things ready for testing and merging right now.""  "	Clarify
2812	20428527	"If roundabout methods are good enough for getting the full data for a block (all the transactions), why not this too?  At the very least, it would seem to me to make better sense as an interface, to use getblockhash with negative indexes (eg, -1 = last block). "	Clarify
2812	20428647	"@luke-jr That is actually another todo item.  Getting an entire, raw block is difficult, potentially impossible without -txindex.  This is frustrating, because the data is certainly available to bitcoind.  I've been planning a 'getrawblock <hash>' RPC pull request for this reason.  "	Other
2812	20429787	"@jgarzik Well, getting the raw data is already possible with getblock. But getting the fully detailed data for all the transactions was removed back after getblock got added... "	Statement
2812	20429971	...due to the txindex issue previously mentioned.  But it need not be that way.  	Reject
2812	20612713	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/091aa8dae9b7345a1cd81e2733766463dfbf4b82 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2812	20717431	"ACK. Compiled and run on the Mac, tested with half-downloaded testnet chain and with a new, zero-connections, zero-blocks bitcoind.  "	nAnswer
2809	20314295	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d640acc8a7dd5cf51f3adb650f527bb89e445a0c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2809	20329924	Don't forget to update doc/assets-attribution 	Reject
2809	20333857	"In response to @laanwj's earlier comment, the last bar in the connection icon has been tweaked to make it appear less dark against the gray status bar.  "	Clarify
2809	20472237	Why closed?  I like it. 	whQuestion
2809	20483127	@wtogami Closed just until I've had the time to make a few more modifications; I'll re-open once I've done. 	Clarify
2808	20315480	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/83e0a83aebee095588f2acf357e890b12380da07 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2808	20383652	"Funny, 3 pull requests which fix the same issue open at the same time (#2804 does this also). "	Clarify
2808	22435996	"None of the three ever got merged, though :package:  Shall we merge this one or close it in favor of autotools when it becomes mergeable? (as I remember autotools was about ready to merge, only needs a final squash, OKs and maybe support from pulltester) "	Clarify
2808	22438713	"@laanwj Do we still maintain bitcoin-qt.pro after that autotools stuff got merged? I'm a bit sceptical about it, because I never worked with it and I feel comfortable with our .pro file ^^. "	Clarify
2808	23150806	"Yes, we'll keep the bitcoin-qt.pro, at least as long as needed (the automake plugin for qt creator isn't up to level yet with .pro, for example it doesn't show a nice tree anymore). We'll have to maintain it ourselves, though, we cannot rely on anyone else keeping it up to date as others will build "	Clarify
2808	23220902	ACK  	Clarify
2808	26050410	Obsolete because of Autotools? 	ynQuestion
2808	26054744	"AFAIK autotools has fixed this, so it can be closed  "	Statement
2807	20288194	Please do translation updates via transifex (https://www.transifex.com/projects/p/bitcoin/). We pull changed translations from there before release. 	Clarify
2807	20316526	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/eb4139c5bec6c68ce49932104abf23f06195c88c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2807	20321315	"Ok, I understand very well. "	Accept
2806	20721406	+1 	Statement
2806	25592179	+1 	Statement
2806	25608178	i'm just installing 10.9 DP3 VM to take a closer look at it. 10.9 will be released soon and compatibility should/must be ensured within the next couple of weeks. 	Clarify
2806	25672783	"What version of clang++ and boost?  I use clang++ 3.3 and boost 1.54 in my development environment (OSX 10.7 for the last couple months, but was 10.8 before) with no issues. "	nAnswer
2806	27077399	+1 	Statement
2806	27151930	+1 	Statement
2806	27152933	"@M4v3R In addition to #3162, does removing the 'const' before the declaration of 'std::locale loc' help? "	Other
2806	27722495	"@sipa Yes, it helps. I've just created a pull request #3198  "	Emphasis
2806	27722992	Should these changes (requests #3162 and #3198) be backported to 0.8.5 branch? No one wants to wait till the next client version comes out to have it running on Mavericks. 	Clarify
2805	20533093	@jgarzik @laanwj @sipa ping. Any comments? 	ynQuestion
2805	20570245	"Changes look good to me, except that I do not want to maintain two build systems in parallel. If we switch to autotools, we switch, and the existing makefiles go away. Gitian determinism can be fixed later (though just builds should be verified to work). Unfortunately; I can't test myself now (I'm n"	Clarify
2805	21093468	"I don't see any code to look for bdb headers, much less figure out whether they're in the standard /usr/include/db4.8 path or somewhere else common... "	Clarify
2805	21093588	"Hmm, you're correct on bdb headers, I'll add the check. As for uncommon paths, it'll be up to the user to add it to cppflags. "	Statement
2805	21162280	"I've pushed the obvious fixes to your comments above. Thanks for the review. These will of course be squashed when ready.  I didn't add the --with-frontends because with only 2 (tests would be separate), I think that is quite confusing. I hope you'll agree and that can be addressed if/when a new fro"	Clarify
2805	21162626	"Addressed later means builders need to change their configure lines based on the version they are building, even if both versions support the same features. Better to have something extensible from the start IMO. "	Clarify
2805	21162850	"Fair enough. But with 2 frontend's, and 1 required, there's no way to avoid an awkward syntax.  Compare:  Disable qt: --with-frontends=bitcoind  Some future (non-auto-enabled) thing: --with-frontends=bitcoind,bitcoin-qt,bitcoin-foo  vs.  Disable qt: --without-qt  Some future (non-auto-enabled) thing"	nAnswer
2805	21163212	Disable qt: --without-frontends=bitcoin-qt  Some future (non-auto-enabled) thing: --with-frontends=bitcoin-qt 	Other
2805	21163477	"--without-frontends sets the withval to 'no'. afaik --without-frontends=foo has no meaning, or at best would not be portable. Is there some magic I'm not aware of for determining that a withval was also negated?  Regardless of that, even if it is valid somehow, I've never seen that syntax, and a qui"	Clarify
2805	21163603	"Hmm, I've seen this kind of thing before with KVM/qemu. They do ""all targets"" by default (and --target-list overrides entirely), nor use autoconf.  How about just building bitcoind by default and just --with-frontends=bitcoin-qt? "	Clarify
2805	21163810	"So then you still have to add it for each one you want to build, but you've disabled the default for what (arguably) most builders will want. I still don't see how it's a step up in any way from --with-qt (or --with-bitcoin-qt) or --without-qt.  If we're talking >5 or so front-ends in the future, su"	Clarify
2805	21164453	"--with-qt implies it's the same client being built with or without Qt, which isn't exactly the case here. You may have a point with regard to prioritizing splitting up the repositories before too many implementations grow on it. "	Clarify
2805	21164493	Compromise at --with-qt-frontend ? 	whQuestion
2805	21164657	"or even --enable-qt-frontend, since qt-frontend would be a feature in this case rather than a library for inclusion. "	Clarify
2805	21164702	Would it be hard to leave it out entirely so the builder just does: make bitcoin-qt make bitcoind make all ? 	Statement
2805	21164910	"Sure, those already work.  They're awkward with the recursive makefiles, which is one of the reasons I was against. You have to be in the correct dir for them to work:  make (makes all) cd src; make bitcoind cd src/qt; make bitcoin-qt  But some phony targets would be no-brainers to add, then they'd "	Clarify
2805	21164991	"If qrencode is missing, it should be a warning (and disable itself), not an error, unless --with-qrencode is specified ;) "	Clarify
2805	21165320	"It is, but qrencode is never checked unless qt is enabled. Nor should it be.  This discussion has gone way off track, and this is the kind of thing I was afraid of. This thing will never be merged if the points of contention are cosmetic. I'm happy to change those to whatever makes you guys happy an"	Clarify
2805	21166438	I don't think anyone considers this an obstacle to merging. I believe that is just waiting on @laanwj at this point. 	Clarify
2805	21365418	"I preferred a non-recursive makefile as well, but I don't want to bikeshed about this.  ACK after squash  "	Reject
2805	21498157	"Looks really, really good.  The only issue I found during review:  bitcoin-config.h should normally be the -very- first include, because it may need to change the behavior of certain includes that follow.  This may or may not be needed with bitcoin, but it is general practice when coding autotools c"	Clarify
2805	21519185	"@jgarzik good suggestion on bitcoin-configh.h, thanks. Done. As for the header order, I've changed it as requested, though I would disagree and say that if (in-project) include order matters, something else is broken somewhere. But that's way out of scope here :) "	Clarify
2805	21519668	"@jgarzik as for BitcoinPullTester, I'm not sure. It seems to have a hard-coded build process. If that's the case, it should change to: ``` ./autogen.sh && ./configure && make check ``` "	Clarify
2805	21533832	RE: the pull tester:  The pull tester build/test script lives at:    https://github.com/TheBlueMatt/test-scripts/blob/master/build-script.sh  A patch that checks for configure.ac (or whatever) and Does the Right Thing in the right places would be nifty. 	Clarify
2805	21594611	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/bad255871be523773c07fc3ac64f7d5f03032041 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2805	22825319	What needs to be done to move this forward? 	whQuestion
2805	22831012	"I believe all that is left is rebasing, squashing, removing the old makefiles, and updating some documentation?  Fixing determinism can be done after merge, IMHO, but the build should work on all supported environments. Fixing pulltester can only be done after merging as well. "	Clarify
2805	22902506	I have a bunch of work in a local branch that needs to be cleaned up and pushed here.  I'll have this merge-ready without fail by this time next week (my schedule is back to normal then). 	Clarify
2805	23310487	Closing in favor of a new (final) PR. 	Statement
2805	23310937	"Edit: Whoops, fixed link. Continued at https://github.com/bitcoin/bitcoin/pull/2943. "	Statement
2804	20230949	"Tested that an (Ubuntu) build of the resulting tar's content works, and results in a meaningful version being reported. "	nAnswer
2804	20232809	Will the resulting tarballs be generated deterministically by the gitian build process as well so we can get signatures that the tarball matches the git tag? 	Statement
2804	20233639	"@johndillon The tar file is generated by git, and there's no source of randomness (the owner is set to root, the timestamps are equal to that of the last commit, and files are sorted alphabetically) as far as I can see - though this can obviously change in newer git versions. So it could be done ins"	Clarify
2804	20234132	"@sipa Provided that is true I'll ACK this patch.  In some ways making it easier for distribution managers to distribute Bitcoin anything bothers me in that they represent a very real risk of compromise with very high rewards, but if they are going to do so this is a reasonable thing to provide. "	Clarify
2804	20246227	"Ok, I've moved the construction of the tar file inside gitian, so hopefully it is deterministic now.  A few notes: * Currently, the gitian build script doesn't know the ""name"" of the version being built, so the tarball uses a subdir bitcoin/ rather than bitcoin-$VERSION/; I don't know how much that "	Clarify
2804	20246651	"With the current pullreq, there is no way that the hash will match what github builds. They have the tag name in the directory, and their compression seems worse (even for .tar.gz). However, you do get signed hashes of the tarball from every gitian builder. "	Clarify
2804	20247302	"Currently, even our binary tarballs and ZIPs are outside the signature mechanism, so I don't know how important doing a source tarball deterministically is. The end-user can always compare with the signed git tag, after all.  In any case, I think deterministically having gitian generate the same tar"	Clarify
2804	20249229	"@luke-jr But the released .zip and .tar.gz files have hashes signed by gitian. True, the entire source tree is signed as well, but being able to just compare the hash on a single .tar.xz is certainly easier. "	nAnswer
2804	20250732	"Updated again. The created tarballs should now be identical to github's at the tar level. I'm not able to produce a binary identically .gz file, however. "	Clarify
2804	20250837	"Got it, added -cn to gzip, and now they match the github .tar.gz files. "	Statement
2804	20363222	"Note that https://github.com/bitcoin/bitcoin/pull/2805 handles bootstrapping and tarball generation, which I believe should make this PR unnecessary. Instead, gitian would have a separate descriptor for source generation (running 'make dist') which is then fed into the other builds. "	Clarify
2804	20383697	"Closing in favor of #2805 or its successor, as the plan seems to be to generate a source tarball through make dist running in gitian. "	Clarify
2803	20230011	ACK 	Clarify
2802	20191275	"I'm sure you'll hate this idea even more, but why not expose searchrawtransactions via P2P and advertise it in a service bit? ""fast import of a private key"" is a pretty common feature request for SPV wallets. I don't think it's particularly useful myself, but apparently other people do and they go a"	Clarify
2802	20192016	We've had this discussion. #2168  	Statement
2802	20210653	"There needs to be some way to find out how many entries are matched by a given address to allow blockexplorer apps's to skip to the most recent transactions and display them first if requested. Failing that, at least have Python-style index ranges to allow you to start from the last entry. Yes, addr"	Clarify
2802	20210877	"@petertodd Thanks for catching those two comments.  There is a count and a skip argument, so you can paginate results (the database is queried each time, but the relevant transactions are only read from disk when actually requested). "	Clarify
2802	20210973	I know you can paginate; I'm saying that you need to be able to paginate in reverse direction. (my understanding is the results are in order of confirmations right?) 	Statement
2802	20211322	"@petertodd They are in increasing position on disk, which for now corresponds to number of confirmations (except for transactions in sidechains - yes, those are returned too). I could just reverse the order, I guess.  One problem for the future is that when we'll have headers-first sync and parallel"	Clarify
2802	20211468	"re: sidechains, interesting! That should be documented...  Gah, that does add a decent amount of complexity, although users are going to see it as important that they can see their latest satoshidice crap. :( I don't have a great solution here, although I would lean towards storing height if that's "	Clarify
2802	20211593	"I don't mind the complexity of adding that (though it probably adds several 100 MiB right now already), but I'm really against using an address index as a way to *track* new payments (which is what this basically boils down to, right?) - you should just have a wallet that watches the chain for that."	Clarify
2802	20211714	"Well, maybe this index is actually slightly premature, and what we need more immediately is a way to search just the UTXO set? "	Statement
2802	20211770	"Or, think in terms of searchrawtransactions should have UTXO-only and full-chain modes? "	Statement
2802	20211821	"@petertodd What I want it for is an easy local blockexplorer. And the nice thing about the block tree (and all its indexes) is that they're append only, which is easy implementation-wise.  I agree an address index to the UTXO is useful too, and probably less controversial. It's not implemented howev"	Clarify
2802	20212066	"@petertodd Also, searching the UTXO set by address would have a very different interface anyway, as it's a set of transaction outputs, not a set of transactions. It wouldn't make sense in the same RPC command, IMHO. "	Clarify
2802	20213052	"@sipa Good point.  Well, seems to me that for a blockexplorer simply being able to iterate forward and reverse should be enough for the UI, and at worse you can add the height index later when the order guarantee breaks. In that case:  ``` searchrawtransactions <address> [skip=0] [count=100] [verbos"	Other
2802	20215463	How about using a 64-bit hash of the full script instead? 	whQuestion
2802	20215589	"Use the source, Luke! "	Emphasis
2802	20226989	"@luke-jr More seriously, every index entry adds around 10 bytes, and given the current amount of address reuse, those constitute the majority of the database. I've considered adding the entire script too, but that would mean a 50% increase (or more) because of that reason. Plus, if you know the full"	Clarify
2802	20228344	"@petertodd There is an alternative implementation possible, where we store (height, txoffset) for each index entry instead of (filenum, blockoffset, txoffset) - That's smaller too, and allows consistent ordering. The downside is that it can't support side-chain matches, as heights are not unique. "	Clarify
2802	20232409	"Yes, I know we had the discussion before. Once again, I'll remind us all that we don't have any real power in this. If people can't get the features they need in a decentralised way they'll create a centralised way instead, hence, blockchain.info API. The idea that people will say ""oh there's no P2P"	Clarify
2802	20232937	@sipa I meant the 64-bit hash *instead* of the current 64-bit key. Any address can be converted to a script and hashed just fine. 	Clarify
2802	20232958	@mikehearn If you can't offer a feature in a decentralized way with reasonably low resource consumption you should be happy that centralized services pop up and offer it instead.  If you want to be useful design an API that allows you to pay via micro-transactions those resources you are using by qu	Clarify
2802	20233027	@luke-jr That doesn't allow you to query pay-to-pubkeys given the corresponding address. 	Clarify
2802	20233092	"@mikehearn I'll agree to have an address index exposed to the P2P network if it can be done in an authenticated way, like Alan Reiner's proposal for exposing an address-indexed committed merkle tree, and even then only for the UTXO set, and not the entire history.  I'm completely opposed to providin"	Clarify
2802	20233111	"@sipa My preference would be to support the full (filenum, blockoffset, txoffset) set myself. Whatever the additional space used is it doesn't seem like a big deal once you've decided to go to the effort of creating the index in the first place. Hard-drive space is cheap.  Incidentally, it does spea"	Clarify
2802	20233141	@sipa Neither does the specialized form you're suggesting...? 	whQuestion
2802	20233169	@luke-jr It does because every PUSHDATA > 20 bytes is indexed by first computing Hash160(data).  Even individual multisigs in a bare OP_CHECKMULTISIG can be searched for as @petertodd pointed out. 	Clarify
2802	20233312	"@sipa I'll second @johndillon's thoughts on the full (filenum, blockoffset, txoffset) index.  Clever idea re: an orphan database... It'd be useful to have an index of all children for a given block too, but that can be a different pull-req; by that point we'll have a -all-blockchain-indexes flag... "	Clarify
2802	20233406	"Aha, missed that part. "	Statement
2802	20233493	"@petertodd To have a consistent ordering, we'd need (filenum, blockoffset, txoffset, height) even. "	Statement
2802	20500374	"This is awesome :+1:  please, merge it  "	Statement
2802	20928364	"Rebased, and added a stable ordering (height-based) and negative offsets, to simplify backward pagination. "	Statement
2802	20961418	"I agree, verbose is not working.  "	nAnswer
2802	21288888	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5df5288225dce4bd4c6c72254736307c02a6cd78 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2802	21293216	Rebased and fixed the bugs reported by @petertodd. 	Clarify
2802	21302646	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4790f3c823a33fae44b82ef7962372e38b1b0131 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2802	21643695	@petertodd Feel free to test the pageability now. 	Clarify
2802	21647791	@sipa Will do after my litecoin audit's done. 	Statement
2802	21841017	"searchrawtransactions 1111111111111111111114oLvT2 doesn't work - looks like the issue is the first few lines in FindTransactionsByDestination() because the keyid is 0, which is correct in that case. "	Other
2802	21841317	"I'm having good luck with the code otherwise - matches results on blockchain.info, and non-standard oddities like searching for OP_RETURN data work fine. Also results returned appear to all be in correct order. "	Reject
2802	21842344	"Getting some weird results with mwy5FX7MVgDutKYbXBxQG5q7EL6pmhHT58=Hash160('') on testnet, and the equivalent on mainnet. I'm seeing testnet txids a1f6a4ffcfd7bb4775790932aff1f82ac6a9b3b3e76c8faf8b11328e948afcca and 75f7d5e99912875e88d667afb48021b0b74916539c518618a8db4966661509df returned in the res"	Clarify
2802	21843182	"I just wanted to thank all of you for this implementation. Specially sipa who hates it and he did wrote it :)   Here you can see my work in progress from my Rails App, I do all the parsing and get the balances. Thank you all.  http://cl.ly/QNUL  Ton "	nAnswer
2802	22545830	"ACK from me. I think we should pull; edge-case bugs with weird, non-standard transactions I don't care about.  "	Clarify
2802	22546569	Only reason I see to delay the pull is that any fixes to address misindexing pointed out above may require a complete reindex.  	Clarify
2802	22551854	I disagree given the reason why these tx's aren't working isn't understood yet - could be a symptom of a subtle bug. 	Clarify
2802	23220926	ACK  	Clarify
2802	26709471	"Would we be able to see this merged? There's no outstanding issues in it (I've run it for literally months now), and there'd be considerable benefit in having this in the master.  "	Clarify
2802	26709584	"Seems there is a not-understood problem at least (as reported by @petertodd), and I don't plan to work on this any time soon. "	Clarify
2802	26709893	"In any case, I want to have watch-only wallet support before this, as it is a much more scalable solution for many problems that you would use an address-based index for. I'm closing this for now. "	Clarify
2802	26712372	"This did however allow for some quite handy local block explorers. Between Abe and BlockExplorer's respective database messes, you're looking 100+ GB of external databases and literally weeks of CPU time. Those not being an option, I'm back forced to query Blockchain.info and Blockexplorer for my da"	Clarify
2802	26712590	"Yes, I understand - that was mostly the reason for writing it. If the choice is between people using centralized indexing services and being able to run their own, I certainly would encourage the latter. But on the other hand, if the choice is between people building infrastructure that relies on su"	Clarify
2802	26713080	"@63 if you care a lot about this, why not pick it up yourself and try to resolve the remaining issue and submit a pull?  "	Clarify
2801	20245108	ACK 	Clarify
2801	20334846	Looks good 	Statement
2799	20074874	"This has been discussed in the past.  The conclusion was:  too high volume for this.  You'll be constantly executing new processes.  Better solutions include things such as https://github.com/jgarzik/pynode/tree/mini-node behind a trusted node.  This is essentially ""drinking from the firehose.""  "	Clarify
2799	20081284	The ZeroMQ patch would also make things like this possibe 	Clarify
2799	20093901	"There is no performance problems, bitcoin avg receive transaction number is less than 7 per second, top is less than 100 per second. Script can easy hold this.  Enabling this option who must understand its potential performance problems. It's simpler than 0mq and easy to use. "	Clarify
2799	20094641	A trivial fork-bomb attack for anyone who hypothesizes a node is using this feature. 	whQuestion
2799	20094766	"Nod.  Unlike blocks it is relatively easy to trigger via remote.  -walletnotify is IMO borderline, even, but much harder to attack absent additional knowledge of the victim (what keys might be in wallet).  -memtxnotify makes a big, easy attack surface. "	Clarify
2798	20067292	ACK 	Clarify
2798	20573047	"Closing this and recreating on a branch, rather than master. "	Statement
2798	20573480	Recreated as https://github.com/bitcoin/bitcoin/pull/2817 	Statement
2797	20012854	Validateaddress already provides this. 	Statement
2797	20012978	"oh, doh! you're right. "	Reject
2796	20570351	Huh? The removes the tests that are deterministic and leaves only the ones that cause spurious errors on pull-tester every once in a while. 	Clarify
2796	20571985	@TheBlueMatt  No it doesn't. I promise.  	Reject
2796	20572089	"Ahhh, yes...can you add (fixes #2714) to the commit message so it gets closed on merge? "	Statement
2796	20573559	ACK 	Clarify
2795	20618114	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/664aeb287124414da0141fd8f9e7d07b16af26a3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2794	19965237	Duplicate of #2702  	System
2791	19933264	Tested by running a -reindex on mainnet. 	Statement
2791	20038134	What kind of effect does this have on the blockchain size? 	whQuestion
2791	20041961	"@Mazo None.  The blockchain continues to store every single transaction, from 2009 through eternity. "	nAnswer
2791	20512612	It looks good to me. Are there any unit tests for blocks and UTXO set changes? If so it'd be good to add a test for this. 	Clarify
2791	20570406	/me votes new tests be added to https://code.google.com/p/bitcoinj/source/browse/core/src/test/java/com/google/bitcoin/core/FullBlockTestGenerator.java 	Statement
2791	20570436	"How would you test it? There is no observable difference.  You can try to create OP_RETURN outputs and try to spend them, and see that fails, but that's true before and after this PR (which doesn't mean it's a useless test). "	Clarify
2791	20570479	"Well, yes, testing this properly probably cant be done out-of-process (maybe over rpc, though), but adding some OP_RETURN scripts to the block test-set (and some that look semi-unspendable, eg OP_RETURN in an IF) would be really nice. "	Clarify
2791	20614082	"@sipa @TheBlueMatt I added tests for attempting to spend OP_RETURNS, including with IF's and similar, to the unit tests actually. I agree there should be tests to ensure they don't end up in the UTXO set though. "	Reject
2791	20711011	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ec84e81e8383b3b1e1ef4a6dbcb088193d8de5d7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2791	20711109	"@petertodd @TheBlueMatt I agree we need tests to verify that such unspendable outputs don't end up in the UTXO set, but I disagree it should be part of pulltester. This does not affect network interaction, but is a client-side optimization. "	Reject
2791	20732918	"The point of adding it to pull-tester is that if it is done wrong, it is network interaction.  Pieter Wuille <notifications@github.com> wrote: >@petertodd @TheBlueMatt I agree we need tests to verify that such >unspendable outputs don't end up in the UTXO set, but I disagree it >should be part of pu"	Other
2791	20774728	"@TheBlueMatt Just to be clear: I'm all for adding tests to pulltester intended to trigger edge cases related to handling of provably-unspendable outputs. I'm just not in favor of making pulltester use more than the P2P interface for testing (i.e., making it a whitebox rather than blackbox test) - te"	Clarify
2791	20794259	Over the network how would you know if a peer wasn't doing OP_RETURN pruning properly anyway if their script implementation was correct? 	whQuestion
2791	20935344	"@petertodd That's my point - anyone in the network only cares whether your script/verification implementation is correct. Only you care about whether it's not using more storage than necessary.  I prefer the block-acceptance tests to remain implementation-independent, so it can remain as generic as "	Clarify
2791	21255851	ACK  	Clarify
2791	21256241	"So this will make the gettxoutsetinfo on existing nodes diverge until everyone does a -reindex. Likewise, gettxout will return different results. Is this a problem?  One possibility would be to write a small piece of code that checks at startup to see if a particular OP_RETURN output is in the UTXO "	Clarify
2791	21257372	@gmaxwell sounds like a good idea to me. The canary txout should be the first op_return in the chain of course.  	Clarify
2791	21257403	"Oh, and don't forget test net... "	Reject
2791	21292138	"How about only enabling this when a ""prune_op_return"" flag is set in the database, which can only be set/changed at initial creation/reindex, and outputting this flag as part of gettxoutsetinfo? "	whQuestion
2791	21295037	@sipa ACK.  Definitely output the flag via gettxsetinfo. 	System
2791	21340353	"@sipa A flag sounds like less work, and few people would be affected, so go ahead and do it that way.  The important thing is to give users an understanding of why two different UTXO hashes don't match. Maybe add a UTXO version number, and just increment it every time we change something? IMO it's f"	Clarify
2791	21347176	Either a version number or simply list of flags that might permute the output. 	Clarify
2791	23192625	"Perfect is the enemy of good.  I think the inconsistent values here can be resolved by anyone who wants to create UTXO tree hashes for proofs, and otherwise by reindexing. I think we should just take this as is. "	Clarify
2791	23220931	Let's get this merged.  	Statement
2789	19882835	"It used to be every 100s, but the thread refactor (presumably unintentionally) made it every 10s. I think every 15 minutes is more than enough. "	Clarify
2789	19883752	ACK  	Clarify
2789	19883855	ACK. 	Clarify
2789	19892986	ACK Minor nit: maybe use a constant for the value instead of a direct magic number 	Clarify
2789	19897767	"@laanwj Ok, introduced a DUMP_ADDRESSES_INTERVAL in net.cpp. @gmaxwell Made it sleep once before the first execution. "	nAnswer
2789	19907912	"@sipa Where is the discussion for the sleep change?  For a general facility, such as the one you are changing, it seems a valid use to directly begin execution.  Putting the sleep first strikes me as a hack-y approach to a problem, that does not belong in a generic facility.  People in the Linux ker"	Clarify
2789	19908018	"@jgarzik It's the only place where LoopForever is used. So yes, I'm changing its semantics, but I think both cases are meaningful, and only the one actually used is implemented. "	Clarify
2788	19876528	This won't work. Bitcoind wouldn't ever call SelectParamsFromCommandLine() anymore? 	Other
2788	19876591	@sipa https://github.com/bitcoin/bitcoin/blob/master/src/bitcoind.cpp#L70 What about this? 	whQuestion
2788	19876686	"@Diapolo Ah, that's for the RPC client, not for bitcoind's normal functions. "	Reject
2788	19876867	@sipa Could we then place that call (``SelectParamsFromCommandLine()``) here for bitcoind to work in all vairants? https://github.com/bitcoin/bitcoin/blob/master/src/bitcoind.cpp#L39 	Clarify
2788	19877259	"No, not before ReadConfigFile. "	nAnswer
2788	19894322	"Doesn't yet do, what it should ;) -> closed. "	Other
2787	19876047	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/336a53ddbcfd9e8c5e2199a90f9abec54090c29f for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2783	19876364	"Yeah, seems like a better place for the check. "	Statement
2783	19879886	ACK  	Clarify
2781	19722896	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2817c1412e5af5c96cfc9bb00accd30c9152fc06 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2781	19723868	"Looks good at first glance.  Will test tomorrow.  Nit: Thought it was the commit msg that needed the ""fixed XXX issue"" text, rather than the pull req msg. "	Clarify
2781	19724258	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4addb2c066e157f479fdbae902b3d568f2432fd0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2781	19775888	ACK  	Clarify
2781	19783462	"@jgarzik Commits exist at the git level, pull requests at the github level. A commit referring to something in github namespace makes no sense to me. "	nAnswer
2780	19706820	Client: v0.8.2-111-gd9ff1cd-beta Os; Ubuntu 12.04.2 LTS Machine: VirtualBox 64bit 2gb  No libs manually installed. 	Statement
2780	19712669	Seems likely to be related to #2779  	Statement
2780	19862894	Closed by #2781  	System
2779	19706453	Client: v0.8.2-111-gd9ff1cd-beta Os; Ubuntu 12.04.2 LTS Machine: VirtualBox 64bit 2gb  No libs manually installed. 	Statement
2779	19706854	"Confirmed on Ubuntu 13.04 x86_64, v0.8.2-123-gb153ee6-beta "	Statement
2779	19708416	"1) had a valid, unencrypted wallet 2) ran 'encryptwallet' under HEAD 3) restarted with HEAD, reproduced problem 4) restarted with 0.8.2, yielded the following output  ``` 2013-06-19 19:29:57 init message: Loading wallet... 2013-06-19 19:29:57 Error reading wallet database: CPrivKey pubkey inconsiste"	Clarify
2779	19708889	Version 0.8.2 release appears to be OK.  Bisecting...  	Clarify
2779	19710935	git bisect points the finger at #1863 and commit 3869fb89b60091281b43a35921057ba3f43c18f0 ... ```  3869fb89b60091281b43a35921057ba3f43c18f0 is the first bad commit commit 3869fb89b60091281b43a35921057ba3f43c18f0 Author: Jeff Garzik <jgarzik@bitpay.com> Date:   Mon Jun 10 09:36:29 2013 -0400      Wal	Other
2779	19718237	"@jgarzik CWallet::AddCryptedKey overrode CKeyStore::AddCryptedKey; since #1863 it does no longer, so the newly encrypted keys never get written. The easy solution is adding the timestamp to CKeyStore::AddCryptedKey, but that is sorta ugly... (it's data the keystore shouldn't care about). "	Clarify
2779	19718628	"@jgarzik Thinking a bit more, also about how CKeyMeta will get used for more than just birthdates (BIP32 in particular), how about this: * Key metadata is kept in a CWallet::mapKeyMetaData (std::map<CKeyId,CKeyMeta) * When generating a new key, time is put in that map, and new key is written * AddKe"	Other
2778	19695270	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f590653377d5ee18c05894a58d226b5d2531077b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2778	19706790	"Code looks good, haven't tried. "	Statement
2778	19857134	"ACK, seems to work fine.  "	Clarify
2776	19649881	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7c1bb9a13226e7b46cc6836099809607ade8365a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2776	20004477	Updated per @sipa suggestion. 	Clarify
2776	20621556	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/36bd46f1c4330fa57a3730bd80706eca11510b55 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2775	19602102	"You need to make any translation changes on Transifex,  https://www.transifex.com/projects/p/bitcoin/  they are then merged before every release. "	Clarify
2775	19602116	Please use transifex (project name: bitcoin) for translation improvements. We pull all translations from there before release. 	Clarify
2774	19599092	"There is no numToVarInt anywhere in our code, as far as I can see. Are you sure you didn't want to file this with (a guess:) bitcoin-js? "	nAnswer
2774	19610722	Not this project 	Statement
2774	19617778	"Oops! Indeed, I meant to file that in bitcoinjs. My bad, sorry :) "	Statement
2772	19500509	I thought this was fixed in 0.8.2? 	Statement
2772	19500787	"confused about versions... just did a ""git pull"" and recompiled.  nick@blackbox ~/bitcoin/bitcoin $ git remote -v origin  git://github.com/bitcoin/bitcoin.git (fetch) origin  git://github.com/bitcoin/bitcoin.git (push) nick@blackbox ~/bitcoin/bitcoin $ git rev-parse HEAD e58154c447670a546936b850f0bb"	Clarify
2772	19501612	"@molecular When starting bitcoind, what is the first line being written to debug.log? "	whQuestion
2772	19501660	Bitcoin version v0.8.2-99-ge58154c-beta (2013-06-15 07:49:40 -0700) 	Emotion
2772	19502152	"Ok, so this problem seems to exist in HEAD. I wonder where it got reintroduced. "	Statement
2772	19547749	"Maybe my wallet birthday stuff broke something?  I don't see how, but it was a vaguely-related change.  "	nAnswer
2772	19707113	I'm unable to reproduce this problem; tried bitcoind and bitcoin-qt v0.8.2-123-gb153ee6-beta on Ubuntu 13.04 x86_64. 	Clarify
2772	19872783	"just retested and have to admit:  I screwed up...   I managed to recompile bitcoind, but not bitcoin-qt. When sipa asked to check version, I truthfully reported new version 0.8.2 for bitcoind. But my bug-report was done on bitcoin-qt which was still version 0.8.0.  0.8.2 doesn't rescan fresh wallet."	nAnswer
2771	19650100	Everything should be fixed now. Any more comments/suggestions? 	Other
2771	19650796	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/00a887450364bd5b096978291b6a6e0f47181d75 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2769	19449861	ACK 	Clarify
2769	19453358	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b1f15b218be8dfd1d2dbd375d469794bb7326748 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2769	19457959	ACK  	Clarify
2769	19470928	ACK  In my mempool rewrite work I also implemented this change and haven't found any downside to doing so. The wallet code is perfectly ok if there are tx's in the wallet that don't make it to the mempool for whatever reason. 	Clarify
2769	20469717	"Actually you broke transaction resurrection in the event of a multi-block re-org with this patch because transactions get added back to the mempool in the wrong order, the correct order within a block, but newest block first. See SetBestChain() for details. "	nAnswer
2768	19451191	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/025daac74bd00d7d9aba58cce5a24ce3a9de15e3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2767	19439426	And how do you prevent very bad thing from happening when one of the many  duplicated definitions gets desynchronized?  	whQuestion
2767	19439617	"Rebasing conflicts on the actual code changes made (one actual, moving some definitions from a header to the code file).  Due diligence was taken on my part to ensure that the conflicts were resolved correctly, I would still recommend someone bite the bullet and look at all the changes that are not "	Clarify
2767	19445776	"@gmaxwell From what I understand this does not duplicate anything. It does pre-declare classes, but that only consists of the name and nothing more.  At first glance this seems like a lot of changes, but it's almost entirely restricted to the #include portion of files. The only substantial code move"	Clarify
2767	19448075	"I'm generally in favor of cleanups like this, and it indeed seems pure code movement + include changes.  However: * Some changes seem not up-to-date with recent refactors (see inline comments) * I'm not sure I like the increased use of forward declarations. They don't remove actual code dependencies"	Clarify
2767	19451029	"Getting rid of code dependencies is even better, but in the general case if it is possible do forward declarations instead of an #include in a header I'm in favor of that. It generates a flatter include hierarchy, let's not give the C++ compiler more work than need be.  Re: uint64_t/int32_t I agree."	Clarify
2767	19499331	"Addressed the specific problems references inline.  Hopefully should pass build, don't know why it built on my machine to be honest. "	Clarify
2767	19525309	"Delt with cstdio problems.  Also normalized all [u]int64 types to [u]int64_t values from stdint.h, alongside replacing PRI64[xdu] with PRI[xdu]64 from inttypes.h . "	nAnswer
2767	19525341	@brandondahler Simply replacing [u]int64 types with stdint will probably break something - we tried this like a year ago and had to revert it :( 	Other
2767	19525403	"@luke-jr It was a non-negligable change, but it did compile and pass tests on my linux machine.  Was the issue with compiling on other architectures? "	nAnswer
2767	21694280	I think most other refactors that were in the pipeline are merged now. Care to rebase this? 	Clarify
2767	21698075	Rebased branch onto master. 	System
2767	23221054	"It would be nice to collapse the commits, and merge in the [u]int64_t change first.  Looks pretty good overall, though I do worry there is a subtle compiler detail being missed in the int64/int64_t type changes.  Very much like seeing use of stdint.h and int64_t, rather than using our own type.  "	Clarify
2767	23488877	"I also like the intention of this pull, can you rebase and perhaps follow @jgarzik so we can differentiate the type-changes and the cleanup changes :).  Edit: Also a merge-speedup is possible, if you create a Qt-only and a core-only pull, as @laanwj is able to merge Qt-pulls much faster than core ch"	Clarify
2767	23992274	I really hope to see PullTester happy and some final ACKs for your great work here. 	Statement
2767	24015037	Rebased and squashed small commits (made sure that the resuting rebased version is equivalent to the previously merged version).   I plan on going over the source again to re-alphabetize etc. 	Clarify
2767	24034437	"Pull-tester is fixed, so if it is complaining there is something wrong with your pull.  See the test.log to debug.  "	Statement
2767	24034659	@gavinandresen: Are you sure?  First two errors for last log are:      leveldb.h:11:24: error: leveldb/db.h: No such file or directory     leveldb.h:12:33: error: leveldb/write_batch.h: No such file or directory  I think I kicked off the last update by updating my original comment. 	Clarify
2767	24405579	"I started going through the changes, and noticed several missing dependencies, but maybe this is intentional, relying on indirect dependencies?  I'm very much in favor of cleaning up our dependencies, but hiding things further by making them implicit only worsens understanding the dependency graph, "	Clarify
2767	24474405	"It is not intentional at all.  The idea is that if and only if we can replace a header dependency with a forward declare, do so.  Additionally (and this is harder to do), if there are indirect dependencies, add them to be a direct dependency.  My method to find direct dependencies has been to remove"	Clarify
2767	24474505	"Ok, great! I understand finding indirect dependencies is hard, and the code certainly already has a ton of them, so anything is an improvement. I'll review it some more, if you're willing to address the comments. "	Clarify
2767	24474635	"Without a doubt, ideally there are no indirect dependencies anywhere, but that would take a lot of knowledge about all files dependency fulfillment and usage. "	Reject
2767	24474671	"@brandondahler Sure, no need to fix everything. But I'll help avoiding introducing more of them. "	nAnswer
2767	27665255	Rebased to current master and squashed all commits to single one. 	Statement
2767	28049279	"If we intend to merge this, I think we should merge it as soon as possible. Keeping a patch this size up to date must be frustrating.  After squashing this you seem to have introduced some merge commits into the pull request, can you make it one commit again? (easiest way to get rid of merges is to "	Clarify
2767	28081206	I've read through the entire patch and verified code movement and renames. ACK apart from the above minor nits 	Clarify
2767	28109400	"Replied to/fixed nits, rebase onto master, squash all but #3211 merge. "	Statement
2767	28120644	"Another nit: the commit messages that we use are of the format  (see http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)      subject line (~50 chars)     (empty line)     longer description...  You left out the empty line for commit 0de9da2, which causes git tools to merge your en"	Clarify
2767	28137826	"Rebased, addressed nits. "	Statement
2767	28139444	"Has anybody tested if the int64 changes run properly on Windows 32/64 machines ?  UPDATE: I downloaded the pull-tester-created bitcoind.exe into a Windows XP, 32-bit virtual machine and it seems to be running -testnet just fine.  "	Clarify
2767	28141877	ACK from me.  	Statement
2767	28144493	Address @sipa comments.  I think most of the main.h problems were caused by rebasing/merging so many times. 	Clarify
2767	28147331	"ACK, apart from my nits above. "	nAnswer
2767	28148542	"Some suggested changes, which seem to work: sipa/bitcoin@0762f57854af54d08c969c029f629c9741e79e64 "	Other
2767	28152944	Merged sipa/bitcoin@header-cleanup (sipa/bitcoin@0762f57) 	Emotion
2767	28153285	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/51ed9ec971614aebdbfbd9527aba365dd0afd437 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2767	28156606	"ACK. Thanks a lot for the effort of writing this, and maintaining it. "	Reject
2766	19440124	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e2654c8d280fbe77920960009f337d3f3c6772b6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2766	19444539	@wtogami did a quick test with this and confirmed that it solved the hang. Could you please verify that it's completely fixed? 	Clarify
2766	19445814	ACK 	Clarify
2766	19447316	"@theuni Seems great in my Fedora native builds now.  I enjoy not needing kill -9 to quit bitcoin-qt.  Haven't tested with gitian builds, but it seems from the simplicity of this patch that it shouldn't be a problem. "	nAnswer
2766	19447556	ACK 	Clarify
2766	19449641	Very nice. 	Statement
2765	19323636	ACK  	Clarify
2765	19359847	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/1d626952f9fac57b8febec6bfad14b059b4184d8 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2765	19449779	ACK 	Clarify
2764	19316057	"Same error as #2405, the fixes for it went into 0.8.2-beta "	Emphasis
2764	19320919	"Yes, please use 0.8.2 and if you don't see this again please don't forget to close this ticket :). "	nAnswer
2763	19326245	"ACK code change.  Administrivia:  1) git commit message should include text such as ""fixes #2534"" or similar.  Your pull request text included information that should be archived permanently inside the commit message.  In general, commit messages should be more informative than this.  2) We are curr"	Clarify
2763	19362165	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c87f462b74fe94ddf7ac1018c399bb9772776e16 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2763	19387151	"It's not really a protocol change, is it? It's just a change in the reference client implementation. "	Statement
2763	19387308	It is a bug fix but might answer the question if protocol > reference implementation :)  	Other
2763	19387381	"All fields in the version message except for the first ones are optional - clients need to be prepared for both missing fields or more fields than they know, as this is exchanged before the protocol version is negotiated. Because of that, it cannot be a protocol change, and it's not a bug fix either"	Clarify
2763	19387445	I doubt series of fields can be optional since they are not identified by the serialization. How to parse then if we add more? 	Clarify
2763	19387540	"LGTM  It's in the code - you don't have to add the last field, but if you do, you have to add all the preceding fields too.  Sipa is right, we should merge this, although it's a fairly minor thing. "	Reject
2763	19387592	"This is how the reference client parses it: https://github.com/bitcoin/bitcoin/blob/v0.8.2/src/main.cpp#L3201  Essentially by checking whether we're at the end of the message already. And yes it must be optional, as you're parsing/sending this before you know which version the peer supports. "	Clarify
2763	19388161	"Since the version number is preceding this in the message, optionality is not mandatory but chosen. I think it would be more future proof and flexible to decide on the structure by version read and not by checking the length. I believe the current way of parsing is ugly, but agree is sustainable. "	Clarify
2763	19388298	"The version isn't acked by the peer yet, so you don't know whether they'll support it. But indeed that's just a problem in one direction, not both. And yes, it's ugly. For more complex extensions later a separate message may be more appropriate... "	Reject
2763	19449786	ACK 	Clarify
2763	19531424	This has two ACKs so should be mergeable now. 	Statement
2763	19548658	"IRC user reports this change causes a remote node (ver 32200) over Tor to drop them (socket error 104, connection reset by peer).  Reverting this change fixes the issue.  "	Clarify
2763	19550812	"Ver 32200 has been/will be hard forked off, so I'm not sure why we should care? "	yAnswer
2763	19551992	"Yes, that is true, but because of a reason completely unrelated to the P2P protocol, so we should at least find out why this results in not accepting these version messages - who knows which other versions are involved? "	Other
2763	19552276	"It is wise to investigate, it however would mean that the flag would not be optional but must be absent to work. "	Reject
2763	19552523	Or there is just some broken alternative implementation sending that version string which is intolerant of the flag. 	Clarify
2763	19552749	That sounds like a more reasonable explanation. 	Statement
2761	19282939	Sounds like multiple issues here. The latter would need a LOT of careful thought/studying... 	Clarify
2761	28300149	"Sounds like a risky and controversial change. This would be best discussed on the mailing list (http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development) instead of here, as it affects the protocol and not only this client implementation. "	Clarify
2760	19363956	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/346427f01bddc7d83fd5b54ecff9828180626909 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2760	19397798	ACK 	Clarify
2760	19601615	Looks good to me. Please merge. This confusion ust wasted a few minutes of my time :) 	Clarify
2760	19601626	ACK 	Clarify
2759	19244686	"AFAIK this json_spirit stuff was not written by us and I remember changes there are a problem license wise? I know there is some pull around here, which updates it's version, dunno if that also fixes this warning... "	Clarify
2759	19249336	"Hmm, what compiler warning is caused by this? I didn't know compilers complained about unused _type_ definitions.  In any case, I prefer not to touch the json_spirit code. "	nAnswer
2759	19261154	"ok. I use archlinux PKGBUILD, maybe its their problem. As this is 3rd party code -> closed. "	Other
2758	19262120	Code appears correct to me.  Conditional ACK -- ACK iff other devs agree that pulling this code out of CBlock is the right thing to do.  	Clarify
2758	19265989	"Yes, I agree this code should be pulled out of CBlock. Reason: having a definition of a Bitcoin block available without needing to depend on all storage/validation logic (which on itself pulls in pretty much the whole project as dependencies).  Agree with the less generic names. Longer term, this sh"	Clarify
2758	19365572	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a4a5e834754cf2b996a857459e1bd8e118bba4db for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2758	19858974	"Code changes look good to me, and move-only + method/function conversions.  Can you rebase? #2632 caused conflicts. "	Statement
2758	19886975	Rebased 	Statement
2758	19887391	ACK code changes; didn't build or test.  	Clarify
2758	19897544	"ACK. Agree with code changes, individual commits look good, build works, tried unit tests, tried resync on testnet. "	Clarify
2758	19898081	"Dependency improvements possible now: * bloom.cpp: main.h -> core.h * chainparams.cpp: main.h -> core.h, protocol.h "	Other
2758	19911178	Updated deps directly with push to master. 	Statement
2756	19158391	"I never considered this a mistake; '1' happens to be the encoded form of the base58 zero, but it's still a zero in the sense that it represents value 0.  The other interpretation is of course just as sensible :) "	Clarify
2756	19367282	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d82f1f825a422263f118fe021cdaa80b25e388de for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2756	19908213	"Closing, not considered a mistake "	nAnswer
2755	19161989	This seems to be the important part:      Thread 0 Crashed:: Dispatch queue: com.apple.main-thread     0 org.bitcoinfoundation.Bitcoin-Qt 0x000c291a _ZL17InvalidChainFoundP11CBlockIndex + 922     1 org.bitcoinfoundation.Bitcoin-Qt 0x000d36d9 ConnectBestBlock(CValidationState&) + 1273  Might be a blo	Clarify
2755	19162008	"This may be something dealt with by #2642, which is in HEAD now. Do you have a way to try master (unsure, as the typical symptom was an assert failure, not a NULL reference as seems to be happening here). In any case, even a corrupted datadir shouldn't cause this. "	Clarify
2755	19162119	"Hmmm I will try -reindex -- I was going to try and do a build from github but apparently the ""build project in QT-Creator"" step is missing some key parts because loading up qt creator and telling it to build would just say options were not configured (mixes?) or something like that... (sorry for rep"	Clarify
2755	19162172	"Sure, here's a screen cap of the screen that comes up when I load the bitcoin project: http://grab.by/nlA6  Also: reindexing is running and it hasnt crashed yet so that looks promising. "	Clarify
2755	19173297	I installed stand-alone but then installed the 4.x SDK -- reindex solved my problem though soooo building from HEAD is a moot point anyways. Thanks again for all the help! 	Clarify
2754	19148929	ACK 	Clarify
2754	19149805	"ACK, assuming pull-tester is happy (I worry about boost::filesystem version incompatibilities...) "	Clarify
2754	19150473	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3e9c8bab54371364f8e70c3b44e732c593b43a76 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2753	19137396	"That's weird. Those preferences shouldn't even be visible on MacOSX, as they don't do anything there.  "	Statement
2753	19146120	This should be fixed now with https://github.com/bitcoin/bitcoin/issues/2371. 	Statement
2753	19196291	Yes. Is fixed by merged pull request #2613. But not in 0.8.2 (was merged after 0.8.2 release). 	Clarify
2753	20500455	"Running 0.8.3-beta and still have these items, it also appears none of the options save for me including the ""Start Bitcoin on system login"". "	Clarify
2753	20501739	"@medoix 0.8.3-beta is the same as 0.8.2-beta with the only change being the transaction patch. As @jonasschnelli mentioned 0.8.2-beta didn't contain the fix as it was merged after the 0.8.2 branch was created. It will be included in 0.9.0-beta, or possibly earlier if we see another 0.8.x release. "	Clarify
2752	19138040	"Indeed:      terminate called after throwing an instance of 'boost::filesystem3::filesystem_error'       what():  boost::filesystem::create_directory: Bestand of map bestaat niet: ""/home/s01/.bitcoin/testnet3""     Afgebroken (geheugendump gemaakt)  The problem is that if the parent directory (~/.bit"	Clarify
2750	19151265	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9309a8edfc7e0d8946792839b8dfc11b7c9d08c4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2750	19156405	ACK 	Clarify
2750	19162813	+unsigned int nBlockMaxSize = MAX_BLOCK_SIZE_GEN/2; +unsigned int nBlockMinSize = 0; +unsigned int nBlockPrioritySize = 27000;  Why are these defined here and the defaults again defined in init.cpp? 	Other
2750	19387291	Could someone merge BlueMatts refactoring of the fee code and then rebase this on top of it? Matt's pull makes things a lot easier to follow and removes some pointless duplication. 	Clarify
2750	19861456	"Merged #2660, so this needs a rebase. "	Statement
2750	20070978	Possible bug: In our testing we found strange behavior when nBlockPrioritySize was set to 10000.  Incoming zero fee transactions like 99XX bytes with sufficient priority would be accepted by nodes with nBlockPrioritySize 27000 but rejected by otherwise identical code with nBlockPrioritySize of 10000	Clarify
2750	23490233	@jgarzik Can you take a look at this again :)? 	ynQuestion
2750	25548993	Even though this was ACK'd...   don't care about this enough to continue rebasing and maintaining it.  Closing.  	Clarify
2750	25549371	:( it seems like this should be merged ... what happened? 	Other
2750	25550094	"@mikehearn  ""don't care about this enough to continue rebasing and maintaining it""  Following Gavin's ACK, more work was piled on top.  Not interested in constant rebasing on top of someone else's code as suggested up-thread. "	Clarify
2750	25616057	"I think this is an example, where our merge-process could be smoother, so devs do not get frustrated with constant rebasing... "	Statement
2749	19097642	"ACK, nice addition :). "	Accept
2749	19109566	"Total balance would be useful on Transactions tab as well. For example, if one filters transactions to some specific address, date or both address and date, there is no sum function anywhere and there is no Total row at the bottom of the list so it is not easy to quick-check totals. "	Clarify
2749	19117633	Looks good. Haven't tested or checked the code. 	Clarify
2749	19144754	"@sipa It's only one line of code change, the rest is ui markup :smile:  @subSTRATA yes it could be useful to query the total of subsets of transactions, this is also requested in #627 "	Clarify
2749	19152044	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cb85aeb06cfcac0812c56f24ebf429cf0904658b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2748	19111626	"Looks mostly OK, well done.  Comments:  1) MSG_NOSIGNAL cleanup should be a separate commit, but the rest should be collapsed into a single commit.  e.g. ""add gitignore"" logically belongs with the ""add autotools files"" commit.  2) use SUBDIRS, multiple Makefile.am files, and avoid relative paths, pa"	Clarify
2748	19114186	"Looks good.  One question: why is the configure script and autogen.sh in src/, and not in the root of the project like most projects do?  "	ynQuestion
2748	19117292	"One (potential) nit: several of the M4 files are GPL licensed (with a special exception); I don't know enough about licensing issues, but perhaps this impacts our source distribution? @gmaxwell @luke-Jr comments? "	Clarify
2748	19135561	"@jgarzik  1. Sure, I'll squash down if/when reviewers sign-off. It was pushed this way so that the code-changes are easy to review separate from the buildsystem ones.  2. I used a single makefile in order to make life easier for qt-creator users. How firm are you on the split? Agreed about the test-"	Clarify
2748	19135674	"@laanwj I suppose there's no real reason, it just made more sense to me this way. One current issue with moving to the top would mean that the .pro file would have to move (if it's kept around after autotools merge), since it produces a Makefile that would conflict. "	Clarify
2748	19135941	"@sipa the gpl in those files is effectively meaningless. Since they're always distributed in source-form, and resulting scripts are exempt from infection, the only way to violate would be to strip the attribution (which would violate MIT as well). So the net effect here is effectively nil. "	Clarify
2748	19138492	"@theuni just assume that either the .pro will be used or the autotools build system, not both in parallel, so the makefiles won't get in each others way.  I'd prefer the configure script to be at the top level, but others may disagree...   "	Clarify
2748	19152802	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2748	19497533	"Just a generic comment: I'm strongly in favor of moving towards a real build system, but under the condition that we switch entirely. I wouldn't want to retain both the old and the new, and needing to maintain them both. So, as soon as this can be used to build on linux/linux-mingw/osx/win32, and th"	Clarify
2748	19501389	"Ok. I'm working on the reorg concerns above, I didn't have much time to get to it this week. In the meantime, though, @warren has helped me to get the gitian descriptors up and running for win32, and linux should be easy after that.  I've gotten the same vibe from the others, so I'll finish up with "	Clarify
2748	20231511	"@theuni Hi, any updates about this?  There have been a few refactors lately, which may impact this work (core.cpp/h and chainparams.cpp/h were added), but I think the largest changes are over now.  I'd really like to see this merged. "	Clarify
2748	20243679	"Hi @sipa   I've been very occupied for the last few weeks, sorry for the lack of updates here. I have a branch that splits out the makefiles as requested. Personally I think it's a sizable regression, but I'm ok with that if it's what it takes to get it merged.  I'll try find some time tomorrow to p"	Clarify
2748	20249291	"@theuni Great, no actual hurry - I just wouldn't like this work to get lost. "	Statement
2748	20263843	Closing in favor of round 2: https://github.com/bitcoin/bitcoin/pull/2805 	Statement
2747	19090621	"tested, ack. "	Reject
2747	19104718	Looks pretty good.  Please use bool for boolean choices (example: gettxout).  ACK if that is fixed. 	Clarify
2747	19117836	"Agree with @jgarzik. ACK otherwise.  EDIT: hmm, it seems getrawtransaction uses 0/1 for verbose... meh "	Other
2747	19120821	"Indeed... Boolean does make more sense, but usually consistency wins so far. Otherwise, we should be using Satoshi values everywhere...  @jgarzik Any further thoughts? Agree/disagree? "	Other
2747	19120909	"Be consistent with gettxout, and use a boolean/get_bool()...  :)  "	Statement
2747	19121995	Done 	Statement
2747	19122226	ACK  	Clarify
2743	19292524	"Good idea, needs a rebase due to #2154 "	Statement
2743	19861514	"ACK, but needs a rebase. "	nAnswer
2743	19869649	Rebased. 	System
2743	19966582	LGTM  You could check the reason code in the unit tests to ensure the transactions are being considered non-std for the right reasons. But it's a minor thing. 	Clarify
2743	20512824	Let's merge this? 	whQuestion
2742	18959736	in my eyes this is the expected behavior. 	Statement
2742	18960043	"Really need more info herem  Did you enable any options? (Minimize on close, for one)  In what state does it keep running? Is it hanging in the shutdown? Or does it simply keep running functionally? Does quit from the menu work? "	Clarify
2742	18963427	"Or does it simply keep running functionally?  Seems that wants to close, but, still persist in ""zombie mode"".  -- STRACE OUT -- write(3, ""\1\0\0\0\0\0\0\0"", 8)         = 8 write(3, ""\1\0\0\0\0\0\0\0"", 8)         = 8 futex(0xb96374, FUTEX_CMP_REQUEUE_PRIVATE, 1, 2147483647, 0xb96348, 2) = 1 futex(0"	Other
2742	20270562	"correct close now,.. "	Statement
2741	18954342	ping @jonasschnelli for review 	System
2741	18955152	ACK 	Clarify
2741	18955561	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/99add01e76657ab7bc09d99c970b3ee08a0c9013 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2741	18960075	"Eek, mind your null pointers/uninitialized variables.  ACK "	Reject
2741	18960125	Yes. My fault. Sorry guys. thanks @theuni  	Other
2740	18991545	"I'm all for supporting UTF-8, but *raw utf8* is non-standard JSON and will likely break compatibility with some parsers. Escaping using \uNNNN is the norm. I'm not convinced we should enable it:      raw_utf8 = 0x02, // This prevents non-printable characters from being escapted using ""\uNNNN"" notati"	nAnswer
2740	18993602	@laanwj How is it non-standard? The specification seems to say raw UTF-8 is standard and parsers must handle it... 	whQuestion
2740	18995351	"JSON Spirit without raw_utf8 escapes every byte as UTF-8 character. For example, U+0432 will be escaped as \u00D0\u00B2. raw_utf8 is solution. "	Other
2740	18999288	"Well the help text said it is non-standard, and I was going on that, but according to http://www.ietf.org/rfc/rfc4627.txt?number=4627      All Unicode characters may be placed within the     quotation marks except for the characters that must be escaped:     quotation mark, reverse solidus, and the "	Clarify
2740	19006665	"> @jgarzik commented on 370df18 >""now builds on unix"" tells us nothing about the commit: why it was needed -- because it builds on ""unix"" here, what needed changing etc. Suggested commit message:  >makefile.unix: link with boost_chrono to fix build on [your platform]  Sorry, it was my own issue. Sol"	Other
2740	19245446	"Changelog for 4.04 to 4.06  Version 4.04, 8 January 2011 Added the raw_utf8 feature to the write functions Added a << std::dec before writing to a stream to ensure that integer variables appear in base 10 notation Added additional .h files to CMakeLists.txt Output doubles using precision of 17 inste"	Clarify
2740	19252272	Any reason not to update? 	ynQuestion
2740	21352661	"I'd like to see json_spirit update separate from any UTF8 fixes.  i.e. two commits: update json spirit, then switch raw_utf8 "	nAnswer
2740	21362098	@jgarzik Seems like a good thing to do.  Also I hope the new json_spirit version fixes a compiler warning I get:  <pre> \src\json\json_spirit_writer_template.h:31: Warnung:typedef 'Char_type' locally defined but not used [-Wunused-local-typedefs]          typedef typename String_type::value_type Cha	Clarify
2740	21390018	"@jgarzik Done. @Diapolo Can't reproduce this warning on master branch. gcc-4.7.3, GNU/Linux. "	Reject
2740	21391216	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2ecb7555a9df1e843fd25f588819e4ca1d94b266 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2740	21395714	"@constantined I also did not have that error with MinGW < 4.8.1, but perhaps latest json_spirit fixes this anyway :). "	nAnswer
2740	23221096	Looks pretty good.  Made one inline comment.  Do Qt guys agree that RPC console should pretty print?  	Other
2740	23490751	"Did a quick web search, but perhaps you can tell me what pretty-print means for RPC console or perhaps give a formated example? "	Clarify
2740	23543107	I tried this out and didn't see any change to the JSON as printed in the console before/after this patch. So it's ACK by me. 	nAnswer
2740	24016652	"If this happens, please be sure that #2980 is fixed. "	yAnswer
2740	26697330	Is there anything blocking this?  	ynQuestion
2740	26784838	Works for me.  	Statement
2740	26807478	Had to revert this -- it broke JSON-RPC values.  See #3126  	nAnswer
2738	18937000	"This is along the same vein as #1809 except this is per-transaction, not per-TxOut. "	nAnswer
2738	18940841	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e25168f78df4fcec52a88590dfa1b043c318b4fa for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2738	18976852	"Concept/Code skim ACK, after payment protocol gets merged - too much ability to take the path of least resistance and just use OP_RETURN for adding data to a txn because there is no alternative. "	Reject
2738	19009171	"The current UI has no mechanism to show the user any messages in any OP_RETURN outputs, so I don't think we'll see people using OP_RETURN for stuff that would be better done with the payment protocol. What we do need is an alternative to data and hashes in unspendable outputs so we can nudge the use"	Clarify
2738	19181009	"FWIW I did take a careful look at the code and found some minor issues, but I'd like to hear more about people's thoughts on the idea in general - some of the issues are fairly specific to implementation. "	Clarify
2738	19928669	"Rebased, and fixed @petertodd issue "	Other
2738	19928819	Should this be merged prior to OP_RETURN UTXO being excluded from the coinstate being widely deployed?  	whQuestion
2738	19929049	I agree with @TheBlueMatt that this shouldn't be deployed before there's a alternative for cases where it'd otherwise just be used a communication through the blockchain.  I'm working on a patch that prunes OP_RETURN-starting pubkeyscripts. 	Clarify
2738	21091219	@jgarzik Rebase needed again. 	System
2738	23221351	Rebased.  	System
2738	24537508	MasterCoin may end up being the first real-world usage of this. I'm currently discussing with Jeff what would be involved: https://bitcointalk.org/index.php?topic=284178.msg3168249#msg3168249 	Clarify
2738	24537740	@dacoinminster There is already usage of this.  	Statement
2738	24942422	Is there any target client version for this? 	ynQuestion
2738	24947219	"Mainly, people do not want this to go in before #2791 which seems like a reasonable request. "	nAnswer
2738	25015272	"It seems that #2791 got merged, so I guess we have green light here?  As for the size, 40 bytes is probably enough to contain a 256 bit hash plus some additional data. "	Clarify
2738	25015736	@M4v3R  See my above comment. Being merged wasn't the bar I was suggesting.  Whats your interest / application here? 	Clarify
2738	25015747	"I'm still in the middle here.  Ideally, there is just no intent of using the blockchain as a storage mechanism for arbitrary data at all. Unfortunately, it there seems such ridiculous demand for it, that it happens anyway - costly or not, as we've seen in the past.  Given that this is inevitable, th"	Clarify
2738	25016149	"@sipa > ""May see"" I don't think there is any ambiguity there, ""will see"".  But is it worth the trade off to shape it towards less harmful forms when it happens?   @petertodd needs? Is this just because they want to store _more_ than 80 bytes?!  (Incidentally, I still think 80 bytes is too much, but "	Clarify
2738	25016350	"Ooops, deleted my comment accidentally, reproduced below:  @sipa I think MasterCoin shows that you can't stop datastorage in the blockchain via social means, only technical ones. (or occasionally the threat of a technical change) Their protocol needs the ability to store more than one data txout per"	Clarify
2738	25016593	"@gmaxwell Who cares? It's easy for them to make a protocol that does what they want with CHECKMULTISIG, so that's what they'll do. "	whQuestion
2738	25016848	"IMO what we should do is alongside this patch make anything other than P2SH and pay-to-pubkey-hash in a scriptPubKey non-standard and make OP_RETURN be allowed to be present as often as you want, with a data payload size calculated to be a bit cheaper than the alternative possible by P2SH w/ inner C"	Clarify
2738	25018894	"@gmaxwell Oh, yeah, that's correct, so once you limit the UTXO-usage by getting rid of everything but P2SH and pay-to-pubkey-hash making your OP_RETURN be cheaper than either mechanism is what we want. Given that each 20-byte-hash output has a cost in terms of Bitcoins burned (due to the dust rule) "	Clarify
2738	25021353	"@gmaxwell I already stated that on the mailing list. My interest is to attach an additional signature to transactions generated by my service, so anyone receiving the transaction can see that it came from the service. This would allow merchants or exchanges to safely accept Bitcoins after zero confi"	Clarify
2738	25021713	@M4v3R Given that the additional OP_RETURN data will make your transactions easily identifiable anyway why not just use a single green address and send all transactions from it? Or just provide a way to query your server over SSL to just ask if a particular transaction is from you? 	Clarify
2738	25022277	"@M4v3R BTW if you're working to make a business based on securing zero-conf, I should warn you that we've got a way of making them fairly secure that could make your business plans obsolete: https://bitcointalk.org/index.php?topic=251233.msg2669189#msg2669189 "	Clarify
2738	25071236	"@petertodd If that's the case then this is great news. No, my business model is not based on securing zero-conf, I just thought it could be a valuable addition to the business, but if that will be solved another way I'm all for it. "	Reject
2738	25071574	"@petertodd My service is based on giving the service operators as little trust as possible (ideally, no trust at all). That means that at any point I don't want to be in 100% control of users coins. This is implemented by using multi signature transactions. With that in mind I can't use a single gre"	Clarify
2738	25550408	"Rebased.  Code-wise it is merge-ready now, though @sipa illustrated the current merge decision factors.  "	Statement
2738	25680563	How should I test this?  	whQuestion
2738	25681500	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a79342479f577013f2fd2573fb32585d6f4981b3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2738	25682033	"@gavinandresen Seems to me that we should have an -accept-nonstd option that -testnet soft-sets to true so that -accept-nonstd=0 can be used easily to test mainnet behavior exactly. (or conversely, -reject-nonstd) I've seen multiple people get confused by that difference when testing their code, usu"	Clarify
2738	25792402	"@gavinandresen I made hand-created outputs using https://github.com/gasteve/node-libcoin   For python this should work, https://github.com/jgarzik/python-bitcoinlib  Then I pushed to TNIAB setup and manually observed. "	Clarify
2738	25792537	"@petertodd I'm fine with (1) a chain param indicating accept-nonstd, and (2) a command-line param enabling alteration of that default.  Current default behavior must be preserved of course. "	Clarify
2738	26688233	"We should allow a bare OP_RETURN scriptPubKey - no data payload - to IsStandard() as well; sometimes it's useful to simply send Bitcoins to fees with no message or data at all. Example, https://github.com/petertodd/dust-b-gone/ which creates coinjoin tx's that destroy dust by spending inputs to fees"	Clarify
2738	26690096	"Agreed.  I actually think it should be valid to have zero outputs (100% fee), but as that is a hard forking change, a dummy output is about as good as it gets. "	Clarify
2738	26778668	... mumbles about the perfect being the enemy of the good then merges....  	Statement
2735	18911698	Does this include everything from doc/coding.md? Which I assume it's trying to replace. 	whQuestion
2735	18911867	"Leaning towards general NAK.  This is imposing one coder's view of how code should be written, when we already have another coding style doc that originated from coders with heavy bitcoin.git contributions. "	Statement
2735	18911888	@fanquake This is not supposed to be a replacement for doc/coding.md 	Reject
2735	18912260	"In general, don't overburden anywhere with rules.  The main GUIDELINES (not rules) are:  make new code look like existing code, and follow project developer consensus on any style changes. "	nAnswer
2735	18913103	"While rules/tips to avoid shooting yourself in the foot can be welcome and even necessary in language such as C++, I don't like how this starts off with a screenful of rules about formatting. Just use the same convention as the code you're editing. As for the rest, there would have to be developer c"	Clarify
2735	18913934	"I believe Gavin or Mike H or similar pointing to Google's C++ coding conventions as some good rules to follow.  They seemed pretty sane, also. "	Clarify
2735	18915061	tl; dr  closing 	Clarify
2735	18915638	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/18e6e3ed07744e2fd0ac077e210068f5ee8a8f26 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2734	18891610	"You need to find the debug.log and show us, what is listed in there. Do you see any splash screen when loading or is there any disk activity or an error message shown? "	ynQuestion
2734	18894943	@casellas ~/Library/Application Support/Bitcoin/ 	System
2734	18899492	"AFAIK this is the default data directory on Mac, no idea why it's not there as I'm using Windows. Do you supply any command-line arguments or fiddled around with a bitcoin.conf? "	nAnswer
2734	26782646	"Closing this, no activity for too long "	Statement
2733	18883041	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ab139c964e32b3ec5279eea0e749e0fe4a31a2dd for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2733	19498612	"Would you mind if I rewrote this a bit, by simultaneously changing how keys are stored in the wallet file (using a serialized CKey, instead of CPrivKey, and combining it with the new CKeyMeta)?   "	Clarify
2733	19502773	That sounds like a good idea. 	Statement
2733	20493830	I'm closing this pull request.  sipa's suggestion is a better long term solution. 	Clarify
2732	18856458	See #273 for discussion. 	Statement
2732	18861030	Close as a duplicate of #273 	Continuer
2731	18843374	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1fc57d568b704f929890363a99d2a793956a15fe for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2730	18839295	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/29ec37db035c549d39ee78255185eba92dd99031 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2730	18989622	"NAK, I prefer to keep this explicit. "	Statement
2728	18814192	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/68d0a7d5a4ba59a977966f7c8b3ed0f113ff1586 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2728	18814501	Thanks. The other thing to do is squash those two commits together - we don't like having excess commits in the tree without a good reason. If you aren't familiar with git look up the git-rebase command (specificially the -i interactive flag) for how to do this. 	Clarify
2728	18832522	Done. I *think* I did it right. I messed up the rebase so I had to go back. But it looks right to me now. 	Clarify
2728	18835672	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2002bceac5b8fad593c9cf83cc4e7127029f2174 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2728	19205420	meh 	Statement
2728	19205572	"After speaking to sipa on #bitcoin-dev I think it would be appropriate to add a warning to the readme about the consequences of using this script. Perhaps that it's advisable to only use this script with the -nolisten option, as you otherwise risk feeding someone the blockchain *really* slowly. "	Clarify
2727	18812732	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/14c12b094ba3da197c5771280ef4da3d52d83905 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2725	18780694	Secure the network in what way? 	whQuestion
2725	18780754	@alexpennace There's this: http://gavintech.blogspot.com/2012/05/neutralizing-51-attack.html 	System
2725	18781312	"Perhaps if the hash rate rose, to then ignore any empty or near empty blocks. Would that work very well or at all?  And perhaps if there happens to be many empty blocks or near empty blocks, to just ignore almost all of them.  Selecting which ones to ignore and which ones to accept would be tricky, "	Clarify
2722	18746488	ACK  I will also take care of the icons soon. 	Clarify
2722	18746751	ACK 	Clarify
2721	18799710	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/25c0cce7fb494fcb871d134e28b26504d30e34d3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2720	18731180	"This is by design, it was not deemed a useful enough statistic to keep on the overview page. "	Statement
2718	18723784	Make translation changes on Transifex: https://www.transifex.com/projects/p/bitcoin/  they will be merged from there every release.  	Statement
2718	18787527	"As @laanwj said, we won't merge such translation pulls, make the changes via Transifex and we'll update translations before a new release or from time to time. Can you close this please? "	Clarify
2713	18659018	ACK 	Clarify
2713	18660114	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8c8132be73b680d04b9f6dff9dee0ae277c1bebb for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2711	18653857	"Invalid: Transactions don't have ""from addresses"".  Side note: Coin Control seems ready for merging. "	Clarify
2711	18653952	"It is only possible to send bitcoins from the same address with which they have been received. However, if one has bitcoins on several address, one can theoretically choose from which address to send the coins. - Bitcoin wiki  Will Coin Control allow for that? "	Other
2711	18654431	"@Suffice Thanks for pointing out that the wiki anonymity page was somewhat misleading, I've corrected it a bit... though it could use some more revisions. "	Clarify
2711	18655171	Now I have no idea how spending works anymore! 	Emphasis
2711	18891136	"Transactions don't have from addresses is really misleading. Transactions do have TxIns, which almost always reference TxOuts that were pay-to-address outputs, so in that sense, most transactions do have ""from addresses."" "	Reject
2711	18891245	"The address a TxIn's previous TxOut was sent to, is not a from address. There is no reason to assume *this* transaction has any relation to the previous coin destination, nor reason to assume the person sending it can receive coins sent to that destination in the future. "	nAnswer
2711	18891457	"While technically correct, that's an academic point. 999 transactions in a thousand will follow the conventional pattern. "	nAnswer
2711	18891605	"I wouldn't be so sure. Most Bitcoin transactions occur on MtGox (off-chain), so it seems reasonable to expect a large number would be sent from their wallets. There are a number of other e-wallet providers as well. And moving forward, we'll see things like combined transactions as wallets get smarte"	Clarify
2711	18892787	"@whitslack You are technically correct. Transactions have inputs, and inputs refer to previous outputs, and those outputs have in the majority of cases a well-defined address. You can call this a ""from address"" if you like, and it is well-defined. The reason for not calling it that way is because pe"	Clarify
2709	18672363	"There is a pull open, which exactly does this, see #2651. Also this issue is a duplicate :). "	Clarify
2709	18675479	"Duplicate of #1714, closing "	Statement
2708	18651103	"Bitcoin is, as a whole, beta. "	Statement
2708	18651242	"Yes, every release ever has had this 'beta' moniker. "	Other
2708	18651249	"That may be, but `0.8.2-beta` means a beta version of 0.8.2. "	Statement
2708	18672378	"Every version ever released IS beta, where is the problem? "	whQuestion
2708	18675426	"There is no problem, it's the same as ever but now that it is on the splash screen, new people are noticing it.   It may be confusing and if someone is really bored I suppose some confusion could be taken away by rewording the splash screen, but on the other hand it's not really an issue either, clo"	Clarify
2707	18672288	"Ensure bitcoin-qt.exe is shutdown, perhaps just reboot your machine to ensure that process is not running. Did the installer ask for admin rights via UAC? "	ynQuestion
2707	18688413	done from a fresh restart as well as a fresh start up boot up. same result. also redownloaded the 8.2 and tried it and still same result. I am the admin so no problems there.what i did notice but shouldnt be a concern is that client is 32 and im running 64 but i believe 8.1 is same way and it worked	Clarify
2707	18689017	another thing i just noticed is 8.1 has bitcoin-qt.exe properties at 21 mb date 1/29/2011 6:00 pm product name bitcoin-qt (OSS GUI client for bitcoin) 8.2.2 has bitcoin-0.8.2-win32-setup.exe properties 11.1 mb date 5/29/2013 4:28 pm [product name is bitcoin 	Clarify
2707	18689672	"AFAIK on windows if you are admin, this can only happen if the .exe is already running. Have you set it to automatically start at boot?  If you can't see it running, maybe try to find and kill bitcoin-qt.exe in the task manager (this is not recommended, though...). But that exe must be open somehow "	Clarify
2707	18690728	"i have removed it from boot start up and get the same error, what i am seeing tho is there is a read only lock on the 8.1 client that when i try and reset as admin will not allow me to reset it. It is also not running in task manager in processes or services or applications. "	Clarify
2707	18690959	should i try and restore bitcoin to 5/21/2013  or just uninstall it and install 8.22--in doing that tho will i lose the block and database information and wallet for that matter? 	Clarify
2707	18691182	well i just now found the lock file and for whatever reason it was placed on the date and time i installed bitcoin 8.1.0 for first time and that was on 5/13/2013 	Emphasis
2707	18723905	1)does anyone know why there is a lock on the bitcoin folders/ files and subfolders/subfiles?  2)and also will uninstalling 8.1 delete the wallet and database? 	ynQuestion
2707	18723989	"1) No, this hasn't happened before. Also in normal cases locks are released when the system is restarted. This may be some file system corruption issue.  2) Probably not, but it might! Backup the wallet.dat first, before you do any experimentation like this! "	Clarify
2707	18724432	Could this be my issue at play?  i copied and pasted this:   mcdee opened this pull request a month ago Resolve path to allow for Bitcoin directory to be a symlink No milestone No one is assigned  At current if your .bitcoin directory is a symlink (which is becoming more likely as the size of the bl	Clarify
2707	18725387	"No, that has nothing to do with the installer at all. "	Statement
2707	18725783	@laanwj   the installer does not create bitcoin directories ? 	ynQuestion
2707	18728679	well i just tried a different 8.2 install using this time the zip install and not the exe install.  Worked and no errors and everything appears to be ok and same as when i left 8.1 client. so i am closing this issue. Thanks to all who commented. 	Clarify
2707	18731291	"The installer creates the executable directory (in Programs), not the data directory (in Users and Settings) "	Statement
2706	18724664	Fixed by #2716 	System
2705	18593879	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/98ab2b5a265e4794d6a9d22212d992bfd1f9c1f1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2705	18633969	This seems harmless. 	Statement
2703	18588753	NACK. This design is intentional. 	Statement
2703	18588781	"oh, @luke-jr can you elaborate? Edit: Can't we mix that intentional design and the one that check the balance by something like : * No [minconf] provided : no balance check * [minconf] provided : actually using it (and therefore check the balance accordingly)  I see no reason why one would provide ["	Clarify
2703	18590412	"This is how it was originally implemented. However, as negative balances cannot be entirely prevented anyway (a crediting transaction gets reverted, for example; or you used a lower minconf value when spending), the responsability of checking for negative account balances was moved to the caller (f "	Clarify
2703	18590512	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/388ef407ca3722d050f5e16f00dfac00a2000156 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2703	18590561	"I have no problem with optionally enabling balance checking, but it should be consistent... so send* commands should have similar functionality in that case. "	Reject
2703	18591065	"I agree. Thing is it's currently not consistent -- and worse, [minconf] despite being an argument supposed to prevent some damage, is not used.  However I don't see why one would use send* (that is : externally) without checking the balance. What happen to other accounts if one account become negati"	Clarify
2703	18591105	"Account balances are just bean counters; they have nothing to do with the actual amount of coins available to the wallet. They can go negative without affecting your ability to spend, as long as the wallet itself has enough funds available. "	Reject
2703	18591232	"So it's possible (even counting the noname account (default)) that the sum of ""listaccounts"" is not equal to the wallet balance? "	Clarify
2703	18592124	"Well, in theory: no. The sum of all accounts should match what you have in your wallet. In practice, it may differ because there's some known small difference in how the balances are calculated in case of unconfirmed or immature transactions afaik. "	Clarify
2703	18616813	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c3fa3f9a1bdea9e76a535d583ce6f192730149fd for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2703	18617206	"What about this? * No [minconf] same behavior than before * [minconf] provided : using it.  I know that it's still not consistent with send*, but it's IMHO still better than silent fail though.  "	nAnswer
2703	18617461	@paraboul : what are you trying to do that you cannot do with the way it is implemented now?  	whQuestion
2703	18618401	"@gavinandresen moving funds from one account to another without having to ""getbalance account minconf"" in order to check the sender balance. The current move command has a ""[minconf]"" argument which is not used.  WIth the current implementation I would have to :  * balance = getbalance accountA 6 * "	Clarify
2703	18618846	"@paraboul: confirmation tracking through 'moves' is non-trivial.  E.g. lets say I send 11 BTC to an address associated with account A, and it gets 1 confirmation.  Then I:   move accountA accountB 3   move accountB accountC 1 6  <-- does this succeed or fail ?  "	Other
2703	18619699	"If tracked correctly, it should indeed fails. It remains solid if you always use the same minconf though. "	Statement
2703	18620116	"... should fail until the original coins get 6 confirmations.  There is no code to track which inputs are 'moved' by a 'move'. And, actually, the code would have to track partial inputs. And what happens if you setaccount the address that originally received the coins away from accountA ?  Changing "	Clarify
2703	18620277	You had me :) Multi-wallet would be great. Are there plans for this? 	ynQuestion
2703	18633717	Yes! However note that multiwallet and accounts are completely separate solutions that aren't likely to solve the same problem... 	Emphasis
2703	18634447	@sipa better coin control. I'm just looking for a solution to sandbox every accounts so that they can't interfere to each other (e.g. not using addr/funds/unspentoutput from AccountA when AccountB spends funds). Multi walltet would solve this problem if you consider one wallet per account. 	Clarify
2703	18635859	@paraboul My point exactly. Accounts (as they currently) exist do NOT provide any coin control at all. That's why I say they solve a different problem. 	Clarify
2703	18643499	"@paraboul Multi-wallet is planned, but I'm not sure it's really something targetting your use case. There should be no reason to isolate coins per-user. That just creates higher transaction fees for your users, prevents you from implementing proper security (an offline wallet), and propagates harmfu"	Clarify
2703	18647008	"@luke-jr My original idea was just to use ""account"" as a ledger. That is : using the balance of each account in order to implement a simple exchange system. My idea was : if two users are on the same wallet : do the transaction off-the-network (move) instead of a regular sendfrom(). For this I neede"	Clarify
2702	18553293	Here's a decent comparison highlighting the benefits of git-subtree over submodules: http://blogs.atlassian.com/2013/05/alternatives-to-git-submodule-git-subtree/  This blog post describes my experiences with submodules: http://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-us	Emphasis
2702	19857537	"This pull request still contains a ""Remove leveldb in preparation for git-subtree"", which was already done.  Can you rebase this, and only include relevant commits?  Code changes look good to me otherwise. "	nAnswer
2702	19858933	"Roger that, I have rewritten the branch. It will need to pass through the automated testing again, although in theory the files are still the same. But don't take my word for it! I rewrote public history. "	Reject
2702	19859196	"As per sipa's comments, if you want individual leveldb commits to appear in the bitcoin commit log instead of a squash, that can be done. But the price is that first the entire leveldb commit log must be merged into bitcoin's commit log once. After that, new commits to leveldb will appear incrementa"	Clarify
2702	19859277	"I'd prefer to have access to the individual changes that were made to the leveldb subtree.  Ideally, the leveldb changes appear as individual commits in our repository, but that may be hard (I'm not familiar enough with git-subtree yet). An alternative is having a leveldb branch (or separate) reposi"	Clarify
2702	19863013	Updated the version of leveldb to 1.12. 	Statement
2702	19966507	"LGTM. I didn't notice this pull also updated the version, my mistake. The diff is identical to what I got doing it the old fashioned way, so it seems like the upgrade is a no-brainer.  To copy what I wrote before, the fix for CompactRange() would be security sensitive if we ever used that call anywh"	Clarify
2702	19970400	"I vote for upgrading to the latest LevelDB also, as we seem to have quite a few strange related DB-corruption issues. "	Clarify
2702	19988402	Has anyone done the necessary audit to be sure there aren't some uncontroversial bugfixes which could affect Bitcoin network behaviour? 	ynQuestion
2702	20158124	The repository for Ripple and Bitcoin's fork of LevelDB has been moved to the Ripple organization:  https://github.com/ripple/leveldb 	Statement
2702	20158535	@gavinandresen @jgarzik @laanwj @gmaxwell Are you in favor of having a bitcoin/leveldb repository? 	whQuestion
2702	20158666	"/me rather liked the in-tree attributes.  That was one of the selling points in moving to leveldb from BDB: it would be in-tree, so no crazy version troubles due to strange linking. "	nAnswer
2702	20158952	"@jgarzik Yes, note that what you have now is ""in-tree."" What @sipa is asking is if you want to also have as a public repository, your fork of leveldb.  @sipa I say, why not add bitcoin/leveldb? There's no downside to it. You can either fork the one from ripple, or create your own empty repository an"	Clarify
2702	20158988	"@jgarzik No one suggests changing that. This is using git-subtree, so a copy of the LevelDB source is still inside our code, but there's a separate repository where development of our LevelDB tree can happen (it has significant changes, including a non-upstream Windows port with some patches by us)."	Clarify
2702	20159092	@vinniefalco No need to yell. 	nAnswer
2702	20159155	"@sipa Yeah yeah, I forgot to mark those commands as ""code"" in GitHub flavored markdown so they became section headers in large bold text.  Anyway, here's a simple improvement for bringing in LevelDB that lets you trim it from the Makefile or whatever and also will speed up your build:  https://gist."	Clarify
2702	20289935	I've amended the pull request to include Vaclav's changes from 6/12/2013: **Added GNU/kFreeBSD kernel name (TARGET_OS)**  	Statement
2702	20624770	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fb1da62318f5a7f6e3ec31cdc02178a5445870e4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2702	21323642	Should I rebase this? It's been 2 months... 	Statement
2702	21436265	"It seems like a simple merge, not sure why it's not done yet. There's no changes in the new leveldb that could cause problems. "	nAnswer
2702	21436587	"FYI, in Ripple we are trying out HyperLevelDB and it is looking pretty awesome.  https://github.com/rescrv/HyperLevelDB "	Emphasis
2702	21446175	"Okay, I did a coinstate rebuild at height 248116 with this code and got a bit identical UTXO set at the end.  I had a little concern about the level 0 compaction fix because it looked like under some corner case conditions (and not just making a compact call) that it could screw up and lose some mod"	Clarify
2702	21681833	"I think this code has had sufficient review, so I'm merging this.  I've since setup a bitcoin/leveldb repository, but I'm not familiar enough with git-subtree to set up things properly.  "	nAnswer
2702	22849947	"@gmaxwell To apply a patch to leveldb all you need to do is split the subtree out of Bitcoin using ""git subtree split"", and it will become an orphaned branch in your local repo (a branch that doesn't share any history with bitcoin). Then you apply the level db patches to that branch. Finally, use ""g"	Clarify
2702	22859390	"> I had a little concern about the level 0 compaction fix because it looked like  > under some corner case conditions (and not just making a compact call) that  > it could screw up and lose some modifications to the database.  I had the same concern when I saw it, so I checked with Sanjay and he sai"	Clarify
2702	22859450	Note that the changes in this pull request have been superced by #2907 . 	Clarify
2700	18468130	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/37d4ab5e11da48e7627b446a2fae716555c58f18 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2700	18469401	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/feb4b7ef8d3ffb49b9bca41928051f7a8f6b4f29 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2700	18499731	What's the benefit of this refactor? I like ifdefs. This change will mean we have GUI only code in the non-GUI binary (and vicaversa). 	Statement
2700	18501757	"@jonasschnelli: Compilation speed and sanity. This allows compiling the core objects only once and storing them in an archive (library) to be used by the all of bitcoin-qt, bitcoind and the tests.  There are only very few differences left under QT_GUI defines (some help messages, and the default key"	Clarify
2700	18502766	Any QT_GUI ifdef in the core code means that the core <-> GUI split wasn't done correctly in the first place. The core semantics shouldn't depend on whether there is a GUI on top of it or not... 	Other
2700	18510763	ACK on the concept; I haven't compiled/tested.  	Clarify
2700	18511115	ACK compile and run (Bitcoin-Qt.app and bitcoind) smooth on osx 10.8. 	Clarify
2700	18513128	"@jonasschnelli you said: ""I like ifdefs"". If that's the resounding attitude here, I'll need to reevaluate my autotools work. Ifdefs are a portability nightmare if used to control runtime behavior. In this case, depending on the compiler/linker/settings used, the unreachable paths might be stripped a"	Clarify
2700	18513680	"@theuni I don't think @jonasschnelli 's ifdef love is representative of most developers here. It makes sense for some optional build-time features (UPnP, IPv6), but not so much in this case. "	Clarify
2700	18513998	"Roger, thanks. I have more to say on the subject, but I'll do it in code/PR form as I go rather than discussing vague concepts here. "	Reject
2700	18549718	"#ifdefs are evaluated on a case-by-case basis, if they make sense.  If the GUI supports a runtime switch that forces daemon mode, then ""#ifdef GUI"" construct is not applicable for that build.  It depends on the build and platform.  Clearly, #ifdef GUI is applicable to a bitcoind-only build.  Thus, j"	Clarify
2700	18549741	ACK on the general concept  	Statement
2700	18576315	"Ok, I've pushed changes to address comments here. I'll squash it down if everyone is ok with the above. "	Clarify
2700	18579388	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c5e9ebcfb206deb19db166db4063120f220a3f3b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2700	18658528	Any reason why the init_noui code isn't just in noui? 	ynQuestion
2700	18665129	"Agree with @sipa. We could call the resulting file `bitcoind.cpp`, which is more descriptive than `noui.cpp`. "	Clarify
2700	18665158	Good idea. 	Statement
2700	18665159	"yep, makes perfect sense. will do. "	Accept
2700	18894308	"renamed init_noui.cpp to bitcoind.cpp, rebased to current HEAD, and squashed logically.  Anything else needed? "	Other
2700	18894412	"Grr, I just reread the comment above and realized I didn't make the change you guys were after. doing now. "	Clarify
2700	18894825	"Actually, the noui stuff can't move into bitcoind.cpp, as that would defeat the purpose of this rework. That would mean that test_bitcoin would have to link in bitcoind.o for noui_connect(), while also pulling in a conflicting main().  The object containing main() needs to stay as thin as possible. "	Clarify
2700	18896467	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6887bb9ad7f6722a64e9fbdf0a780f362dc796a1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2700	18951572	ACK 	Clarify
2700	18989866	ACK 	Clarify
2700	18993190	"ACK  Coordination note:  Recommend waiting until #2154 is merged, to merge this. "	Clarify
2700	18993907	"@jgarzik This is holding up my autotools pull request (it depends on this work), and it looks like #2154 could be a while. Could i convince you to change your mind on that? "	Clarify
2700	18994551	#2154 won't be a while.  See that pull req already discussing a hold on other pull reqs. 	Clarify
2700	18994693	"Just tested: #2700 and #2154 do not conflict with each other, so this can be merged independently. "	nAnswer
2700	18995190	"Great, best of all worlds :)  "	Statement
2700	18995827	"great, thanks "	Statement
2699	18459629	I'm pretty sure the private key encoding specifies whether it's compressed or not... 	Clarify
2699	18459935	I think that's public key encoding. The same private key can be mapped to both compressed and uncompressed public key. It is different from Wallet Import Format (which is private key + checksum) or Mini Private Key (which needs to be hashed into a normal private key). 	Clarify
2699	18460019	"Reading base58.h, it seems that the private key format simply appends a 0x01 byte to the binary data, if it's a compressed key, before running it through the usual Base58Check algorithm... "	Clarify
2699	18461840	"@luke-jr is correct. If the length of the key is 33, and the last byte of the private key is 0x01, the key is interpreted as compressed. Otherwise, it is treated as uncompressed. So an additional parameter is not needed. "	nAnswer
2698	18461703	pcw.sys seems to be the Performance Counters for Windows Driver. I think it's unusual that Bitcoin-Qt is able to trigge a real bluescreen. Can you please try again with 0.8.2 RC3. 	Clarify
2698	18469770	Done. Will let you know if I have BSOD again. Thanks! 	Emphasis
2698	18595950	Just had my second BSOD using 0.8.2 RC3. Here is the latest dump:  1: kd> !analyze -v ******************************************************************************* *                                                                             * *                        Bugcheck Analysis            	Other
2698	18633864	I am unconvinced this is really caused by Bitcoin. Perhaps something like the reindex process causes your system to overheat and cause random hardware/driver issues? 	Clarify
2698	18742887	"This is not bitcoin related, but an ndis (network) driver error. Likely you need to upgrade your driver. An occurence of the same crash (ndisPcwCollectData+0x143) from Google:     https://social.technet.microsoft.com/Forums/en-US/w8itprogeneral/thread/c3438567-e17c-4b40-baf4-979eae522e62  "	nAnswer
2697	18454185	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c468c1c44b50f9a105bdf4d407a5dbf7e09bd8a7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2697	18461524	ACK 	Clarify
2697	18461755	"The reason for being overly specific is to show the *exact* format in which the version has to be given. I have been known for adding v's in front where there should not be, for example. If you do this, specify exactly what format is expected. "	Clarify
2697	18461795	"Well you are right, perhaps @Michagogo add a line describing what (new version) needs to be via an example or such. "	Clarify
2697	18461880	"For me the current phrasing is fine, as it says ""for example"" and 0.8.0 is just an example. You could make it 0.8.0rc3 to show that the rc, if relevant, also needs to be added.  "	Clarify
2697	18463419	"@laanwj The current phrasing doesn't say ""for example"", it provides values. IMHO, it should be like with the ""export SIGNER="" line, making it clear that this is somewhere to fill in your own file. I've tweaked it a bit. What do you think? "	Reject
2697	18464149	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3b807eb90e357524ccc94c333afbdbc1553ef697 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2697	18660588	ACK 	Clarify
2697	18669508	@Michagogo Can you squash this into a single commit? 	ynQuestion
2697	18669611	"@fanquake I apologize for my ignorance, but how exactly do I do that? "	whQuestion
2697	18671421	"@fanquake Okay, I *think* I just did that... "	nAnswer
2697	18675507	ACK 	Clarify
2696	18446962	ACK  	Clarify
2696	18448122	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/65ec9eab2bf1aea0bd580e1d972f54163b58b332 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2695	18446947	ACK 	Clarify
2695	18447228	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/03f498080a813850e1a3addf2c555450aa5e65c1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2695	18658537	ACK 	Clarify
2693	18416533	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f0d8a52cc039cda77730047db2443fbec016f852 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2693	18416837	ACK 	Clarify
2693	18418102	ACK 	Clarify
2690	18426243	Any RPC calls being done before shutdown? 	ynQuestion
2690	18426543	No RPC calls. 	nAnswer
2690	18426705	"Can you run under the debugger, reproduce the hang, and then see which threads are left running?  I did a lot of stress-testing of shutdown (mostly on OSX), and haven't seen shutdown hanging.  "	Clarify
2690	18426879	"I gave sipa a ""thread apply all bt full"" yesterday and he didn't see anything unusual.  I'll get back to this later today. "	Clarify
2690	18470928	"My users report nobody is getting this hang on Windows or Ubuntu, only on Fedora 18 x86_64.  This is quite frustrating.  I will try to get stack traces today. "	Clarify
2690	18470958	"Doesn't happen for me on Fedora 17.   In any case, try bisecting to figure out which commit caused it. "	nAnswer
2690	18474106	CTxMemPool::accept() : accepted 0d36dd05ff1a616424f34e6f83c11347db6ad36584daf38956f45f2a813e6a2e (poolsz 44) CTxMemPool::accept() : accepted 3815abbabaa3ed2ee78d09dbab7f9b24f7f450d3c0e906f1702ab911dbbf5509 (poolsz 45) opencon thread interrupt net thread interrupt msghand thread interrupt Flushed 141	Other
2690	18494361	"> commit 723035bb6839c5d65bfee96d501a8c54814778e3 > Author: Gavin Andresen <gavinandresen@gmail.com> > Date:   Sat Mar 23 18:14:12 2013 -0400 > >   Have Qt poll for shutdown requested, the QT way.  Still gets stuck with this build.  > commit b31499ec72edd1554d4612d1b54808fce0360e14 > Author: Gavin A"	Other
2690	18499463	What version of boost do you have? Sounds like your boost::thread_group::interrupt_all is buggy.  -- Gavin Andresen . 	whQuestion
2690	18513306	"boost-1.50.0-5.fc18.x86_64 libdb4-4.8.30-5.fc18.x86_64 openssl-1.0.1e-4ec.fc18.x86_64  I thought the gitian builds were hanging during shutdown, but I can't reproduce that now.  Seems limited to Fedora 18's boost. "	Clarify
2688	18363174	Fixes #2687  	System
2688	18365283	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/36e826cea14585f68d5c363a82c1a887a779e130 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2688	18393462	"I am seeing a different assertion failure during bitcoind ""stop"" both before and after this patch.  /usr/include/boost/thread/pthread/recursive_mutex.hpp:105: void boost::recursive_mutex::lock(): Assertion `!pthread_mutex_lock(&m)' failed.  I am able to reproduce this easily with my native build on "	Clarify
2686	18358637	Where did you send the coins from? 	whQuestion
2686	18359967	i did not send them it receive then for the free bitcoin site. 	nAnswer
2686	18360052	Then complain to them. Perhaps they need to send transactions with higher fees. 	Reject
2686	18361110	are you some one that know how to do some thing or are you just some one that just comment noting. 	Clarify
2686	18361381	"@alamtr Sounds like you are receiving spam, which the network tries to filter out. We can probably know more for sure if you post the transaction ids and amounts. "	Clarify
2686	18362049	"sipa definitely knows how to do some thing, and he's correct-- complain to the site that sent you coins.  "	Clarify
2686	18364785	 i well and i did mean noting about sipa it just frustration for me and i apologize to sipa. but i had even small amounts of bitcoin go through. but all of sudden it don't so i'm just going to use my coin base wallet for the coin i mined so there not stuck. in tell i get it figure out. 	Reject
2685	18335148	"The ""X"" syntax you try to use has explicitely been excluded from the spec. See  https://en.bitcoin.it/wiki/BIP_0021  for the real spec. "	Clarify
2685	18335333	Arh... that explains it then. If someone else agrees I will update the Wiki then to avoid others being confused. 	Clarify
2685	18335702	Update https://en.bitcoin.it/wiki/URI_Scheme to refer to https://en.bitcoin.it/wiki/BIP_0021. As BIP 0020 said it had been replaced. When get a chance will overwrite URI_Scheme with data from BIP_0021. 	Clarify
2685	18340025	I think a redirect from URI_Scheme zu BIP_0021 would be appropriate. 	Statement
2684	18335359	"This is a duplicate issue.  In any case: the reason this is not in, is that we don't want to encourage people breaching the wallet abstraction by importing/exporting individual private keys (It is easy to mess up and also doesn't combine well with heirarchical deterministic wallets)  See Sipa's impo"	Clarify
2684	18335463	Sorry. Didn't looked for duplicates. Close. 	Reject
2684	18351902	@jonasschnelli You can close issues you created for yourself :). 	Clarify
2683	18327897	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6a2da2ba96fd2a5db0e1ba449b2ff39564f996e5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2682	18301419	Mostly I think it's essential that we do a release with a forced rescan prior to doing a release that supports turning on pruning that will make rescans infeasible (or at least a slow network traffic generating event). 	Clarify
2682	18302284	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/95c7db3dbf4012dd02e5f1f30e6d982341facaa6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2682	18303074	"ACK.  Synced testnet chain while watching bestblock record in wallet.dat, it changed at the right times.  "	yAnswer
2682	18307631	"ACK.   In valgrind, tried three different wallets, including old ones with no bestblock record and a empty one. Tested starts and stops, and a reindex.  Looks okay and does not rescan on a new wallet.  "	nAnswer
2681	18270410	ACK: I can confirm the problem and fix. 	Clarify
2681	18271096	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5ada394edfac892f6fdc650ed904f121999b3407 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2681	18271496	"ACK, also noticed this problem before "	Other
2680	18257645	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a680b095b68130579289f3b9282863b940239f12 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2679	18601349	Can you mash these into one commit? 	ynQuestion
2679	18602889	@super3 : Sure. Done. 	System
2679	18678318	Works for me (TM)  ACK  	Clarify
2679	18775418	"This is the one of the most arbitrary and needless things I've seen to be implemented. It's so incredibly unlikely that anyone will ever have even 10 million, let alone all 21 million. What's the point in setting a hard input limit to that? Or any limit for that matter? If someone wants to try to se"	Clarify
2679	18775952	"> What's the point [...] They should have the freedom to try that, no harm will come of it.  Well, there you have your reason. They should have the freedom to try, and have the chance to spot where it went wrong by seeing a highlighted field. I don't really see a 21'000'000 limit on a field supposed"	Clarify
2679	18777241	"I think I misunderstood what this was to do slightly. So long as a person can still functionally type in 99,999,999,999 I'm fine with it. (But still personally think there shouldn't be an input limit.) Yet an unobtrusive notice that they exceeded the limit is an alright feature.  Perhaps something m"	Clarify
2679	18777902	"No input limit is not an option, not possibly doable. At the moment, the field is limited to 8 digit btc amounts, meaning 99'999'999 is fine but 100'000'000 is not. What this PR does is limiting to 21'000'000, because unlike 99'999'999, 21'000'000 is not arbitrary.  Your suggestion goes way further."	Clarify
2679	18815100	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a35e268da44a1606af2fc18169f715e7eda8fb7c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2678	18225305	ACK; tested in combination with #2645 as well. 	Clarify
2678	18244615	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e175c16f5b4d872da7b152bd7875be3e945b33e5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2677	18185364	"test conditions: on my VPS, a bitcoind patched to ignore the dust filtering and free relay limiting, and sending a ""mempool"" to every peer at connect time, waited until poolsz >5000, then measure getblocktemplate RPC latency. Result: 10-20s without this patch, 0.5-0.7s with this patch.  EDIT: up to "	Other
2677	18185669	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2ec349bc420d7f4541bf91acf8b830377a1421f3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2677	18242132	I'm not familiar enough with the code and the template structure to know what is possible so please bear with my uneducated suggestion.  Would it make sense to have part of the template being computed asynchronously? Have a thread wake up regularly and build a base structure with a snapshot of the t	Clarify
2677	18242271	@gyver Thats what miner software should and (some) does do.  .. but at some point you need to compute the data... and it's good if it's not a slow and expensive operation.  	Clarify
2677	18243098	ACK  	Clarify
2677	18243282	@gmaxwell of course I agree speeding up the actual computation is desirable.  I was wondering if it wouldn't make sense to implement this async technique in bitcoind itself. For example I suspect (again: uninformed guess) that slow calls to getmininginfo and getblocktemplate use the same access patt	Clarify
2677	18245264	@gmaxwell still thinking about your suggestion and focusing on how miner software can optimize their latency when a new block is accepted by the local node. The miner doesn't want to use an old cached template to avoid wasting work but can't simply call getblocktemplate naively if it wants a fast re	Clarify
2677	18245577	@gyver Eloipool is free software an implements the optimizations you appear to be describing there. (precomputed empty templates and such).   	Clarify
2677	18245961	@gmaxwell thanks for the pointer. Was already in my large bag of source code to read but moved near the top of the pile :) 	Clarify
2676	18177795	Peter Todd pointed this out last night on #2603 which created this unfortunate behavior.  	Clarify
2676	18183061	I know I should have filed it sooner. :) Thanks. Should we close this one then? Yea this behavior doesn't make sense as then new addresses should also scan the entire wallet. 	Clarify
2675	18144099	it's same using newest `test/bitcoin-0.8.2rc1-win32` 	Statement
2675	18147619	"It looks like it doesn't recognize neither of the inputs or outputs as belonging to you, so it has no idea what to do with the transaction.  What kind of transaction was it before things got corrupted?  "	Clarify
2675	18148740	"It's only so for this transaction, others seem normal.  Actually I think I know why, maybe because I sent this transaction from blockchain.info and my bitcoin-qt wallet doesn't have some of private keys which was used, but it shows correctly it in red as spent only there's not all amount.   "	Clarify
2675	18152328	"That indeed explains it, if you use your wallet in multiple locations or multiple clients, things such as this may happen. That's why we strongly recommend against it. "	Clarify
2675	18154099	"@laanwj Perhaps we should add some category for this type of transaction, so we at least show something and not just nothing? "	Other
2675	18155267	"Well, it's quite easy. There's inputs with some addresses known to be my and output which isn't. So basically to spend from those addresses I would have had their keys even if they aren't in my wallet currently. We can safely assume that even if there's single known address they all belong to user. "	Clarify
2675	18157087	"Ok, at least it's explained, nothing more to do here, closing the issue.  @diapolo this is not something that happens with normal use of the software, so fixing this has no priority. I'm already happy that it's robust against this and that it doesn't trigger some assertion.  "	nAnswer
2675	18157539	"I wouldn't agree that it's not normal use. I didn't do anything with Bitcoin-qt, I just spent BTC from elsewhere including some other addresses. And it's quite confusing behavior in Bitcoin-qt part, but ok. "	nAnswer
2675	18158419	"You should never use the same private keys that you use in bitcoin-qt somewhere else. This is not supported. Private keys are supposed to be private to one wallet only.  You're of course free to ignore any advice and do otherwise, but what happens is your own risk. "	Clarify
2674	18132788	"The "" Assertion failed: (pfork != NULL), function SetBestChain, file src/main.cpp, line 1742. "" error  is the same as #2405 & #2426   Were you running 0.8.1 or 0.8.2 when the crash happened?  It would also be helpful if you can tell us which version of OS X your running. "	Clarify
2674	18133566	"0.8.2 is currently in the release candidate stage, see https://bitcointalk.org/index.php?topic=201124.0  It contains code changes which should hopefully fix the issue your having. "	Clarify
2674	18137216	"If the linked issues are anything to go by, it is an corruption in an index data structure and passing -reindex should solve this issue for you.  "	Statement
2674	18388969	"0.8.2 has some OSX related fixes in that area, can you try and see if this mess happens again? "	ynQuestion
2674	18396290	Please open a new issue if this is still a problem with 0.8.2  	Other
2672	18123657	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6eec1c80a624f594209a0b3bc464dfa914267574 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2672	18134764	ACK @Diapolo looks good on mac. Started Bitcoin-Qt with -testnet. TN-Icon showed up simultaneous with the splashscreen. 	Clarify
2672	18140793	"Works for me. ACK for after 0.8.2 release  Sidenote: This is all great and al, but can we start focusing on normal users again. Only a very small percentage of users will ever even see the testnet.  "	Clarify
2672	18153356	"@laanwj I'm fine with your sidenode, but as I use Testnet even more often than Mainnet, I wanted to make this ""perfect"" ;). "	Clarify
2672	18800682	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/725a6283d1c3545a800184cf0fe5cae46f1d2fda for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2671	18121198	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f584fc268e9efbfcfe524fc88b3a8cf818b2aff5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2671	18121759	Can you be more detailed with your commit message like ``fix memory leak in CKey::SetCompactSignature()``? 	ynQuestion
2671	18122550	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e628e185fd524ffd8cf0f1bbd83d21f5e4bda2bb for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2671	18122718	"Alright, can you now please also squash those 3 commits into one. "	Clarify
2671	18122815	"``git rebase origin -i`` replace ``pick`` with ``reword`` for the first commit and edit the commit message replace ``pick`` with ``squash`` for commit 2 and 3 ``git push origin master -f``  I'm just ensuring with my comments, that core devs will merge your commit :). "	Clarify
2671	18123194	"Seems correct at first glance.  I'd have to review the functions called in SetCompactSignature() before ACK'ing, to be 100% certain "	Clarify
2671	18123291	ACK 	Clarify
2671	18123522	@bytemaster If there are more leaks in key.cpp it would be fine to have fixes in this pull for them IMHO. 	Statement
2671	18124031	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/173601705ccf189fd83e3854f71f6a872c6faeda for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2671	18124640	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a9280652ce61ddbbecfe16e18e1e464bb1f5d34d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2671	18140930	ACK (though ideally we should be using RAII so that these kind of mistakes cannot be made)  	Clarify
2671	18153974	"@bytemaster How did you find these problems, just by browsing the code of via some tool? "	whQuestion
2671	18163212	"CompactSignature is indeed only used for message signing, so there is no remote vulnerability. Also, see #2600, which does a large refactor of the key.cpp code (it moved EC_KEY into an internal RAII wrapper, though not EC_SIG) "	nAnswer
2671	18326242	Wouldn't have hurt to pull this for 0.8.2 RC2 ;)? 	Clarify
2671	18381392	@Diapolo I'm not eager to pull a fix for a non-network triggerable leak that I can't (easily) reproduce right before a release. 	Clarify
2670	18123544	"I'm going to take a look next week, can you post a screen until I do :)? "	Clarify
2670	18140343	"OK selection  ![x01](https://f.cloud.github.com/assets/126646/537622/9d0cacce-c176-11e2-9d9d-1e085fe11936.png)  Warning when directory already exists, user can still click OK  ![x02](https://f.cloud.github.com/assets/126646/537629/d36f0366-c176-11e2-87f9-a421fe9f4958.png)  Invalid or unreachable pat"	Other
2670	18147751	"Changed Gb -> GB, checking now happens in separate thread to prevent blocking the GUI thread. "	Other
2670	18153882	"Just some small comments:  - Do you allow OK even when low disk space was detected, looks like OK is available there. - Do you intend to show this even for existing installations or just new ones (and for existing ones when supplying ``-choosedatadir``)? - What happens when a user supplies ``-choose"	Clarify
2670	18154547	"<i>&gt; Do you allow OK even when low disk space was detected, looks like OK is available there.</i>  Yes. The user can choose OK in all cases where it's possible to create the directory. They may plain on cleaning up the drive immediately (ie, deleting one blueray image should be enough to make spa"	Clarify
2670	18161639	"@gmaxwell: fixed that, all the warnings was indeed a bit over the top "	Other
2670	18165028	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ff78dd81170c15f7fed00f803dde109283e78c72 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2670	18187291	"official bitcoin site?!  I suspect you mean ""original satoshi client site""...  > Do we want to place a clickable URI to official Bitcoin site here or anywhere else in the client? I think that would be a good addition. "	Clarify
2670	18190705	"@rebroad No, he means the Armory site obviously...   @jbreher GB as in 10^9. This is Bitcoin, we use SI units.  "	nAnswer
2670	18190863	"I really hate that GiB stuff, for me all units are 1024 based but I would never use GiB, KiB or such nonsense ^^. "	Reject
2670	18191512	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/55605706a21e2325720c989ad690f83aa2934f78 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2670	18192258	"Ugh, I'm trying to find out the OS path separator using make_preferred() for a message but this doesn't exist on the ancient boost used by pulltester.  "	Reject
2670	18192350	Should be solved now. 	Statement
2670	18192352	"@laanwj I also think we should drop support for ancient Boost version. I never understood, why it is a problem to do so anyway. "	Clarify
2670	18193146	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e024910520ab3868240beebfacec04de15c929ca for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2670	18255963	Can you take the units discussion elsewhere please? These kinds of discussions can go on for centuries (let's settle imperial versus metric first when we're at it) and still go nowhere. We don't have time for that. 	Clarify
2670	18724042	"Perhaps have two choices when the client starts up for the first time, the first to download the block chain with all the defaults, and the second being to change the data directory or whatever. This will alleviate the technicality of it for non-technical people, and make the first dialogue screen m"	Clarify
2670	18724174	"@Suffice As a follow-up, maybe there can be some menu option ""Move datadir"", which requires a restart immediately afterwards (or not, but that's definitely a lot more work). I think that's independent from this pullreq, which already improves 99% of use cases. "	Clarify
2670	18724463	"@suffice yeah maybe... but I *do* want to make sure people see the warning about downloading 10Gb, as one of the reasons for this is that people don't get freaked out later when they see their harddisk being filled up. In any case they already accept the default by clicking ""OK"" immediately. On a fr"	Clarify
2670	18724649	"@laanwj ACK, separating datadir from wallets must happen first. "	Clarify
2670	18730089	"![default](https://f.cloud.github.com/assets/126646/589677/2f89fd14-c9c8-11e2-9485-2118c7a87dd8.png)  @suffice this is better I think. It makes clear that the initially selected directory is the default, and requires an extra radio button click to change it to prevent it from being changed cluelessl"	Clarify
2670	18764306	I don't know anymore. . Pulling this off in best way possible is tricky. This is how most program installs look:  ![capture](https://f.cloud.github.com/assets/1063102/592594/c0ef55aa-ca1e-11e2-8b17-5af8f888d2cb.png)  Perhaps something like this:      Some concise text here for an explanation of some	Clarify
2670	18770290	"<b>I noticed that the block chain is currently stored in the AppData directory on Windows, will that change?</b>  After this pull it will be possible to change that, at least on new installs, that's the point of it.  "	Other
2670	18801158	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e8d6ef18ac4d38ca93827f739aa560345c5fcff1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2670	18833985	Thats how it looks on mac with Qt 4.8.4:  ![bildschirmfoto 2013-06-03 um 12 55 00](https://f.cloud.github.com/assets/178464/598893/4cb5f656-cc3c-11e2-9c5c-d482fc0185af.png) ![bildschirmfoto 2013-06-03 um 12 54 31](https://f.cloud.github.com/assets/178464/598894/4cf245de-cc3c-11e2-9c63-0bc0a73dd458.p	Clarify
2670	18836291	Can you display the path for the default data directory behind option one or as tooltip :)? 	Clarify
2670	18837130	"@jonasschnelli eh I'll take a look  @diapolo when you click the first option, it shows the default directory greyed out in the input field. "	Clarify
2670	18842006	"I'm currently trying to build and got 2 conflicts while rebasing to current master, can you take a look :). "	Clarify
2670	18852456	"Rebased, and ... changed to untranslatable.  I still don't understand the macosx problem. The button is simply in a horizontal box layout (with no special settings) with the input field. "	nAnswer
2670	18856094	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/aaa6b5e87b69f6cbcca3d1fc430d8bc9f73ac609 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2670	18891373	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4c7685061d2437b9c3a1c61e490dd673d9a7ed6e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2670	19027981	"It behaves a little weird, let me explain:  - default selected (``C:\Users\Diapolo\AppData\Roaming\Bitcoin``) -- message ``9GB of free space available (of 10GB needed).`` displayed  - switching to custom, message is the same -- it doesn't show that this directory already exists -- adding a ``\`` lea"	Clarify
2670	19217341	@laanwj Can you test if you are able to use a non-default language (no english) and that this is loaded? Either there is a bug in this pull or I have a problem with my local build related to this in combination with my QSettings work (or a problem with this and #2700?). 	Clarify
2670	19264212	"Rebased, and language problem solved (the QTranslators were getting freed).  "	Clarify
2670	19370158	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6aad2cacef1af45185773622548ba74c755bbe79 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2670	19445886	"@Diapolo does it still show the strange behavior on Windows? If so, any idea what causes that? "	Emphasis
2670	19451069	"Sugestion: Can you make the info/error messages selectable and show the beam-cursor? I also think the dialog could be a little smaller in height.  Translations are working again!  Anyway, I'll report what is happening, my default datadir is: ``C:\Users\Diapolo\AppData\Roaming\Bitcoin``.  Start with "	Clarify
2670	19509451	Should be solved now. 	Statement
2670	19514254	"The directory things and disk-space stuff is fixed, great :). Only thing left is the layout / size, I still think the dialogs height is too large and I would perhaps align the input field for the path and the message labels with the left border (like the selection boxes). "	Clarify
2670	19515842	Feel free to play with the layout a bit... 	Statement
2670	19517099	GUI can be improved later :-).  ACK 	Clarify
2670	19651776	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/be77b637fcf5983286382a9b9677fb97b026abe2 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2670	20918424	@laanwj Can we perhaps merge this now :)? 	Emphasis
2670	20935122	ACK - seems to work fine. 	Clarify
2669	18109952	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/887ca8c9a7a1e1da5ca2704815d4425801b00a22 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2669	18110685	This will not show up for Bitcoin-Qt as your code is in between ``#if !defined(QT_GUI)``. For Qt you would need such a thing in bitcoin.cpp via a to be defined ``GUIUtil::VersionMessageBox``. 	Clarify
2669	18111046	"It is compiled into Bitcoin-Qt as well. It is in the same place as the `--help` option in the code.  The output below is from Bitcoin-Qt on OSX. You can see from the output the `--help` option exists there. This change will do the same thing, except show only the version.  ``` ~ % /Applications/Bitc"	Other
2669	18111069	See https://github.com/bitcoin/bitcoin/blob/master/src/qt/bitcoin.cpp#L198 	System
2669	18257439	-v should be some kind of verbose flag usually... -V seems better for --version 	Clarify
2669	18396310	Agree with @luke-jr  here 	Accept
2669	18399976	"Agree also with @luke-jr . ""-v"" should be reserved for ""--verbose"". "	Clarify
2669	18401579	"@laanwj I still think this won't work for Bitcoin-Qt, see my comments above about ``--help``. "	Clarify
2669	18407219	I had to get my development environment setup to compile Bitcoin-Qt. I have now verified this won't work for Bitcoin-Qt.  Thanks Philip. I am closing this pull request. 	Statement
2669	18407959	"@nmarley no need to close the issue, you can re-push to the same branch after you've fixed it and it will show up here "	nAnswer
2666	18097372	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3d08643e946c0436c2ec59c49ca6d68e6b6b8553 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2666	18108993	"ACK  Some of the the documentation is actually outdated, but fixing that is not in the scope of a formatting update. "	nAnswer
2666	18109037	"Yeah, it was pretty crazy in there for some of the files. Can you point out some of the stuff that is outdated or needs work? I kinda want to start at the build notes first. "	Clarify
2666	18125362	ACK after squash into one commit 	Clarify
2666	18128697	All in one commit now.  	Statement
2666	18129129	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/eb78663153d77e2f5b388684b81779f65b42e6bc for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2666	18132441	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2341e9b533fedf9bade5b55d676b2c0cf5ed8604 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2665	18089495	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/cd0d31b43c100a15198b8cdcc905d1528cb460da for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2665	18089602	"I don't know what this is, but it doesn't belong here. :)  "	nAnswer
2663	18075646	"This is the wrong thing to do.  We need specific sizes for specific normative behavior in many places, not all systems use the same sizes for primitive types. The stdint.h _t named size types are standards specified by SUS and in C++11. "	Reject
2663	18076819	"Ah right. Compiling for another platform and these aren't defined - throws errors. Searched the rest of the bitcoin code and saw no other instances of *_t being used. It's unique to this file (well, aside from LevelDB) "	Other
2663	18077321	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/16ecc9e41f0f6c11c5848ac5b697a1354c12a1d1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2663	18081749	"Eventually, it would be nice to migrate everything bit-specific to the standard [u]intN_t types, but the last attempt to do so had some issues. In addition to C++11, stdint.h was also part of C99 (1999, over 13 years ago) - perhaps you can get the header that way somehow? "	Clarify
2662	18081436	"NACK, GBT is not exclusively for p2pool, it is a standard. See BIP 22 & 23. "	Reject
2662	18084654	"This sounds incorrect to me in any case. P2pool needs the data for transaction preforwarding.  Also, I'd want to see someone demonstrate a performance improvement before bothering to suggest changing it. "	nAnswer
2662	23238097	Just adding an example: https://blockchain.info/tx/6dad36cbfca544df4b2608dd38df0e9a91061075c780cf10acdc74e6d7f00504 which is 87k and 588 inputs added 0.3sec to GBT. 	nAnswer
2661	18063746	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/212d4a02bb2700bbc18e26e0f9f80a5281053128 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2661	18083698	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/f48c7eb63ae43c55e6c70450757b33fdce8c58f3 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2661	18087395	"@TheBlueMatt: The error on pulltester doesn't seems to be related to these changes, right? "	Statement
2661	18099344	"I'm a bit wary of merging fixes that I don't understand, although it would be ok for 0.8.2.   Can you debug where it crashes when the premature returns are not done?  Candidates are:      clientModel->getLastBlockDate()     clientModel->getVerificationProgress()  If clientModel would not be set at a"	Clarify
2661	18101732	"Yes, I'm trying to debug this further. But at least if 0.8.2 have to come out quick, this hotfix might be better than nothing... "	Clarify
2661	18104826	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/af338a7890c3ab6a8530518c52c3b833af89c3d8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2661	18106048	"Meh, it doesn't fix it. It just bypasses it in that special case...  Looks like in that environment it always crashes when it tries to show the progress bar...  Now it hangs when I launch it with reindex, and it does it too in 0.8.1... "	Clarify
2661	18106140	"Adding a -noprogressbar option would be overkill, right? "	ynQuestion
2661	18110646	So are we facing a Qt bug here? What Qt version is your version of Bitcoin-Qt using? 	whQuestion
2661	18114064	"I really doubt it's a Qt bug. That kind of isolates it to clientModel->getVerificationProgress()   (as this is new in 0.8.2) Should be pretty easy to find out. Can you try commenting it out and replacing it with a fixed number and see if it still hangs? Edit: and yes, a `-noprogressbar` option is ou"	Clarify
2661	18116432	@laanwj What is that magic number here telling? ``progressBar->setMaximum(1000000000);``  @rdponticelli Did you try yet what laanwj suggested above? 	Other
2661	18118014	Replacing clientModel->getVerificationProgress() by a constant it works.  Might be the problem that on this setup the only block available is the genesis block? 	Other
2661	18120046	"@Diapolo just an arbitrary number AFAIK  @rdponticelli Good, that at least isolates the issue. So that function has a bug that makes it crash with only the genesis block. At least on your setup. I have not noticed this myself, when starting with an empty data directory. I'm unable to reproduce it. "	Clarify
2661	18126154	@laanwj and/or @Diapolo: Is it intended and correct that BitcoinGUI::setNumBlocks is called twice at startup? 	whQuestion
2660	18054881	Rebased on gmaxwell's remote may 15th stuff since the test-patches otherwise conflict 	Clarify
2660	18056004	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1df51cd02ee4bda81004ea7fb8959138265bcfa3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2660	18242810	"Pushed a new commit to fix the obvious GetMinFee bug I missed the first time, probably at least cherry-pick that for 0.8.2 "	Clarify
2660	18245800	"if (txout.nValue < CENT) is guarded by ""if (nMinFee < nBaseFee)"" thus the max is unneeded.  "	Other
2660	18245907	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7225e074c5bc06ab866e3f31ac20755967ca8906 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2660	18262674	"@gmaxwell Hah, well I suppose thats what happens when you skim...sorry for all the confusion. "	Clarify
2660	19013009	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dcea8cacf7774ee6dd74ffbc5949322bf3aa05d1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2660	19452311	Rebased and updated to remove the redundancy with MAX_STANDARD_TX_SIZE. 	Continuer
2660	19497578	ACK 	Clarify
2660	19531529	ACK 	Clarify
2660	19653346	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/87cce04c171800d29df1f13ecf9b36c933262b08 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2659	18045651	"Can you please try again with 0.8.2 RC1, which has some thread changes that could be related here. "	Reject
2659	18079520	"After posting the issue here, i went to bed and when I woke up, almost all my transactions was confirmed, so I decided to try to rescan the blockchain again to see if I would receive the error agin, but this time it rescaned the blockchain without problem. I thought ""maybe the error was ocurring whe"	Clarify
2658	18032219	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3457681627384baf41c7b1d809d87a52a2c94e07 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2658	18045139	"I think it would be nice to not just use our default cryptic message, but provide some details (not only for this new condition). "	Clarify
2658	18089071	"Overall looks good to me. Agree with Diapolo that the log message could be more helpful, like by including the fork block hash and stating why transactions may be incorrect. "	Clarify
2658	18093162	"OK, rewrote the alert messages, now you get: 'Warning: Large-work fork detected, forking after block $HASH' for %s in -alertnotify ""CheckForkWarningConditions: Warning: Large valid fork found\n  forking the chain at height %d (%s)\n  lasting to height %d (%s).\n"" in debug.log for large valid-work fo"	Clarify
2658	18093475	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7c4ad5d8dffb116cbb8c2e429f19452cbb056d38 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2658	18966187	Looks good to me. 	Statement
2658	19863626	"I think this code belongs in main rather than alert (rationale: it needs access to the current chainstate, which is maintained by main - alert shouldn't need a dependency on that).  Code in general looks good, but needs a rebase.  Also, I expect the most common case for a message like this to be a l"	Clarify
2658	20469689	"Interesting ... ""CheckForkWarningConditions: Warning: Large valid fork found\n forking the chain at height"" can happen with a daemon that does not fail if your database is corrupted in just the right way.  Sorry I don't have a copy of the corrupted database to demonstrate this.  I can imagine this w"	Reject
2658	20551510	Also note that this puts lots of needlessly scary-looking warnings in debug.log during a reindex.  Perhaps it should be silent during a reindex if prior to the last checkpoint? 	Clarify
2658	21091143	@TheBlueMatt Rebase needed. 	System
2658	21334120	"@wtogami Hmm...I dont see any fork messages during -reindex, are you talking about a -reindex on a corrupted chainstate? "	Clarify
2658	21335281	"Rebased, moved code to main.cpp, because its not like that file isnt already too full. "	Clarify
2658	21386907	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f65e7092a200ee6e9453058c3dafbab62d9b4dcc for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2658	21435281	LGTM. Can we merge this now? 	ynQuestion
2658	21465367	Is the patch intended to warn about forks during the -reindex process where it is unnecessarily scary? Can it be somehow silent about forks until after the last checkpoint? 	Clarify
2658	21465993	"Please do not further overload checkpoints.  ... but yea, warning during reindex is obviously not good. :) "	nAnswer
2658	21466257	"Probably a condition of this should be ""at least one block in the fork must have been rejected by us""? "	Clarify
2658	21535251	"RE: warning during reindex: suppressing the alert if best-other-tip-time is more than a day (a week? or maybe if max(other-tip-time, best-tip-time) is...) in the past is probably the right thing to do: reasoning would be we don't care about old fork events that have long-since been resolved.  But be"	Clarify
2658	21537259	"I removed these three patches from litecoin-0.8.x not because it was broken, but from concern that it would unnecessarily scare people with false positives that appeared to me during a normal reindex.  Although I am not entirely certain it was the type of false positive you are asking for.  I didn't"	Clarify
2658	22385254	"https://github.com/litecoin-project/litecoin/tree/exp-forkalert FYI: I tested it yesterday after re-applying the three patches above (an older version of this PR that applied cleanly to bitcoin-0.8.3, prior to the recent rebase).  A fresh Litecoin blockchain sync and a subsequent -reindex both were "	Clarify
2658	22545695	ACK.  I re-indexed an old chain that has lots of forks and got no scary warnings.  	nAnswer
2658	22551666	I updated BIP50 with the fact that this is done. Great work Matt! 	Emphasis
2657	18027469	I assume we'd pull this after 0.8.2. 	Clarify
2657	18027910	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/a824121eb8458350a2c4f7c64601a9d1b41425c9 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2657	18030121	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a824121eb8458350a2c4f7c64601a9d1b41425c9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2657	18031075	What? you couldn't just use the commits in those patches? ACK 	Clarify
2657	18659282	ACK 	Clarify
2657	18664972	ACK 	Clarify
2655	17919676	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c63791170b55a5bcffc7e631fb42ef462706eb3a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2655	19873364	Decided that this is essentially two separate issues that should be in separate pulls. Going to close this and open separate ones in the future. 	Clarify
2654	17863157	"I think it makes more sense to post this (along with a bounty?) on the bitcointalk forums, or in the community of the respective distribution.  Issues here are supposed to be related to client development, not ""create a package for *random distribution*"". "	Clarify
2652	17819608	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8ae290d266326893a19c31e67258f6fbed6dbd37 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	17813956	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/095a25539e9d243160a1e5ee5dec79d789ea3a27 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	18409772	@laanwj can you review again? Now the transaction gets prepared and the instance will be used to commit the transaction. 	Statement
2651	18412766	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/150111c53fc08db0ecc2fb894f80e17d80e37c39 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	18461525	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/508caa7bc26a1b06fc193892098dbc58f183df15 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	18776129	"Looks like the correct way forward!  I wonder about one thing, though: As the wallet lock is released in the time between the creation of the prepared transaction and committing it (which in principle is a good thing, otherwise everything using the wallet will hang), it seems possible for another sp"	Clarify
2651	18824958	"@laanwj good catch. The QMessageBox can stay open till infinity (it needs user action). So,... the missing wallet locking can be quite a problem. I do test now what happens when i keep open the message box and trigger another payment with rpc. "	Clarify
2651	18827324	"Did some testing. When spending the coins (whole wallet balance) in background using RPC sendtoaddress during the open QMessageBox (asking for confirmation), i get a correct error when trying to spend the prepared transaction (`WalletModel:sendCoins`) `TransactionCommitFailed`. Error handling is fin"	Clarify
2651	18828534	squashed  and ready for ACK's :) 	Clarify
2651	18830246	I think the dialog boxes look a little disturbed and should be perhaps a little more tidy. My idea would be to design it as a list to be more easily readable and the fee display as an addittional sentence at the end.  <pre> Are you sure you want to send?  XY BTC to: %LABEL% (%ADDRESS%)  XY BTC to: %	Clarify
2651	18830350	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7b5936bce40141a0e838294bce37a0e1d544912e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	18833096	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0e2c7f1923754159fa0f6f8d7f6430b0ef00f906 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	18835314	Please bear in mind people who use high contrast themes who are visually impaired. The OS needs to be able to use the correct colour in this situation. 	Clarify
2651	18835699	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/149973ef0214d9aa2d3d83838eb2bdba8942b5ac for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2651	18836226	"Looks very nice :), if you only could change ``this transaction requires a fee of XYZ BTC`` into ``This transaction requires a fee of XYZ BTC.`` (uppercase start and ``.`` to make it a sentence) ^^.  I hope people don't mess with the HTML stuff when translating on Transifex... "	Clarify
2651	18836926	Will fix the typo. @Diapolo: what do you think if we take the html stuff into separates stings. Goal: exclude html from tr stuff. It might be then a bit a string gluing battle. But prevents us from messed up transiflex sources.  	Clarify
2651	18837166	"Let's see what @laanwj thinks, but if possible I would prevent big HTML stuff in translatable strings if possible, like you suggest. "	Statement
2651	18837785	"I agree, better to let people translate only the messages and keep the surrounding html fixed. "	Clarify
2651	18837965	okay. Let me slice the strings... 	Statement
2651	18840114	did some string slicing. But i'm not sure if it's still readable like this and might also leads to transiflex problems. I'd prefer the previous version... 	Clarify
2651	18841128	"IMO this is not much better, instead of html the translation messages now contain lots of %%%. If you want to slice the strings, why not use concatenation (+) instead of  all the interpolation? Or maybe we'll just have to accept a little html in the translation strings if it's the least worst option"	Clarify
2651	18846896	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6a529b9312b981df9852d24ea5907a3187e3244f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	19002133	"Could you please squash the commits, rebasing on top of master? "	whQuestion
2651	19099969	"rebased, squashed, updated. - Added new string recommended by @PRab  - overhauled string gluing like @Diapolo recommended.  Now it looks like:  single no fee (std case): ![bildschirmfoto 2013-06-07 um 12 31 40](https://f.cloud.github.com/assets/178464/623262/5ce7181e-cf5e-11e2-9fcc-5cb8fdd13f0a.png)"	Other
2651	19100254	"Looks really nice now, just add a little ``!`` after fee to make it a sentence and you have my design ACK (I'm not deep enough into Tx-code to ACK that part)! "	Clarify
2651	19100408	"@Diapolo agree for the ""!"". Added, commited, pushed. "	Clarify
2651	19100488	ACK 	Clarify
2651	19117789	Looks good. Haven't checked the code or tested.  One question: what does a voluntary fee look like? 	Clarify
2651	19123165	@sipa: It does look the same (check screenshot with voluntary 0.1BTC fee): ![bildschirmfoto 2013-06-07 um 20 03 04](https://f.cloud.github.com/assets/178464/625337/a6e8cdc0-cf9c-11e2-83fe-6ef6db740474.png)  Maybe the sentence need to be changed. What do you think? 	Clarify
2651	19123315	"Just changing ""required"" to ""added"" makes it sound good to me. "	Clarify
2651	19123370	@PRab okay. sounds good. Let me check how i can detect if vol. or req. fee. 	Clarify
2651	19124726	"+1 to ""required"" or ""added"" depending on if it is required or voluntary. "	Statement
2651	19129672	"I am trying to merge this in coin control, there seems to be a serious bug in how you handle CReserveKey keyChange. If you send a transaction which creates change, the wallet gets permanently locked. Simply send 2 transactions in a row, to test this, but you must have change. You can also send a tra"	Other
2651	19138661	"I like this.  One nit though: I think highlighting the fee in red as well as adding an exclamation mark is over the top. That's only warranted if the fee is high compared the the amount to be sent. Otherwise, just use a period, no need to scream. "	nAnswer
2651	19144191	"That's a subject for another pull request. We have quite a few hardcoded colors at the moment. It would be nice to be able to override them with a theme for example with a css file. But to keep the scope of this pull request limited, red will do for now. "	Clarify
2651	19144273	Although please look into the issue identified by cozz. 	Clarify
2651	19164925	"@cozz Thanks for the report. The problem might be, that the `return` of the new `prepareTransaction` method is within the `LOCK` block. I will clean this up and move the return out of the LOCK block. "	Reject
2651	19165001	"Updated. Exclamation mark is removed. Voluntary gets detected. LOCK problematic ""could"" be fixed. @cozz can you retest? Can somebody have a closer look into the `prepareTransaction` and `sendCoins` methods? Especially the locking, etc.? "	Clarify
2651	19234518	"I still have the lock-problem. I have tested on linux and windows. I think the problem is that CReserveKey keyChange(wallet); is defined in the function. I can fix the problem when I define CReserveKey as a pointer, but then it may  be memory leaked I guess, if not deletes added. So you could do thi"	Clarify
2651	19237945	"To determine whether a fee is added or required in the case where you have set a voluntary fee is not possible, createTransaction does not tell you that. It tells you how much fee has been added, but not why. So to provide really accurate ""added/required"" message, we would have to add a boolean retu"	Clarify
2651	19249409	"I'm fine with just saying ""added"" here.  About CReserveKey: would it help to remove its dependency on CWallet, and have the CWallet passed explicitly when needed (when getting a pubkey, or when keeping/returning)? "	Clarify
2651	19249536	"@cozz: I do compare the requiresFee from createTransaction with the possible voluntary fee from the settings. If the value is the same, it must be a voluntary fee. Or not? "	ynQuestion
2651	19251183	"It's a possible check - but just that the value matches does not provide certainty.  For now I strongly prefer always using ""added"" to prevent unneccesary complexity.  Such checking could always be added in a later pull and reviewed and tested separately. "	Clarify
2651	19252993	"@laanwj We could change to ""added"" in all cases. But my understanding is that the user should be happy when he set (example) a 0.001BTC vol. fee in settings and then read ""added"" (even when the tx would require 0.001BTC as fee). When the tx fee would be higher, it would then be ""required"". "	Clarify
2651	19260459	"Yes -- but mind that the fee set in configuration is per KB, so at least you'd have to do some computations as well. I'm not comfortable with the UI making guesses based on the amount. That logic doesn't belong there.  On the other hand I'm fine with a solution in which CreateTransaction returns a f"	Clarify
2651	19260716	"Okay. Let's move the added/required distinction to a possible upcoming pull. I will just change it to ""added"". I try now to fix the CReserveKey thing... "	Clarify
2651	19371257	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d01361332e958e880805c2a604b651248dc5eac8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	19377310	"@Cozz, @sipa: i've updated the CReserveKey handling. The CReserveKey will now no longer be passed around. I decided to keep it as a instance var of walletmodel (including a new cleanup transaction method). If you could review it.. would be appreciated. @Cozz: if you find time: Could you do a retest "	Clarify
2651	19379206	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d2b910cc472e43dfb23fe24566c1cc020acdbd2b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	19381566	"I don't like the temporary state in WalletModel. This is a similar concern as I have with the coin control patch (which, last time I checked, added output selection state). Such state causes possible concurrency issues, what if a new transaction is created before the old one is cleaned up. At least "	Clarify
2651	19382110	"@laanwj yes. These state's are really not easy to handle. They need a very clear work to avoid leaks, etc. The problem is, that i'm going deeper than i should. :) I do not see the root cause of the CReserveKey problem as i also do not have a test setup to debug it. The WalletModelTransaction class s"	Clarify
2651	19385042	"Yeah, point on overdesign taken. My initial design idea was to keep the UI and core as separare as possible, so all communication and usage of core data structures happens through models (signmessafe was the first to break this). It thus makes me a bit sad to see more and more includes of core heade"	Clarify
2651	19414686	It works for me now. 	Statement
2651	19529826	"Update code, moved transaction-stuff to a own class. @Cozz: could you please re-test one more time? @laanwj: code-review? "	Emphasis
2651	19654782	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/aff22cd76ebf4fbe7a11875d17e6b932b2b1d8e8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	20239417	"tested again, seems to work, just some minor things I have noticed: - required/added still there - remove file src/walletmodeltransaction.h, it doesnt belong there, accident I guess. model and qt code should not be in src-folder anyway - you forgot transaction.setTransactionFee(nFeeRequired); in wal"	Clarify
2651	20298556	Thanks @cozz will have a look at it soon/tmr 	Statement
2651	20724560	cleaned up and fixed issues reported by @cozz. Ready for some final ACKs. 	Clarify
2651	20725588	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a027df6fa8e6ebf1cb221e3ef93977c85efddb5a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	21288897	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/aedfd8dd4892cb79b33a13c9c9db1c188be6aca9 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2651	22095550	@jonasschnelli What is the current state for this pull? 	whQuestion
2651	22097413	Sorry. Didn't realize that my turn is missing... will check it and give response soon. @Diapolo thanks for the reminder!  	Emphasis
2651	22101242	"No problem, I was just wondering, why that one isn't merged yet and saw there is an open feedback from @cozz and you surely need to rebase. "	nAnswer
2651	22436205	"Yes, let's try to get this merged. "	Statement
2651	22439288	"Okay. Fixed the ""amount plus fee exceeds balance"" issue while setting the transaction fee in the transaction model to always 0.  Some final ACK's? "	Clarify
2651	22439684	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/bb8da7fd3ce971714ec9af34010d53b51a4d45e2 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2651	22439888	hmm... need to rebase.  	Statement
2651	22440847	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/237edd014bf4017fdcb756f6f8c8001a573531c4 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2651	22474957	@Diapolo did cleanup the code (fixed your pointing) and also got rid of the setOptionsModel in sendCoinsDialog. 	Clarify
2651	22475839	"@jonasschnelli Thanks for your hard work here, I have to say sorry, but IMHO we need to check the data types for fee variables once more. In the core we use ``int64 nTransactionFee``, so AFAIK we should then match this in our Qt code by using ``qint64``, right? So places which you recently changed t"	Clarify
2651	22475993	@Diapolo yes. I've also thought we should not use unsigned vars. I also prefer qint64. Let me change this. 	Clarify
2651	22476054	"Now i use qint64 for fee ""holders"". Should now corespondent with the non-qt code where we use int64. "	Clarify
2651	22476394	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b24cb4ceeaefce25993a27badea740a922d4090c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	22476508	"Looks good now, let's see what @laanwj thinks about the general idea now (use qint64 etc. in Qt code). "	Clarify
2651	22478480	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2cb460966a15595b8eb3c393a4ff47b7ab1011f8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2651	23158321	ping @laanwj  	System
2651	23489900	"Dunno if it needs another rebase, but ping @laanwj :). "	nAnswer
2651	23509006	"Looks good, ACK. Seems there are some minor conflicts with the payment request changes.  "	Statement
2651	23544540	I'll do a rebase soon... 	Statement
2651	23548857	I can do it too if you want 	Statement
2651	23549008	"If you have time, would be nice! I'm busy with other stuff right now... "	Statement
2651	23557143	"Will give it a try, though it seems more work than expected. Some areas (such as on_sendbutton_clicked) are pretty heavily hit by both your patch and paymentrequest. "	Other
2651	23579626	See #2958 for rebased version. 	Statement
2650	17798089	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9687ba335b397688aa0445da63a5401c3676b576 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2650	17805135	"If you want the debian packages to be updated to include new images (I dont really care), please also update the debian package scripts in contrib/debian (and probable email the debian maintainers afterwards to notify them that stuff should be changed, since they decided to use their own package scr"	Clarify
2650	17809734	@TheBlueMatt Okay. Did change the script. I assume for the upcoming 0.8.2 release you will do the PPA lanuchpad package? 	whQuestion
2650	17813898	"Please also update the changelog...and yes, Ill upload the debian stuff to launchpad when 0.8.2 is tagged. "	yAnswer
2650	17814260	@TheBlueMatt i have no deb experience. Hopefully the changelog is right now...  	nAnswer
2650	17816787	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b5c62ca0b2c448658599b56363194392bbdde275 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2650	17829359	"Aside from the above, ACK Oh, and please squash commits. "	Clarify
2650	17830248	"@TheBlueMatt okay. Changed (""Mo"" => ""Mon"") and squashed. "	Other
2650	17831803	ACK 	Clarify
2650	17832109	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d0d4080013d507aed625043dd9b422623aab015d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2650	18414458	"I need help; the new icons break the win32 gitian build.  The problem:  Now, every time I run the NSIS installer to create the windows -setup.exe file, the sha checksum on the .exe is different. I haven't been able to figure out why.  I am guessing it is the bitcoin.ico file that is the problem, bec"	Clarify
2650	18414794	"@gavinandresen Hmm.. the .ico file has changed and yes, I think there are different resolutions which the nsi script might can't handle. I will check it in the next hours and give you a feedback. "	Clarify
2650	18415577	"In case it helps, I tweaked the installer to do file-by-file zlib compression (instead of compressing the whole thing) and there is a 4-byte difference:   http://imgur.com/oOljdIV  (and another 4-byte difference at the very end of the file, which I think is a CRC checksum)  "	Clarify
2650	18417291	"Just the fact that the file has changed is not a problem: it doesn't explain why nsis deals with it in an indeterministic way. I checked nsis's source, and there are no rand() or random() calls except in their unit tests. Perhaps it's related to the order in which files are returned by readdir() or "	Clarify
2650	18417394	you could also try to replace the .ico file with the old one and try again. Just to make sure it's the .ico file... or something else like @sipa's idea with the readdir order. 	Clarify
2650	18418215	"Replaced it with the old .ico, and makensis results are predictable again.  Shouldn't be readdir() order, I'm logged into my gitian VM and re-running the makensis command on exactly the same filesystem (not moving files around or anything).  ALSO: FAKETIME is set, so any call to time() in makensis ("	Clarify
2650	18422258	"I just re-created the .icon file. It was lacking of 3 resolutions. 20x20, 64x64 and a 32x32 256 color. The problem maybe is, that the required resolution was always generated (with somehow random elements).  You might try again with the .ICO file: https://github.com/jonasschnelli/bitcoin/blob/fa56a2"	nAnswer
2650	18425487	All-resolution .ico seems to fix the problem.  Go figure.  	nAnswer
2650	18425558	Need another pull request with the new .ICO? 	ynQuestion
2650	18425862	I can just push the new pixmap.  Is src/qt/res/icons/bitcoin.ico  used any more ? 	ynQuestion
2650	18426101	I'm not sure which ico file is used for Win builds. src/qt/res/icons/bitcoin.ico was there when i started redesigning. 	Clarify
2650	18442230	The icons in `src/qt/res/icons` are used during build of the executable itself. 	Clarify
2650	18445367	Can we not use the `share/pixmaps/bitcoin.ico` for the executable build and remove the `src/qt/res/icons/bitcoin.ico`? 	Reject
2650	18449174	"I guess so. You'd also have to move the testnet icon there, and change the following file: https://github.com/bitcoin/bitcoin/blob/master/src/qt/res/bitcoin-qt.rc#L1  "	nAnswer
2649	17796578	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8deb63635e9b8b7f5379d33d4fc3fe91194bcdd4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2649	17867572	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/47651e4d7da8fa9f36f84fcecf9782a89d2dbcb6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2649	18045669	"No new translations available, so no update today :). "	nAnswer
2649	18116954	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/38a33c085eb303753de14feef4e63b07a3b8e5f9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2648	17795309	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e3046c752fbdf04445b50f4fb7d13be4e9a92bc3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2648	17825071	What dialog? I don't see any GUI changes :)  Can you explain when this is useful?  	ynQuestion
2648	17826185	"This is now shown, when you first-time add ``-txindex`` or when you first remove that comman-line option. ![txindex](https://f.cloud.github.com/assets/1419649/497008/f32b5dc0-bbf0-11e2-8e91-a2ff7c90750d.png)  Clicking OK will directly start the reindex, without the need to supply ``-reindex``. "	Clarify
2648	18045678	@sipa What do you think? 	whQuestion
2648	18226029	What happens with bitcoind with this? 	whQuestion
2648	18277984	"@sipa Nothing (exit)? It prints to the console just like when a DB corruption is detected, which already is a dialog for Bitcoin-Qt and just a message for bitcoind. "	Clarify
2648	18659326	"ACK.  @Diapolo Right, that should be changed (we've had console users type 'ye' in the terminal after bitcoind exits with ""Do you want to reindex now?""), but that's outside of the scope of this PR. "	Clarify
2648	18691105	ACK  	Clarify
2648	18750888	ACK 	Clarify
2648	18787183	"Rebased, fixes merge-conflict. "	Statement
2648	18805635	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3a10b04bdbb08059e0a49f440cb0d82871806f7f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2648	19372331	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0206e38dcd32e0cc76c6f0e08197a2a72bef0fb1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2648	19450586	Any reason to not merge this? 	ynQuestion
2648	22697510	Please note that this patch added an unintended error message in Issue #2893. 	Clarify
2647	17783244	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a8764b073ecd2c5fa2b7fc6b1568f913d0120bc7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2647	17785042	Seems pointless. 1 cBTC is already part of the BTC range. 	Clarify
2647	17827090	"I'm against adding more units at the moment. BTC, mBTC, muBTC provides enough for the full 8-decimal range. Sure, cBTC would give a sort of dollar parity right now, but that may have changed again by the next release and once added we're stuck with it forever... "	Clarify
2647	17846121	"I see. Personally, I don't see any technical difficulty to have even all of exponent units from satoshi up to MBTC, except a bit of bitcoinunits.* refactoring need (that is needed anyway) - all code outside bitcoinunits.* is seems to be unit-independed. "	Clarify
2647	17861176	"Right, no technical difficulty. That was also not my point. I'd like to standardize on a few units and the current ones are fine. Wake me up when we need nanobtc. "	Reject
2647	17877395	NACK  mBTC seems to be what has caught on rather than cBTC; I second laanwj's thoughts. 	Clarify
2647	17879071	"Anti-consensus here, closing. "	Statement
2645	19510401	Anyone interested in this? @gavinandresen @jgarzik @laanwj @gmaxwell ? 	ynQuestion
2645	19543415	"So, it's one of those things :)  It is a good change, and something my python code should probably emulate to boost python speed.  Technical review yields an ACK.  The main issues are external:  the area of code being touched is a critical component, and this totally rewrites the component [in a pos"	Clarify
2645	19568087	"Are the code paths independent enough to run them side-by-side on live data? If so we could do exactly that and have bitcoind quit if they disagree. You'd then want to enable this behavior probabilistically so that at any time a small subset of the network is using the new code, say 1/8th. If a bug "	Clarify
2645	19568299	"@petertodd If it takes that much effort to convince you this is safe, I'd rather just close this pull request. (note: this isn't a argument to convince you otherwise in any case; it's just not worth that much effort).  I've of course already run this on testnet and mainnet without problems, but that"	Clarify
2645	19568454	I agree with this change as it makes what happens more explicit. On the other hand it seems risky as it's very hard to verify or prove that the hashed parts stay exactly the same. 	Clarify
2645	19570323	@sipa I haven't reviewed the code carefully enough to be convinced one way or the other technically - I just wanted to float the idea given it's an option we haven't used yet.  That said inline signature serialization helps most with the largest transactions; I don't think we know much yet about wha	Clarify
2645	22734284	"@gavinandresen @gmaxwell  @jgarzik I'd like some opinions about this. I'm not going to work on this further, but I believe it is sufficiently tested. If it's not considered useful or too risky, I'd rather close it. "	Clarify
2645	22735284	"ACK. I'm happy with this, and the randomized unit tests builds confidence. I was running it on a live node for a while, fwiw. "	nAnswer
2645	22735932	"Nothing to add beyond my above comments, which still apply.  "	Clarify
2645	22738570	"I spent some time this morning trying to break this; the good news is I couldn't, so ACK overall.  I did find some weaknesses in the unit test, though; the same 20,000 random transactions were being tested every time, not all possible SIGHASH values were being tested (only ""reasonable"" ones), and yo"	Clarify
2645	25301283	Rebased and incorporated Gavin's suggested changes. 	Continuer
2645	25682326	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f5857e5cb5fb03bee9c05d1dd6ba2621cac49179 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2645	26364716	@gavinandresen Care to have another look? 	Clarify
2645	26470891	"As far as I can see by inspection, both functions are equivalent. Is the OP_CODESEPARATOR removal part tested by test cases? (e.g. OP_CS xx OP_CS OP_CS yy OP_CS -> xx yy)   "	Other
2645	26471808	"@SergioDemianLerner : yes, the unit test creates 50,000 random, 10-opcode-long scriptPubKey transactions, many of which will contain multiple OP_CODESEPARATORs.   "	Clarify
2644	17782490	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0fe8010a10bafd67f9131b2da034fb9cd7fc5024 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2644	17782949	"Code looks sane and ACK-worthy.  The concept is similar to something I did in pynode.  Did you actually instrument ""no effect on memory usage"", or is that a guess?  I would like to see before and after numbers proving that :)  "	nAnswer
2644	17784069	"@jgarzik Just reasoning. For each CBlockIndex representing a node in the active chain, we remove 8 bytes from the CBlockIndex, and add 8 bytes to vBlockIndexByHeight. Actually, it should reduce memory usage slightly, as non-best-chain nodes also lose 8 bytes. "	nAnswer
2643	17783281	"thoroughly empty means what? Can you show a screenshot? Is that with an empty datadir or a filled one? What does an RPC ``stop`` command do?  Perhaps you can upload your debug.log, so we can take a look. "	Other
2643	17789926	"Screenshot: https://docs.google.com/file/d/0B_fyMTbLGLc3T3FiWDZDWUxrek0/edit?usp=sharing  It's a filled directory, but with neither blockchain nor keypool. The wallet has only 1 address. I could upload a debug.log, but there's nothing interesting there... The rpc stop command is received on the serv"	Clarify
2643	17792839	"What does ""It's a filled directory"" mean?  It's not clear to me what you believe you're doing special and uncommon here is. "	Clarify
2643	17796676	"-keypool=0 and -connect=127.0.0.1 perhaps I'll try these and see what happens :).  Edit: Nothing, loads just fine... "	nAnswer
2643	18034060	Looks like #2501 is responsible for this. 	Statement
2643	18034890	@rdponticelli How did you determine this? 	whQuestion
2643	18035020	"By bisecting. Now I'm about to test v0.8.2rc1 with that commit reverted, just to be sure. "	Statement
2643	18035073	Thanks!! 	Emphasis
2643	18035698	Confirmed. v0.8.2rc1 with 4881353efef81acc6ddbaaecd4ba89f012b3e87e reverted works as expected. 	Statement
2643	18035869	"Just a wild guess:  Can you try adding in a progressBarLabel->setVisible(false);   before the setText calls and a progressBarLabel->setVisible(True); after in bitcoingui.cpp?  That commit is mostly just changing around strings, I don't see any obvious behavioral differences except the visibility cal"	Clarify
2643	18044665	"Perhaps this code needs ``clientModel ? clientModel->getBlockSource() : BLOCK_SOURCE_NONE``, which I removed, because I had the impression that function could only be called, if clientModel is already set.  I just can think of ``ClientModel::updateTimer()`` beeing faster here?  Well, ``connect(model"	Clarify
2643	18047802	Great find @rdponticelli.  I think we should revert that pull before the 0.8.2 release and later figure out why and how and re-merge a fixed version. 	Clarify
2643	18048754	"@laanwj Any idea what is the cause, can it be related to clientModel somehow? I would vote for fixing over revertig... dunno how near 0.8.2 FINAL is or if Gavin intends to offer an RC2. "	Clarify
2643	18062386	#2661 seems to fix this. It restores previous behaviour on the special case my tests were triggering. 	Clarify
2643	18353373	"Closing, as this is likely an incompatibility problem between qt and qemu/kvm, or a bug somewhere on those codebases. Some other qt based software, as kde, doesn't seem to work at all on qemu/kvm.  I'll reopen the issue if I find some way to fix/workaround this. "	Clarify
2642	17776802	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5d274c9927f01c590f187bbbc670a92e441c53b7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2642	17781205	ACK 	Clarify
2641	17774907	"@gavinandresen I'm pretty sure that specifying a -datadir explicitly always set the datadir to exactly that, and didn't add testnet3/ afterwards.  EDIT: I was completely wrong about this.  Also, this seems to explain #2594 and #2547. "	nAnswer
2641	17775626	"i'm not sure if its related to pull #2608. Users can specify a -datadir where a bitcoin.conf is placed. The bitcoin.conf can enable testnet (testnet=1). If we not add ""testnet3/"" to the path of -datadir a mixup between prod- and testnet happens then very quickly. "	Clarify
2641	17775682	"@jonasschnelli #2605 reported that bitcoind behaved correctly, and Bitcoin-Qt incorrectly. IMHO, it is the other way around (regarding consistency with before, not arguing what the ""right"" behaviour should be).  EDIT: I'm wrong. "	Clarify
2641	17775731	@sipa Right. Someone needs to define the right behavior and then we need to make it consistent. 	Clarify
2641	17775990	"It seems I'm seeing ghosts - 0.5, 0.6, 0.7 and 0.8 all add /testnet(3) to the specified datadir in testnet mode.  So I'm not sure which behaviour changed, that is reported in this issue. "	nAnswer
2641	17776059	"I think the problem is that bitcoin.conf is not net-specific, which it perhaps should be?  [mainnet] datadir containing bitcoin.conf in root add -testnet [testnet] mainnet datadir containing bitcoin.conf using /testnet3 as testnet datadir "	Clarify
2641	17779873	"0.8.2rc1 is working as intended.  I'm guessing the original report was caused by somebody running an earlier git HEAD that had issue #2605 , and they assumed that was the right behavior.  To summarize:  The same-as-it-ever-was behavior is:  testnet data is always stored in a testnet3/ subdirectory o"	Clarify
2640	17764594	"a retest on my system showed me, that the script works well. The bitcoin-qt.pro file probably contained VERSION=0.8.0 during the time the script was executed (manually). "	nAnswer
2640	17764657	"Try downloading/installing/running again. I accidentally built and uploaded against a slightly out-of-date version of the tree, but re-built, re-signed, re-uploaded yesterday afternoon.  "	nAnswer
2640	17764727	right. Looks good! Issue can be closed. 	Clarify
2638	17732408	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d5165c8b9a47c4063b32cd4f071c389153fa96f4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2638	17735373	Is there a less expensive way to build qmake on OS X? Building Qt in its entirety is quite time consuming and I think we just need qmake.  I have a version of the rst file here for editing:  http://rst.ninjs.org/?n=7d7181922b8aa6c339d7de4402a62b27&theme=basic 	Clarify
2638	21091099	@Crinklebine Will you be fixing the above concerns and rebasing this? 	ynQuestion
2638	23221118	"Closing. Feel free to reopen, if feedback is addressed. "	Statement
2637	17969777	How about hierarchical deterministic wallets? One wallet backup would be enough to generate every keypair in the wallet so there would be no need to have multiple backups from the same wallet. 	Statement
2637	17983019	"Yes, we know what HD wallets are. This was meant as a stopgap measure, and for people that want to keep using ""list of keys"" wallets because they trust it more.  In any case, closing this issue.   "	Clarify
2636	17699688	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0eae95ebf64a697619f2b42e36e0b40fac2bff11 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2636	17707456	hmm... ```port install qt4-mac``` will probably install the whole qt4 package. On line 47 of readme-qt.rst we write ```- Download and install the `Qt Mac OS X SDK`_. ...``` So then the user might have qt installed twice?! Could we not just tell the users to install qt through macports?  And yes. It'	Clarify
2636	17707650	"My pull was derived from building bitcoin and bitcoin-qt on a newly installed Snow Leopard hackintosh in Virtualbox. I did not download the `Qt Mac OS X SDK`. What worked for me was downloading Xcode 3.2 (the latest version I could find for Snow Leopard)  and ""sudo port install qt4-mac"". Perhaps the"	Clarify
2636	17707704	"@Crinklebine i recommend not to split. Because the SDK downloadable from qt-project does not work out of the box (i always had to compile qt sdk) i would also say, remove the parts of Line 47 and change it with your information (install through port). Then we can also avoid making differences betwee"	Clarify
2636	17707771	"We'd also want to look at including the instructions for users using brew instead of macports, if necessary. "	Clarify
2636	17707971	"There does appear to be some brew instructions in the current readme-qt.rst  '. If using HomeBrew,  edit `bitcoin-qt.pro` to account for library location differences. There's a diff in `contrib/homebrew/bitcoin-qt-pro.patch` that shows what you need to change, or you can just patch by doing         "	Clarify
2636	17708031	Those instructions are only for correcting dependancy include paths. They don't have anything to do with installing Qt. 	Reject
2636	17708488	@fanquake  I see what you are saying. This should work on brew?  brew install qt  @jonasschnelli Your recommendation seems right as MacPorts and HomeBrew both support QT install.  P.S. This is my first pull so please bare with me. :-) 	Clarify
2636	17708669	@Crinklebine your pull is great (even when we bother you with details)! :) 	Clarify
2636	17729935	I will close this pull request and reopen a new pull to incorporate the suggestions from @jonasschnelli  and @fanquake . 	nAnswer
2636	17730428	"You don't need to close the pullreq. You can just push to the associated repo/branch, and it will be updated. "	Reject
2636	17733289	@sipa Thank you for the help. I have already opened a new pull request. I'm still learning the Git development process and will do it correctly next time. 	Clarify
2636	18241451	"Any help? I have set up a new 10.6.8 VM, fresh install. I installed XCode 3.2.6 and then MacPorts--next I did:  sudo port installl boost db48 miniupnpc openssl qt4-mac  Then I did basic qmake/make from the command line yet it errors out EVERY DAMN TIME with this:  Undefined symbols:   ""MapPort()"", r"	Clarify
2635	17691998	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4332be71a2b15315ddc299e2f3695054df30eb95 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2635	17695524	Boost_chrono seems to exist as of Boost 1.47. I suppose that means we want to link against it anywhere we're on Boost 1.47 or higher. 	Clarify
2634	17672785	Closing as duplicate of #1522 (fixed in #2530). 	Statement
2633	17666961	You should perhaps also add this for bitcoin-qt.pro I guess. 	Statement
2633	17667257	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/f1560d9fe0e00f875353237f6d0224acc3bab07a for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2633	17668369	Please paste the compiler error into the commit.  The details about what this solves remain vague. 	Clarify
2633	17668385	"@TheBlueMatt do these error messages mean that -DBOOST_CHRONO_HEADER_ONLY doesn't work on Windows? We can just disable it there, as we link with boost_chrono on Windows anyway. "	Emphasis
2633	17671026	"Hmm... ""error: WinError.h: No such file or directory"" maybe a mingw issue? "	Clarify
2633	17671183	"In any case, it did try to use ERROR_NOT_SUPPORTED, so I suppose it may be trying to call some error handler... "	Clarify
2633	17680615	"Bah.  Linking against the boost chrono library on all platforms is another option; we should be consistent.  FYI: error is:  Undefined symbols:   ""boost::chrono::steady_clock::now()"", referenced from:       boost::cv_status boost::condition_variable::wait_for<long long, boost::ratio<1ll, 1000000000l"	Other
2633	17687272	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/fdcc3f1aee11701668d841cadd54c63be9526d73 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2633	17689622	"frickin frackin....  Ok, so -DBOOST_CHRONO_HEADERONLY breaks the Windows build. Linking against boost_chrono breaks the Linux build.  I suppose we'll have to live with being inconsistent, and link boost_chrono on Windows/OSX but not Linux.  "	nAnswer
2632	17615232	The pull tester fails because I deleted the now obsolete patch file it relies on. Matt said he'll update pull tester after it's merged to use the new flag. 	Clarify
2632	17668331	"ACK on the general idea, but if we're going this way, we should probably do it all the way. Given that 0.8.2 becomes sort-of urgent, I'd rather pull this afterwards. "	Clarify
2632	17668467	"That's fine, I can finish it off in the coming weeks. "	Reject
2632	17681060	Nice!  An option to set the network magic bytes would be good to allow you to setup a temporary private testnet easily if you are doing something that shouldn't be broadcast to testnet main. (like creating large bloat-blocks that you don't want to burden everyone else with) I found out the hard way 	Clarify
2632	18088549	"Maybe too many little commits here, but essentially this completes removal of fTestNet. You can still find out if you're on testnet (or a derivative) with a simple if test, so it's not any less convenient, but most of the variable stuff has moved to CChainParams. The few places that didn't move are "	Clarify
2632	18970888	Rebased onto latest master. 	System
2632	19035701	Ugh. It looks I screwed up with a force push and the work I did on another machine got lost. The last commits I worked on in the states are gone and I can't find a way to get them back. So don't review or merge this right now. I'll have to redo the last parts of removing fTestNet again :-( 	Clarify
2632	19039663	Nothing left of it in your local git reflog? That usually saves me in cases like this. 	Statement
2632	19046059	"Unfortunately the work was done on a laptop I don't have access to anymore and was since wiped. If there's no copy retrievable from github servers then the work is gone :-( It was only a few commits extra to clear out the last uses of fTestNet, nothing I can't quickly reproduce. But it's annoying. "	nAnswer
2632	19118334	"@mikehearn If you don't expect this pull to be ready soon, you'll likely need to rebase on top of #2154. "	Clarify
2632	19447864	I've rebased this and finished off the whole thing. Could I get a review for the last set of commits and some LGTMs/ACKs please? 	Clarify
2632	19498146	ACK apart from a few minor nits (see inline). 	Clarify
2632	19531355	Thanks. Looking for one more ACK. Gavin/Jeff? 	ynQuestion
2632	19538047	"Sorry Pieter, two more commits to look at. First fixes a bug I introduced and I could squash it back down. The second is new - I noticed that ""bitcoind -regtest help"" didn't work any more and noticed that chain params were never being configured properly for sending RPCs. The reason it used to work "	Clarify
2632	19543161	"OK, replaced the last commits with one that fixes the unsigned warning, fixes a bug with repeated spamming of fixed seed nodes I noticed whilst testing regtest mode and makes ""./bitcoind -regtest help"" work by using the params for command line rpcs too. "	Clarify
2632	19552965	"ACK, with some taste complaints  "	Other
2632	19555051	"ACK, though all I did was review the code line-by-line - no testing. "	nAnswer
2632	19677606	"Oops, how did I forget that? It turns out that the Qt code not only uses fTestNet, but in some places also just calls GetBoolArg as well. What a mess. Will work on it. "	Clarify
2632	19678972	"OK, I tested the gui in main and testnet mode, it seems to be working.  Probably now the reviews are done, it's simpler to squash all the commits before merging. Otherwise the Qt GUI will be broken between some range of the commits and it's a pain to go back and fix that. "	Clarify
2632	19679513	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/39cdc2d76159a02b47fa23b3d15359b869a17959 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2632	19680804	"The only place it just calls GetBoolArg should be in main, on purpose: to show the right icon immediately it needs to know whether the program is starting in testnet mode before the fTestNet flag is set in Init. "	Clarify
2632	19681748	"@mikehearn Yes, please try to keep every commit a usable state - otherwise you risk breaking git bisect.  Also can you have a look at @petertodd's nits?  After that, I think we can merge. "	Clarify
2632	19687648	"OK, I addressed Peter's comments and squashed into one commit. Thanks for the reviews, everyone. "	Statement
2632	19688320	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/0e4b31755534fac4ea6c20a60f719e3694252220 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2632	19688539	"ACK  Note that @sipa only said each commit needs to build on its own -- which does not necessarily imply all commits must be squashed together, only that commits should each be able to exist on their own, buildable and testable. "	Clarify
2632	19689764	"Well, ""move chain-specifc stuff to separate class"" is reasonable to have in one commit - it could be multiple as well, I don't care. I only asked that the CBlockLocation move to .cpp remained separate as it's not related. "	Reject
2632	19690176	ACK  @laanwj You have any comments still? 	ynQuestion
2632	19690312	Note that the pull tester will need fixing after this goes in. 	Clarify
2630	17590573	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/40c387e517bba93f931c5dc4c85e0f117c166548 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2630	17655815	"That's a good idea, to keep this updated and merge this just before the 0.8.2 release. It prevents superfluous updates to the translation files (ie all those pesky +122/-231 and ""untranslated"" messages) in git and still allows having the latest translations in the release.  So just in case: before t"	Clarify
2630	17720327	"Pulling, I'm going to tag 0.8.2rc1 this morning.  "	nAnswer
2629	17582459	ACK. Lots of other size assumptions in the code. No harm in fixing some. 	nAnswer
2629	17583209	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5fdd1251a87a0938f48e88970ae976e360c6e09f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2629	17594482	"This class can probably be easily rewritten to use GMP's mpn library (making it use 64-bit limbs on x86_64 for example), but that's a much larger change. ACK this. "	Clarify
2629	17596147	ACK 	Clarify
2628	17569079	Just use the -datadir option. 	Reject
2628	17571517	"Just to make the GUI more user friendly - although there are other clients out there for newbs, aiming to be user friendly, but bitcoin-qt is usually the first one that  new bitcoiners meet, and it can cause frustrations not knowing that 9GB will be downloaded somewhere to the system partition. This"	Clarify
2628	17588084	I guess it could ask if you want to customize the datadir at first run or after installation...  	Clarify
2628	17962585	"I've started working on this.  When bitcoin-qt is started with a data directory that does not exist yet (ie, the first time), it will pop up an intro screen in which a data directory can be chosen.  "	Clarify
2628	17965122	"That's great, thank you. Do you plan to include a note about the approx size of the blockchain that needs to be downloaded to the selected dir?  "	Clarify
2628	17965283	One thing to do might be to not permit selecting a location that doesn't have enough space free. 	Reject
2628	17982771	"@gmaxwell yes, that's the intention  "	Statement
2628	18121478	See #2670 	System
2627	17553333	@falinatecas Can you point me to the discussion you're referring to? 	ynQuestion
2627	17554890	"If you speak hungarian... :) So far there was only one complaint on a hungarian bitcoin forum, but it sounds like a good idea to me. Are there any drawbacks if a  warning like this would be implemented? "	Statement
2627	17569387	Are you talking about a Bitcoin-Qt warning or one for bitcoind? 	whQuestion
2627	17569773	"I think in general that a more ""wizard like"" experience in Bitcoin-Qt would be welcome, including some messages and explanations given at times. Doing that properly isn't easy (it's hard to do it in a non-annoying way), but I wouldn't object to it. "	Clarify
2627	17570239	"User experience for sure can be improved, perhaps I'll do some brain-storming with @laanwj in the next time after I'm finished with that options-stuff :). "	nAnswer
2627	17589299	@Diapolo @laanwj i could also contribute (workdown some tasks) to UI changes if you had work out a strategy. 	Clarify
2627	17589577	"We are 3 devs now able or willing to do GUI stuff, so perhaps we should collect some ideas and start doing things. Where should such a whish-list or brain-storm-list reside? I'm happy to participate there. "	Clarify
2627	17606984	"Should be combined with #2628, it could warn about the size at the same time as asking where to put the data (and then store the default datadir in the qt settings). "	Clarify
2627	17621287	@laanwj That is indeed a nice idea. 	Statement
2627	17655235	"@Diapolo and it's indeed a good idea to brainstorm about where to go with the GUI. Maybe we should also discuss some way that the community can fund our work. There are a lot of people, for example on bitcointalk or reddit, raising issues and/or making improvement requests, but who have no dev skill"	Clarify
2627	17772663	"@laanwj I'd have thought that ""funding"" can be provided by the return on investment. i.e. a developer purchases bitcoins, develops the app making it available to a far wider audience - bitcoin price rises - developer is therefore compensated for their work. simples. "	Clarify
2627	17775709	@rebroad hmm.. i'm not sure if investing in highly volatile bitcoin to fiat exchange rates is the right thing for core-developers. I would just say it's to risky. The exchange rate will probably not be related to the developers work. I made very good experience with donation options for free softwar	Clarify
2627	17810453	That's truly the most idiotic suggestion I've heard for a while. I'm baffled. 	Statement
2627	17817469	and what am I to do with all these underpants?! 	whQuestion
2627	17908924	Stumbled upon this: http://www.reddit.com/r/Bitcoin/comments/1eb1dg/bitcoinqt_should_have_a_way_to_choose_blockchain/ 	System
2627	17982825	"@gmaxwell LOL  @falinatecas Don't post such inane stuff here.   Closing this issue, see #2628 "	Other
2625	17549390	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/eb477a63fefdc29db9d152a9189ca790e0cb2519 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2625	17550080	ACK  	Clarify
2625	17553395	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/92f2c1fe0fe2905540b0435188988851145f92be for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2625	17563988	"Still have to test, but code changes are OK, nice cleanup "	Statement
2625	17568564	So one consequence of this is:  #task 1 walletpassphrase foo 3600   // I need this for a long time sleep 3000 signrawtranaction ..  #task 2 walletpassphrase foo 30  //I don't need this for long signrawtransaction ..  Now depending on how these tasks race the second kills the first. This seems bad an	Clarify
2625	17570373	"@gmaxwell : previously the second task's 'walletpassphrase' would fail with ""error: wallet already unlocked.""  If you REALLY want the max() behavior, then I say have the tasks call getinfo to get unlocked_until and do that calculation yourself.  I'm very much in favor of the RPC having the most obvi"	Clarify
2625	17596081	re: fixes #1961 were you able to reproduce the original issue to begin with? 	Clarify
2624	17547125	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6dc4b9548f17bfeadf414f195a9eaeeec384f7b6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2624	17566365	AFAIK we ARE currently using Boost 1.50 for the Windows build. 	whQuestion
2624	17574382	"Then should we edit line 24 of src/makefile.mingw to reflect proper version?  e.g. replace ""BOOST_SUFFIX?=-mgw46-mt-sd-1_52"" with ""BOOST_SUFFIX?=-mgw46-mt-sd-1_50""?  I guess it doesn't matter too much, because you still have to insert all your INCLUDEPATH's and LIBPATH's.  Might as well edit line 24"	Emphasis
2624	17583040	This is my first pull request.  I don't know how my recent merge upstream/master ended up in this pull request.  Sorry. 	Statement
2624	17583549	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/37ec627c87d676a986f0c67f06aca456d5a8a5d1 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2624	17583611	"Undid merge.  Yes, I am a noob.  However, I still believe my original pull request should be reviewed. "	yAnswer
2623	17528437	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e7d41be8703cc577b6eedb85bd7bba018442e6e0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2622	17465743	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5f479bec525c8dbf12eb431f22577b62b9a9d63d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2622	18806246	"As mentioned, you cannot change the versions like this without updating the gitian build.   If you want to do an update, replace the URLs with ones for the existing versions that work. Closing this issue. "	Reject
2621	17459164	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/da986f793d839d63692aa8b497f42c30fd584c66 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2619	17447386	"Devil's advocate: whether a wallet is encrypted or not is not a state, but a nearly-fixed attribute of the wallet itself.  But I don't really care. "	nAnswer
2619	17447797	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/06960f43944aa986df43b8d71a1883686688593f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2619	17451980	If you're doing this I think you should update the help messages to explicitly mention in what wallet states the commands can be used. Currently this is implicitly done by showing only appropriate commands. 	Clarify
2619	19911495	"Agree w/ @laanwj.  Please update help text to reflect his suggestions, and we can merge this.  "	Clarify
2619	23221122	"Closing.  Feel free to reopen, if feedback is addressed.  "	Statement
2618	17447465	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e867ecd26cd335150adaafc0921683873dae6017 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2618	18419042	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b96fa1dda368808a501b5c2d5ac17ca387962d6e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2618	18443943	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/77f3ceda5d1efb6c5de34c0ce1e2372151caddc7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2618	18691382	Mostly ACK.  Need rebase + resolving the fcntl.h question.  	Clarify
2618	18702814	@jgarzik rebased. 	System
2618	18703430	"Comments: * ACK current commits * Windows supports fcntl.h, so no need to guard with #ifdef.  Just make sure that file includes fcntl.h [unless we're all missing some detail RE sys/fcntl.h]. * Test plan:  ideally, at a minimum an ""it builds"" test on our primary platforms (linux/win/osx) "	Clarify
2618	18703755	@jgarzik so just wait the pull tester :) 	Clarify
2618	18806127	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ef41705e7bd72c11c5f9ed34d24a5c3fbca8f1d7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2618	19205825	ACK  	Clarify
2618	19879400	"I'd like confirmation that this doesn't break OSX builds, but ACK otherwise. "	Reject
2618	21090285	@fcicq Needs rebase again. 	System
2618	21289105	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/98148a713e6e671f1d993ce4dc7aa4654b4beaff for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2617	17431678	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b9763faf128d351e7bdc9151af062073a9659bec for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2616	17426674	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/80744b3beeab9b25be46e122e6648ba9a0c46e5f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2616	17432513	"I see the advantages of this. But one question, will the subtree automatically be cloned when cloning the bitcoin repository? Or does this add extra steps or even need extra tools?  "	Clarify
2616	17433274	"Yes, it will be cloned. The files in the subtree are plain, ordinary repository files. You can modify and commit them, rename, them, delete them, etc... What git-subtree does is create a special 'merge' commit that ties in the commit log from the source repository (https://github.com/vinniefalco/Lev"	Clarify
2616	17433421	"We considered putting the LevelDB code in a separate repository, before switching to it. I believe people complained about submodules back then, though I can't remember the reasons. I'm using submodules in another project, and though I'm not too comfortable with it, it seems to work.  I don't know a"	Clarify
2616	17433750	"No separate tools are needed, the files are ordinary files. Use of ""git-subtree"" will only be required if someone wants to pull a newer branch from a LevelDB repository, to bring Bitcoin's version of it up to date. Or if someone wants to split Bitcoin's changes out so they can submit a pull request "	Clarify
2616	17437788	Nifty! I think we should pull this soon after releasing 0.8.2.  	Clarify
2616	18521256	"Note that this pull request can be skipped if you accept number #2702 , which does everything this one does and also brings LevelDB up to 1.10.0, and fixes a deadlock scenario on Windows. "	Clarify
2616	18553300	Here's a decent comparison highlighting the benefits of git-subtree over submodules: http://blogs.atlassian.com/2013/05/alternatives-to-git-submodule-git-subtree/ 	Statement
2616	18554107	A one-sided comparison... 	Statement
2616	18554618	This blog post accurately summarizes my bad experiences with git submodules. Note that I have used both so I am speaking directly from experience:  http://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-use-git-submodules/ 	Clarify
2616	18555277	"Just to understand, are we then using a location for all this, which is then not inside bitcoin/bitcoin anymore? "	whQuestion
2616	18556329	"@Diapolo No. git-subtree does not store the location of the repo. The foreign repo is only accessed at the time you issue the appropriate git-subtree command. Other than when you are running a git-subtree command, the files are normal repository files like everything else. There is nothing magical o"	Clarify
2616	18556431	"@diapolo that'd be the case with submodule. With subtree, all the files are still in this repository, there is simply a link back to the original repository to make it easier to stay up to date (merging) or push changes back upstream. "	Clarify
2616	18556665	"@laanwj No that's not quite right. The URI / URL to the external repository is not stored anywhere in the bitcoin repository. Only the hashes of the commits are referenced, since that's all that matters for having an intact commit log. Anyone who wants to stay up to date / merge, or push changes bac"	Clarify
2616	18692787	"Ok, thanks for explaining.  ACK in any case "	Emphasis
2616	18693170	ACK 	Clarify
2616	18700680	ACK 	Clarify
2616	18701198	"If you guys make changes to the level DB sources in the future, let me know and I can either split the changes out and push them to my LevelDB repo in the bitcoin-fork branch, or I can show you how to do it yourself using either my repo or your own. "	Clarify
2616	18714778	"Uh. I merge this, and I get a repository with no leveldb in it and no ability to build Bitcoin.  "	nAnswer
2616	18714895	Note sure how you merged it. I'm in #bitcoin-dev to help you diagnose it. I will attempt to merge it myself and see if I run into problems.  I did the following:  git checkout master git pull # bring my local master branch up to date git merge leveldb-as-subtree # merge the pull request  The output 	Clarify
2615	17399443	![unbenannt-2](https://f.cloud.github.com/assets/178464/459533/785e68b6-b403-11e2-9304-d6fbc6635024.png) that's how it looks. 	Clarify
2615	17399554	It would also be possible to add a settings flag where the user can switch between growl and 10.8+ user notification center. 	Continuer
2615	17403300	"Don't add an option for trivial stuff such as this, if you think this looks better or is more useful (as you say, it's integrated and free), go for it. "	Clarify
2615	17403774	I vaguely recall us having issues with growl notifications in the past. Did you test this on OSX 10.5 ?  	Clarify
2615	17411331	@gavinandresen No. It's not yet tested on 10.5 to 10.7. I'll do that in the next days. I also fix the pull-tester-report issue. 	nAnswer
2615	17597378	@gavinandresen getting crazy while building on 10.6/32bit. :) After a proper qmake/make and fancy build (dmg) i try to run Bitcoin-Qt on 10.5 but get: ``` dyld: Library not loaded: @executable_path/../Frameworks/libssl.1.0.0.dylib   Referenced from: /Volumes/Bitcoin-Qt 1/Bitcoin-Qt.app/Contents/MacO	Clarify
2615	17742461	puh.. had to grab out a old mac mini to do 10.6/32bit builds. Testes on 10.5 (VM) and 10.6. After some changes it worked perfect. 	Clarify
2615	17743631	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b5c1406fd043bcb7d4587ad9494d1d8bca70c29c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2615	17757837	Is this also Qt5 compatible :)? 	ynQuestion
2615	17758004	@Diapolo yes. I initially wrote this patch for Qt5 compatibility because it can handle growl without qt platform functions. 	Clarify
2615	18121734	"ACK (on code changes, cannot test Mac changes) "	nAnswer
2615	18398360	fixed some minor code-style related things. @fanquake can you do a test on mac and give a final ACK? other final ACKs? 	Clarify
2615	18400352	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b4b017059514ed0157877984363ed94f5ab098e9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2615	18444767	@jonasschnelli I'll test it this weekend 	Emphasis
2614	17399309	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/367491df9d4a4e323a9d20fc118446ddccf08e11 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2614	17405344	"Idea is good, but I dislike the fact that this is a) Mac only and b) we have that stuff as duplicate in ``void BitcoinGUI::setClientModel(ClientModel *clientModel)``. Even on Windows we first have that normal tray icon and after loading it switches to testnet. I think it's worth to think about a bet"	Clarify
2614	17413516	"@diapolo The reason for this appears to be that on MacOSX it shows the dock icon already before the main window (and tray icon) is created, immediately at the start of the process. This has no analog in any other OS.  It is usually desirable to move the common code to a function, but in this case it"	Clarify
2614	17428933	"As @laanwj said: it's devs only stuff. But I also agree with @Diapolo: we should also take a look at win and Linux. I do not have a win toolchain,... so @Diapolo your probably the right guy for a win optimization of that issue. "	Clarify
2614	17431133	"At least on Windows I get a tray-icon directly when the splashscreen is doing it's work and have our mainnet icon, before it get's switched to the testnet one... I think that is rather ugly ;) or at least not perfect ^^. So I asked for a global solution :). "	Clarify
2613	17393582	launch at startup can easily be tested while having the mac settings app open (show at your users startup items while checking/unchecking the start-at-login setting). 	Clarify
2613	17393668	Proxy un-setting is still a issue. Will also analyze the proxy-unsetting-bug... 	Statement
2613	17395225	"I would say that SOCKS proxy unsetting works as expected.  If you unset them, the app warns you that you have to restart Bitcoin-Qt to make use of your new settings. When you restart the app, SOCKS proxys are off as expected. When you not restart the app, SOCKS proxys are still ""enabled"" in the sett"	Clarify
2613	17395334	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7c7e314e187a85286250f5b06db39b4906e01f2a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2613	17456077	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/11032aa284e76ae155e27c47f2cc7d01d0a33c33 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2613	17468547	"Looks good now, but I obviously can't test the code ;). Btw. pulltester failure is unrelated to the pull: ``test/util_tests.cpp(308): error in ""util_seed_insecure_rand"": check count>=10000/mod-err failed`` "	Clarify
2613	18123358	ACK after 0.8.2 release 	Clarify
2613	18398802	fixed last minor issue (unused line `ui->tabWindow->setVisible(false);`).  Final ACKs? 	Other
2613	18402991	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d5ae4cba418b1c47e7eb6caefdd9009fa6d3f28c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2613	18832851	merge? 	ynQuestion
2613	18835731	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/f679b2900a3a9f863f888cfb0b1a5e593628e37b for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2613	18840283	rebased with master 	Statement
2613	18851815	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/39fe9de6b2b255969971beca8fa25a33ad2e5750 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2611	17379593	This is expected behavior. The database doesn't really become corrupted but you created a permission issue (this can be solved with `chown -R <user> ~/.bitcoin` as root)  It's a security measure that bitcoind sets the permissions (umask) so that files are created to be readable and writable by only 	Clarify
2611	17389247	"The error message could be more enlightening, though... "	Statement
2611	17420181	"Indeed. Especially since it comes with the suggestion to rebuild the block chain, which is not what you would want to do in that case.  I am not sure, but I think rebuilding it doesn't even solve the issue, at least it didn't seem to do it for me. So users are stuck with a confusing error message an"	Clarify
2611	17421802	"The basic error is ""Error opening block database"" which is true. Rebuilding isn't a great suggestion here because it cannot delete/overwrite files owned by root, but how could it know. I suppose if the underlying database layer returns a more verbose error (such as ""permission denied"") it could be a"	Clarify
2611	17422651	"I agree. I would like to contribute, but I guess you can tell from my wording that I am still lacking a lot of basic understaning. Let's see. "	Statement
2610	17367167	Any reason not to remove the definitions of OP_disabledops entirely? 	ynQuestion
2610	17367728	"The only reason to keep them would be backward compatibility for the decoded version, I guess, and then even only for very weird scripts... "	Clarify
2610	17368860	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bce697d7faef0d8119ba80ae583cfcce460c7f81 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2610	17379685	"Good. The code is unused and there is no reason to keep it like this. *If* it is ever decided to bring the opcodes back, it can be done with better designed semantics w.r.t signed/unsigned handling. "	nAnswer
2610	17395086	"@luke-jr The code that actually disabled those OP's *is* executed, so I'd be inclined to leave that in place out of paranoia, at least for now.  FWIW, I manually reviewed the change. "	Clarify
2610	17397643	"RE: remove opcodes entirely:  I thought about removing the OP_ enum constants, but then we'd just have to use hard-coded 0x constants in a couple of places (the early if statement, and the opcode-to-string map so unit tests continued working) which would be uglier and more error-prone.  "	Clarify
2610	17417712	ACK 	Clarify
2609	17366545	"Closing in favor of #2610, which removes even more! "	Emphasis
2609	17366958	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dbabc451605f47ebd864f4bd17c4ddb65d9720db for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2608	17355045	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b357a71cfaf99dd2e7d203a12edfcc5df4a93386 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2608	17355863	"ACK, fixes the issue.   "	nAnswer
2608	17357480	"Looks good, but didn't test. "	nAnswer
2608	17379707	ACK  	Clarify
2607	17351231	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2f15e86a68aba56a8ea8e01e58b2fb7b71846b51 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2607	17357942	ACK 	Clarify
2606	17352723	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d605bc4cd13716fde9c34d79a01f4ee128f8814f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2606	17418381	"ACK, tested an artificial error in Bitcoin-Qt under valgrind. "	nAnswer
2606	17432878	"ACK  BTW I don't remember before that Shutdown() was called when AppInit2 fails, was this changed in init.cpp recently? "	Clarify
2606	17434251	@laanwj This commit added that Shutdown() call? 	Other
2606	17448203	"@sipa that's not what I meant. When I initially wrote bitcoin-qt I'm pretty sure that Shutdown() was not called (in the bitcoind case, in init.cpp) in case AppInit2() failed. At least I remember checking this. So it must have been added in the meantime.  "	Clarify
2605	17349416	"Just had a look at it. The problem might be the ""cachedPath"". Before loading the configfile, the original path will be cached and not rewritten by the value defined in the config file. So it will somehow need a ""clear path cache"" after loading the config.  I try to implement something...  But why th"	Clarify
2605	17364178	"Couldn't that be considered a wanted behaviour if you explicitly specify a -datadir when using testnet? Forget it, seems more reasonable to fix this ;). "	Clarify
2605	17366699	@Diapolo : no  	nAnswer
2605	17366784	"@Diapolo  In the case of it being ""wanted"" the correct behavior is at least harmless, in the case where it's not wanted the incorrect (current) behavior is dangerous.  So even admitting that sometimes people might want it, the less risky behavior is the one we want.  "	Clarify
2604	17307003	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/30b42fbbae8a3e18d05db0e150c8fc4fbbb21e66 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2604	17350447	"OP_SUBSTR is one of the disabled opcodes.  I think it is time to remove all code for the disabled opcodes. If we ever bring them back, we can resurrect the code from git history after writing extensive unit tests and looking for issues like this.  "	Clarify
2604	17352030	"@gavinandresen Agreed. It can't simply be brought back in any case, since they can't just be turned on without it being a hardfork relative to currently deployed nodes.  (e.g. they'd have to be brought back inside a script v2 that looked like a NOOP to existing nodes) "	Other
2604	17354991	@gavinandresen ACK 	Clarify
2604	17357563	"ACK on removing them. Indeed, all these opcodes are effectively identical to immediate failure anyway, and nothing except a hard fork can change that, and at that point, there is no reason why they should get a meaning identical to what is (was) implemented. "	Clarify
2604	17419746	Closing this as superceded by #2610  	System
2603	17296681	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2aceeb01a9b0b0c6bfa0d56211453e87bc33d6e4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2603	17356234	ACK.  Tested by removing the bestblock record from a -testnet wallet.  	Statement
2603	17418035	ACK 	Clarify
2603	18136356	Looks like if you delete your wallet after Bitcoin creates the new one it triggers a rescan of every block. 	Statement
2603	18177957	"Indeed, I'll look at this. It's not a regression though, before there was just a chance of missing stuff, as no accurate bestblock was written either.  The solution is doing an explicit write of the bestblock record at wallet unload/exit time. "	nAnswer
2603	18178278	If we knew the bestblock at the time we created the wallet (I don't think we've loaded the chain at that point) it would be simple to just have it set the best block to be the current best block when creating it.  	Clarify
2603	18183116	Another possible fix is doing the key birthday thing and using the min(birthday) to control the rescan.  	Clarify
2603	18183493	"@gmaxwell That'd be a nice improvement, but doesn't change the fact that we need to write updated bestblock records more frequently to avoid spurious rescans. "	Clarify
2602	17287070	ACK  	Clarify
2602	17288885	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e31aa7c9d7dd204b5658f20c19565eee308e35c1 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2602	17291159	ACK. 	Clarify
2601	17285030	This was cherry-picked from #1982. 	Statement
2601	17286583	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9f4976afe2568a6dd4a4026292e91697bedda4b6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2601	17287069	ACK. 	Clarify
2601	17296736	"If we ever revamp the RPC interface, I'd suggest a stronger separation between modules, like /rpc/v$VERSION/{wallet/$WALLETNAME}, blockchain, network, misc}, for example. "	Statement
2601	17307093	"@sipa In that case, this patch would break clients trying to use /rpc/v0/blah  Perhaps an alternative to / should be allowed within some criteria? "	Other
2601	17357555	ACK. Tested with the python and curl examples on our JSON-RPC wiki page.  	Statement
2600	17269590	Seems correct at first glance.  Would prefer init-to-zero over init-to-0xFF but that's nit picking. 	Statement
2600	17371917	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b6d07ce7ea07b1b79e96c25d7964f628fc3dbd4e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2600	17421372	"@jgarzik 0x00 is a valid serialized EC point (though not a valid ECDSA public key), so I prefer using a certainly-invalid data there, to trigger more errors in case of some out-of-bounds access. "	Clarify
2600	17421430	Fair enough.  ACK.  	Clarify
2600	17434445	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b7b49b89d1f5b510c6269bb3d516a5300a53087f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2600	17579744	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fd6e0a58f1b1b4b2ada60ba197ee541f5f0885d4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2600	18659581	Rebased. 	System
2600	18685550	"Wanted to get this one in sooner rather than later, so that other work may be based on top of it (it stirs a lot of code) "	Clarify
2599	17239103	"Tested with -maxreceivebuffer=3 (yes, that means 3 kilobytes). "	Accept
2599	17241017	"It seems like this creates a remotely trigger-able state, whereby someone would not be selected for read or write, yet the socket and CNode would remain, using system resources. "	Clarify
2599	17241260	@jgarzik How so? There is always progress: * Because there is a message in the send buffer left (so we send) * or there is no complete message in the receive buffer (so we receive) * or there is a complete message in the receive buffer (so we process)  	Clarify
2599	17298878	"It seems the current code actually has a minor bug, as it means not setting have_fds / hSocketMax if the lock on cs_vSend cannot be acquired.  I restructured the flow a bit, so now send and recv locks are both tried separately, and only as long as necessary.  I also added some comment explaining the"	Clarify
2599	17301575	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a9d9f0f5f72ab1f9ebc2f76bfe3b7921fa2826d7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2599	17357970	@jgarzik Mind taking another look at this? 	Other
2599	17364346	ACK. 	Clarify
2599	17419848	"ACK (code looks ok, and tested downloading the testnet block chain using a very small receive buffer) "	Clarify
2599	17421068	ACK  	Clarify
2598	17239586	ACK if pulltester is happy with this. 	Clarify
2598	17243727	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/22b0907a7ad099907cff6e0086c5b098a4fc27e2 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2598	17249193	"On the winsock version check, this isn't creating a gratuitous incompatibility with a ""future"" version is it? "	Emphasis
2598	17249432	"Winsock 2.2 was released in 1996, and doesn't seem to have changed much. I doubt the version will change much still. The API specifies that if you request a lower version than the latest one supported, you still get the one you requested. So it shouldn't matter much, but it should be safe. "	Clarify
2598	17273083	"ACK I don't see this check actually failing in the life of the universe, but better to have too many sanity checks than too few. "	nAnswer
2598	17273663	Just updated the commit-msg:  ``remove -par=0 from help-message as this is default`` replaced with ``remove -genr=0 from help-message as this is default`` 	nAnswer
2598	17274441	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6f7b79d07e4a3772716a1a0d44607ab0244923ed for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2598	17336129	"@sipa As pulltester is happy, can you merge it, so I can create another translations update :). "	Statement
2597	17421128	Should be fixed by #2599  	Other
2596	17232764	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/200250740be43e27e9517a2fd37e4b016999f863 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2596	17232800	That sounds pretty cool if it works (is not exploitable). 	Clarify
2596	17233831	"Looks like signature malleability will trip this up, e.g. anyone can trigger this on anyone's transactions.  "	Statement
2596	17235905	"I love the idea of this.  The transaction malleability problem needs to be solved (it shouldn't count as a double-spend if the second transaction contains all of the outputs of the first).  And this should be combined with a ""relay first seen double-spend"" patch, so you have a good chance of actuall"	Clarify
2596	17246056	"@gmaxwell - good catch, I'm working on a fix. "	nAnswer
2596	17252622	"Unless you get nodes to relay double spends they see, this isn't going to work...  Also, instead of hiding blocks until 200, the status should simply not be Confirmed until 200 more. See how generated coins work (120 blocks before Confirmed) for example. "	Clarify
2596	17255325	"Now it ignores double spends if everything is identical except the sigs.  I think we probably don't want to allow different inputs for same outputs, because independent transactions can have identical outputs. Take this transaction triangle... T1: in=A+B, out=X  // thank you T2: in=C+D, out=X  // mo"	Clarify
2596	17255661	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d5936b83c818863b39c00ee2c843df72d1591bd3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2596	17256710	"Nice!  I'm working on replace-by-fee code right now, so the changes you're making to the wallet code will be really useful as part of my patch.  You should make your code a bit more sophisticated so that you only care about double spends if the amount of Bitcoins being transferred to you changes, IE"	Clarify
2596	17258237	"@jevonx Well, I'd want to allow changes like increasing fees (which might require adding a change output that wasn't there before.  I'd prefer it to be something like  ""doesn't pay _me_ any less"", can you suggest a reason to be more restrictive than that?   We should still not show _both_ of a benig"	Clarify
2596	17326973	"The current double spend rules are pretty simple. Jevon's patch should be good as is (I mean conceptually). Then later changing what happens on double spend can update this code as well.  bitcoinj has code that does something similar, though unfortunately I only ever unit tested it (and it's not rea"	Clarify
2596	17458150	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f7fb98b3a6d5d6141d74164556ddc26f9089ba47 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2596	19966709	"jevonx, could you rebase and squash your commits? There are several now and a few are fixups for others. It'll be a bit easier to review then.    "	Statement
2596	21091054	"@jevonx Poke, please rebase and squash... "	Statement
2596	21317140	"Looking at this, the methods really don't belong on CTransaction either. Feels like they should be part of the wallet. "	Reject
2596	26688719	"Closing due to inactivity and need for rebase. Please open a new pull request (and link to this one's discussion, if relevant) if you have time to create a pull that will merge cleanly.  "	Statement
2595	17235245	ACK 	Clarify
2595	17236846	@TheBlueMatt is there a problem with pulltester here? 	ynQuestion
2595	17238850	@sipa Looks like this is the cause but perhaps just related to some pulltester work. ``Blocks which should/should not have been accepted but weren't/were: 9`` 	Clarify
2595	17239111	"ACK, I can confirm this fixes #2587. "	nAnswer
2595	17240804	ACK  	Clarify
2595	17247714	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/788064dd12ab7a7075ad24771f377587ad93b68d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2595	17247844	ACK 	Clarify
2594	17560563	"Hmm strange, this happens in GetNextWorkRequired, while scanning for the last 14 days of blocks (for retargetting the difficulty).   https://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L1145  You haven't enabled the internal miner by accident (-gen)?  "	Clarify
2594	17568951	Duplicate of #2547 	System
2594	17569030	Perhaps related to IBD then? 	whQuestion
2594	17774905	Closing as duplicate of #2547  	Statement
2594	17774913	Did you ever play with testnet before? 	ynQuestion
2592	17199069	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/44ace9892812b59c9a0070bea270a95536cf2193 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2592	17451024	"A very useful feature to have, which removes the need for external scripts such as pywallet in many cases.   I've played with this a bit and I wonder: would it make sense to add a way to output the dump over http/json as well, in addition to exporting to a file on the server?  This would make it pos"	Clarify
2592	18126058	"Is there any ETA on when this may be included? I'm looking for a way to export all of my public addresses, both created normally and those in the keypool, without having to parse wallet.dat manually. It would be fantastic if the dumpwallet command had an argument to suppress output of private keys. "	Clarify
2592	18257504	"Hopefully 0.9 will be replacing bdb with a new append-only format. It makes sense to use the same format for dumps/imports, IMO. "	Reject
2592	18257707	"@luke-jr I disagree. For a wallet format you mainly want strong consistency guarantees and easy updating. An export/import format is write-once anyway, and is preferably compatible with other clients and transparent. "	nAnswer
2592	18667347	ACK 	Clarify
2592	18685046	"ACK.  How does this intersect with #1863 ?  Should #1863 be merged first, or this?   "	Other
2592	18694908	"Rebased. I don't think this will conflict (much) with #1863, they will only interact via future functionality building on both (use GetKeyBirthTimes to fill in unknown birthdates, use known birthdates when dumping, ...). "	Clarify
2592	18806657	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/313318dc304e63827bf245307da5aeed065627c7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2592	19858648	"Rebased after merging #1863/#2781: dumpwallet now dumps creation times (from key metadata), and importwallet restores it. "	nAnswer
2592	19858836	"@soundasleep I don't think that functionality belongs in this command, as it exports to an already-defined format designed for key backups. I would have no problems with a separate command that just lists all wallet keys, though. "	nAnswer
2591	17238953	Duplicate of #2488 and so can be closed. 	Statement
2591	17239616	"Zak, this should be fixed in the next release. "	nAnswer
2591	17239927	@gmaxwell #2558 isn't merged yet 	Statement
2590	17164347	"MacOSX: after pulling i get a SIGABRT somewhere in boost::filesystem::detail::canonical. Question: when i create a ""ln -s"" the current stable client works perfect without this fix (testes MacOSX). Do you say, till now it was not possible to symlink ""ln -s"" the .bitcoin directory on linux?  "	Clarify
2590	17164425	My .bitcoin directory is symlinked on Linux. 	Statement
2590	17165294	It looks like the specific situation which the patches address is when the link points to an NTFS filesystem.  When the link points to an EXT3 filesystem it works without the patch.  @jonasschnelli which version of boost are you using? 	Clarify
2590	17165802	"@mcdee boost @1.53.0, Revision 1 (devel) "	System
2590	17177575	Can you squash your 2 commits into one please. 	Reject
2590	17192623	NACK on adding more code just to support a weird configuration like a symlink pointing to a NTFS filesystem. 	Statement
2590	17386520	"Well the configuration in this case is a dual-boot desktop for both Windows and Linux, attempting to share the blockchain between the two installs.  Not sure if it counts as ""weird"" but I'm happy to accept that this is a non-supported setup. "	Clarify
2590	17452038	"I don't think you have a weird configuration, and don't see any harm in supporting it. However, I don't think this is the right solution to your problem.  Looking at the root of the issue: why is `fs::create_directory` called when the symlink already exists?  "	Clarify
2590	17453249	"`fs::create_directory` is designed to return without error if the directory already exists.  So it works fine in the situations where a directory already exists, or a directory doesn't already exist.  However when there is a symlink in place of the directory which points to the NTFS partition it thr"	Clarify
2590	17733803	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a5d2f062a5757cc890bbd26b08d77f1581b8b7e7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2590	17772636	"@gavinandresen Why do you consider this a ""weird"" configuration? I suspect it's a fairly common one. Certainly a symlink to a NTFS partition should be supported, IMHO. Why shouldn't it be? "	whQuestion
2590	17774778	"In any case, this patch looks pretty safe to me. "	nAnswer
2590	17806147	"@sipa I also think there is no real maintain-cost here.  What I would like is a little comment, what this does in the code. "	Clarify
2590	17809836	just for the records: `fs::canonical(path);` does crash with SIGABRT on my mac. So we might wrap the new code with some #ifdefs for linux. 	Clarify
2590	18691933	"@jonasschnelli Ouch.  Can you confirm this happens on HEAD + this patch?  In general, ""meh""   Symlinks currently work. Some people might notice that their $datadir as applied differs from the one specified, e.g. /home/real/path/to/my/data rather than /my/data. "	Clarify
2590	18701248	ACK - checked out HEAD + this commit - having `boost @1.53.0 (devel)` (installed trough port) - running standard 10.8.3 run's smooth  But i didn't test against a symlink pointing to a NTFS drive (NTFS connection are very rare on mac). 	Clarify
2590	18724318	could this be the reason im getting error : error opening file for writing: c:\program files (x86)\bitcoin\bitcoin-qt.exe  in issues 2707 and 2712.   i found a lock i thought was holding the bitcoin folder and sub folders along with files but i do not know how to proceed from here and pondering if i	Clarify
2590	20801388	"I'm still supporting that change, as the configuration seems more common, than we thought. "	Clarify
2590	26688666	"Closing due to inactivity, and because we're using create_directories now this may no longer be an issue.  If it is still an issue, feel free to open a new pull request.  "	Clarify
2590	27633981	"Since I moved the Bitcoin folder from %appdata%\Roaming and junction-linked it, I receive a MS Visual C++ Runtime Library error stating:  ""This application has requested the Runtime to temrinate it in an unusual way. Please contact the application's support team for more information.""  Can other jun"	Clarify
2589	17136725	"Currently testing this, I did a full IBD from one of sipas nodes, now a -reindex is running and I'll do another -reindex with a -dbcache of 1024! Will report my findings here and on IRC. "	Emphasis
2589	17137209	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/551b367f19dce1951362a1f9911004e583732376 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2589	17137762	"First -reindex finished without errors, now a reindex with -dbcache=1024 is running. "	nAnswer
2589	17140234	"Second -reindex finished without errors :), ACK from my side. "	Clarify
2589	17166366	"Changes look good to me, ACK (I didn't test, though). "	nAnswer
2589	17177264	Any chance this can be pushed upstream into the main LevelDB code? Perhaps Google is interested ^^. 	Clarify
2589	17201399	"@Diapolo The win32 env code is not part of upstream LevelDB. If it matures a bit more, we may try to get it merged though. "	nAnswer
2588	17136259	"I'm not sure I like that - it makes code more readable to have the default listed explicitly, imho. "	Statement
2588	17136323	"I just tried to harmonize the code once more, perhaps we should stop defining the default for GetBoolArg() then, which means we HAVE to specify what we want as default. "	Clarify
2588	17136411	"I agree with Sipa. Explicit is better in this case, and it's not like `, false` adds a lot of ugly code. Personally I'd be  fine with removing the default argument and specifying the default value on all GetBoolArg. "	nAnswer
2588	17137559	@laanwj @sipa Updated and removed the default for fDefault paramter. 	Statement
2588	17138596	Updated to include missing changes to util_tests.cpp. 	Clarify
2588	17142336	"Reverted some changes, that led to wrong testnet detection because of init order (fTestNet). "	Statement
2588	17142824	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7898e1195e73b6e9cd984b7eaa4ce0bf084f0339 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2588	17237929	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/72b2dcae9e4a4b453824f80a7bd553fd928e30f7 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2588	17273931	@sipa @laanwj Anything more to be done here? 	ynQuestion
2588	17393457	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b4cda6805ef3e416d76520d76da2ee09bf546583 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2588	17431250	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/718589de809e59a0f6953a8f56ca46c9d7d4f8ab for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2588	17563534	"Removed from pull: - use fTestNet instead of GetBoolArg(""-testnet"", false), if possible   (hint: needed to take care of init order) "	Other
2588	17565316	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9ae785bf2513f971e0578609fcd01783622f06d4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2588	17567750	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a2771ba65f4b5902f5299140921bcaf10e3a96b2 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2588	17589609	"@sipa It's ugly to keep this updated, any meaning if this should be merged now or not? "	Clarify
2588	17591035	"There is no point in trying to rush core changes. They have to be carefully reviewed and as this does not close a bug, there is not really a hurry. "	nAnswer
2588	18123523	ACK after 0.8.2 release 	Clarify
2588	18434430	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/86737bac3db2a8e2d068cd71354296b7740e75db for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2588	18787068	"Rebased, fixes merge-conflict. "	Statement
2588	18807237	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3260b4c09006ea5c1b00c599a14e6c706ac760f8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2587	17135351	Looks like either a use-after-close or an error value that is not properly checked (and thus used a socket handle). Does it happen predictably? Another possibility is that somehow a non-socket value sneaks into one of the descriptor list of select. 	Clarify
2587	17135436	"On IRC @Diapolo mentioned that it was a socket send error, which would mean SocketSendData is called on a CNode without valid hSocket field. "	Clarify
2587	17230090	See #2595. 	System
2586	17130100	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d23fa49c52e9e0310f938379c5af91f0b4e5fe46 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2586	17134877	"Compiled in and still working :), so ACK. "	nAnswer
2585	17118276	I can only comment on what I read and you are right. IMHO we should move the WSAStartup call before ``if (!fNoListen) {`` in init.cpp to be sure it got called. A little weird that this didn't yet cause more problems though...  Edit: Also the wsadata attributes could be used for adding some debugging	Clarify
2585	17118468	A wild guess is that qt or some other library that we use initializes it. Or it somehow works in an uninitialized state but that'd be a scary idea... 	Clarify
2585	17122929	IMHO this should move to init.cpp 	Statement
2583	17116766	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fe9e88cb06cf47fc30b122e3c768aa0dc1813e48 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2583	17123008	"Wow, apparently introduced by a commit of mine in 0.3.23. I can't even remember I wrote that code or the comment with it...  ACK "	Clarify
2581	17114112	"Looks like the build issue has disappeared, but the .qm file is still missing. "	Clarify
2581	17115145	@diapolo any idea why this is the case? 	whQuestion
2581	17116705	"Cannot reproduce this issue; I see that bitcoin_se.ts is there, and that the .qm gets generated on build. I think your build environment was messed up in some way. A make clean followed by qmake and make should solve this. "	Clarify
2581	17117125	A clean followed by a qmake is most of the time a good idea :). 	Statement
2580	17108037	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/47cda6a1e52efc9dbc017608bb473c7891f7ee40 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2580	17112931	ACK 	Clarify
2580	17118924	"This is not necessary, as status.ToString() is already printed out in all places that call HandleError in the first place. Closing. "	Statement
2579	17104825	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b17a24ca7084f386330f4ceb7f5d314acddb87d2 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2579	19205698	"Technical comment:  is it better to iterate through one block, checking IsMine(), than all transactions in wallet?  Non-technical:  is there a compelling use case?  Ignored the solvable code objection, I'm tempted to close until a compelling need for this arises. "	Clarify
2579	19208875	"technical:  Iterating through the block would only give me txids of all transactions within a block. With IsMine() I could check if this transaction belongs to my addresses. Then, I would have to to query the wallet to give me all transaction details for every transaction which is mine in the block "	Clarify
2579	19911764	"That's not a compelling use case.  If you are having problems with lots of RPC queries, then send a batch of them together as a JSON-RPC 2.0 batch.  The problem with this method is that it causes over-reliance on a broken assumption that block == totally confirmed transactions.  This is not true.  Y"	Clarify
2577	17078118	We'd also want to change #2576  	Clarify
2577	17080862	ACK  	Clarify
2577	17081066	"Gavin, Can you make IsDust() return true for zero no matter what value MIN_RELAY_TX_FEE is or just make the ==0 test separate?  I don't want to open up zero value floods for people who decide that they want to lower mintx/mintxrelay and find that 0 is easier to type than 0.0000001.  "	Clarify
2577	17081941	It won't open up flooding if the rest of the network refuses to relay or mine those transactions. And I hate making code that I'm planning on replacing soon more complicated.  	Clarify
2577	17086536	"Rebased to make the qt an Error as suggested by @Diapolo, and tell the user they screwed up if they give bad -mintxfee/minrelaytxfee values.  Don't know why github is confused about the commits...  "	Clarify
2577	17087393	ACK on approach now. Will test. 	Clarify
2577	17098732	"You still need to change CWallet::CreateTransaction() so it doesn't create dust change txouts; see https://github.com/petertodd/bitcoin/commit/0df65da397f5b1927783f7a8dba2f69e1cfef3ff#L1L1192  EDIT: no, actually that's specific to the way my patch works, because in it dust could be defined as greate"	Clarify
2577	17099888	Will this prevent *spending* from transactions with dust outputs as well (since we now check that inputs are standard)? 	Other
2577	17100027	No.  See CTransaction::AreInputsStandard() 	Statement
2577	17107596	"@petertodd : I added belt-and-suspenders code, since we don't have good CreateTransaction unit tests. @sipa:  why not indeed.  I'll squash the two commits before final pull.  "	Clarify
2577	17108482	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9ac9a459c3fcab63e70d3780d730744cc55ba76f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2577	17136310	"What is the longer term plan for this? 0.007 dollars is not very small. It only takes one doubling of the price to mean you can no longer send a payment of 1 cent, which is pathetic, even physical cash can handle that. And in the past we've seen 10x increases in price happen extremely fast. 1 cent i"	Clarify
2577	17136706	"OK, to clarify, I agree that this change is an improvement over the old state in that it at least reduces the quantity of magic numbers and makes them derived from a single value. But it'd be nice to know the roadmap here. "	nAnswer
2577	17138223	"Ack  Yesterday the fingerprints of every key in the PGP strong set as well as every key on bitcoin-otc were timestamped permanently in the blockchain for a cost of only $150 or 0.3 cents per timestamp. (I also paid 1.5BTC to the person who did it for me for their time)  50,000 new entries in the UTX"	Clarify
2577	17138242	"This will make it impossible to use Bitcoin for colored coins, and some other applications which have information content beyond the mere transfer of value.  I am of the opinion that people should be able to do what they want in the transaction, as long as they pay for the resources consumed. "	Clarify
2577	17138244	"Road map:  Re-implement the memory pool, and keep statistics on transactions that enter and then leave by being included in a block. Protect CTransaction::nMinFee/nMinRelayFee with a mutex, and modify those by that memory pool code.  So IsDust() will be based on what is actually being accepted into "	Clarify
2577	17140050	"@gavinandresen Nice technical details. But how expensive do you expect a transaction to be? That is the real issue and that is the one that drives scalability. What are you going to tell the people doing tiny transactions like tipjars, just leave Bitcoin? "	Clarify
2577	17141937	"@johndillon : Bitcoin is not appropriate for transactions less than a penny or three.  If Moore's Law continues to hold, then one day it might be.  That is all out of scope for this pull request; if we do nothing, then we are stuck with MIN_RELAY_TX_FEE=0.0005 BTC.  "	Clarify
2577	17142014	@gavinandresen ACK general roadmap 	Clarify
2577	17148144	"@gavinandresen Good to hear. When people try to get the blocksize raised for the sake of penny transactions I'll be able to tell my fellow investors that people are trying to fundamentally damage Bitcoin's decentralization for the sake of penny bets.  Moore's law doesn't apply to bandwidth, and Moor"	Clarify
2577	17148811	"@johndillon Seriously, take politics off github. "	Other
2577	17157953	"Sounds good to me.  Minor detail: the formula doesn't take into account that pay-to-pubkey outputs can be spent with smaller inputs, but I suppose it doesn't matter at this point given the dominance of pay to address.  Could we bump the protocol version too? I know it's kind of a hack but it might m"	Clarify
2577	17158555	"Question. If I understand this correctly. Acceptable mintxfee/minrelayfee will now be determined by the miners (default is 0.0001 BTC)? However, currently, there would be no way to know what's the minimum fee to be reasonably included (http://bitcoin.speedstats.org/) in the next block? I see that's "	Clarify
2577	17164832	"It makes no sense to bump the protocol version, as there are no protocol changes here... "	nAnswer
2577	17175496	"@simondlr http://bitcoin.speedstats.org/ is quite wrong. The cost to send a transaction is related to it's size, not it's value. (there are some exceptions to deter abuse of free or spam transactions) Transaction fees are a process where you bid for a limited amount of blockchain space, so we can't "	Clarify
2577	17177555	"@petertodd ah yes. Of course. Thanks! Isn't the plan with the memory pool to dynamically check what tx fee (per kb) is needed to be included in the block? Thus you will know by the hour (or per block)? Or am I getting it wrong? I tried finding the discussion on the memory pool, but couldn't find it."	Clarify
2577	17179612	"The protocol *is* changing because the IsStandard rules are changing. The problem is version skew. We don't know when this new code will be released and we don't know how fast people will upgrade. So my problem is, let's say we release new Android apps tomorrow that think the fee is now 0.0001/kb. P"	Clarify
2577	17180671	I think we'd all prefer that nodes just follow the new rules regardless of what the majority are doing...  That said does bitcoinj and by extension the Android wallets have any mechanism to tell the user when the majority of bitcoin nodes they are connected to are of a higher protocol version number	Clarify
2577	17182087	@petertodd Nothing like that yet in Bitcoin Wallet. It updates when a new version is uploaded to the market. So this 50% switch thing could be implemented manually by uploading the right version at the right time. 	Clarify
2577	17184962	Among other things it makes it easy for implementations to find nodes that *don't* follow the new rules to try to get their non-compliant transactions propagated. Just follow the new rules and be done with it. 	Clarify
2577	17213502	"No response to MeniRosenfeld's comment about colored coins? IsDust -> NonStandard ban-hammer seems unnecessarily opinionated when you can just directly charge for the resources being consumed.  If cost is a factor of bytes and UTxO, it seems reasonable that fee should be based on bytes and the UTxO "	Other
2577	17214638	"You know, if the colored coin people can't figure out how to make colored coin systems work with this patch, screw them. I've told them how to do it right multiple times and they don't listen, which is plenty enough evidence that they're amateurs who don't understand what they're doing. So why let t"	Clarify
2577	17216366	"Huh? If an implementation wants to try propagating a non-standard transaction it can just blast it out to half its peers and see if it hears it back on the other half. Or it can time how long it takes for those transactions to appear in the chain, or submit directly to a pool that accepts them, or m"	Clarify
2577	17240779	"Tell you what, lets go a little farther with your idea and add a new service bit NODE_RELAYCOST. Nodes with that service bit set will also advertise the minimum txout value they will propagate, as well as the minimum fee/KB or priority/KB required for them to relay a transaction. We can then hardcod"	Clarify
2577	17244334	"@petertodd , with all due respect, could you please link us to your proposal re. Colored Coins?  I have been participating in the discussion on the [Google Group](https://groups.google.com/forum/?fromgroups=#!forum/bitcoinx), and I pointed out the problem re. Microtransactions about a week ago.  I a"	Clarify
2577	17247171	"Please don't treat micro-transactions as non-standard. A small amount of bitcoins can represent large amount of value in higher protocol layers. Colored coins is just one example.  Could we perhaps just raise the suggested fee on transactions which contain ""dust""? "	Clarify
2577	17248557	"@BlueMeanie Sure: https://github.com/petertodd/trustbits/blob/master/fidelitybond.md#contracts It's from my fidelity bonds stuff, but the mechanism is just a way of doing colored coins really. The advantage is that because value isn't a fixed ratio of shared to satoshi's you can divide however much "	Clarify
2577	17248741	"I think the motivational structure about lying about relay cost is different than actually not relaying. The issue is one of market segmentation, e.g. by actually not relaying you block all stuff, vs lying about costs you get all that are willing to pay to pay it.  Observation is better than announc"	Clarify
2577	17252019	"@BlueMeanie: Impact on colored coins does not really belong here, [this has been brought up a week ago on the mailing list you mention](https://groups.google.com/d/msg/bitcoinx/-b6XC4nUdYo/khkO7YHXBxwJ), without any satisfactory answer. Peter's way seem plausible on paper, but it's yet to be seen ab"	Clarify
2577	17252734	"@petertodd , thank you.  There is some follow up on your ideas and their relevance for Colored Coins [here](https://groups.google.com/forum/?fromgroups=#!topic/bitcoinx/eBvfvlZZcig) "	Other
2577	17252857	"@gmaxwell That's a good point, although I'm also thinking farther into the future where transaction replacement may mean that nodes want to limit the traffic from replacements that they're getting.  @BlueMeanie Um, no, that's not what I'm suggesting, just a part of it. Read that paper please... "	Clarify
2577	17257981	"I don't think this change will create significant problems for ""colored coins"".  I mean, it's strange that you're doing this, but I guess we can live with it.  @petertodd Your mechanism cannot handle more than one color in one transaction without mandatory tagging, which adds to blockchain bloat. I "	Clarify
2577	17259454	@killerstorm I outlined a mechanism where the tagging is integrated into the pubkey; no extra bytes at all in the blockchain. If that's too complex you can use a OP_RETURN <20 bytes> txout to mark txouts with data that can be immediately pruned. 	Clarify
2577	17268179	"@petertodd I do agree that the concept they are currently running with @BitcoinX/Color Coins ignores the economics of transaction processing.  It's exploiting the fact that transactions of any size are processed without discretion.  The points made in this thread show that this model is not viable, "	Reject
2577	17271042	"@BlueMeanie LOL. You failed to understand that Peter's contract value accounting also uses satoshi value of unspent transaction outputs. It is just that it uses a different encoding scheme, a scheme which provides better divisibility.  I don't think there is a problem with ""the economics of transact"	Clarify
2577	17278414	"@killerstorm seems the discussion on that list involves those who are invested in particular ideas about colored coins.  I reviewed @petertodd's idea, personally I think that a 'colored coin' solution lies in alt-chains and using the main BTC block chain is not appropriate for this application.  If "	Clarify
2577	17398590	Rebased and picked a couple of nits.  Can I get some final ACKs ? 	ynQuestion
2577	17399785	ACK  	Clarify
2577	17402747	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/000dc55181f77cd96076c76b2cc13f8bcbe4146e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2577	17420838	"Code ACK; I haven't thought enough about the policy itself to comment, but don't let that stop you. "	Clarify
2577	17421680	"ACK. Even if the exact policy turns out to have been ill-advised in retrospect the threshold is so small that its unlikely to cause substantial harm, and the increase in cost for flooding is a nice result. "	Clarify
2577	17456868	"Guys, you are breaking the bible.  ""Completely non-reversible transactions are not really possible, since financial institutions cannot avoid mediating disputes. The cost of mediation increases transaction costs, **limiting the minimum practical transaction size and cutting off the possibility for s"	Clarify
2577	17458980	"@gmaxwell I agree that spam is an issue, but it should be changed in different way. Breaking fundamentals is a bad way IMHO, because its a precedent for further breaking. Does youtube banning out small and not popular videos? No. Youtube just extending storage. I think Bitcoin needs scalable distrib"	Clarify
2577	17459216	"@pentarh Perhaps you misunderstand what this does. This is not a protocol-rule change. Miners can still include the same transactions they can now, though this pull makes 'picocent' payments not get included by default unless they change a threshold setting (useful if the value of Bitcoin changes gr"	Clarify
2577	17459403	It is not breaking fundamentals -- bitcoin has never ever been a micro-transaction or micro-payment system. 	Clarify
2577	17459769	"> It is not breaking fundamentals -- bitcoin has never ever been a micro-transaction or micro-payment system.  Good, but we need Gavin to explain that publicly, explain what kind of fees he is expecting in the future and why, and explain what trade-offs he is willing to make between decentralization"	Clarify
2577	17461469	"I'm currently starting a company that I hoped would bring innovation and diversity to the landscape of the Bitcoin economy, and this comes as a *huge* shock to me.  Neither this, nor the MIN_RELAY_TX_FEE=0.0005 BTC are required, Gavin. It's ridiculous that you claim they are. If people agree the dus"	Clarify
2577	17461969	"ACK The code looks good, this is a reasonable approach to preventing dust spam and raising the bar for people crapping up the chain with arbitrary data.  This does not materially affect ""deterministic satoshi tracking"" colored coin implementations, which is IMO the only sane design for a number of r"	Clarify
2577	17462033	"@awishformore uh. Perhaps you too are confused. This is not a protocol rule, it's a default behavior which is configuration adjustable. Miners can still happily mine transactions not meeting this rule if they choose to.  Weird to here you talk about other cryptocurrencies, as many (most? all?) have "	Clarify
2577	17462077	"@gmaxwell then it should be *off* by default, not on. Yes, you don't change the protocol. What you do is even worse - you pretty much disable something that is considered legal and valid by the protocol.  If you declined to merge the Litecoin approach, I really don't get how you can even consider im"	Clarify
2577	17462109	"@awishformore We do need better communication of this stuff, and that includes doing things like taking ""Low or zero processing fees"" off of bitcoin.org and not talking about microtransactions.  Just the other day I was on the phone with an investor working on some payment system thing who had never"	Clarify
2577	17463037	Why are you leaving it undocumented? Everything should be documented. People should know what is going on and change what behavior they don't find acceptable.  	whQuestion
2577	17463246	"@pentarh Fuck the ""bible"". Even Satoshi, peace be upon Him, can be wrong, mistaken or can fail to anticipate certain aspects of things. In any event, He is not here to guide us, so we must to the job ourselves, with all of our own faculties.  @gavinandresen My trust level toward you is extremely hig"	Clarify
2577	17463281	This is sad. Goodbye Satoshi. Agreed @pentarh 	Emphasis
2577	17463586	"The Satoshi-is-God voices here, besides being fundamentally flawed in reasoning, seem to be confused in some other way(s) as well. Satoshi himself approved the ""valid but non-standard"" exclusionary function originally, for exactly problems like this. Since 0.3.18, bitcoind has refused to relay (or m"	Clarify
2577	17463796	"The kind of *transaction discrimination* reflected in this recent merge is inevitable.  It's important to note however, that many ideas for the future of bitcoin rely on a flexible policy regarding what makes it's way into the block chain.  I agree with @gavinandresen - these new measures are requir"	Clarify
2577	17464042	"@gavinandresen   > So IsDust() will be based on what is actually being accepted into blocks, and will adjust appropriately.  How is this going to work given that miners only have an incentive to charge per KB? (using UTXO space after all is treated no differently than using blockchain space) "	Other
2577	17464257	"@gmaxwell receives the prize for the most intelligent comment:   ""Perhaps you misunderstand what this does. This is not a protocol-rule change. Miners can still include the same transactions they can now, though this pull makes 'picocent' payments not get included by default unless they change a thr"	Clarify
2577	17464302	"> To Bitcoin miners thinking of boycotting the new version, a better way to protest would be to change your default settings to process these microtransactions. If most of the miners make these changes, then this controversy truly becomes irrelevant.  It's interesting to watch the developers continu"	Clarify
2577	17465224	"also: I do agree with @pentarh , I think we need some innovation in the storage technology.  All transactions should be accessible on some level of resolution, but really these problems are outside the scope of Bitcoin and @gavinandresen is doing the right thing.  Just because some parties want Colo"	Clarify
2577	17465313	"@gavinandresen Couldn't you finally increase the divisibility of Bitcoin down to a larger amount of decimal places, making a ""Satoshi"" divisible would help make that unit useful and no longer dust.  If a Bitcoin could be split into a trillion places, and define dust as being several digits from the "	Clarify
2577	17465552	"@gmaxwell I am of the position that I solidly think the change is a good thing, but I also feel that it is simply not communicated to the wider community at all. That my little post on the forums lead to 7000 views in just a few hours shows how little people know and understand about these changes e"	Clarify
2577	17465748	"@johndillon , it is entirely true that Bitcoin should not be seen as no-transaction-fee technology, although it appears that way because the incentive is(temporarily) coming through an inflation vehicle(the coins created with each block in the chain).  Obviously problems arise when, in the case of c"	Clarify
2577	17466019	@gmaxwell Points for a proper press release about this:  Main thing driving this: make data spam more expensive in a way that doesn't make regular transactions more expensive. The minimum output does this because data spam doesn't spend outputs.  Options for affected businesses: combine payments tog	Clarify
2577	17468052	"1) I note the distinct lack of discussion surrounding https://bitcointalk.org/index.php?topic=130450.0 and its pull request.  2) This issue certainly deserves better communication, but think the trolling (reddit/bitcointalk) by @johndillon was premature and exaggerated, because there is still plenty"	Clarify
2577	17468564	"1) @jgarzik That discussion was on the development forum, around the holidays. As I said above, I've run into people putting serious effort into starting payment-dependent Bitcoin businesses who don't even know that there is a blocksize limit.  3)  http://blockchain.info/charts/cost-per-transaction "	Clarify
2577	17468943	"A big blaring ""WARNING"" on multiple fora is definitely trolling, particularly when it lacks any companion effort to figure out a better method of communication. "	nAnswer
2577	17469259	"@petertodd The *goal* is a free market.  It is a long road to get there, and we don't ultimately get there until the block subsidy is tiny, years from now.  This change is one small constrained step, not the end goal itself.  "	nAnswer
2577	17469641	"That's not true either. Provided there is genuine economic demand for 100% of the blockspace available the mining-side code implements a perfectly reasonable free market as-is, and that demand could show up tomorrow for all we know. Client-side needs fixing, but that's another matter. The block subs"	Clarify
2577	17470186	"Client-side needs fixing, but that's another matter -- That is precisely the matter at hand.  The individual miner market is already done, but the client side necessarily proceeds in fits and starts. "	Clarify
2577	17470202	"@cjdelisle Can you please explain how ""deterministic satoshi tracking"" colored coin implementations are not affected? I think I know what you're talking about, but I don't see how they are not affected.  If possible, please reply in ""colored bitcoin tech discussion"" on forum.  (I know that coloring "	Clarify
2577	17470372	"My business would not rely on micro-transactions at all, and the fact that no one is getting why I'm *still* going to move away from Bitcoin if this goes through is what should worry everyone  @gavinandresen @gmaxwell All you are discussing and discussing is whether this change is sound technically."	Clarify
2577	17470518	"And I would beg everyone here to stop acting like the average user is somewhat capable of still using micro-transactions. Bitcoin is getting closer and closer to mass adoption. Unless you are a developer yourself, you won't be able to use micro-transactions anymore, which *de facto* eliminates them "	Clarify
2577	17470703	"This thread is (once again) devolving into uselessness.  If you don't like the decisions Gavin makes about this codebase, please fork it. Arguments that aren't rooted in technology like ""this isn't what the majority of users want"" aren't likely to have much impact.  This is the first change of sever"	Clarify
2577	17471010	"This change should *already* be a fork, not the reference implementation. "	Statement
2577	17471229	"@jgarzik Client side fee stuff is just a few months of work. It's really not a big deal technically, the issue is the politics of accepting that fees and limits are a necessity. What will probably be very interesting is watching all the deliberate attacks that will come from people like @johndillon "	Clarify
2577	17482645	"@MeniRosenfeld, colored coins is a side project, it's not something that Bitcoin should necessarily support. Still, trading colored coins is still possible, it just possibly gets a bit more expensive.  As much as my opinion counts for anything here, I think we should consider Bitcoin and Bitcoin dus"	Clarify
2577	17495465	@killerstorm As a proud non-member of the forum (because of threads like this) I won't be able to post about it. I did just subscribe to the bitcoinX google group (the subscribe email bitcoinx+subscribe@googlegroups.com should be prominently displayed) and I will write my understanding there. 	Clarify
2577	17499133	:+1: looks good :) 	Statement
2577	17570133	"@SergioDemianLerner Huh? You can spend transaction inputs regardless of how small they are with this patch, and we have every reason to make that possible, even easier, to try to reduce the UTXO set size.  The only time what you are suggesting might apply is if we were desperate enough to reduce the"	Clarify
2577	17570631	My post was not strictly related to the patch and does not belong here probably. 	nAnswer
2577	17650499	As a casino operator that creates dust I have mixed feelings about this.  I have to comment the litecoins anti dust patch can EASILY be worked around as we have done for [our own casino](http://satoshiroulette.com/?mode=LTC) and we would have applied the same hack to the bitcoin casino were you to u	Clarify
2577	17654676	"@gmaxwell we wont be creating them for much longer ;)  Previously we used to reforge our dust into a whole piece of bitcoin again by using raw transaction api and sending to a new address in the same wallet with no fees.  Thanks for the early warning, we shall get to work updating our game configs s"	Clarify
2577	17731259	"NACK, you don't solve the spam problem by including more ""magic"" numbers "	Reject
2577	17736410	@paraipan There are no more magic numbers. 	Reject
2577	17737211	"Well that is strange, I though you guys called ""magic"" all arbitrary values in bitcoin source code. "	Statement
2577	17737518	"@paraipan We already have a ""magic"" number for minimum allowed txout value, and that magic number was 1 satoshi. This patch changes that magic number to 5430 satoshis; no new magic numbers are being added.  edit: as sipa and gmaxwell point out, this isn't strictly correct. I should have said ""This p"	Clarify
2577	17738411	"If you read the patch, you'll see that the 5420 number is not actually hard coded (""magic""), it aims to prevent payments where spending that payment requires a fee of more than 1/3 of the payment itself. Since ""typical fees"" are based on the number of bytes of transactions which bid for the 1MB per "	Clarify
2577	17738507	"@petertodd @cjdelisle   No, not even that. The patch replaces a hardcoded base fee value with a _configurable_ one, and makes the hardcoded dust value just be a fraction of the base fee value. So nothing is hardcoded except a fraction off a configured value... "	nAnswer
2577	17738577	"I On 10 May 2013 20:44, ""Peter Todd"" <notifications@github.com> wrote: > > @paraipan We already have a ""magic"" number for minimum allowed txout value, and that magic number was 1 satoshi. This patch changes that magic number to 5240 satoshis; no new magic numbers are being added.  That's not even tr"	Clarify
2577	17738580	Thank for clearing it out guys. 	Statement
2577	17738953	"@gmaxwell @sipa Sorry, I should have taken the time to write a more detailed response than my quick approximation. "	Clarify
2577	17744646	"> @caleb: It aims to prevent payments where spending that payment requires a fee of more than 1/3 of the payment itself.  > @sipa: It changes the minimum output side to whatever is at least 3 times the fee necessary according to the active policy to spend it.  Yes, and yes. Well sort of...     IsDus"	Clarify
2577	17748821	"@jspilman By ""cost to spend"" we mean the marginal bytes required to spend a transaction input * the fee/kb when added to an existing transaction, like one combining a whole bunch of dust outputs together, not the cost to simply create a transaction re-spending the dust output with a single input and"	Clarify
2577	18113905	"Let me lay it down for @gavinandresen , @gmaxwell , @petertodd , and all you others who thought you could hammer this out on github over the holidays, close it, and then not get any objections, you know, like this:  https://bitcointalk.org/index.php?topic=196138.0;all  Some bazillion (that's not a r"	Clarify
2577	18114301	"Me and my social network will not upgrade the client, because I oppose this arbitrary change. You're losing it Gavin!  Let users control the limits from the GUI and the network will find it's equilibrium, you're not the one who has to make these decisions. "	Clarify
2577	18118612	"I am somewhat surprised by the outcry against this, and I wonder whether it is because of the way this decision was made, or because you believe Bitcoin should support output coins that cost ~ as much to spend as they are worth.  In any case, please realize that this is just a policy change. There a"	Clarify
2577	18120113	"@sipa, in Bitcoin policy change=network rules change if I'm not mistaken. I would support said ""mechanism to detect what fees get confirmed"" though. "	nAnswer
2577	18120173	@paraipan  You are mistaken.  I thought you understood it after this discussion with you: https://bitcointalk.org/index.php?topic=197414.msg2054475#msg2054475 	Emphasis
2577	18120432	@gmaxwell I understood your position then and stopped pushing the patch based on your analysis. I didn't agree with your point though as I see personal preference as more important than maintaining a predictable fee level in the protocol. 	Clarify
2577	18122002	@sipa you just don't get it.  Re-read my original comment above.  Read it again if necessary for effect.  This is reminiscent of the efforts I had (with many others) to get the International Telecommunication Union to come out into the open. (They didn't.) It was a effort of over a year resulting ev	Clarify
2577	18123275	"@idiotsabound The public website containing public source code changes cannot be considered a back channel.  It is already very much out in the open.  All discussions occur in public, and are publicly logged and google-able.  I agree that a continual effort is needed to educate users like yourself o"	Clarify
2577	18125249	"@jgarzik First, thank you for your hard work on Bitcoin protocol. Secondly, you write ""All discussions occur in public"" then I ask you where was this change discussed? To me and most other people supporting Bitcoin, the problem with this change is not only about the code itself but mostly about unil"	Clarify
2577	18126491	This change moves towards making fees more market driven.  They were hardcoded constants before.  Now users may much more easily select their desired fee level for relaying and mining with a simple configuration file change.  	Clarify
2577	18149435	"What a mess! Let me first state that my opinion is my own, I am not a bitcoin developer and I have essentially no influence within the community, my opinion is worth just as much as yours; nothing. Furthermore, I have no interest whatsoever in getting involved in the dev community until people start"	Clarify
2577	18150061	"I don't see the developers arguing over anything.  The people with a bone to pick appear to be largely uninformed, uninvested end users who are upset that their particular usage scenario might be at risk.  As many have already suggested, if you don't like the changes, FORK and do what you will.  If "	Clarify
2577	25945095	"@idiotsabound: this pull request is an inappropriate place to discuss the NSA/etc. I'm deleting your comment, please stay on-topic, there are plenty of places to speculate about bitcoin in general (e.g. bitcointalk forums, reddit /r/bitcoin, bitcoin.stackexchange.com, #bitcoin channel in IRC). "	Clarify
2577	26214362	"Deleted off-topic comment, and blocked user (though that may just be a jgarzik-block and not a project-wide block). "	nAnswer
2576	17082188	"Good idea. I vote for just removing it for now.  The longer-term plan is to teach the code how to figure out a reasonable fee, based on behavior of transactions going in/out of the memory pool.   "	Clarify
2576	17112950	"Indeed, I saw @TheBlueMatt s proposal on figuring out the fee from the mempool, and thought it was pretty neat.  But yeah, going to remove the recommendation for now. It's much too large and we can't manually change it every release based on the current trading price.  "	Clarify
2574	27141342	"This is essentially out of the scope of this issue tracker. New P2P commands/responses should be discussed on the mailing list (http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/), and eventually submitted as a BIP proposal.  "	nAnswer
2572	17060843	ACK 	Clarify
2571	17056512	"It shifts `nIndex` one bit to the right, so the `nIndex&1` in the next iteration will test the next bit. This loop traverses bit field nIndex bit by bit, starting from the lsb.  "	Clarify
2571	17057090	"oh wow, I feel stupid. I completely overlooked the BOOST_FOREACH block header "	Clarify
2570	17049313	I think that's always been an artifact.  I bet reorg behaves the same way.   	Clarify
2570	17067694	"It has always been the case, until 0.8 (see 231b39995). If it still happens, there is a bug. "	Clarify
2570	17070316	"@gavinandresen Why do you assume it's caused by the wallet code? (not saying you're wrong, just wondering whether some information is missing here) "	Clarify
2570	17082812	"I think it is the wallet code because it happens immediately after a fresh, clean start, so I assume an unconfirmed transaction in the wallet is getting added to the memory pool (it isn't a weird edge case during re-orgs or something).  Let me know if you have debugging bandwidth, I'll send you the "	Clarify
2570	19861893	"I'm running Bitcoin-Qt version v0.8.2.2-g09e437b-beta  Not sure if this has been fixed in the latest release, but this happened to me.  It was just running in the background, scrolling debug messages in a window, when it crashed, with this error:  ``` sending: inv (37 bytes) received: inv (37 bytes)"	Clarify
2570	19862942	Should be fixed in head by #2769. 	Clarify
2569	17083713	Is there a good way to test this? It is simple enough that I'd be satisified with a link to (say) a MSDN page that says this is what you do to select() up to 1024 file descriptors on windows....  	Reject
2569	17084866	"agreed, @gavinandresen  "	System
2569	17088967	See http://support.microsoft.com/kb/111855 - Maximum Number of Sockets an Application Can Use 	Other
2569	17090337	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/33912d1f237537f51f29ca06e3e396f04aeb4671 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2569	17135432	ACK 	Clarify
2569	17141904	"For Windows ``An application should make no assumptions about the availability of a certain number of sockets.``, so I hope we don't rely on the number set here in any way? "	nAnswer
2569	17166472	"ACK as ""better than the code we have now.""  "	Clarify
2569	17167162	"@Diapolo This is really just about how many sockets we watch simultaneously. If not enough sockets are available for what the user requests, opening them will just fail. "	Reject
2569	17177451	ACK 	Clarify
2568	17046528	We should probably be clamping max connections at FD_SETSIZE-MIN_CORE_FILEDESCRIPTORS otherwise you get fun stuff like select becoming crashy. 	Clarify
2568	17046681	ACK  	Clarify
2568	17071033	ACK 	Clarify
2568	17071510	@gavinandresen Have you tested whether this compiles on OSX? 	whQuestion
2568	17083117	"@sipa : yes, compiles fine, unit tests run, bitcoind -testnet runs on OSX "	Other
2568	17083541	"@gavinandresen  can you try running   (for i in {1..220000} ; do export bh=`./bitcoind getblockhash $i` ; for tx in `./bitcoind getblock $bh | grep '     ""' | cut -d'""' -f2` ; do  ./bitcoind getrawtransaction $tx > /dev/null  ; done   ; done)  On a OSX mainnet node with this patch and txindex=1 when"	Clarify
2568	17125478	"Refactored the code into a RaiseFileDescriptorLimit in util, and added a windows implementation. Also added Gregory's suggestion to clamp maxconnections, according to the size of FD_SETSIZE.  Minimal test plan: * Start the client with increasingly higher -maxconnections=X values * Look for the line "	Clarify
2568	17145999	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ba29a5590bc4479d74454f0b9fdaf007d9d80221 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2568	17169878	ACK.  @gmaxwell : successfully ran (a modified version of) your stress test on OSX with this patch and -txindex=1.  	Statement
2568	17190035	ACK. 	Clarify
2567	17181053	Can you give any (reproducible) cases in which the GUI freezes? 	ynQuestion
2567	17194947	"Sometimes, while syncing, the ""blocks left"" estimate seems to stick at one number, then jumps ahead. "	Clarify
2567	17195261	The client relies on peer information to guess the number of blocks remaining. It's possible that it jumps erratically when better information is suddenly available. 	nAnswer
2567	17561979	"Indeed; a refresh option wouldn't help you here, the GUI can't display information that it doesn't have. It ""refreshes"" (well, polls for changes in block # and such) every 250 milliseconds.  Also the ""blocks left"" estimate is gone in the next version, so I'm closing this issue.  "	Clarify
2566	17094265	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/360cfe142c552ac5c4d904a1e970390188151ca8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2566	17379870	ACK 	Clarify
2566	17418553	ACK  	Clarify
2565	28299802	Closing this as apparently #2579 (an implementation) was not accepted because core devs didn't see the use case. 	Clarify
2564	17095617	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/46fd626b21a1273a37c78749aebce1d3e3de5aee for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2562	17117095	"This bug was probably caused by the fact that I was not logged in as an administrator; therefore, when the program tried to write to a system directory, it failed.  Fixed by changing to another directory that I had control over. "	Clarify
2561	20870251	#2702 includes this one. 	System
2559	16940452	ACK 	Clarify
2559	17056262	ACK 	Clarify
2559	17096899	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ab20cd76f20893efb155ed4314312849afc60a7f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2558	17098257	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ccda03b57022369c4352d0f5a816cff9ace833e6 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2558	17113132	ACK 	Clarify
2558	17142872	Looks good and should make it for 0.8.2 IMHO. 	Statement
2558	17418486	"ACK code  I'd say it needs testing on Windows, to make sure the looks-right-on-Unix code works there.  Or maybe I'm just being paranoid.  "	Clarify
2558	17418778	ACK. Compiles and works as advertised on OSX.  	Continuer
2557	16890393	"ACK. Reduces FD usage in my torture test from 500 to 112.  However,  112 + 125 is awful close to 256, so I'm still concerned about OSX. "	nAnswer
2557	17015367	"This seems to cause massive issues for me on Win7 x64, I often get the message that I need to reindex because of a broken database or sometimes only ``Database I/O error``. I now removed that patch and start over to see if that is helping me. "	Clarify
2557	17043425	"@Diapolo That would be bad and unexpected news. I don't see how that could cause/worsen that, but we never know of course. Can you confirm it's related to this? "	Statement
2557	17060345	"I sent @gmaxwell a copy of my coinstate folder, with which I had the problem. Currently I'm 73 weeks behind with a client that doesn't have this patch active. After it synced without error I'll restart with this patch applied and a bootstrap (which contains 50% of the current blocks on the net) + re"	Clarify
2557	17079981	No crashes without the patch... testing with it again now. 	Reject
2557	17083613	"Again, ``Database I/O error`` with the patch applied... ``2013-04-26 16:02:19 LevelDB read failure: IO error: C:\Users\Diapolo\AppData\Roaming\Bitcoin\chainstate\000223.sst: Could not create random access file.`` "	nAnswer
2557	17089040	"Perhaps we should just remove that patch for Windows, as per http://msdn.microsoft.com/en-us/library/6e3b887c.aspx  ""Up to 2,048 files can be open simultaneously at the lowio level (that is, opened and accessed by means of the _open, _read, _write, and so forth family of I/O functions). Up to 512 fi"	Clarify
2557	17090146	"@Diapolo I'd rather find the reason for this crash, as this patch should not have any difference at all during IBD. "	Clarify
2557	17107487	@Diapolo Can you retry with #2580 compiled in? 	ynQuestion
2557	17113710	"@sipa Sure, I'll take a look later... "	nAnswer
2557	17114093	@sipa   Seems the error was the same as I posted in the chat yesterday: 2013-04-27 10:15:34 LevelDB read failure: IO error: C:\Users\Diapolo\AppData\Roaming\Bitcoin\chainstate\000446.sst: Could not create random access file. 2013-04-27 10:15:34 LevelDB error encountered: IO error: C:\Users\Diapolo\A	Clarify
2557	17120541	@Diapolo Feel like retrying with the commits in https://github.com/sipa/bitcoin/commits/win32ldberr ? 	whQuestion
2553	16848871	"@BitcoinPullTester Error seems unrelated to my changes!  <pre> Exception in thread ""main"" java.lang.reflect.InvocationTargetException     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.ref"	Other
2553	16858649	"Oops, false-positive, sorry, retesting... also, tagging @BitcoinPullTester  doesnt email me, please tag @TheBlueMatt instead "	Other
2553	17099563	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7df7cf51daf0ac9b491a356222f7217f296b0ace for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2553	17118512	Any further comments on this? 	ynQuestion
2553	17239497	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7796fe9da178a92108682f05e9ac037012326cd9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2553	17273840	@sipa Fixed your nit ;) and you were absolutely right. 	Clarify
2553	17274451	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/1f52db4fdd3641e2c0ebbc2355ccc27547eaded7 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2553	17274574	"``fatal: '1f52db4fdd3641e2c0ebbc2355ccc27547eaded7' does not point to a commit`` I updated this 2 times in a row, guess pulltester was too slow ^^. "	nAnswer
2553	17275482	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f810bac189c3f12de043026257adda7e76f27adf for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2553	17300023	ACK 	Clarify
2553	17555418	The wallet passphrase bits of this are unnecessary after https://github.com/bitcoin/bitcoin/pull/2625 	Statement
2553	17569863	"@gavinandresen I will update after your patch was merged or you just merge this an rebase your pull :). That way the other changes in this pull can get in now.  As #2625 seems a little controversial, what is your oppinion on this now Gavin? "	Clarify
2553	18692446	Needs rebase as #2625 was merged 	Emphasis
2553	18815941	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0ab7a2d0f0adb7020b0a75fb3a2426f29e61b943 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2552	16844699	Let's see if gitian/pull tester agrees with this being deprecated :) 	Statement
2552	16844942	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/61032f894247f7a4158ec5b41067bcd7c3f35910 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2552	16845218	"@laanwj Seems that one is caused by @BitcoinPullTester ^^, I hope Matt can take a look. "	Clarify
2552	16858656	"Oops, false-positive, sorry, retesting... "	Statement
2552	17008544	@TheBlueMatt It's still not building it seems? 	Statement
2552	17033521	"Yep, sorry...pull-tester is now undergoing upgrades to handle new dependencies for payment protocol... "	nAnswer
2552	17100810	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/61032f894247f7a4158ec5b41067bcd7c3f35910 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2552	17115706	Maybe this is needed for MSVC? I really wonder why we added this... 	Clarify
2552	17117886	I'm not aware of anyone doing MSVC builds recently. I'll take a look what commit added this. Edit: Damn ^^ https://github.com/bitcoin/bitcoin/commit/efdcf941742cb63b441656241d6699ac8d2819d3 	Clarify
2552	17408184	Anyone? 	ynQuestion
2550	16841779	"Can you upload the debug.log somewhere? There may be more info in there.  On first look it looks like a leveldb issue, it is calling abort.      Thread 7 Crashed:     0   libsystem_kernel.dylib            0x00007fff807c1212 __pthread_kill + 10     1   libsystem_c.dylib                 0x00007fff8b21"	Other
2550	16850284	"Your right, I deleted the local blockchain and bitcoin-qt worked again - but I switched to a different client because of the frist randomly appearing bug with sending transactions. The debug.log shows nothing out of the ordinary, I'm not uploading it, because of all my transaction-ids in it and the "	Reject
2550	16850819	There is really nothing we can do to help debugging if you don't trust us with the debug.log output (you could send it privately or encrypted if you want)  Good that removing the block chain solved it. These leveldb corruptions on OSX are strange. Maybe it has something with the file descriptor issu	Clarify
2550	16851260	You got mail 	Statement
2550	16884018	@laanwj Anything useful? 	ynQuestion
2550	17387302	"I could not reproduce this bug. Must be a special configuration.  Problems reaches surface at: ```Assertion failed: (internal_key.size() >= 8), function ExtractUserKey, file ./db/dbformat.h, line 96.``` "	Other
2550	17415522	I found no error messages or strange things in the debug.log he sent.  @jonasschnelli  where do you get/see that assertion? 	Clarify
2550	17428736	@laanwj crashlogs line 19. 	Clarify
2550	17567574	"Duplicate; hopefully fixed by the ""don't use too many file descriptors"" fix. "	Clarify
2548	16794336	The Windows and Linux bitcoin-qt will take a bitcoin: URI as command-line argument.  So try:  bitcoin-qt bitcoin:1somecoolbitcoinaddress  See https://en.bitcoin.it/wiki/BIP_0021   for the syntax.  	Statement
2548	16794340	"Yes this is already possible: provide a bitcoin: URI on the command line. If there is a bitcoin-qt open it will open in that, otherwise it will launch and immediately go to the transaction. "	Statement
2548	16942253	"Closing, as ""already possible."" "	Statement
2546	16772234	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/46aecb2bdff081c4cf206e2198a64a6e29ec0847 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2543	17570484	"@jonasschnelli Can you take a look, if this is graphics related perhaps? "	ynQuestion
2543	17601551	okay. Let me install XFCE on my ubuntu vm to analyze this issue... 	Statement
2543	17602840	@nextgenthemes i do not have XFCE experience. How do i add bitcoin to the app menu? How did you install bitcoin (assume apt-get)? 	whQuestion
2543	17642992	I confirm nextgenthemes's observations. I'm running Xfce 4.10 under Xubuntu Raring 13.04 (amd64). 	Clarify
2543	17656720	@jonasschnelli as I said right at the first line of this issue.  > Running Xubuntu 12.10 and current stable bitcoin from ppa:bincoin/bitcoin  so yes with apt-get install. It adds itself to the menu so I did nothing manually.  This has to be something about the .xpm file and how they are created. I h	Clarify
2543	17656884	@nextgenthemes sorry for overlooking your first line. Okay. I try to reproduce it with Xubuntu 12.10.  	Statement
2543	17657958	found the issue. will solve it soon and also use the new icon style. 	Clarify
2543	17796828	"fix before a new .deb release: - `curl https://raw.github.com/jonasschnelli/bitcoin/new_xpm_icons/share/pixmaps/bitcoin128.png > /usr/share/pixmaps/bitcoin128.png` - open ""Settings Manager""->""Main Menu""->""Office"" - open ""Bitcoin"" Properties - click on ""Icon"" and select the new bitcoin128.png file. "	Other
2543	17797057	Thanks Jonas. That was kind. 	Statement
2543	26985235	Closing as #2650 is merged  	System
2541	16884811	"Any reason not to just call the variables nNextTime/nLastTime, or rename their usages to nNextRetry/nLastRetry? That reference looks like a hack to avoid code changes :) "	ynQuestion
2541	16884824	"ACK otherwise, by the way. "	nAnswer
2541	17102335	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1ee947d0573f8f0b5ae8c5efb27fae376e867187 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2541	17452062	"ACK (after squashing into one commit)  Edit: and I agree with @sipa on the use of references, please just rename the variables. "	Clarify
2541	18693005	"ACK, once @laanwj and @sipa comments applied  "	Other
2541	21089220	Rebased with requested refactor. 	Statement
2541	21291285	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/203d1ae69b1b606c0216d0dc35de567c591720ae for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2540	16607512	ACK  	Clarify
2540	16611594	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/97e7901a3a7403cd5a5a027ad83e9674e3b950be for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2540	16646559	ACK. 	Clarify
2539	16637262	"Nice, I'll do some testing with it over the weekend. "	Statement
2539	16657706	Pull-tester failure is because I didn't update the unit test data when I changed the PaymentRequest protocol buffer format... 	nAnswer
2539	16668106	"Unit tests fixed, but I bet the mingw-Windows build will not work because we'll need a mingw-compiled -lprotobuf  "	nAnswer
2539	16726211	I'm had some issues building in qt creator (qt creator builds to a different directory than the source directory). I get the following error:      .../bitcoin/src/qt/paymentrequest.proto: -1: error: File does not reside within any path specified      using --proto_path (or -I).  You must specify a -	Clarify
2539	16923587	"OK, I finally made a payment. Even though I have a fresh wallet that contains only a single output, I was told my tx was over the size limit and I'd have to pay a fee. But it was only 227 bytes. Not sure what's going on there.  My address book has a new address in it, ""Refund from bitcoincore.org"". "	Clarify
2539	17104112	"Check my proposal ""Merchant-pays-fee proposal for Bitcoin Payment Messages"" in https://bitcointalk.org/index.php?topic=188695.0  It could be scheduled for the next hard-fork.  "	Clarify
2539	18966374	"What's the next step for this - another review pass? It seems my previous commit comments vanished, not sure if they were addressed or not. "	Clarify
2539	18977137	"@mikehearn : I fixed the bug you found (handling multiple pay-to addresses).  Next steps are:  + Do the bitcoin-qt-handles-payment-request-mime-type thing on Linux + Finish writing a test plan + Bribe some people to test on windows/linux/osx + Assuming successful testing, merge into master + Turn th"	Clarify
2539	19387663	"BTW Gavin, shouldn't you create a separate address+cert for your test server? Otherwise you might find people  signing payment requests as yourself or bitcoincore.org .... "	Clarify
2539	20230443	"Status update:  Works for me on Mac, Linux (fixed bitcoin: URI handling for gnome) and Windows (figured out how to compile a static Qt that does not expect to dynamically load openssl).  There is a showstopper bug on Windows-- I'm seeing crashes on exit (looks like another global destructor being ca"	Clarify
2539	20232551	"Couple of other things:  * Needs a rebase, at least fTestNet -> TestNet(), but better, a new CChainParams field with the payment request protocol code that is expected. * Tor users will be surprised that payment submissions don't go via Tor due to the missing net manager proxy code.   "	Other
2539	21167938	"Loose ends tied up:  -proxy settings are used for payment requests, so Tor users don't reveal their IP addresses. Tested by running over Tor and watching the IP addresses in the ssl_access.log on the server.  Refund addresses are not shown in the GUI (unless you receive a refund, in which case they "	Clarify
2539	21364170	Gitian build error with protobuf: ``` + ./configure --enable-shared=no --disable-dependency-tracking --with-protoc=/home/ubuntu/build/protobuf-2.5.0/host/protoc CXX=i586-mingw32msvc-g++ CC=i586-mingw32msvc-gcc CXXFLAGS=-frandom-seed=11 AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-	Clarify
2539	21365655	http://codepad.org/z5wTOeGZ gets protobuf building. 	Clarify
2539	21382478	"Thanks, Luke.  Status: I've been setting up a debug environment on a Windows 7 machine to figure out why jenkins binaries aren't working properly (signed payment requests are being treated as unsigned). "	Clarify
2539	21435999	"I don't think it's important for v1, but here are some notes on how to do EV cert matching (so the user sees ""MtGox Co Ltd. [JP]"" as with Chrome instead of mtgox.com).  An EV cert is identified by the contents of the ""Certificate Policies"" field in the X.509 cert. Each issuer sets the value to be di"	Clarify
2539	21659797	"Note to self: secure requests showing as insecure on Windows7 is this Qt bug, I believe:   https://bugreports.qt-project.org/browse/QTBUG-24827  See QWindowsCaRootFetcher class in qtbase/src/network/ssl/qsslsocket_openssl.cpp in the Qt5 source code for the fix; if we're going to move to Qt5 soon the"	Clarify
2539	21709781	I think a better fix would be to go with the original suggestion of shipping a set of trusted root CAs with the app. Otherwise this kind of random platform inconsistency risks undermining the whole initiative. Upgrading to Qt5 simply in order to work with just-in-time root cert downloads sounds like	Clarify
2539	21710762	"@mikehearn Our Qt code is Qt5.1 compatible, should be no problem to upgrade to Qt5 code-wise, but ""only"" Gitian wise IMHO. "	nAnswer
2539	21711640	"If Qt5 didn't have any API breaks, then sure, why not do the upgrade. But it doesn't change my view that we should be shipping a set of root certs. It's crazy not to - otherwise the first thing that will happen is people who try and use this will discover that some random subset of wallet apps can't"	Clarify
2539	21767835	"I *really* don't want to take responsibility for keeping an up-to-date list of root certificates that all bitcoin wallet implementations are encouraged to support.  And having a different set of root certificates supported in the user's web browser and bitcoin wallet seems like a really bad idea, to"	Emphasis
2539	21769398	"@gavinandresen Well, in this case, as long as the browser and wallet are using the OS's cert store (even with the Microsoft-downloaded root certs), we can be sure that if the user went to https://foo.com, he also has the cert for it. I agree that software (including browsers, sorry @mikehearn) has n"	Clarify
2539	21776614	"I already spelled out the alternative - merchants will just have to do the same work instead, and you'll get the same situation with browsers where people rely on apocryphal and unverifiable claims like ""our certs have a 94% acceptance rate"". Also, in the absence of guidance hardware devices like th"	Clarify
2539	21841939	Merged with @laanwj 's changes so it compiles with Qt 5.  I think this is ready to be pulled; gitian changes to compile releases with Qt5 can happen after merge.  	Clarify
2539	21989748	Suggestions from testplan: - Make Bitcoin-Qt visible when a URI is opened (it just remains hidden or in the background at present; this bug is in master already) - Allow user to add a label to signed payments. - Allow cancelling/removing signed payment requests individually (without Clear All). - It	Clarify
2539	21991062	"@luke-jr  - Make Bitcoin-Qt visible when a URI is opened (it just remains hidden or in the background at present; this bug is in master already)  That is a bug, which seems to be introduced by the GUI refactoring and was not spotted. I'm looking into this. "	Clarify
2539	21996012	"Expired payment requests: agreed, user should ALWAYS get some result when clicking on a URI link. Escaping PaymentACK messages: nice catch, I'll fix. Multiple addresses is a regression I'll fix again.  All the rest:  improvements that I think should happen after pulling. Some of them (like where/how"	Clarify
2539	22002077	"#2872 contains the fix, which currently prevents the main window to showup after clicking a valid bitcoin: URI. "	Clarify
2539	22050475	Expired payment requests now show an error. PaymentACK messages are properly HTML-escaped. Sending to multiple addresses works properly. And I verified that it communicates through Tor if you're running proxied through Tor.  	Clarify
2539	22296575	"@Diapolo : I'd guess there is an operator+(char*, QString) that produces a QString, and the QString serializer adds the double-quotes.  Couple more bug reports from a tester:  1) PaymentACK dialog box should say ""Payment Acknowledged"", since ""Received"" might imply that the payment is confirmed alrea"	Clarify
2539	22297759	"IMO ""acknowledged"" implies confirmation more than ""received"" does O.o "	Other
2539	22680043	"I haven't had the time to look through this in detail, but it seems that when processing a payment request, a normal transaction is created and sent, and when this completes, the paymentACK is fetched, without even retrying if the connection failed?  IMHO, the makes the entire second step (notifying"	Clarify
2539	22680275	"The obvious way to make sure the the back-channel had atomic reliability would be a flag in the request to only submit a transaction inside the response, not via the network.  Then you could be confident that either it would be successful or the transaction would fail. (Or the client did something w"	Clarify
2539	22680382	"My idea would be to store the payment request in a wallet transaction field, and give it a flag not to broadcast. Seeing the transaction on the network would remove the flag, as would receiving a paymentACK. I don't think there is any use case for wanting the transaction broadcast before the receive"	Clarify
2539	22684536	"@sipa : ""... makes the entire second step useless, as it becomes entirely unreliable"" ?  In the normal course of events, the user clicks on link, their wallet fetches a payment request from the merchant's server, and then a minute or two later (after user inspect transaction details and unlocks wall"	Clarify
2539	22686102	Probably easier to implement @sipa's suggestion after we're able to replace transactions generally. 	Clarify
2539	22690858	"@gavinandresen What if as a gambling site, your server goes down for a minute. If you have high traffic, you'll have many users making bets for which they were still able to fetch the payment request. You have no way of paying them without knowing a refund address, and you have no way to contact the"	Clarify
2539	22736592	"@sipa : You're right, that use case works much better if it is ""merchant broadcasts first"".  I'll look into rebroadcasting. I suspect it will be easier to just lock the inputs for the estimated worst-case Payment-->PaymentACK round trip, and broadcast the transaction when the PaymentACK is received."	Clarify
2539	23066915	"Rebased (needed to fix conflict in bitcoin-qt.pro).  And made a functionality tweak: PaymentRequests are now written to wallet.dat, using the (formerly unused and always empty) vector&lt;pair&lt;string,string&gt;&gt; vOrderForm field in CWalletTx.  Each PaymentRequest satisfied by the transaction ha"	Clarify
2539	23071843	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a41d5fe01947f2f878c055670986a165af800f9a for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2539	23082651	Congrats everyone. This is a big step forward for the Bitcoin world! 	Emphasis
2538	16576429	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4193a647354634326957f5e00d53fc474a36e125 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2538	18221241	"I've had to fix this at well in the Qt5 stream, it's indeed another Satoshi-ism in util.h that gets in the way:  https://github.com/laanwj/bitcoin/commit/9680be9396295c6103b354bfd37d2c2bdb73d4a8#diff-1  Do you need this for Qt4? "	Emphasis
2538	18278241	"Wow, nice find... rather ugly though ^^. You mean if I need ``loop`` defined for Qt4? "	Clarify
2538	18280624	You need to undefine it. 	Statement
2538	18281618	"Sorry, I meant your question ``Do you need this for Qt4?``, because I'm not sure what you mean. Need the undef for Qt4? Need ``loop`` for Qt4?  Perhaps we should just replace ``loop`` in the core files with ``while(true)``? "	Clarify
2538	18283034	"Maybe. I don't like that loop macro at all either. But I don't want to change the core files for what is a qt compatibility fix.  My question meant ""do you need this fix to build for qt4 on windows as well"". Otherwise we can just close this issue here. "	Clarify
2538	18302781	"@laanwj I didn't try with Qt4 for some time now, let me see if my Qt4 build is still working... It IS working and I can confirm this patch or your is not needed for Qt4.  Do you intend to fix the includes I changed and replace with that #undef then in our Qt files? "	Clarify
2538	18741016	"closing this, it will automatically be fixed when qt5 branch merged "	Statement
2537	16496092	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e790d47785143b87e442dd83a88d0446f0ad2f21 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2537	16497162	"Cannot test it on windows, but the linux screenshots look great. "	nAnswer
2537	16509426	ACK 	Clarify
2536	16487754	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e74fbca1c2a4daece60de250f9c057c54c6a3bb0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2535	16468203	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/abda1da7bee94ebd0f70ccb3ea4a2896513e53c3 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2535	16468286	"PEBKAC. To build without UPnP support, you need USE_UPNP=- as documented. USE_UPNP=0 means it's compiled but disabled by default. "	Clarify
2535	16469612	"Hmm, would you be opposed to adding a comment in the makefile clarifying that? I see it in /doc/build-unix.txt now, but I think most people would just read /INSTALL and /README and if nothing special was mentioned there expect 'make' to build the thing.  Also, why is libupnp linked by default? The a"	Clarify
2535	16469984	"More comments can't hurt, at least.  miniupnpc is a pretty standard part of most desktop OS these days, at least. "	Other
2534	16749891	How is this an incompatibility? 	whQuestion
2534	19532673	Fixed by #2763  	System
2533	16884897	"Can you provide some information (what OS, what hardware, which previous version were you running, ...)? "	Other
2533	19912904	"@btcusr Can you follow up with any further info?  Are you still experiencing the crashing running 0.8.2-beta?   As @sipa mentioned, OS and Hardware info is helpful, as well as a debug log if possible. "	Clarify
2533	22805761	I'm getting this same failure on FreeBSD. Was working fine for a long time. 	Clarify
2533	22805868	Should have mentioned I am using Bitcoin-Qt version v0.8.3.0-g40809ae-beta 	yAnswer
2533	22810071	@swills Any helpful information in debug.log? 	ynQuestion
2533	22817615	I was able to solve the problem by reindexing and only checked the log afterward so wasn't able to find anything that I was sure was relevant. 	Clarify
2532	16387320	Should then look like: ![Bildschirmfoto 2013-04-15 um 16 00 36](https://f.cloud.github.com/assets/178464/381016/24532674-a5d7-11e2-8089-54121e76b394.png)  	Clarify
2532	16420304	"pull-tester failure looks like a false-positive; the unit test failing is one I wrote, that tries to test some multi-threading stuff; I've had trouble with them occasionally running on a heavily-loaded machine.  "	Clarify
2532	16581373	Can anyone on Mac test this please? 	ynQuestion
2532	17550035	Works nicely.  	Statement
2531	16362206	"meh  Builders fetch dependencies independently, and we only re-fetch when dependencies change.  And any differences are picked up by the gitian build process; see, for example:   https://github.com/bitcoin/gitian.sigs/blob/master/0.8.1/gavinandresen/bitcoin-build.assert#L564 ... for the sha256 sum"	Clarify
2531	26982924	"Inputs are checked for integrity now by the gitian descriptors, closing "	whQuestion
2530	16420524	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4d17a1b0c29e8fd8510c75db1efb203b9b4f9eb0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2530	16592912	ACK after squashing into one commit 	Clarify
2530	17065706	@laanwj ping :) 	Emotion
2529	16357785	Hm yes some padding values for the extra widgets/layouts should be set to zero here. 	Clarify
2529	16891965	Is this hard to fix? 	whQuestion
2529	17091762	Can be closed now :). 	Statement
2528	16357930	ACK 	Clarify
2528	16358748	You need to squash the 2 commits into one and I still see the indentation issue? 	Clarify
2528	16415061	"ACK, if you squash the commits together. "	Reject
2528	16421268	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d0307c46f4013f7d60e505e3a1c737ebd6788203 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2528	17116582	See #2584 	System
2527	16359751	"Sorry, it was my first commit description: Any tips for the future? "	Emphasis
2527	16359863	Something more descriptive :) 	Statement
2526	16356376	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/41fdc1cad1777aeb4569c49a72d28b6a3b099093 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2526	16394315	ACK 	Clarify
2526	16844023	@laanwj ping :) I want to do another translations update. 	Statement
2526	16844313	@diapolo I delayed on this as I thought the 0.8.2 release was going to be really soon thus to prevent any last-minute message changes. There is no reason for this commit to be urgent. But I guess that one translation message doesn't matter so much. ACK. 	Clarify
2525	16354775	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e83a90f127060487b7a6717a740a59db244b4e53 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2525	16355121	Did my hint draw your attention on this? Nice finde anyway :). 	Clarify
2525	16356216	"@diapolo, yes, and that it was not the diskspace warning but a leveldb error (likely in the network thread while accepting a block). It's still strange that it sometimes worked (like for askFee) and sometimes did not, but this should solve it for good. "	nAnswer
2524	16348606	"It looks like this for me: http://bitcoin.sipa.be/splash.png  The image is nice, but is it intended that the text overlaps with the '(B)'? "	Other
2524	16348865	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cd6c4e6b2c621ccc0c05fd837d8c56a3a0c3481d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2524	16349033	There's an interesting unicode character in there :) ![splash](https://f.cloud.github.com/assets/126646/377803/de3b48c6-a4ee-11e2-9dcd-afddf295cef7.png)  	Other
2524	16349990	"Okay. I would had been to nice to have no platform differences on font rendering. :) Let me adjust some things and it then probably needs a re-test on your side. Because get the toolchain and build process running on my win/linux vm is currently not possible. But should all be fixable (remove \n, re"	Clarify
2524	16352093	Hm it should be possible to get roughly the same font on all platforms by specifying multiple font names. 	Clarify
2524	16357992	"I just changes to ""Arial"" and fixed the newline issue. Can someone retest on linux and win?  This is how it looks an my mac (retina - 10.8) with Qt4.8.4:  ![Bildschirmfoto 2013-04-14 um 21 43 00](https://f.cloud.github.com/assets/178464/378417/26a3625e-a53c-11e2-8a1a-4e16a8cdfbae.png)   ![Bildschirm"	Clarify
2524	16358849	That is really looking beautiful :)! 	Emphasis
2524	16360477	Nice changes!!! 	Statement
2524	16399335	"Looks good now. However I do not see any progress messages (such as ""Verifying wallet..."") with the new splash screen. Is this also a Linux specific problem? "	Clarify
2524	16421809	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1e5edc7b7e8e8416bc0ba123bd282d8e791bf184 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2524	16431249	"@laanwj strange. The messages is written by a standard QT command: QSplashScreen::showMessage(QString::fromStdString(message), Qt::AlignBottom|Qt::AlignHCenter, QColor(55,55,55));  Let me install the toolchain/src on my ubuntu vm and try to debug it.. "	Clarify
2524	16433559	I'll also try to debug it 	Statement
2524	16492797	"@laanwj found the problem source. Ubuntu has no Arial and has also different font rendering. I did update the code so now, the font-size will be increased with factor 0.75 when the calculated text width goes over 160px (which would mean it then would go over the ""B"" in the splashscreen). Works for m"	Clarify
2524	16493855	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f9124587ccea723dbd743e3877a7071fbb6c5732 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2524	16506150	ACK  ![testnetsplash](https://f.cloud.github.com/assets/126646/391404/ce27df80-a764-11e2-90d3-ba86ce41e1a7.png)  	Clarify
2522	16347743	"Seems people are experiencing the same problem on other Unixes. It's not just MacOSX: https://code.google.com/p/leveldb/issues/detail?id=60  Interestingly, Mike Hearn already mentions this problem in his first post about using LevelDB for Bitcoin:      Another gotcha was the number of file descripto"	Clarify
2522	16885083	Anyone feel like benchmarking with options.max_open_files set to 50 or 100 or so? My guess: no difference. 	Clarify
2522	17201087	Closed via #2557 and #2568  	System
2520	16342482	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/20d0810f300fdcb6a0af6cb310c4702cdd956009 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2520	16343077	ACK  	Clarify
2520	16347751	ACK  	Clarify
2520	16362481	"ACK  One reason I'd love to see canonical encodings mandated sooner rather than later is because they are going to make it a lot harder to write software for some of the really stripped down secure hardware stuff I'd like to see happen eventually. Many of these environments are downright anemic, sma"	Clarify
2519	16335170	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/d49323b8c11e353e4b1762121f1ea4ea54450c03 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2519	16355903	@BitcoinPullTester ``fatal: can't open patch 'src/../contrib/test-patches/temp-revert-1.patch': No such file or directory`` is unrelated to this pull :).  @jonasschnelli Can you squash the commits or somehow remove that merge-commit? 	Clarify
2519	16358091	@Diapolo squashed. 	System
2519	16358860	ACK 	Clarify
2517	16892012	"#2557 should improve upon this, but we should at least try increasing the ulimit to 150 + maxconnections or so, and /or decrease maxconnections otherwise. "	Statement
2517	17045780	I've created a pull request from your snippet: #2568  	Emphasis
2517	17200488	Closed via #2557 and #2568  	System
2516	16302924	"False negative...sorry, Ive reset this pull so it should come back with a new test "	Other
2516	16302934	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/cded58cadc0202fa36be5ff67e35b45c992b6da0 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2516	16303124	This pull needs rebased to get the updated contrib/ before it will test 	Clarify
2516	16344319	NACK without anti-DoS measures and a discussion on the email list about how to price network bandwidth. Note Gavin's relevant discussion about non-chain messages attached to tx's. 	Clarify
2516	16418736	"How about: keep a counter in the mempool, remembering the sum of the sizes of all replacements a transaction has had. When deciding whether to accept a transaction as a replacement, increase this number and then check whether its fee is enough for that size. That's certainly overkill, as it will cor"	Clarify
2516	16433933	"I'm quite aware of the DoS and other issues, that's why this pull is only for the testnet. Obviously we can't prove we made the feature safe without actually being able to demo failed attacks. Re-enabling on the testnet doesn't have any downsides, and has some upsides. The fixes to make it workable "	Clarify
2516	16441320	@sipa @mikehearn replied on bitcoin-dev mailing list 	Statement
2516	16446979	"As one relay anti-DOS mechanism, the minimum increase in fee to replace an existing mempool transaction could be set to minrelayfee.  This would mean a languishing zero fee transaction could only be replaced if it's total fee was increased to at least 0.0001 (or 0.0001 per KB). The replacement trans"	Clarify
2516	16448647	"Guys, your enthusiasm is commendable but can we please keep the ""redesign Bitcoin"" discussions on the mailing list or forum please. This pull is very simple and is not the right place to discuss strategies for re-enabling on the main network - the goal is simply to enable on the testnet so we can ex"	Clarify
2516	16449784	"OK, this won't destroy testnet as we know it. I just wonder if a 0.9 testnet could actually be testing something instead of allowing testing of anything.  Would this impact testing of double-spend resistance or formulas, such as people who may want to test their ""dice"" or commerce 0-confirmations si"	Clarify
2516	16451455	Sure. I think it's clear that whatever is implemented would be deployed first on testnet before the line that disables it is removed. 	Clarify
2516	16451620	"@mikehearn We already know we have to test DoS behavior, and fix that behavior, so we already know the code will need to be changed a few times. Under those circumstances I see no reason to put that code into the client everyone is going to be running, potentially disrupting their testing activities"	Clarify
2516	16451795	"There are already lots of ways to practically DoS the testnet, for instance, by draining all the coins from the faucet or by finding the nodes and DDoSing them, or bringing up lots of dummy nodes. I'm not sure we should be trying to optimise the testnet for robustness against malicious attackers, ex"	Clarify
2516	16455525	Seems to me that everyone who commented has proposed something similar to requiring the fees of the replacement transaction be higher than the original. Requiring an increase of txsize * MIN_RELAY_FEE for each replacement has been proposed multiple times and would require just one or two lines of co	Clarify
2516	16455716	"I haven't commented because this is the wrong place for the discussion. Suffice it to say, that is not how the system was designed to work and that change would make it fairly useless, so I will not be doing it that way. Once again, if you want to propose a re-design that doesn't meet Satoshi's orig"	Clarify
2516	16456233	"huh, so I guess you are expecting replacements are free? what are your thoughts on how dos protection might eventually work? "	whQuestion
2516	16456332	I'll send a mail to the list with my overall plan in it.  	Statement
2516	16456723	post first next time 	Other
2516	16457400	"What I'm going to post is not anything new, you just weren't there for the original discussions (they're buried on the forum somewhere). But I will happily repeat and elaborate on the topic. "	Clarify
2516	16457975	"fwiw, I've been around bitcoin a lot longer than you might realize "	Clarify
2516	16459917	"Please, let's keep it on topic.  As long as it is about a proof-of-concept DoS protection mechanism as long as this in testnet-only, I see no problem discussing it here. Before enabling it on the main network we can have a broader discussion, but that shouldn't prevent experimenting with the technic"	Clarify
2516	16460398	"Taking a higher level view:  There are two conflicting, equally valid goals: 1) Mimic mainnet rules as closely as possible 2) Provide an avenue for testing new features, enabling and testing them on testnet before doing so on mainnet  Existing members of the ecosystem probably value 1) more highly. "	Clarify
2516	16460590	"So, I would NAK this pull req on testnet, and ACK this pull req on nextnet, using that logic. "	Clarify
2516	16464735	I don't think we should stress too much about implementing a maybe net. Lots of options like vps servers  exist for people to try their new concepts. Anyway according to my seed usually only thirty to flirty test net nodes are ever running.  	Clarify
2516	16465058	"@sipa tax replacement can only replace outputs and scriptsigs, not inputs. You already have to pick in advance your max fee and gradually increase it by replacing outputs.  "	nAnswer
2516	16465177	"@petertodd I know. I don't see how that conflicts with my proposal? You have to pick a maximum change in advance indeed, but you're not required to actually use more and more of it at every step. You can, if you want to compensate for the decreased priority, though. "	nAnswer
2516	16465337	"Ah good. See I think the next question is do inputs really have to be locked? What's wrong with adding to the input set?  Pieter Wuille <notifications@github.com> wrote:  >@petertodd I know. I don't see how that conflicts with my proposal? You >have to pick a maximum change in advance indeed, but yo"	Clarify
2516	16496750	"Re: nextnet. I'm agnostic. Having a public testnet is convenient but indeed not technically necessary. Having a third ""researchnet"" is probably overkill though, there's overhead involved and given there aren't many testnet nodes to start with I guess a researchnet/nextnet would have even fewer.  So "	Clarify
2516	16562376	"With the recent -development mailing list [post](http://sourceforge.net/mailarchive/message.php?msg_id=30738521) pointing out how the ""[rapidly-adjusting micropayments](https://en.bitcoin.it/wiki/Contracts#Example_7:_Rapidly-adjusted_.28micro.29payments_to_a_pre-determined_party)"" use on the Contrac"	Clarify
2516	19916704	"Closing; no clear consensus and this never really moved forward.  It is a trivial patch and we can re-open in an instant, if there is consensus that we want this.  Revisiting the discussion, I'm more agnostic:  if other devs think there is value in this feature on testnet, ok.  Otherwise, not. I ten"	nAnswer
2515	16286735	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/761085146ab48f1f238fa876791efc23d9318dac for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2515	16287738	@diapolo both fixed 	Other
2515	16288395	Hmm this doesn't seem to be caused by my changes:       + LD_PRELOAD=/usr/lib/jvm/java-6-openjdk/jre/lib/i386/jli/libjli.so java -Xmx5G -jar /mnt/test-scripts/BitcoinjBitcoindComparisonTool.jar 8333     Invalid maximum heap size: -Xmx5G     The specified size exceeds the maximum representable size. 	Clarify
2515	16302917	"Indeed, false negative...sorry, Ive reset this pull so it should come back with a new test "	Other
2515	16304250	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/45155d3010a3bbbe3cfbba670538ae18b9772a39 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2515	16314820	Sounds like a good idea. 	Statement
2515	16322173	"Code looks good, but haven't tested. "	Statement
2514	16266200	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/84db464b10036ce5f2d3a6276b2047fd87dec9d8 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2514	16269316	ACK 	Clarify
2514	16270156	"I'd like to have this merged quickly, as it would allow patches like #2418 to be pulltested correctly. "	Statement
2513	16261529	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/212b42c62350aa46661fe058fffbf8d9c36599e4 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2513	16287487	ACK 	Clarify
2513	16287530	ACK 	Clarify
2510	16238160	Close 	Statement
2509	16235805	Can you be a *bit* more elaborate? 	ynQuestion
2508	16226161	close? 	whQuestion
2506	16223358	who or what does the mac release build? 	whQuestion
2506	16224122	Gavin does. 	Statement
2506	16225182	i'll check the std build process and see if i can write a fix for the version meta information on the mac binary. Even when build with Qt Creator the version meta info is somehow unusable. 	Clarify
2506	16229502	I fixed the same stuff for Windows a few months ago :). Correct meta information is a good thing IMHO. 	Clarify
2506	16359564	"@gavinandresen can you check (if time), if the description for mac release still are valid:  https://github.com/bitcoin/bitcoin/blob/master/doc/release-process.txt#L76-83 "	Clarify
2506	16361549	"RE: release-process: yes, that is the process.  Does the version meta information come from the share/qt/Info.plist file? "	whQuestion
2506	16367805	@gavinandresen the version information can be placed there. But QT only support the @SHORT_VERSION@ which then would be 0.8 (for 0.8.2) which is somehow not funny. But the Info.plist has currently no affect because of a (still open) QT Bug (https://bugreports.qt-project.org/browse/QTBUG-21267). That	Clarify
2505	16216568	"Please look at the gitian scripts, we have an entirely infrastructure for doing deterministic builds and our public binaries are parallel built and multisigned via the gitian infrastructure. "	Clarify
2504	16217736	It points to 0.8.1 in 0.8.1 branch 	Statement
2504	26784276	The script doesn't have any way of guessing what the version is that you want to verify. You need to provide the version number as argument to the script. 	Clarify
2503	16195082	ACK 	Clarify
2503	16197527	ACK 	Clarify
2503	16217515	ACK  	Clarify
2502	16176190	In my eye and also after tests there is no need for that. It was somehow a hack which had set a empty dock menu. I'll also wrote a info to the dev who did code this why he did that (for 2 days)... no response yet. 	nAnswer
2502	16176300	or... is there a chance that the client switches during the runtime from testnet to prod-net? 	ynQuestion
2502	16176345	"@jonasschnelli No, that's not possible. "	Reject
2502	16176474	then i don't see a need for that line. 	Statement
2502	16177104	But is the icon set as default anywhere then or can we remove the one for testnet? 	Emphasis
2502	16177494	"the ""normal"" icon is set by the application bundle. But when the user start the app with -testnet, the icon will then be changed by QT (mac bridge code) in runtime. So the ""testnet line"" we need. But we once need it at another point in code (but this will be a new pull request once). "	Clarify
2502	16178229	"Okay, closing this then :). "	Statement
2501	16239083	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4881353efef81acc6ddbaaecd4ba89f012b3e87e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2501	16317433	ACK. Tested and code changes look fine to me. 	Statement
2501	16333578	I would love to see this in 0.8.2 :). 	Statement
2501	16335130	ACK 	Clarify
2501	16572545	@laanwj ping :) 	Emotion
2500	16155998	https://en.bitcoin.it/wiki/Change  	Statement
2500	16156176	"Ah, I did read that it works like this in theory, but I've never seen it in practice. I didn't realize this is what it looks like.  The way I was trying to use my client is by keeping all the money in the same address for which I have they key stored offline, but also have it in my bitcoin wallet so"	Clarify
2500	16156935	"Ah, okay, thanks! That makes sense. I'll check out armory.  Maybe there's something that can be done to improve the usability of bitcoind... Is there any reason not to have a way to dump out all the private information about a given account (as opposed to address)? There is dumpprivkey, but that's d"	Clarify
2500	16173294	I think I'll make a separate issue for this later and just close this for now. 	Clarify
2499	16149440	See issue #1522  	yAnswer
2499	16150870	TL;DR? 	ynQuestion
2499	16157935	Dupe. It's indeed a problem. I'm investigating now in 1522. 	Statement
2499	16168762	"This should be fixed by #2386, but I'm not sure if it's in 0.8.1, but 0.8.2 will include that patch. People in #1522 also reported that the patch is fixing that problem.  @samholmes Which version are you using? "	Clarify
2499	16169241	v0.8.0-beta 	Statement
2499	16169480	"That fix is NOT in 0.8.0 and not in 0.8.1, you have to wait or build the client from current master :). "	nAnswer
2499	16223635	"Okay. Found the issue. But now the question: -> Nowadays mac apps close also on the window close (red button). See MacAppStore or iPhoto. Question is now if we want to close the client when user presses the red window close button or should we still use the ""old"" behavior of hiding the window and ap"	Clarify
2499	16224064	"I suggest going with what mac users expect. That's usually better than trying to replicate windows/linux behaviour.  Having said that, there must be a way to background or minimize the application, so that people can run a node without it being ""in their face"" all the time. "	Clarify
2499	16254720	"Because it takes fooooooooooooooreeeeeeeeeeeeeeever to open the client, it should just hide the window. Please. :P "	nAnswer
2499	16358579	fixed with #2530  	System
2499	16358912	"@jonasschnelli Was that problem still persistent after #2386, as some reported that fixed the issues, or are we having a second issue? "	Other
2499	16359025	Some min ago i did update to bitcoin/master and tested issue #2530 and the issue was still there (window doesn't reopen). On the code side i also see no reason why #2386 should work as fix for #2530. #2386 seams to be fix the dock-menu a.k.a. tray-menu. 	Clarify
2499	16359121	"Seems I mixed some things up, dock issue and re-open issue, thanks for clarification. "	Reject
2499	16367666	How do I update to version with the fix? 	whQuestion
2499	16367713	@samholmes can you build from the sources? 	whQuestion
2499	16367798	I have no experience with building. :( 	nAnswer
2499	16367822	Then you probably have to wait for the next release containing this fix. 	Clarify
2499	16367852	"When it the next release comes out, how will I know? When will it be out? "	Clarify
2499	18677950	Should be solved in 0.8.2 	Statement
2498	16138005	"Perfect, thanks for the quick fix!  "	Emphasis
2497	16135521	Can you rebase? Github doesn't want to merge it for some reason. 	ynQuestion
2497	16136195	Somehow the pull request is closed.. i'll create a new one soon. 	Clarify
2497	16136860	"This pull request is still open, it's #2494 that is closed (which has the same title, which is strange). "	Clarify
2497	16166952	let's ignore #2494 ... 	Clarify
2497	16167134	"ACK  Edit: @laanwj Is there any chance we could include this new testnet icon into bitcoin-qt.exe? I know the mainnet icon is embedded, but to have both would be really nice.  Edit 2: Ah this is happening in bitcoin-qt.rc. So @jonasschnelli Could you integrate a bitcoin_testnet.ico into this pull :)"	Clarify
2497	16167517	"ACK  @diapolo would make sense, I suppose, as the other icon could be selected for shortcuts that start testnet.  I don't think it is necessary for this pull though. It's extra functionality that wasn't there before. "	Clarify
2497	16168072	"@laanwj Yeah sure, could be a separate pull, so this one can be merged. "	Accept
2497	16171640	also added a new windows ico file (better quality for <256px resolutions). Reported by Diapolo (https://github.com/bitcoin/bitcoin/pull/2477#issuecomment-16167568) 	Other
2497	16173074	Thanks for looking into this :). Are you able to also create a bitcoin_testnet.ico (as mentioned above)? 	Clarify
2497	16173158	Yes. Can do. But currently the icon is changed by QT with a 256x256px PNG replacement. Would you then change the code to support ICO files? Or is the 256x256 PNG testnet file not in appropriate quality? 	Clarify
2497	16173551	I'm talking about the icon file Windows is using to display when using shortcuts and the one the bitcoin-qt.exe is using. The code is here in the ressource file: https://github.com/bitcoin/bitcoin/blob/master/src/qt/res/bitcoin-qt.rc#L1  Dunno if this supports png files.  Edit: It seems the bitcoin.	Clarify
2497	16173892	"Hmm.. i hope i still see through. :) The file ""icons/bitcoin.ico"" is updated (multi-resolution ICO file) and looks fine if it comes to the render of the .exe file as well as of the shortcut version (48x48). Currently there is no bitcoin_testnet.ico and as far as i can see (in the Windows land) there"	Clarify
2497	16174151	@jonasschnelli I would add that icon to bitcoin-qt.exe via another pull :). 	Clarify
2497	16174265	"i know and i'm sorry,.. was to lazy to create another branch. "	Statement
2497	16174336	"No problem, I'm fine with fixing small stuff to make that client more perfect! "	nAnswer
2497	16216964	Manually merged: there was a trivial conflict in assets_attributions.txt 	Statement
2497	16219003	"@jonasschnelli Can you create a branch with a bitcoin_testnet.ico update? But don't yet open a pull-request here, because I'm trying to create a pull for YOUR branch, which you can then merge and create a pull for us here which includes my change :). "	Clarify
2497	16219747	@Diapolo will do that asap 	Statement
2497	16220341	"@jonasschnelli I want to thank you, I really like he new icon set, good job and keep it up! "	Emphasis
2497	16233659	@Diapolo branch with new tn ico file: https://github.com/jonasschnelli/bitcoin/tree/new_testnet_ico_file 	nAnswer
2496	16131041	I did a fix on that. But it's in a PullRequest for the Qt5 Mac compatibility in laanwj branch: https://github.com/laanwj/bitcoin/pull/1  I can also create a PullRequest with the addressbookpage.cpp fixes for the master branch. @laanwj how far are we from merging Qt5 support to the master branch? 	whQuestion
2496	16133797	here is the commit as pull request picket out of my pull request to the Qt5 branch on laanwj branch: https://github.com/bitcoin/bitcoin/pull/2498  should work with Qt4.8. Can someone confirm? (i'm on Qt5 and rollback is pain) 	Statement
2496	16134404	@jonasschnelli That commit should fix it. The build was broken because of wrong button names that I introduced ;-). Thanks for taking care of some Mac stuff. 	Clarify
2496	16136671	@jonasschnelli I have Qt4.8 on Lion and the build with your change seems to work fine for me. 	Clarify
2495	16112246	"If the new splash screen will be accepted, i will update the build process so that the splash.png text (version, copyright) gets automatically ""written"" with imagemagick like the gui about screen. "	Clarify
2495	16114718	I like the splash screen. However we should add the version and copyright information text programmatically from qt. It does not need to be in the image. Otherwise there's yet another place to update copyright and version numbers. 	Clarify
2495	16117919	"@laanwj ACK, I thought the same. We don't want to update that screen with every new year or relase.  @jonasschnelli Looks very nice, I like it. "	Clarify
2495	16133375	"@laanwj @Diapolo as a coder, i would also recommend the option of placing the text on the splashscreen by code. As a designer i would avoid this. Why: text placed by Qt will look much more sharp and somehow crispy. Text placed as image on a template image by imagemagick (or other command-line capabl"	Clarify
2495	16135637	"Qt supports various text rendering options as well. And TBH it's our time that is very limited at the moment, I really don't mind text quality to be somewhat less for that. "	Statement
2495	16135820	"Maybe there's another option: make building the image part of Bitcoin-Qt's build process. That makes it automatic, which is fine with me as well. Non-standard fonts be a problem in any case though: everyone needs to be able to build the image, so it can't rely on certain fonts to be installed.  "	Clarify
2495	16136174	@laanwj yes. Include into bitcoin-qt's build process. Font: i would just place a ttf or otf file (open source fonts) into the qt/src folder. The font must not be installed on the build-system. 	Clarify
2495	16136591	@diapolo would calling imagemagick in the build process work on windows? I suppose it'd be more difficult... 	Clarify
2495	16157860	"@laanwj i thought the same. Imagemagick is probably a overkill. Has also huge dependencies (Ghostscript, freetype). And yes: windows user would hate me. ;)  I think I try to create a solution with qt only (runtime). Let me try to play with http://qt-project.org/doc/qt-5.0/qtgui/qrawfont.html#alphaMa"	Clarify
2495	16157977	"meh. I love the image, but it seems like such a small thing to need to invoke imagemagick for... I'm sure that QT can be made to do this.  "	nAnswer
2495	16158864	"Agreed @ gmaxwell. Especially as Qt has a quite advanced rendering backend (QPainter). I daresay it can do most that imagemagick can do, rendering-wise.  Let's do this the proper way :) "	Clarify
2495	16167175	"@laanwj I've never heard of ``imagemagick``, but as we want to do it the Qt way I won't even google it ^^. "	Clarify
2495	16176166	"@jonasschnelli You could use QApplication::applicationName() for the name, but be careful, as it would be ``Bitcoin-Qt-testnet`` for testnet currently. "	Clarify
2495	16177576	"- App name is now dynamic (""-testnet"" will be replaced with "" (tn)"" for a better style). - When on testnet, the splash screen contains also a ""green"" bitcoin logo. "	Other
2495	16178387	"@jonasschnelli We currently use [testnet] appended to ``Bitcoin-Qt`` to indicate testnet usage (see bitcoingui.cpp -> ``setWindowTitle(windowTitle() + QString("" "") + tr(""[testnet]""));``), which I would like to keep (with equality and translation stuff in my mind). "	Clarify
2495	16179139	@laanwj the testnet splash png is 45.37kb. When you compare it against the blockchain size... but yes: it will increase the bin size. I still recommend to have it (the new testnet splash). 	Clarify
2495	16179541	I also like the new testnet splash :) and 46KB is fine with me! 	Statement
2495	16179807	I'm fine with 46kB extra. 	Statement
2495	16182018	"46k is much less than I had estimated, I'm fine with that.  "	Statement
2495	16190498	splash screen in <3k: ![splash-3k](https://f.cloud.github.com/assets/1425520/363622/ca0f2496-a208-11e2-830c-db38ea13d462.png) ![splash-3k-testnet](https://f.cloud.github.com/assets/1425520/363704/00d3c390-a20b-11e2-80cd-832ae6267fd1.png)  (I <3 Bitcoin)  	Other
2495	16219190	@jonasschnelli Can you please squash all commits into one after we have the final ACK for this :). 	Clarify
2495	16232560	squashed and ready to test on Qt4.8. Anyone? 	ynQuestion
2495	16232584	Pulltester might also do a check... 	Clarify
2495	16234077	@jonasschnelli I can test for you. Have one comp running 10.7.5 	Clarify
2495	16234177	@fanquake do you can build from the source (take master and pull from jonasschnelli/bitcoin new_splash_screen)? 	ynQuestion
2495	16240167	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/66fa5cbaefc7bbf0a5ac48303d72818088c9f04e for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2495	16240414	"Oh... Hmm.. ""src/qt/bitcoin.cpp:205: error: 'COPYRIGHT_YEAR' was not declared in this scope"" Wasn't it merged in a PR to the master in #2503? "	Emphasis
2495	16240777	"You can rebase to current master and update this pull, perhaps @BitcoinPullTester was doing it's work with a not up-to-date version :). "	nAnswer
2495	16249457	I like the splash screen image :) 	Statement
2495	16250737	"Same here, I really love it, great looking! Don't think my many comments lower that feeling :) @jonasschnelli . "	Emphasis
2495	16282083	@Diapolo my contributions are for the blockchain and not for my ego. :) so keep on finding details to make it better! 	Emphasis
2495	16317265	"Seems to work fine. I haven't checked the code changes, but can you at least squash them? "	Emphasis
2495	16331842	"@sipa: will finish the splash screen soon (1-2 days) then i try to squash. I once pulled/updates from master, ... i think i can't squash over the merge of the master? Can i? "	Clarify
2495	16332361	"@jonasschnelli it is possible, but more difficult, and not simply with git rebase -i (I think. That's why you should ideally not merge in these cases, but always rebase); easiest may be to start from a new branch with master, then git cherry-pick the non-merge commits.  "	Clarify
2495	16348493	fresh and clean pull request is #2524  	yAnswer
2495	16348650	You can just do a force push to the branch associated with the old pullrequest. You don't have to create a new one. 	Statement
2495	16349945	"@sipa: i did a --force push but the ""old commits"" where still in the commit list. The branch on my github repo was completely different to what i had localy (and pushed with --force). That's why i then restarted the whole thing. Hope you excuse. :) "	Clarify
2495	16351974	"Yes it's not a problem, he's just saying that in general you never need to re-create a pull request. Force pushing something new will override anything that is currently in the pull request. Sometimes, the old commits stay there for a while ~ 5 minutes but that's just github in the process of updati"	Clarify
2494	16110095	"I like that green now :), ACK from me. "	Statement
2494	16110147	finaly made the Diapolo happy. :) 	nAnswer
2494	16116766	@jonasschnelli Looks like you accidentally pushed your splash screen changes into this pull?  	Clarify
2494	16117764	@fanquake Indeed :) 	Emotion
2494	16130618	"grml....  i love git,.. but sometimes i get lost between branches, repositories and commits. :)  New PullRequest here: https://github.com/bitcoin/bitcoin/pull/2497 "	nAnswer
2493	16240309	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/9736430b85d8bc5ce0e742344cf2f525a79c6246 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2493	16317293	I'm afraid this will have to be conditional on the version of Boost used. 	Statement
2493	16318706	Note the pullreq to upgrade boost to 1.53 removed the chronos lib. 	Statement
2493	16322747	@luke-jr I know that my dependecy lib pull needs updates to reflect this. 	Statement
2493	16322763	@robbak Windows needed the chrono lib because we use Boost 1.50. 	Clarify
2493	16327982	This is why automake was invented... :p 	Statement
2493	16330177	Configure script: https://github.com/bitcoin/bitcoin/pull/2195 I think we're going to need it. 	Statement
2493	16348351	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/e622f35d2d3de667006b9c171928e36911aadef9 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2493	16348397	"OK, that was jut me doing a merge. Sorry for the noise.  I'll close this. By the time we have a configuration script, We'll have an updated boost, and will no longer need it.   There is someone else on the mailing list that has had the same problem on a linux variant, too.  Another work-around may b"	Clarify
2492	16218864	Updated to reflect @laanwj suggestions. 	Clarify
2492	16242354	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8d643c90a6e0f1b69f23738701cb7a090870669c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2492	16317317	ACK 	Clarify
2491	16098500	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4dc76ec1375ba6bd239d5f93dab193ddd0289edd for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2490	16099655	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/05d854d6bbacba3e0fa6e5ea15329640331912c9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2489	16099304	That message was removed by @gavinandresen :). See https://github.com/bitcoin/bitcoin/commit/a0a437c86ae404152de883ac6a1463e6641eda1c#L5L109 	Statement
2488	16097580	"@sipa Could be related to #2333, as I said, a former pull changed the message in ``Step 5: verify wallet database integrity``, whereas everyone seems to ignore step 7 ;). "	Clarify
2488	16324005	"I wonder how to formulate this correctly. It shouldn't suggest making a backup of the entire directory - just wallet.dat and database/ should be enough, and then removing database/. I wonder if that isn't better automated.  Then again, the whole try-to-salvage-a-wallet idea is a huge hack, and I sup"	Clarify
2488	17421301	Closed by #2558  	System
2487	16036592	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6a270c5f8182e93f56fb866c3494a0d66ff61625 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2487	16169521	"@laanwj Can we get this in, perhaps I can do another Transifex pull before 0.8.2 release :). "	nAnswer
2486	16028160	They are in their own directory now since 0.8: blocks/ 	Statement
2486	16028651	"Ah, good to know - my apologies on this!  (I somehow missed the update, I was still on 7.x) "	Emphasis
2485	16178708	"Ok this worked for me, limit number of connections to 30 keeps memory use below 400MB and VM at 1.9GB. Done this by setting [maxconnections=30] in bitcoin.conf "	Other
2485	16324590	"git head (to be 0.8.2) has some memory usage reductions and other related improvements. Nothing specifically reducing virtual memory, but could you retry with current code? "	Clarify
2485	16342236	"Confirm. Gentoo x86_64, bitcoind 0.8.1, huge memory using. 1 Gb!  Added: sipa, I tried and post a new issue. "	Clarify
2485	16348085	"I lowered to maxconnection=25 and on average mem usage approx. 400MB, not crashed so far but one time saw VM usage still at 16..TB limit. Sorry I'm not that technical, how can I test with current code (git head 0.8.2)? Do I need to compile something for that? Don't know if I'm able. "	Clarify
2485	16349684	"It's easy. Open Synaptic package manager, open Repository properties, select ""Source"", Apply, update repositories.  Open Terminal.  mkdir bitcoind-source cd bitcoind-source sudo apt-get build-dep bitcoind git clone https://github.com/bitcoin/bitcoin.git cd bit[TAB] cd src make -f makefile.unix bitco"	Other
2485	16368943	"Thanks for the instructions, now running version 80199, connections=84, memory usage <400MB, VM usage 1.2GB and running great (so far), see picture below: ![Uploading bitcoind v0.8.199.png . . .]() Would it make a difference if I run the GUI?  "	Clarify
2485	16369046	Here's the screenshot: ![bitcoind v0 8 199](https://f.cloud.github.com/assets/3152756/379341/c87a04f4-a594-11e2-9b85-15e9f966787f.png)   	Clarify
2485	28207864	"Closing this; bitcoind still requires a lot of memory, but some database parameters were tweaked it shouldn't be this bad anymore "	Other
2483	16014220	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4a1fba9351142af822550c0f26335a5e55b72e0c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2483	16017341	"Meh, I don't really care about the built-in mining code. Don't object to changing this either. "	Reject
2483	16017462	I always use it for Testnet mining. 	Statement
2483	16031383	"Well, * I do care about the internal miner, it definitely has several users on testnet * however, this patch breaks an existing interface * however, not sure we really care about such breakage  "	Clarify
2483	16057529	"NACK, I don't like breaking RPC interfaces.  I would ACK adding this information to getmininginfo if it is not already there.  "	Reject
2483	16061332	"NAK'd, closing.  I agree that adding to getmininginfo would be fine. "	Statement
2482	16014694	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/84b89afbd71c488df43c2aa00b3664911be1e773 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2481	16012986	"While you are on it, can you perhaps also change my ""hotfixes"" for getXYZAction into Qt signals :)? "	Emphasis
2481	16013262	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7e600cd92d2e6991afe26b19d9ad576a251350b9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2481	16014015	I'll take a look... 	Statement
2481	16040225	"ACK for the current version :), I compiled and tested it. "	Statement
2480	16451754	This is your fix. You can't trail like that in Boost(yet): http://stackoverflow.com/questions/11505811/creating-a-separate-boost-thread-for-endpoint-listen-in-a-multithreaded-progra  Sorry i'm not at my workstation to test but I have had that issue before and those directions fixed it 	Clarify
2480	17029511	"There are two issues here. The first is the reported problem (-salvagewallet not working with encrypted wallets due the the keypool initialization failing, see #2566 for a fix). The other seems a problem with exceptional exits in combination with Gavin's thread rewrite in Bitcoin-Qt. "	Clarify
2480	17347657	I'm testing a fix for the second issue; it is being caused by destructors being called after main() exits.  	Clarify
2480	17420053	Can confirm that this is solved by #2566 	yAnswer
2480	17515639	"Sipa, you have 0.010945 BTC waiting for you on bitcoinbounties.com. Please login with your Github account and provide a payout Bitcoin address so we can send it to you.  Thanks! :-) "	Emphasis
2480	17516621	"@ryepdx Great, but the ""Complete registration"" button after entering my address doesn't really seem to do anything... "	Clarify
2480	17518226	"Hmm, okay. What browser are you in? Can you email me at (redacted)? I don't want to spam up this issue page.  EDIT: Looks like Github started requiring a User-Agent string in their API calls. Updated the Github API library I was using and everything seems to be working now. How does it look on your "	Clarify
2479	16010497	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/1966c325a4e5e9de7c89f98869663272d33fab94 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2479	16010605	"Build failure above appears to be a false-positive--the patch ""bitcoind-comparison.patch"" needs to be updated to be able to apply to commits after 8c222dca4f961ad13ec64d690134a40d09b20813. "	Clarify
2479	16010890	this is just fking awesome! thanks :) 	Emphasis
2479	16017106	"Yeah, you can't just not respond to getblocks requests, that will break things (today). Even just serving it very slowly won't work well (the peers won't switch to a faster node).  Long term we need some better mechanisms for network load balancing. If a node is running out of resources, it'd be goo"	Clarify
2479	16017154	You could also stop setting the version services bit indicating you can serve the chain. That way peers will think you're an SPV node and won't ask for the chain. 	Clarify
2479	16020079	"@gmaxwell @mikehearn : Is there currently a proper way to refuse a getblocks request?  Right now there is a mechanism that will allow callers of the PushMessage functions to see if they failed to be sent or not, having them send a different response based on that is trivial.    It sounds like closin"	Clarify
2479	16020892	"I think the only current way to not respond to getblocks (and getdata, which is the actual expensive part) is not advertizing that you do in the first place. Which indeed means disconnecting or not setting NODE_NETWORK, right now.  This discussion will probably be needed soon anyway, if we want to m"	Clarify
2479	16032987	"Bandwidth limits are a common P2P knob, well within reasonable user expectations.  It has been said for years, in the Linux kernel, that  it was awful to put bandwidth limits inside each application, when instead smarter, higher level layers such as cgroups and tc/qdisc would be far more appropriate"	Clarify
2479	16033046	"Also, bandwidth limits simply makes the local node's behavior more predictable.  You can guarantee that your VPS does not exceed its bandwidth budget.  You may guarantee that bitcoind will never burst sufficiently to disrupt your game of Star Wars: The Old Republic.  There is nothing wrong with user"	Clarify
2479	16033183	"To be clear, NAK on anything that drops getblocks requests, or similar.  As @mikehearn said, ""you can't just not respond to getblocks requests, that will break things"" "	Clarify
2479	16034131	"Even a simple kb/sec upload limit would be fine.  There is no need for that to be N versions out.  Bandwidth limiting occurs naturally on the Internet.  Therefore, it seems exaggerated to suggest that an optional limit, mimicing a found-in-nature condition, will *break* much of anything.  "	Clarify
2479	16034175	"@jgarzik Right now ""bitcoin took two (or more) days to synchronize"" is _the_ most common complaint I hear about the software.  This is a direct result of fetching from low bandwidth peers. I do not think that we can afford to make that worse before we make it better. "	Clarify
2479	16034473	"make that worse is a severely constrained point of view.  Blocking a user from better control over their own private property (by arguing against bandwidth limits commits) is the wrong way to achieve that goal.  The net result discourages people from running peers at all, because the default softw"	Clarify
2479	16039010	"@jgarzik @gmaxwell I think you're talking about different things.  Nobody is saying that bandwidth control in general is a bad idea. It's a common expectation from P2P software, and a very reasonable one.  However, with the current software, effectively the first peer connected to is being used to f"	Clarify
2479	16039035	"Yeah, I'm all for a smarter networking protocol too - it's just that this patch doesn't do that, as is.  Also, bear in mind that if the networking protocol changes, everything that talks it has to be upgraded. Currently bitcoinj scores peers by ping time (amongst other things), because peers that ar"	Clarify
2479	16129105	No consensus. Closing.  	Statement
2478	16007828	"ACK ACK ACK ACK ACK  (I carry a patch on and off that does this, but it breaks from time to time and I get lazy and don't forward port it... and then regret it when something weird happens)  "	nAnswer
2478	16008123	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1c06aa98c63fff02679d446588fad06ae8cd706f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2478	16008873	"ACK -- although I think it is a symptom of lacking a partial hash search ability, such as that is built into git. "	Clarify
2478	16008956	"Partial has searching requires a more expensive index than exact matching and isn't needed for any of the network protocol or basic functionality of the software. Though what we use today can support it, getting stuck with it would be unfortunate when it only saves us some space in logs. "	Clarify
2478	16054508	"Can this be implemented as a command line option to either display the full hash or an abbreviated hash please? I far prefer block hashes to be 15 characters long i.e. substr(5,15), and txs to be 10 chars long. "	Clarify
2478	16054568	I personally don't care about the esthetics of the debug.log layout. What do others think? 	whQuestion
2478	16057116	ACK 	Clarify
2477	16005214	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/27cc0d7fd248fac60705609c51ce25e4db04a758 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2477	16011198	Cute!  	Emphasis
2477	16013094	"I think the bitcoin_logo_doxygen.png looks a little blurry compared to the former version. I'm not yet sure if I like the new testnet color, I will wait for pull-tester to build and then try it out :).  @jonasschnelli Very nice work, I have no passion to be a graphics-artist and love that work you s"	Clarify
2477	16033451	"I also liked the darker testnet color a bit better. Having said that, it's only the testnet, the poison green is meant to be kind of a warning color :) In Andreas Schildbach's bitcoin-wallet client a different take on the warning pattern is used: https://play.google.com/store/apps/details?id=de.schi"	Clarify
2477	16034025	"I'm fine with testnet, if you are... ACK for the mainnet icon ;). "	Clarify
2477	16038680	"@Diapolo: right, the doxygen icon was blurry. It's fixed and pushed now. "	Statement
2477	16040021	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a653191f748f56addf0cfa219319cfc5358b962d for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2477	16098261	@jonasschnelli I'm now using your current icons with my local build and I think you should also update the toolbar.png and toolbar_testnet.png versions. Specially on testnet the combination of the new color with the old one in the Windows system-tray looks really weird/ugly :). Also I still think th	Clarify
2477	16098771	@Diapolo your right. I did not take care of the testnet toolbar. I will no update the color more according to the old testnet color (was more warm) and also take care of the testnet toolbar. 	Clarify
2477	16167568	@jonasschnelli Can you take a look? I think the new icon is missing a little transparency or fading on the outer ring and seems smaller (Or is this intended?) for me on Windows.  (left old / right new) ![Icon](https://f.cloud.github.com/assets/1419649/361693/b8e5db5a-a1cd-11e2-85c1-8610c917b47e.png)	Clarify
2477	16169866	@Diapolo let me startup my Windows WM... 	Statement
2477	16171651	fixed and placed in PR #2497  preview:  ![preview](https://f.cloud.github.com/assets/178464/362032/7cb57294-a1dc-11e2-92c6-8b4143747083.png)  ... and the remove of the transparency was a conscious decision. 	Clarify
2475	16002624	I think this is just the tor browser-bundle specific. Tor itself still listens on 9050.  	Statement
2475	16154975	Yes. System Tor uses 9050 and TBB uses 9150. 	Clarify
2475	16155181	Might it be worth adding an option for trying 9150 after 9050 as many users use TBB rather than straight Tor? Or defaulting to 9150? Could there be a security risk from using just -proxy rather than -proxy with -nodnsseed? (IIRC the -proxy when it detects Tor no longer does DNS seed and -noirc) 	Clarify
2475	16159206	The underlying issue here is that we detect tor-ness (and thus extra anonymity features) of a socks proxy based on the port. Currently this is only 9050. This isn't a very flexible or robust approach.  Any better suggestions? 	ynQuestion
2475	16159759	"Here are the Tor SOCKS extensions: https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=socks-extensions.txt  This could be used to detect Tor: 4. HTTP-resistance    Tor checks the first byte of each SOCKS request to see whether it looks   more like an HTTP request (that is, it starts wi"	Clarify
2475	16163012	"In that case, why is this an issue at all? Just use the new port in your proxy settings. "	Statement
2475	16188624	"Thanks gmaxwell, I didn't realize dnsseed worked safely over a proxy. So there are no known leaks when using a proxy?  I received this from the Tor team: ""After a quick look at the code (or/buffers.c:parse_socks), it looks like there's a way, but it is a little bit of a hack. To help users that have"	Clarify
2475	26706497	"Can be closed AFAIK, as bitcoin does nothing specific depending on what the proxy port is anymore. Users that have Tor running on port 9150 should simply configure the client to use that port.  "	Clarify
2474	15999537	What is the schedule for 0.8.2? I'm asking because of translation related pulls and a fetch from Transifex ;-).  ACK of course 	Clarify
2474	16001785	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2b34779ae26edabbb46f4cdaa32375b6166ced66 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2473	15998395	"github supports downloading tarballs; see   https://help.github.com/articles/downloading-files-from-the-command-line  Closing this. If you like, submit a pull request to one of our READMEs describing how to get a tarball.  And talk to github about using the .xz compressor.  "	Clarify
2473	15999593	"github supports only tarballs that are generated on the fly, so their checksum will change once they go out of the cache. also, it does not support http so it is not possible to fetch the downloads with busybox wget (as is done in my distro). so that doesn't help at all.  edit: so please reopen this"	Clarify
2473	16009701	"even if that's true, that still leaves us with the problem that github is <b>HTTPS</b> only so the download url stays inaccessible for busybox wget. "	Other
2470	16002348	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/35ed704d4470c26f30fadc76d068791d01260ee5 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2469	16002917	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/87dd6035e583d45d6c2e464867425ee1a9cad8e9 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2469	16097483	@laanwj Can this also make it into 0.8.2? 	Emphasis
2469	16098901	ACK 	Clarify
2468	20870387	"Not relevant anymore, as code was moved to Shutdown() in init.cpp. "	nAnswer
2466	15965320	"Oh, it got solved in the bitcointalk thread. I will try the solution in there. "	Statement
2465	15962841	"@petertodd That was, what this pull is for afaik :). "	Statement
2465	15964989	Oh of course.  ACK 	Clarify
2463	15940658	It is related to Sketchbook pro. When the program is open doing so will cause client to hang 	Clarify
2463	15940700	It also happens when you press ctrl+c many times. 	Clarify
2463	15941060	"Can you please be more detailed, which OS and which client version are you using (Bitcoin-Qt and not bitcoind I suppose)? Where are you pressing ctrl+c, which tab is open and in which field is your mouse cursor? "	Clarify
2463	15941143	"I'm sorry, OS  is Windows 7 Ultimate, Bitcoin-Qt, it hangs no matter which tab is open.  "	nAnswer
2463	15941181	"Which Bitcoin-Qt version? And you mean just pressing ctrl+c, no matter what is selected? Is the client window focused (active) during that? "	Clarify
2463	15941202	"I have tried to replicate the issue when the cursor is in the send coin address field, send coin amount field and the main tab "	nAnswer
2463	15941223	"0.8.1 beta. No matter what is selected, even there is nothing selected it will also hang after about 6 presses "	Clarify
2463	15941261	"Also even if the selected item is in google chrome it hangs also. that means when i copied the item(e.g. mtgox payment address) and then look at the client, it hangs.(the client window is not active) "	Clarify
2463	15941298	And it hanged again after about 16 presses of ctrl+c. without selecting anything. 	Clarify
2463	15941407	"I'm sorry, I can't replicate this issue, I'm on Win7 x64 SP1 here with official 0.8.1... even only pressing ctrl+c doesn't hang the client. There has to be some problem with your system. Perhaps related to another running program!? Can you try to boot into Windows safe-mode and try again there (pres"	Clarify
2463	15941425	ummm try it with google chrome and utorrent open? 	Other
2463	15941431	cos it just hanged again 	Emphasis
2463	15941490	"How exactly I produce this issue: Google Chrome running, utorrent running, bitcoin client running on top of those two, at main tab, press ctrl+c repeatedly. It hangs. "	Clarify
2463	15941938	"I have no Google Chrome and no utorrent and I won't install them for testing this, sorry ;). IMHO this is not a Bitcoin-Qt issue, perhaps a Qt issue, perhaps how these 3 programs interact with the clipboard, dunno. "	nAnswer
2463	16048481	Might be. Qt creator just somehow crashed after copying some error message from compiler output =.= 	Other
2463	16048858	Did you build Bitcoin-Qt for yourself via Qt Creator? What Qt version are you using? 	whQuestion
2463	16053912	"I downloaded the pre-built version, and i'm just playing with Qt-Creator for fun...But since you asked, the Qt version is 5.0.1. "	nAnswer
2463	16054937	"What the... http://puu.sh/2wgNc  and the paste button and hot key is not working if  i don't close the program.(i.e. it doesn't paste anything, but right after you close it it will paste). It happened after I have clicked copy address right after creating a new one. Is it some kind of timing problem"	Clarify
2463	26784212	I've never seen this behavior or heard about it from anyone else. I'm afraid that this is a problem with the specific configuration of your system. It is impossible for us to debug that for you.  	Clarify
2462	15940496	It is expected and not terribly unreasonable for bitcoind to use 350mbytes of ram. Your system does not have enough memory to support incoming connections. Disable listening and all should be fine.  ... Perhaps we should do this automatically.  	Reject
2462	15944572	"Bitcoin(d/qt) is known for using quite a lot of memory for database caches and indexes. I don't think it is a memory leak, you may have too little memory to run a full node.  Also in general I would recommend against using 64 bit on a machine with ~400MB of RAM if you have the choice. Due to the dou"	Clarify
2461	15940635	"@sipa Does this fix the non-working IBD after importing blocks from disk (but not up to the height the network currently has - so after disk we need to switch to network)?  Edit: I'm creating a build with that patch and will see ^^.  Edit 2: Very nice, it immediately switches to network sync, when i"	Clarify
2461	15946557	"@Diapolo Indeed, that's what it should do :) "	Statement
2461	15994137	"@sipa What about an information, what the current sync node is? Perhaps in getinfo or getpeerinfo (isSyncNode or something) RPC? "	whQuestion
2461	15999002	"I think that can be added to getpeerinfo, indeed. "	Statement
2461	16003420	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1cd6ae536a09143eb3cd95773a949255462af091 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2461	16019318	"New commit: add bytessent, bytesrecv and sync to the getpeerinfo output. "	Statement
2461	16019942	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/86648a8d16699ab392508a48bb867d3fc4f7d6cf for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2461	16032727	ACK  	Clarify
2461	16039376	"@jgarzik To comment on a remark you made in another pullreq: this patch effectively only uses the scoring mechanism when the current sync node goes away, even though it may not be the ""node in practice being synced from"" anymore. When IBD is complete, and a node (different from the designated sync n"	Clarify
2460	15921225	I'd rather try to fetch this from Checkpoints:: 	Statement
2460	15921611	"How would I do that? I thought about a global constant somewhere, to not have that value in different places, but that was also not done while the mainnet Genesis block's time was added there ;). "	Clarify
2460	15921923	"Oh, I'm wrong- I think the genesis time was already in checkpoints. Let's ignore it for now, and fix it later. "	Clarify
2459	15944032	Maybe this will solve some duplicated error/warning messages about the translations as well  	Clarify
2459	15944349	Best thing is you try that before merging it :). 	Statement
2459	15972367	"Works fine for me, waiting for pull testser before merge. "	Other
2459	15985853	Works fine here. 	Reject
2457	15889141	Let's see if pull-tester is happy with that :). 	Statement
2457	15890796	"Hah, finally a reason for me to install qt5 :) "	nAnswer
2457	15971397	Still waiting for pulltester... ACK from my testing 	Clarify
2457	15974562	build is broken on mac because Qt5 5.0.x has no longer platform dependent function. There functions make problem: - qt_mac_execute_apple_script - qt_mac_set_dock_menu - pixmap.toMacCGImageRef() 	Other
2457	15987135	"@jonasschnelli Can you give some more details in which file the compilation fails and what the exact errors are? I can only talk about the Windows build, which should compile just fine. "	Clarify
2457	15993712	@Diapolo i try to analyse it more clear and maybe i'm capable to offer you a pull request with some fixes. 	Clarify
2457	15993805	Sounds good :). @laanwj Linux doesn't suffer any compilation problems? 	Clarify
2457	16002513	"should we not create a Qt5 branch for Qt5 support? On the mac side, there are some changes to do: - testnet (green) doc icon (""switch icon"" is broken in Qt5) - Growl support (needs some code fixes) - x86 support  My recommendation would be to drop Growl support and add support for the new Notificati"	Clarify
2457	16002559	And some screens from mac client with qt5.  ![Bildschirmfoto 2013-04-06 um 21 34 03](https://f.cloud.github.com/assets/178464/347750/137fd528-9ef1-11e2-980d-8fa15a1dc713.png) ![Bildschirmfoto 2013-04-06 um 21 34 14](https://f.cloud.github.com/assets/178464/347751/1e65d992-9ef1-11e2-9b0e-e5f74fa1fb9d	Clarify
2457	16003935	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fbece27b608e7fe99c02b531735b445b6100fb4f for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2457	16012908	"@jonasschnelli I think you can base your pull request on this one, as I don't yet know how I could add your pull-request into my repository (was never the case before ^^). But it's rather GREAT, that you are able to help with Mac GUI wise!  I don't think we need a Qt5 branch, as long as Qt4 compatib"	Clarify
2457	16012944	"At least @BitcoinPullTester is happy, does he also build Mac binaries? Perhaps not ^^. "	Other
2457	16013025	"Well I'd prefer not to have a separate Qt5 branch. As long as there are no critical issues with Qt4 compatibility, I'd like to merge it.  But it would be possible to do it temporarily...  Pulltester doesn't build on/for Mac at the moment. Cross-building for Mac would be nice but is hard to do, and w"	nAnswer
2457	16013113	"@laanwj I would also love to see that merged, perhaps @jonasschnelli can then create pulls based on current master :). How far is 0.8.2 away, as we need to fix the Mac stuff after merging it.  Edit: That Mac look is quite nice, but I really fell in love with Fusion ^^. "	Clarify
2457	16013685	[misinformation deleted]  	Other
2457	16013734	"@laanwj I think we need to think about translations for that intermediate releases, which are based on own branches then!? But at least this means we can safely pull Qt5 and iron it out for 0.9? "	Emphasis
2457	16013773	"@diapolo I'd be for a ""no message changes in intermediate releases"" policy, to prevent that from being a problem. And yes, if there are only superficial issues on Mac that can be resolved along the way, nothing wallet-eatingly bad, I think we can merge this (as soon as you've rebased). "	Clarify
2457	16013885	"Rebased!  Edit: I think that ""no message changes in intermediate releases"" policy is a good one! Any idea, if this should be written down somewhere? "	Clarify
2457	16014067	"OK I am sorry to disappoint you but just heard on IRC that we *are* going to spin off a 0.8.2 from HEAD. Severe case of miscommunication here :(  So, let's make a Qt5 branch, then...  https://github.com/laanwj/bitcoin/tree/Qt5  When you make a pull request, be sure to select branch Qt5 of repository"	Clarify
2457	16015372	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6be5c36218193395188877980d8175806dcdb257 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2457	16015885	@laanwj So I need to add your remote repo via ``git remote add laanwj git://github.com/laanwj/bitcoin`` and push my Qt5 branch to your master via ``git push origin laanwj/master``? 	Statement
2457	16017289	"Diapolo: yes to the ""remote add"", but you can't currently directly push to it; if you have qt5 specific changes you can create pull requests to my repo instead of the main one, so I (or you, when I give you commit access) can merge them there.  (and eventually I'll merge it here upstream all at once"	Clarify
2457	16017514	"@laanwj How do I create a pull-request via the git command-line? Normally I push to my repo and create a pull-req for Bitcoin master directly via Github website.  Edit: Nevermind I got it, I can chose you as base repo to open pull-requests via Github, so no need to fiddle around with the command-lin"	Emphasis
2457	16017731	"I am not aware of any method to create a pull request on the command line. Indeed, you can simply push to an own branch and use the github interface :) "	nAnswer
2457	16038744	"As soon as @Diapolo has open a push request on https://github.com/laanwj/bitcoin Qt5 branch and @laanwj has merged, i will create also a PR with my mac QT5 changes. "	Clarify
2457	16039288	@laanwj @BitcoinPullTester i think cross-platfrom builds are not possible. The apple frameworks are only available on Mac OSX.  I can try to set up a hackintosh on one of my debian-servers with VMWare and give you a jenkins node. How does the pull tester works? Manually executed? Or does the tester 	Clarify
2457	16040716	"@jonasschnelli laanwj already has this Qt5 branch in his repo, which is also the master repo. So you can start supplying patches and even I'm allowed to merge them in his repo. "	Clarify
2457	16042578	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7cb68a5306cf1dcda1011a0d163c0ebdb916cb55 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2457	16046429	One small correction: it's not the master branch in my repo but the Qt5 branch (which is the default branch) that you should send pull requests to. 	Clarify
2457	16085056	"The last pull-tester has a display problem on win32 - the transaction history tab has all columns collapsed to the left, so only ""Address"" is showing. They can be expanded, but the column width is not a saved setting and the issue occurs again upon next start.  Pull-tester uses Qt v4.8.2, whereas th"	Clarify
2457	16287203	"This screws up transactions display with Qt4 because resizeSection(..., QHeaderView::ResizeToContents) doesn't behave reasonably... "	Statement
2457	16287335	@luke-jr Can you check if this also happens with Qt 4.8.3 / 4.8.4? AFAIK I never had this problem with the Qt4 version of my local build. 	Clarify
2457	17570583	"@laanwj AFAIK there were not that many changes to the Qt5 branch or did @jonasschnelli add further commits to your branch? I'm asking in the light how we intend to behave with Qt5 available now as 5.0.2, which seems rather mature. "	Clarify
2457	17588062	"Yes, there have been further commits to the branch.  It will be merged after 0.8.2 is released.  "	Statement
2457	18741150	Superceded by #2721 	System
2456	15985394	ACK apart from one nit. 	Clarify
2456	15987722	Nit was fixed :). 	Statement
2453	15875348	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/92a129980fb9b506da6c7f876aa8adb405c88e17 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2452	15846426	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8726de26ee0010eaf64d44d69cc9b8e09e580a37 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2452	15846519	Thanks for the fixes!  @codeshark Next time you should fix your own bugs :p 	Clarify
2450	15838945	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0dcf9e53089d0955a1a939f8c2bb7a01a919eeec for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2449	15834223	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c26a0f410e4f3ed95022532131996632b3e620ef for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2448	15791573	"deleted pull-tester comment, I'm working on the pull-tester machine...  "	nAnswer
2448	15815862	FYI the two are equivalent so effectively this changes nothing;  #define qApp QCoreApplication::instance()  Merging it for consistency.  	Clarify
2447	15817640	There is a lot of redirection happening (methods forwarding to other objects) that may somehow be solved more elegantly by using signals/slot routing. But I don't see the duplicate code or messages in a first glance. Can you show a link to the line numbers?  	Clarify
2447	15821770	"Take a look at ``WalletView::createActions()`` for example, it's nearly identical to the stuff in bitcoingui.cpp (and now even behind after #2428, try a diff and you'll see) and seems to be not used at all, because I have the new tab namings + that export stuff not working anymore. "	Clarify
2447	15828392	"Also there are at least ~10 strings that now showed up on Transifex requiring a re-translation e.g. ``&Change Passphrase...`` or ``Change the passphrase used for wallet encryption``, which means they are also duplicated. "	Clarify
2447	15837761	@laanwj IMHO the duplicate QAction and connect() stuff in ``::createActions()`` is causing some trouble currently and this needs cleanup badly. That is for sure a blocker for any new release and I'm not sure how to fix that. Can you perhaps have an in-depth look? 	Clarify
2444	15770956	I like it  ![Alt desc](https://dl.dropbox.com/u/7383846/new_bitcoin_qt_mac_icon.png)  ![Alt desc](https://dl.dropbox.com/u/7383846/new_bitcoin_qt_mac_icon_white.png) 	Emphasis
2444	15771076	What license is it under? You should likely update doc/assets_attribution as well 	whQuestion
2444	15772005	"License: i would say MIT. If MIT is a problem, then public domain is also fine for me. When the pull request should be fine, then i also will update the assets-attribution as well as other icons/graphics. "	Clarify
2444	15772375	"MIT is best, as it's the same license as the code, thanks.  "	Statement
2444	15774341	ACK 	Clarify
2444	15774744	"The ""B"" of the original art is white instead of transparent (rendering from vector art): ![bitcointranslogo](https://f.cloud.github.com/assets/1425520/328398/983ccb38-9b98-11e2-86fd-8ab3e3fab570.png)  It was released into the public domain; although this is not a legal construct, it means that relic"	Clarify
2444	15775268	"I would also prefer a ""white"" version. But it's might make those transparency-lovers feel bad? My recommendation: white version according to this mockup:  http://dl.dropbox.com/u/7383846/new_bitcoin_qt_mac_icon_white.png   "	Clarify
2444	15775675	I went through this process with the icon of Bitcoin Wallet about 2 years ago. I added a subtle gradient and drop shadows. Maybe you just want to use that?  http://bitcoin-wallet.googlecode.com/git/wallet/graphics/bitcoin-logo.svg ![market-app-icon](https://f.cloud.github.com/assets/743306/328468/74	Clarify
2444	15775921	"My opinion on: http://bitcoin-wallet.googlecode.com/git/wallet/graphics/bitcoin-logo.svg  - Outer-Shadow to ""strong"" - same shadow-cut problem as current icon (must be scaled) - B letter shadow looks like ""b"" and ""coin-background"" are not well ""integrated"" and it's a bit over-3d-effected  I still wo"	Clarify
2444	15776123	"@schildbach having a svg version is nice; if its decided to use your icon, would you be willing to license it under MIT or public domain? (I vaguely remember the one in Bitcoin Wallet is LGPL) "	Clarify
2444	15776410	"@jonasschnelli You can adjust everything by parameters in the SVG. See the viewBox comment. I deliberately chose ""0 0 1 1"" as the normal size, because that's easier for embedding.  @laanwj The icon is adapted from the original by BitBoy. See this thread for the original: https://bitcointalk.org/?top"	Clarify
2444	15776709	"@schildbach Yes, from what I understood bitboy's license is public domain, so that's ok.  "	whQuestion
2444	15776962	"@schildbach, @laanwj: i'll recommend a inverse shadow for the ""B Letter"" because then it looks more integrated and also more near to the current, transparent version. I'll try now to create a SVG version (or optimize the current one). If LGPL, i recommend to create a new SVG under MIT or as public d"	Clarify
2444	15777138	I still like the idea to have one icon for all OSes ^^ is that a whish only ;)? 	Statement
2444	15777219	"@Diapolo: for sure. But i think it's more efficient to first agree on a icon design (SVG, hires). If done, i'll then can create all necessary sub-icons (rendered icons).  That's why the commit only includes the mac icon (my starting point) "	Clarify
2444	15791632	"deleted pull-tester comment, I'm working on the pull-tester machine... "	nAnswer
2444	15798784	"@schildbach, @laanwj: i've just added a SVG file. The svg is a overhauled version of bitboys file. I did some vector combinations. The shadow is very light. The ""b"" is no longer transparent. http://dl.dropbox.com/u/7383846/bitcoin.svg  I've also added the white version of the mac osx icon. License o"	Clarify
2444	15807198	@jonasschnelli Nice work! 	Emphasis
2444	15811899	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/72fcbb15ea61b9d97115c5ea40c4e292b8efb55c for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2444	15816213	Very nice! Agree with getting rid of the transparency. 	Clarify
2444	15943811	Just going to merge this. I look forward to the Windows/Linux icons.  	Statement
2444	15944470	I'm also looking forward to see updated icons for Windows and Linux :). 	Statement
2444	15944678	coming within the next days 	Clarify
2444	15948539	new pull request for the misleading PSD file in the assets-sttribution.txt file.  https://github.com/bitcoin/bitcoin/pull/2465 	Statement
2443	15772221	"ACK on most changes, but I think you should leave on_XXX_clicked() slots for the automatic signal/slot assignment by Qt designer, otherwise it's pretty confusing. For manual assigned slots, just use lowerCamelCase. "	Clarify
2443	15774940	"@laanwj My fault, I fixed the renaming stuff :). What you observed was a thing I intended to avoid ^^. "	Clarify
2443	15813042	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4e6eefb04bdf15b377b5d23057d29e777134711e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2443	15862472	@laanwj Updated to ``receiving address`` :). 	Clarify
2443	15870402	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b9564d7e541c793a9b9f3f830755d080f595bebc for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2442	15779268	"@laanwj I reverted the qApp thing, should be fine now :). "	Statement
2442	15813997	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bfad9982f84ef97b0f73eb260cf64e3bbeb2e8f0 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2441	15774501	Removed the #ifdef and added info in the comment that QClipboard::Selection is a NOP on Windows. 	Statement
2440	15718060	Good catch 	Statement
2439	15714743	rpcConsole->setClientModel(clientModel); can't be called from ``void WalletView::setClientModel(ClientModel *clientModel)`` as rpcConsole isn't accessible from there. 	Other
2439	15714981	Fixed by: #2440 	System
2438	15721213	The Selection clipboard likely doesn't exist on windows.       QClipboard::Clipboard     0     indicates that data should be stored and retrieved from the global clipboard.     QClipboard::Selection     1     indicates that data should be stored and retrieved from the global mouse selection. Support	Clarify
2438	15756148	"I'll try that and create a patch later, if ``QClipboard::Clipboard | QClipboard::Selection`` does the job. "	nAnswer
2436	15714514	Seems we now have 2x exportAction in bitcoingui.cpp connected to the menu and toolbar and in walletview.cpp but not connected to any GUI element. 	nAnswer
2436	15765290	@CodeShark Can you take a look :)? 	ynQuestion
2436	15778695	I'll take a look later today. 	Clarify
2435	16329759	same issue 	Other
2435	16358197	"Same here, 0.8.1 on 10.8.3 on a rMBP.  I can't get it to rebuild; fails every time.  Then crashes, here's the log:  https://gist.github.com/JustinAiken/cd49bdc69ce96f04ee94 "	Emphasis
2435	16358932	@gavinandresen Can you take a look here? 	ynQuestion
2435	16756763	Same error for me. I'm on an iMac with SSD. Downloaded the whole block chain a couple of times and getting this error almost every week when using 0.8.1 	Clarify
2435	17019780	"Same problem here on my MacPro, OS: 10.8.3 "	Statement
2435	17136521	"Same problem here too. Macbook Pro OS X 10.8.3. Contents of debug.log in Bitcoin data directory are here:   https://gist.github.com/watchedman/5477355  The pertinent error message in the log as far as I can tell:  ""LevelDB read failure: Corruption: block checksum mismatch""  Like the OP, this began a"	Clarify
2435	17222945	"I'm trying to reproduce that problem without success. @watchedman which version do you use? 0.8.1? downloaded from where? built by yourself? Does the error only happens when the blockchain is ""mostly"" downloaded? Or also when you just have some transaction stored? "	Clarify
2435	17226970	"@jonasschnelli Yes I'm on 0.8.1. I did not build it, I just downloaded the Mac OS X binary executable for that version.  Strangely enough, this error ended up going away by itself. After I posted here the other day, I tried opening Bitcoin-QT again, and that time it successfully rebuilt everything, "	Clarify
2435	17234368	"Yes, my issue randomly went away too. "	yAnswer
2435	17440965	I've been having this problem for the last several weeks.   	Clarify
2435	17567557	"Duplicate; hopefully fixed by the ""don't use too many file descriptors"" fix. "	Clarify
2435	24009627	Nope. Still having the same problem. 	Clarify
2435	24120338	"Having this problem, 8.1.4 "	nAnswer
2435	28145289	"I'm having this problem, OSX 10.8.4 "	nAnswer
2434	15775317	"I would recommend creating a BSD hardlink instead. Reading up on alias (an Apple ""shortcut"" file, not using any *nix construct), it looks potentially dangerous anyway, as it can search your hard drive when files are changed, and might just as easily pick another datadir:  ""Since any of these propert"	Clarify
2434	15784779	"Workaround: symbolic link the chainstate/ and blocks/ subfolders using the Terminal.  I don't know nuthin about how OSX aliases work under the covers, are they just symlinks? "	whQuestion
2434	15804702	"@gavinandresen: they are more than symlinks, they are designed not to (easily) break if you move the target.  @qubez You cannot - from the GUI - create hard or symlinks in MacOS. As a Mac user, you create Aliases. Symlinking worked for me, but how many Maccies will go to the terminal and symlink the"	Clarify
2434	16135443	it would be fixable... but i'm not sure if it's worth. Mac aliases are files with a very specify steve-jobs-like format. It's readable with some mac foundation frameworks (code examples: https://github.com/rentzsch/bdalias). The BDAlias helper (see link above) gives some access point on how to handl	Clarify
2434	16163515	"IMO not worth it. We'd like to have less platform-specific code, not more, especially in the core code (GUI is excusable in some cases). "	Clarify
2434	16163705	@laanwj agree. Close? 	whQuestion
2434	25101681	+1 to close 	Statement
2432	15692512	This is the URL for preferred python jsonrpc: https://github.com/jgarzik/python-bitcoinrpc 	Statement
2432	15721622	"@jgarzik bitcoin-python includes your changes to jsonrpc, it is a bit thicker wrapper that pythonizes the API and adds some convenience features (converts error codes to specific exceptions, parses the bitcoin config file, etc) "	Statement
2432	15721755	"Can it be merged into https://github.com/jgarzik/python-bitcoinlib ?  IRC discussion seemed to favor folding the most popular python RPC module, whatever it is, into that larger library. "	Reject
2432	15814012	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/251c1f90297bb1bb23711ad075f91930188ac4c8 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2432	16866705	test.log says: + cd .. + git apply /mnt/test-scripts/patches/temp-revert-1.patch + git apply /mnt/test-scripts/patches/temp-revert-2.patch + git apply /mnt/test-scripts/patches/temp-revert-3.patch + git apply /mnt/test-scripts/patches/temp-revert-4.patch + git apply /mnt/test-scripts/patches/bitcoin	Other
2432	19911858	"python-bitcoinlib and python-bitcoinrpc should be used, rather than supporting a third, new library. "	Other
2431	15687829	ACK if this doesn't conflict with Gavin's thread cleanup. 	Reject
2431	15718121	ACK 	Clarify
2431	15762460	ACK 	Clarify
2431	15779182	Ping @gavinandresen  	System
2430	15686585	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ae30da5a08fa08ba926ee4a1fef48fcbbf1fe4bc for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2430	15687106	I think this may be useful addition. Can you squash into one commit? 	ynQuestion
2430	15701190	"Isn't it better to use umask first so that it's created with the correct permissions from the start, rather than creating it with the wrong permissions and then chmodding it (as this pull currently does)? "	Other
2430	15709814	"@rebroad the patch continues to use Boost for creating the directory cross-platform. What is added is for Unix systems to set the permissions more restrictive after creating the patch. This should also upgrade permissions for existing users, where as doing a new `mkdir` will not. "	Clarify
2430	15712856	You mention ``boost::filesystem::permissions()`` why not include code with ``#if BOOST_VERSION >= 104900``? 	Other
2430	15718013	@rebroad This is strange. We *are* setting the umask (in init.cpp).  Also my .bitcoin filter has the right permissions even without this patch.  @Aeyoun Are you sure it manages to create the directory with wrong permissions? Can you reproduce this? 	Clarify
2430	15814030	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/b05e909d089c842cc155a60da3fdf3609abaca5c for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2430	16057062	So is there any reason why we would need this? Why would the umask call not be enough? 	ynQuestion
2430	16057835	"Closing this, because init.cpp already sets:     umask(077);   "	Other
2429	15670283	"If the workflow for receiving coins is ""1) create a new receiving address..."" then  maybe the message could be improved as well, it's currently: ""These are your Bitcoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you."" "	Clarify
2429	15674764	"Agreed. The default address should be shown on Qt as it was in the original client. However the language should indicate the temporal nature of the current address shown; ""Your Bitcoin Address"" makes it seem like this is the only one that you get and it won't be automatically changing. (screenshot f"	Clarify
2429	15687170	"No, the ""default address"" will not be back. It encourages unlabeled addresses, it causes automatic empty labels to be created, and confuses users because there is a ""changing address"". No way we're going back there.  I'd propose changing the ""Receive"" tab so that the primary function is not a list, "	Clarify
2429	15701578	"How about showing ""your last used"" bitcoins address, and ""your new bitcoin address"" for one which has not been used? I've already encountered problems with ""new address"" giving me an address that's already been used for change. I think ""new address"" should only ever give unused addresses. "	Clarify
2429	15989902	"Adding to this,  apparently the address use triggers some OCD in some users and they _really_ want to ""delete"" addresses which are ""cluttering"" the list.  Any revisions here should be mindful of that and help those people out without creating a coinloss risk. "	Clarify
2429	16357842	"@rebroad: dealing out change addresses as ""new"" sounds like something that warrants a seperate issue "	Other
2429	16910088	Ugh. More indications that low-level abstractions such as addresses and individual keypairs are dangerous to users. They should just regard a wallet as a wallet.  https://bitcointalk.org/index.php?topic=185185.msg1927752#msg1927752  	Statement
2428	15670896	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9940db0794c9a6acdb76406569ba6668ff732dde for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2428	15671706	"Probably, rename it to ""Addresses""? If it's not a real address book :) "	Clarify
2428	15718307	ACK 	Clarify
2428	15756007	"ACK  @laanwj If you get this in today, I'll create another translations update for this. Also, I remember I asked about a better general translations process in line with release cycles and whether we should drop languages, that are below a certain percentage translated, what do you think? "	Clarify
2428	15772630	"@Diapolo yes I agree. Is 'updating translations' something that could be made part of the release process in doc/release-process.txt? I suppose so?  With regard to dropping translations, I don't know. I suppose below a certain % you could just as well have no translation. Do you know how other proje"	Clarify
2426	15762593	0.7.2 is outdated... what exactly happens when you are using 0.8.1? Can you post your debug.log for further information? 	Clarify
2426	15779257	It brings up a dialogue box telling me bitcoin-qt quit unexpectedly. The only way i can open it again is by going back to 0.7.2. Here is the report it gives me. Thank you so much for your help Diapolo. It is appreciated. :-)  Process:         Bitcoin-Qt [199] Path:            /Applications/Bitcoin-Q	Other
2426	15783676	Can you take a look at #2405 and see if that is related. 	Statement
2426	15783708	@gavinandresen ping 	System
2426	15784140	"Looks like part of your block database is corrupt on disk.  Shut down Bitcoin, back up your Library/Application Support/Bitcoin/wallet.dat file, then remove everything from Library/Application Support/Bitcoin/ except for wallet.dat and re-sync a fresh blockchain. "	Other
2426	15784305	Starting with -reindex will probably work just as well. 	Clarify
2426	15937861	"Diapolo, gavinandresen and sipa, Thank you all so much for your help. It is now synchronizing with the network. :-) I couldn't have done it without you all. I appreciate it. :-) "	Emphasis
2426	15940533	"@Kjlawrence63 Very nice, so if it's working now, please close the ticket :). "	Clarify
2426	17133577	"This morning I suddenly had the same issue, I confirm that starting the BitCoin-Qt executable with *-reindex* did the job.  I think using *-reindex* should be the suggested solution to this problem since it's more straightforward than deleting the data directory by hand as gavinandresen suggested as"	Clarify
2425	15646071	Thank you! 	Emphasis
2425	15668456	"@stephantual Can this issue be closed now? if so, you should have access to do this AFAIK. "	Reject
2425	15670471	"Yea, master is ""0.9.0 dev"". I agree that the client version should probably be bumped. "	Clarify
2423	15677633	"@TheBlueMatt Can you drop the #2409 included code, or switch to its latest version? They should combine cleanly anyway. "	Clarify
2423	15678887	No longer depends on #2409 	nAnswer
2423	15701804	"How about separating askedfor blocks and askedfor transactions? That way, one growing large won't affect downloads of the other. "	whQuestion
2423	15716596	"@rebroad meh, that just sounds like useless duplication...in that case, anyone will just send block invs so that you re-request blocks more often, sounds like a better way to let an attacker be more targeted. "	Clarify
2423	15721394	"OK, switched to MAX_INV_SZ for the map's limit...Im not a huge fan of such a big number, but since its already a protocol rule it makes more sense to use that. "	Clarify
2423	15795943	"This has passed a couple days of in-valgrind production testing, but I think the new limited map needs some unit tests. OTOH, I'd like this merged ASAP for previously discussed reasons.  "	Clarify
2423	15796920	"If my understanding of how maps are represented at runtime in STL is correct, this should mean at most ~6.2MB of memory for 50000 invs (with 8-byte pointers, with 4-byte pointers is 4.4MB). "	Clarify
2423	15797235	@gmaxwell what are the previously discussed reasons?  I don't see them in this pull. 	Clarify
2423	15797495	"ACK, but unit tests for the map would be nice indeed. Has been running for several days for me without problems (together with #2419 #2418 #2422 #2420 #2409) "	Clarify
2423	15814991	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b5afda67f2846ddc6554304acc1567796733725b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2422	15625866	"Does init.cpp want updating, too?  "	ynQuestion
2422	15626106	@jgarzik Not that know of? 	ynQuestion
2422	15655067	ACK 	Clarify
2422	15659718	Perhaps @jgarzik was talking about the help message? ``Set database cache size in megabytes (default: 25)`` 	Clarify
2422	15661920	"@Diapolo @jgarzik -dbcache is still the intended database cache, but we shouldn't use that number both for the coincache/leveldb AND bdb. "	Reject
2422	15670706	ACK 	Clarify
2422	15671363	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2e3c76bf9857f5ac2814df9fd6b9b5b7a7eff88a for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2422	15686582	ACK  	Clarify
2421	15625496	"Ok. But txindex requires reindex and it's bad for me (now).  ""If you need that functionality, you must run once with -txindex -reindex to rebuild block-chain indices (see below for more details)""  "	Statement
2421	15625637	"I'm unsure about this.  On the one hand, the blocks are available, and getblock() exists- it's stupid that it cannot give you the transactions in it.  On the other hand, I really don't want to encouraging services that depend on the presense of (indexable) block chain data in the first place. "	Reject
2421	15626140	"Well ... Maybe you must check this addon with the user community and decide if this is useful/compatible/promotable or not.   Meanwhile, as I say, the fork is fine for me now and I can use it.  Regards (and sorry by my basic English!) "	Clarify
2421	15655273	"I don't feel strongly one way or the other; code looks fine, I haven't tested (only question: do you get a reasonable error message if you specify an invalid block hash?) "	Clarify
2421	15671601	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/303101f2da0550ff3b51693b65171b2b02d7f2d5 for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2421	15815379	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/8b011a4871fab786913489abf3b78121a8452396 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2421	18232670	"I'm interested in this feature as well. I like being able to parse transaction data, regardless of whether it has been spent or no.  silvioq, do you know why it failed to build? I can't access the build log. "	Clarify
2421	19497727	"So, some more thoughts. The generic problem this pullreq tries to solve is very worthwhile: right now, we have the full blocks stored and indexed, but retrieving anything more than the headers and the txids in them is not possible without txindex=1. This shouldn't be necessary - just a sequential sc"	Clarify
2421	19912040	"Agree w/ @sipa.  This functionality is OK to have, but in a different form.  The first suggestion is the most powerful, and would seem to solve many common requests:  'getblock' simply returns a full block, including all transactions.  Closing, as consensus seems to point elsewhere. "	Clarify
2420	15624726	"Nice!  FWIW, In my own programs, I usually add a ""--free"" command line option, which optionally cleans up on exit (slowing down exit), rather than the rapid exit(0).  Similarly, since freeing the block index and other numerous structures is a lot of pointless work at shutdown for 99.9% of users, I w"	Clarify
2420	15624814	"I certainly don't notice it, but if you want it optional, sure, that can be arranged. "	Reject
2420	15671882	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3427517d507a938074a50fa8ea6dfe3d13bef357 for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2420	15783508	"How much extra time does that cleanup take? If it's not a huge increase in shutdown time, why make it optional? "	whQuestion
2420	15788309	"Very nice.  We can make this optional later, if needed, I'm going to pull now.  "	Clarify
2419	15672232	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/307465b04e408e67cca991cf11b8238a487ba01f for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2419	15686553	Rebased. 	System
2419	15690004	"ACK  BTW maybe we could use RAII or even one of the boost reference counting pointers here, instead of explicit AddRef/Release, as that tends to be somewhat more robust.  "	Clarify
2419	15816464	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/670921ec410923fa70a38dd44fdfec157bc6f8ca for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2419	15896104	Rebased. 	System
2419	15904952	ACK. This has survived several days of testing and abuse. 	Statement
2419	16004482	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cedaa714462871213472019545b8e862dacdac91 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2419	16024722	"I've been testing this with an extra commit that prints out vNodesDisconnected.size() at shutdown, and this seems to be always 0. That means that the refcounting is indeed working as intended: it doesn't go too low (tested by the assert), and not too high (as that would mean they linger in vNodesDis"	Clarify
2419	16051076	ACK 	Clarify
2418	15670510	"Are these numbers always guaranteed to fit in a uint256?  A more general solution may be to change CBigNum to store numbers <2^256 inline, and only allocate for larger ones, like with some optimized string implementations. "	Other
2418	15670759	"Our current work (printed as a uint256 with this patch) is 00000000000000000000000000000000000000000000003256b810087da1a920, assuming every 600MH card on the network is replaced with a 60GH ASIC and then we multiply that by 1000 for network growth, we get a network rate of 100,000x current, we are s"	Clarify
2418	15670760	ACK 	Clarify
2418	15674097	"ok, ACK "	Accept
2418	15677600	"When 2^256 hashes are exceeded, it's quite likely we'll have found a preimage for double-SHA256, and Bitcoin is broken in the first place. "	Statement
2418	15677614	"@BitcoinPullTester @TheBlueMatt I believe this will require a different pulltest, as I presume it tries to modify the global BigNums. "	Clarify
2418	15678962	"Yea, this tries to modify the mindiff stuff so breaks on this pull.  Ignore pulltester output for now and ping me before merge so I can update the patch. "	nAnswer
2418	15896094	Rebased. 	System
2418	16007451	"Added a commit that prints the 2-log of nChainWork instead, which is somewhat more useful for human eyes. "	Clarify
2418	16071124	ACK. (Needs pulltester) 	Emotion
2418	16130575	Rebased. This will need manual pulltester changes before it will succeed. 	Statement
2418	16285742	"@TheBlueMatt I've added a patch to your patch in this pullreq. If you update pulltester to use the tests in contrib, this *should* apply cleanly. "	Statement
2418	16305410	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1657c4bc495815febc2137972c3c63b99d2b0189 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2417	15588977	Doesn't this belong to https://code.google.com/p/bitcoinj? 	ynQuestion
2417	15590752	"Indeed it does ! My bad for not checking google search results more carefully.  Just close it.   On Thu, Mar 28, 2013, at 01:45 PM, Philip Kaufmann wrote: > Doesn't this belong to https://code.google.com/p/bitcoinj? >  > --- > Reply to this email directly or view it on GitHub: > https://github.com/b"	Other
2417	15592028	"I can't, as I'm no issue-admin ;), but you can... thanks :). "	nAnswer
2417	15595449	Closed - posted to wrong project. 	Statement
2416	15572824	Did you use a clean datadir or an old 0.7 datadir with the old block-storage? Perhaps there is problem with upgrading to 0.8 format? 	ynQuestion
2416	15573986	"As bitcoin doesn't upgrade database by default (without -loadblock= arguments), this shouldn't be an issue IMO.  I just tried with ~/.bitcoin moved out of the way, but I'm still hitting the same assertion.  Are there any other leftovers from 0.7 other than ~/.bitcoin that need to be taken care of?  "	Clarify
2416	15783617	@sipa Can you have a look at that seems LevelDB related. 	Statement
2416	22854361	"Same problem with bitcoin 0.8.3  bitcoind: ./db/skiplist.h:152: leveldb::SkipList<Key, Comparator>::Node* leveldb::SkipList<Key, Comparator>::Node::Next(int) [with Key = const char*, Comparator = leveldb::MemTable::KeyComparator]: Assertion `n >= 0' failed.  I'd really like to eventually upgrade to "	Other
2416	24551220	"This is almost certainly due to missing mips atomics in leveldb: https://code.google.com/p/leveldb/issues/detail?id=104&q=mips  From the looks, Debian attempted to patch some in, but didn't fare so well. Seems the gcc intrinsics should suffice for a hammer solution. "	nAnswer
2416	24552992	"That thought already crossed my mind, but then looking at atomic_pointer.h, it seems the CPU-specific implementations only deal with memory ordering semantics.  On my _single-core_ MIPS system, there should be no problems WRT memory ordering when accessing the same 4-byte quantity from different thr"	Other
2416	24553230	"@dvdkhlng I was under the assumption that stdatomic wasn't present in your toolchain and you took the debian patch, sounds like that's not the case. Either way, I think skiplist_test would be a good next step, if you haven't tried that already. "	Clarify
2416	24637669	"@theuni: looks like you are right, it's a atomic operations problem.  cstdatomic is either broken with the Debian Mipsel Squeeze toolchain or the leveldb code does uses it in a broken way.  Implementing MemoryBarrier as     __asm__ volatile ("""" : : : ""memory"");  makes bitcoin work for me.  The prope"	Clarify
2416	24637747	"Note WRT my comment above: Markdown ate the underscores around th asm keywords.  Should be      __asm__  (somehow Github doesn't allow me to edit my comment above, maybe Debian Mipsel's Firefox is too old ? :) "	Other
2416	24643934	"@dvdkhlng Nice sleuthing. Though now that the issue is nailed down, I'd suggest taking it upstream. I'm not sure that the bitcoin devs would be interested in carrying this.  Perhaps you could ping the leveldb devs on the bug report above? "	Clarify
2416	26983308	"Agree with @theuni, this issue should be taken upstream. We use libraries such as boost and leveldb to not have to bother with architecture-specific details, and going into mips assembly is just a step to far. We don't have any way to test this either.  "	Clarify
2415	15557336	The IP address is just to tell when the Bitcoin client has gotten a new IP address from the network.  I moved the test for 'fIsInitialDownload' so it only evaluates once.(two times in the master code at the moment if you take a look).   Hmm. There will be scenarios were you would like to have the bl	Clarify
2415	15560172	+1 for 0mq support in general.  Reading now... 	Statement
2415	15580166	I like this. Delivering events over 0mq for block/transaction/etc notifications is much more elegant and efficient than launching commands. 	Statement
2415	15585826	"Note that 0mq is LGPL, which is a bit more restrictive than the MIT/BSD license that bitcoin-qt is currently licensed under. Specifically LGPL requires you to distribute binaries that can be relinked if the user decides to change the source of the LGPL library. Not an issue with dynamic linking, but"	Clarify
2415	15592572	"Nice! Can you put the trivial python client in contrib/0mq/ ?  Also: 0mq is available in MacPorts, does version matter? zmq                            @3.2.2          devel/zmq zmq20                          @2.0.11         devel/zmq20 zmq22                          @2.2.0          devel/zmq22  "	Emphasis
2415	15598559	"@gmaxwell Yup, it's a niche case for it to actually matter, but we should document it clearly for the lawyers; might as well put the info about our dependencies and associated license obligations in assets-attribution.txt or a similar file. (yes, I'm volunteering to write that up) "	Clarify
2415	15672530	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7c05592af68dd7d1ec9219c1afe76207797f3214 for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2415	15677339	@ BitcoinPullTester  You need to build with make -f makefile.unix USE_ZMQ=1  to actually know if this pull request builds or not. You do need to have libzmq installed before that.  	Clarify
2415	15721285	"The idea is neat, but there doesn't seem to be much documentation on how to use it or what form the messages take. For instance you call the message ""new block"" but that's not correct is it, it's ""new best block"" - you won't see blocks that connect to a side chain and if a re-org happens (I think) y"	Clarify
2415	15722511	"@mikehearn  What the publisher does is to send new messages when something happens in the bitcoin client. You don't have to ask if something has happened, you already know that.  Under 'contrib/0mq/bitcoin-zmq.py' is an example client of how the publisher part works and their filter defined.  Please"	Clarify
2415	16033280	Needs rebase. 	System
2415	16038833	"Don't get me wrong, new best block isn't a bad thing to notify on. New side blocks probably aren't that interesting for most users anyway. Just pointing out that the naming/docs could be updated. "	Reject
2415	16316589	"This makes a LOT of usecases possible. I use an older fork of bitcoind, based on even older implementation by Gavin, exactly for this purpose - Have an automatic callback whenever a transaction and/or block is coming in (See my fork on github).  One suggestion: Add an option to get the ""incoming tra"	Clarify
2415	16393896	"Some comments after code review: - There is no authentication for requests over ZMQ, do I get this right? - When compiling with USE_ZMQ, enabling it should be an option, not be done by default. This allows builders of Linux distributions (for example) to build an executable with all options enabled,"	Clarify
2415	16395222	"@laanwj   The usleep is only running if there is nothing for the thread to do. If we have a lot of request coming in, we will process this until the queue is empty. The reason why I have done this is to be able to shutdown the bitcoin process.  0mq does not any authentication method. That's correct."	Clarify
2415	16398766	"You seem to be completely misunderstanding me  1) I know why you added the usleep, so my suggestion is to use a ""blocking read"" for the same time instead of an usleep (which doesn't process messages when they come in). Not an unbounded blocking wait, of course, that would indeed make it impossible t"	Clarify
2415	18693102	"Agree with @laanwj comments.  Let's go those addressed, and get this merged.  "	nAnswer
2415	18779696	"Would it be faster to split this into two pull requests? The first to do the pub/sub notifications of transactions, blocks and ip addresses. The second for the zmq based RPC server. The reason for splitting the latter is there is likely to be much discussion over authentication which would bog down "	Clarify
2415	21090391	@fredan Are you going to fix this up? 	whQuestion
2415	23221167	"Ping @fredan.  Also, ping @doublec in case you are motivated to split this up, and get 0mq support moving again.  "	Reject
2415	23482490	Splitting it into two sounds like a good idea. I suppose the notifications can be unauthenticated.  	Clarify
2415	26688588	"Closing this because of inactivity. If you have time to rework this so it merges cleanly against the current tree, please open a new pull request (and link to the discussion in this closed request, if it is relevant).  "	nAnswer
2414	15523820	"Any comments on this are welcome :). While I'm on it should I also update or look after zlib, libpng and miniupnpc? "	Clarify
2414	15524417	"Seems libpng also has some security problems in 1.5.9: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3048 http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-3386  zlib seems to be safe, but there is also a 1.27.  miniupnpc is up 2 versions: May 2012 : release of MiniUPnPc-1.7 and MiniUP"	Clarify
2414	15534718	Can one of you please setup a gitian build environment (VirtualBox works nicely now) and test?  	Clarify
2414	15534845	"Also: it'd be great if we could get people to volunteer to review the changes to our dependencies; after all, it is theoretically possible that somebody could try to slip through a patch in something we depend on intended to compromise bitcoin, since everybody knows our dependencies.  "	Clarify
2414	15672706	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/42895c02a6e0c41890d3d0343d8be2c6bb099864 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2414	16287682	The boost 1.53 update doesn't build: http://luke.dashjr.org/tmp/code/20130412-boost-build.log 	Clarify
2414	16335199	"@luke-jr I have no idea what ``Error: junk at end of line, first unrecognized character is `m'`` means, can you help? "	Clarify
2414	19912312	Closing. Feel free to reopen after verifying that it works across all supported platforms. 	Clarify
2411	15372941	ACK for the technical changes. Tested on mainnet and testnet and peer finding works as expected; with the DNS seeds disabled the pnSeed table finds a seed correctly so I don't think you made any mistakes.  If we do this we should create a pnTestnetSeed table. I also like the suggestion that came up 	Clarify
2411	15374918	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6a1d6e03daa35463ff27f8d05f4313b604ed4397 for binaries and test log. "	nAnswer
2411	15632653	ACK 	Clarify
2411	15632789	ACK. 	Clarify
2410	15375487	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/14c9d116be476d08dd18f2e9f4a8ed251a6bbf79 for binaries and test log. "	nAnswer
2410	15379745	"How can I start aggressive mode? Or is the client doing this for me, if ""normal"" mode fails? "	whQuestion
2410	16020543	"This is one change for which I'd like to see a test plan, and what behaviour changes compared to before... "	nAnswer
2410	16712554	"It seems there are several issues with salvaging wallets, and some can perhaps be fixed. This may seem pointless, as we want to move away from BDB for wallets anyway, but we'll still need conversion tools (either built-in, or as separate applications) that can reliably import wallets.  First of all,"	Clarify
2410	17433720	"Ok, I've only tested this superficially, but the worst case side effect seems to be continuing a salvage operation that would fail anyway.  ACK. "	Clarify
2409	15362000	ACK  	Clarify
2409	15376090	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3987a1cabbdd263dfa7bed92b7326274bc625d09 for binaries and test log. "	nAnswer
2409	15386672	Don't merge this yet; an instance of this segfaulted for me. 	Statement
2409	15600195	"Ok, fixed an obscure bug: ProcessMessages (while holding cs_vRecvMsg) sometimes calls PushMessage, which since Jeff's patches sometimes calls SocketSendData, which can fail and cause the connection to be closed. Closing the connection however wipes vRecvMsg... while ProcessMessages is still iteratin"	Clarify
2409	15664665	"Added a commit, which breaks up the processing of getdata requests when the send buffer size limit is exceeded. This results in far smaller send buffers being allocated for peers downloading blocks from us, and doesn't seem to have a noticable impact on performance/bandwidth (I can still download bl"	Clarify
2409	15673076	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/e96ba341587ebdb0583ce3cd0567411164f1ec44 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2409	15677693	@TheBlueMatt can you put a link to the patches applied for pulltester in the produced message? 	ynQuestion
2409	15678324	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/c7f039b674b43b741f20bf7521eb8a68426f4275 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2409	15679006	"@sipa Updated the message, it now links to http://jenkins.bluematt.me/pull-tester/files/patches/ "	Emphasis
2409	15683135	I'm testing this+Matts patches now - 231 connections with only 193mb RSS. Pretty fantastic results. Before this my node was running out of memory in less than 24 hours. 	Clarify
2409	15685427	This plus other recent network pulls has been stable for many hours under high load (150-200 connections).   ACK 	Clarify
2409	15782698	"Is there a  0.8.2 planned in the near future? What will be in, was that yet decided? "	ynQuestion
2408	15351894	Agreed.  Side note: Windows has stupidly inefficient FD_SET and FD_ISSET macros that iterate over an array to find the end 	Clarify
2408	17046401	I turned this into a pull request: #2569  	Clarify
2408	17046667	"@luke-jr With 1000 file descriptors, that effectively means O(1M) operations to construct these sets, which seems ridiculous. Is there any reason not to switch to using poll()? "	Other
2408	17047255	"At least the performance penalty only occurs when the larger number of descriptors is actually used.  If maxconnections=125, there are at most 125^2 = 15-16k operations, even if FD_SETSIZE is 1024. "	Clarify
2408	17047382	"@jeremysawicki Sure, it's no argument against this pull request - it's a strict improvement. Nonetheless, it's something we should look at. It seems Windows only has a poll()-like call as of Vista though, and currently we try to be compatible with XP... "	Other
2408	17047767	"@sipa Windows doesn't have poll(). Vista and newer (only) do have a WSAPoll which was supposed to emulate poll(), but has some weird bugs that someone would need to look more into if it were used.. "	Clarify
2408	17200414	Solved in #2569  	yAnswer
2406	15376955	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/966781671d44a4bcaa4a03c8c59dc280acf2c595 for binaries and test log. "	nAnswer
2406	16020529	"Sounds like the compiler is quite broken in this case...  I prefer not messing with the leveldb config script too much. If it's accepted upstream, no problem of course. "	nAnswer
2406	16022590	"Yes, ultimately it's a gcc issue. One that appears to have been resolved in newer versions.  It's also pretty easy to work around the issue by simply building the project as a user that can't remove /dev/null. I only came across the problem because FreeBSD requires, by default, root privileges when "	Clarify
2406	19912219	"Closing.  (1) Don't build with root, that's insanely dangerous.  (2) Sounds like this issue is already fixed upstream, and will be pulled in via leveldb update.  (3) An issue external to us.  "	Other
2405	15337803	Exactly the same issue. Upgraded from 0.8.0-beta.  ``` Process:         Bitcoin-Qt [5707] Path:            /Applications/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt Identifier:      com.yourcompany.Bitcoin-Qt Version:         ??? (???) Code Type:       X86 (Native) Parent Process:  launchd [236]  Date/	Other
2405	15572740	"I have encountered the same issue with version 0.8.1  mba:MacOS fredrik$ ./Bitcoin-Qt  Assertion failed: (pfork != NULL), function SetBestChain, file src/main.cpp, line 1742.  ____________      Process:         Bitcoin-Qt [15994]     Path:            /Applications/Bitcoin-Qt.app/Contents/MacOS/./Bit"	Other
2405	15573108	"@gavinandresen As I know you are using Mac, can you take a look here :). "	Clarify
2405	15587152	"Gavin posted a possible fix here: https://bitcointalk.org/index.php?topic=154516.msg1665186#msg1665186  I tried it, but the client still crashed.  I moved my ~/Library/Application Support/Bitcoin directory aside and ran the client.  It downloaded the blockchain again and didn't crash.  Perhaps that'"	nAnswer
2405	17133574	"**hank**: the link you pasted talks about cleaning the data directory after the change in its structure, it shouldn't really solve the issue.  In #2426 there are two suggestions, I preferred using *-reindex* option, the two issues should be merged. "	Clarify
2405	17133991	I just finished doing a -reindex. It solved the problem for me. 	Reject
2405	17134044	"I'd like to see a debug.log for when this happens, before doing a -reindex. "	Statement
2405	17134913	"**sipa**: I wouldn't know how to reproduce, may be worth editing first post asking for that so next people who search the issue can keep the debug.log file. "	Clarify
2405	17205748	"I'm unable to reproduce so far.  I'll try some more tomorrow (I'm kill -9 'ing a running bitcoind, to simulate a machine crash / unclean shutdown).  @frespa81 @hank : did this only happen for you after crashing or shutting down during the initial, after-upgrade reindex process?  "	Clarify
2405	17213135	"@gavinandresen It was a while ago the crash happened for me. I had recently installed the app and the index had finished syncing. I Had gotten a small transfer, everything was working fine. I later had some issues not related to bitcoin-qt. what I can remember the mac did not shutdown cleanly. Then "	Clarify
2405	17213159	"Notice that I didn't have any crash (IIRC) and I've been running the client for several days, maybe a couple weeks, after the update. I update the chain every other day or less often, on such an update the Qt client just didn't start anymore. Reindexing fixed the issue. "	Clarify
2405	17225913	"I upgraded from the previous beta version I think.  After quitting the installed version, I installed 0.8.1, and tried to start it.  It crashed over and over again with the error at the top.  I then tried moving my bitcoin Library directpry aside and letting it download the entire blockchain again. "	Clarify
2405	17567479	"Closing this as ""corruption likely caused by running out of file descriptors"".  "	Clarify
2405	17569267	"So, in Bugzilla terms, that's a WONTFIX?  I was able to recover by removing everything from ~/Library/Application Support/Bitcoin then copying in a very old backup of my wallet.dat.  After that the client ran normally, but took several days to re-download the block chain. "	Clarify
2405	17569442	"@Polyergic No, it's a ""unknown if fixed or not"". We assume it's a corruption of your database that was caused by a known bug that is now fixed in HEAD (but is not in a released version yet).  So feel free to reopen or comment here if it would happen again after updating.  Also, next time, you can re"	Clarify
2405	17569452	"No that is no WONTFIX, it is a (hopefully) HAVEFIXED by one of the recent patches :). @sipa You were faster ^^. "	nAnswer
2405	17570450	"Oh, I see, there just wasn't a comment here about the patch.  Thanks! "	Emphasis
2404	15334770	Known problem and will be fixed if my last translation pull get's merged. 	Clarify
2404	15334848	Hasn't it been fixed already? https://github.com/bitcoin/bitcoin/commit/0556bb22e1169213df25a2a52221d5d467a604a0  Or is it not fixed until all the translations are updated? 	ynQuestion
2404	15334872	Could be that this is not active in 0.8.1 as it requires a bitcoinstrings.cpp and an update of the english translation master file also. 	Statement
2404	15339663	"Cool. If my ticket's a dupe and if you don't need a Mac ""after"" screenshot, you can close this at your discretion. "	Reject
2404	19912337	"With the introduction of the new splash screen, this can be closed. Ping @laanwj or @L2G  "	nAnswer
2404	26982951	@laanwj should also be closed. It's solved. 	Continuer
2403	15328550	"ACK.  At current price of $70/BTC, that's $0.007 per kilobyte, which is reasonable.  If the price crashes before next release, we should re-visit this.  I really want to get rid of hard-coded fees soon, though. The memory pool should be size-limited to a small multiple of the recent median block siz"	Clarify
2403	15332353	ACK  This will make my timestamper a lot cheaper to run. 	Clarify
2403	15348877	"A better patch if you aren't going to call the pull request ""Change minimum fees to 0.0001 BTC"": +static const int64 MIN_RELAY_TX_FEE = 50000;  Disclosure of S.DICE interests by a certain MH and other bloat lobbyists would allow detection of individual profit motive before any further implementation"	Clarify
2403	15349453	">> ""It's a one byte change.""  It's just an 80% fee discount on a company that uses 80% of the blockchain. Don't expect that people won't change to the minimum when MIN_TX_FEE is what Bitcoin includes by default.  To clarify, if everyone else is paying 0.0001, then why bother paying more; 0.0001/KB f"	Clarify
2403	15349544	"@qubez What the network imposes is min _relay_ fee, which is unchanged here. The users you are concerned about do not run bitcoind, and do not care what MIN_TX_FEE is because it's not imposed on the network. (and, as I mentioned, they are already paying more than MIN_TX_FEE in any case, because thei"	Clarify
2403	15377477	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e3800824d6bf7b157a6211cb7eb01ab19a8f5ac0 for binaries and test log. "	nAnswer
2403	15402387	"@gmaxwell @qubez re: S,DICE while it's true that they are using software that can't calculate per-kb fees properly, remember that they were initially paying a 0.5mBTC fee on every transaction and later upped it to 1mBTC. To me that says they're paying the fees they do to have a competitive bid for l"	Clarify
2403	15404860	"The relevant CreateNewBlock code is:      // Fee-per-kilobyte amount considered the same as ""free""     // Be careful setting this: if you set it to zero then     // a transaction spammer can cheaply fill blocks using     // 1-satoshi-fee transactions. It should be set above the real     // cost to y"	Clarify
2403	15406100	"::sigh:: For some reason I thought changing mining criteria to be MIN_TX_FEE instead of min_relay_fee got NAKed.  I suspect that there is a some amount of mining happening with the lower setting, since there are many transactions meeting that criteria, but it's hard to tell. If so, that makes this p"	Clarify
2403	15406417	"I just sent out 0.0005 -> 0.0004 + 0.0001 fee at 17:00 UTC to five nodes, we'll see how many blocks this doesn't make it into as anecdotal evidence of the default user experience expected from this pull: f996fc4ec5bc8ae92d15ce18530f827095b370bd3bbc4a4ff1a885f52fbad64c - transmitted with 1216 and 1MB"	Other
2403	15406999	"If anything it basically says the pull itself isn't what's required, it's talking to the pools. I've already told bithits and similar people if they want they're low-value transactions mined, the network will relay them, so ask a pool to change their defaults and accept their transactions.  Look at "	Clarify
2403	15748001	Where does the $1875 come from? 	whQuestion
2403	15989611	@rebroad 25 BTC subsidy * exchange rate 	Other
2403	16020487	ACK 	Clarify
2403	16032737	ACK  	Clarify
2403	16105971	"This has been ack ack'd and merged, but I think it needs one more thing - the default voluntary fee, if no command line, config, or options dialog has been set, should be set to 0.0005. This restores today's operation as default, while allowing reduction for those who will understand the effect of s"	Clarify
2403	16115204	"> the default voluntary fee, if no command line, config, or options dialog has been set, should be set to 0.0005. This restores today's operation as default,  That is most definitely not the behavior prior to this patch.  "	Clarify
2402	15332949	I have exactly the same problem with the program freshly compiled from the gihub sources : ```$ bitcoin-qt  QMetaMethod::invoke: Unable to handle unregistered datatype 'bool*'``` v0.8.0-57-gdfd71bb-beta 	Clarify
2402	15332983	it looks like it happens when the free space on disk is getting low... 	Clarify
2402	15334759	So is this the case? Can you try it with more free space available please. 	Clarify
2402	15338024	"the synchronisation is working well if there is plenty of free space. When there is only around 50 or 60MB free left, it crashes with the Unable to handle unregistered datatype 'bool*' and that's all. Difficult to understand what is the cause of the problem... "	Clarify
2402	15338535	"I have some feeling, that perhaps there could be a problem with the signal-handlers from core to GUI, when the disk-space check fails.  @laanwj Can you take a look if this could be related to ``ThreadSafeMessageBox``? I know @sipa added a bool, which we use to handle dialog-boxes. Perhaps there is s"	Clarify
2402	16334467	@laanwj Can you have a look? 	ynQuestion
2402	16335134	I'll take a look 	Statement
2402	16335444	"Is there another disk space check apart from CheckDiskSpace? I rigged that function to always call AbortNode, but that works fine. I get the error in a popup box and the client exits. As expected.  I suppose it could be a Qt version issue? What version (About Qt) are you using? Mine is 4.8.2. "	Clarify
2402	16337130	"In terms of diskspace, how much is ""low""? I'm having these crashes when ~5G are still free. I will try with 10G now. "	Clarify
2402	16342138	"Tried with ~10G free space, but sadly it didn't make a difference, it still crashes with the same error message. However, I've got something interesting in my debug.log:      received block 000000000000012eaf65592dadb1ffa27f72f1e65f74d588ebced08e7d19fb3d     LevelDB read failure: Corruption: block c"	Clarify
2402	16351318	@laanwj @sipa Should this error induce a question to rebuild via the known GUI dialog-box? That is still something where I think we also could have a problem with this users OS and ``ThreadSafeMessageBox``.  https://github.com/bitcoin/bitcoin/blob/master/src/init.cpp#L833 	Clarify
2402	16354250	I'm pretty sure #2525 solves the issue. Can anyone please test? 	Clarify
2402	16585632	Closing -- I'm assuming this is solved by #2525. Let me know if this is not the case. 	Clarify
2402	16585988	"Hi Wladimir, I think you nailed it. Considering my crash logs your explanation sounds very sensible. I can test is as soon as the new binary is released. Thanks! "	Emphasis
2401	15291845	This is already implemented: 21000000 is 8 digits. 8 digits after the dot are allowed by the prototocol. Change the unit to anything else and the amount allowed before/after will change. 	Clarify
2401	15312075	"allaun is referring to the digits before the decimal point - eight integer digits are allowed to be input in the text box in BTC mode, which can be larger than the number of bitcoins in existence. Seven digits would be sufficient to send 9,999,999 bitcoins as an output, still larger than the amount "	Clarify
2399	15381051	"I'm now running my local builds with that version, looking good. "	Clarify
2398	15270475	"While you mention it, I observed this 2 times... and thought it was perhaps a one-time glitch or perhaps a malicious node that announced a weird amount of blocks (@core devs is that possible or a problem)? "	Clarify
2398	15271456	"It's possible, but it shouldn't be a problem unless we've screwed up: We've been diligent in using that number in only safe ways.  As far as I know it's only used in two ways: cosmetically for the progress indicator and, if it's less than the current height, to exclude a peer from preference for pul"	Clarify
2398	15271585	"The only other place where it is also used, is to display the estimated number of blocks on the network in the debug window. AFAIK we use a median of 10 nodes we are connected to... "	nAnswer
2398	15701126	"Some additional checks could be done regarding the current block height. For example, we know a block is generated every 10 minutes, so if they give a number which is higher by n and n*10 minutes is a date significantly into the future, then we can discard this from the median calculation. "	Clarify
2398	15756062	"@robbak I didn't even knew, that testnet2 nodes can connect to testnet3 nodes ^^, I thought such connections would be blocked or aborted? "	Clarify
2398	15756323	"We got tired of the ""testing"" and fixed that. In this case its due to some testing phantomcircuit is doing. "	Clarify
2397	27958013	Should be fixed with master / newer 0.8.x. If not please comment here or open a new issue.  	Clarify
2396	15303885	ACK 	Clarify
2396	15377936	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/598889973b47d806ea9471bfd98eef5b9bf6bef6 for binaries and test log. "	nAnswer
2395	15222713	Which version of the client are you using? You could try to delete everything but wallet.dat to force a FULL re-download of the block chain. 	whQuestion
2395	15223396	0.8.0. I tried deleting everything except wallet. No help. 	nAnswer
2395	15224447	"1st thing you could try is an upgrade to 0.8.1, which was released a few days ago. "	Clarify
2395	15267203	using 0.8.1 beta. Running. Let's see how far it goes... 	Clarify
2395	15276594	"Same error. Failed a little later, with ~40k blocks remaining. Help! "	Emphasis
2395	15277076	Are you running out of memory or disk space?  What operating system? 	Clarify
2395	15278727	"Vista home premium. There's plenty of ram and hd space. 2G ram, 22G hd. Same error at 40k blocks remaining "	Statement
2395	15283614	IMHO you should show us the debug.log that your client creates when this happens. It should reside in your datadir (open the debug Window and you can use the open button to see the debug.log). 	Clarify
2395	15286630	debug log: After many entries similar to  SetBestChain: new best=00000000000003ad796c280afd86b04d3663f9aeec8be538124a248f037968ad  height=187089  work=373009993956651511368  tx=4621096  date=2012-07-01 21:32:04 ProcessBlock: ACCEPTED  comes the following  *** System error: CWalletDB::ListAccountCred	Clarify
2395	15313395	"The wallet.dat LSN errors indicate that the wallet.dat's BerkeleyDB was not properly closed (as detachdb does for the blockchain, issuing a LSN RESET), and the log file is either missing or does not correspond with the wallet.dat that was put in the data directory. This can also come from (a similar"	Clarify
2395	15313585	"@qubez Since 0.8, BDB is only used for the wallet, so that is the problem, and syncing the block chain without the walelt won't change anything.  I don't understand why -salvagewallet doesn't solve this, as it rebuilds the wallet from scratch. The only thing I can imagine is something very broken in"	Clarify
2395	15315081	"I have a 0.3.24 corrupted wallet I can send you that will prevent an upgrade or blockchain sync, however it can be dropped into a fully synced 0.8.0, and an automatic salvagewallet will complete successfully. My advice is based on this experience. "	Clarify
2393	15254099	Updated 	Statement
2393	15270128	"I'll compile these patches tomorrow and try everything, thanks for updating :). "	Statement
2393	15284338	"I tried them and they work, I just want to mention one more thing with the Window geometry. You are writing the setting when the destructor of BitcoinGUI is called. So when one want's to reset the Window position it is not possible to use the Options reset button, as the destructor call comes after "	Clarify
2393	15304147	"I agree with these changes. One question though: what happens if the window coordinates in the settings get corrupted so that they are outside the screen area?  This may sounds like a weird concern, but I had this problem once with an application that started on the second monitor, which was no long"	Clarify
2393	15331700	In worst cases window will attached to screen corner (position corrupted) or maximized (size corrupted) 	Clarify
2393	15331985	"Window should be changed before it becomes visible. So these settings are ""special"" and separated from others. I'm not sure that user want reset window size when pressing on 'Reset' . For me, for example, it's will an unexpected behavior "	Clarify
2393	15332790	"I agree that resetting the window position when pressing Reset is not really necessary, people can always move the window to where ever they want anyway.  It's also very hard to solve; moving saveGeometry call to another place than the destructor for example will not solve it, as long as it is still"	Clarify
2393	15334703	ACK 	Clarify
2393	15378391	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f688056f9d4958b50911933496bf1fa2e602d396 for binaries and test log. "	nAnswer
2392	15185237	"The block synchronization mechanism is known to get confused from time to time, and pause for a while. If it stops updating for an hour or so, something is probably really wrong.  I think it's very unlikely to be related to the may15 issue. "	Clarify
2392	15189122	I don't think it's unlikely at all. The soft-fork limit still allows 0.8.1 to break old clients if there's even a 1-stale reorg.. 	Clarify
2392	15189331	"Uh.  @srs96 What version are you running? The alert you're mentioning is only displayed to older nodes.  @luke-jr But there hasn't been any annoyingly large blocks recent. And as Sipa says, IBD normally pauses (e.g. when a peer goes away).  Don't confuse the basic tech support.  "	Clarify
2392	15193155	"![bitcoin](https://f.cloud.github.com/assets/3922528/282124/fb7c9918-9188-11e2-8102-cea7d24f199b.png) i have attached the image above , please refer to it and try and help me thanks "	Clarify
2392	15193362	and @gmaxwell it is version 0.7.2-beta 	Statement
2392	15193734	0.7.2 is old. The message is telling you to install 0.8.1. 0.8.x will sync much faster too. 	Clarify
2392	15193874	how do i install .8 ver? 	whQuestion
2392	15194314	Go to www.bitcoin.org and click on 0.8.1 and follow the links to the executable for your system.  	Reject
2392	15198226	Thanks :D 	Statement
2392	15204193	"If this fixes your issue, please close the ticket, thanks :). "	Clarify
2389	15171582	"Can you try what happens with this, when you are fully synced with the network and report back. "	whQuestion
2389	15180915	"    Bitcoin-QT running, sitting in Overview pane.           Fully synched           Help -> Debug Window -> Console           Doing:           importprivkey privkey label     <enter>           No error message or ok message shown.           Closing Debug window           Going to Receive coins pane,"	Clarify
2389	15180994	"Hah - I managed to accidentally close the issue as well - well I reopened it now - I need input from others, please. "	Clarify
2389	15314276	"Importing a private key does immediately start a rescan, which when executed through the debug console will make the UI unresponsive until it completes. This is so the new balance will be shown correctly after importing a key. A progress or busy indicator would be useful when Bitcoin is performing a"	Clarify
2389	19524440	"Same problem.  Windows Vista Sometime on import all is well.  Sometimes on import the wallet freezes.  Chain is up to date. v0.8.1-beta  1 private key ! 2 private keys ! 3 priv ____ BREAK (not responding)  force ""close program""   Looking for newer... now trying 8.2...  Nope.  Same problem.  Locked u"	Clarify
2389	19533409	"After importing a new key, the blockchain is rescanned for missing transactions. This may take 10 minutes or so, depending on hardware. You can disable rescanning by passing an extra 'false' argument to the RPC call, so for example      importprivkey 5wkf297rdkhviutt29423587y764928468725 false  I've"	Clarify
2389	19618378	"So I've imported the private keys per sipa's method and while the solution worked perfectly I later realized that the addresses show up differently in my wallet that I had expected... they show up under the ""addresses"" tab.  ;-)   Perhaps I am not doing what I *should* be doing.  My entire purpose i"	Clarify
2389	19619065	Every private key has exactly one corresponding public key and address.  But why are you importing keys at all? Just do a getnewaddress every time you need a new receive address? 	Clarify
2389	19619390	"Just do a getnewaddress every time you need a new receive address  This is the information I needed, thank you.   "	nAnswer
2389	26983378	Closing this as it appears to be sufficiently answered.  	Statement
2387	15378934	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/967125ca4a4c2386f571b2e9cb75ef8665921dca for binaries and test log. "	nAnswer
2386	15158293	"I've built this in Mac OS 10.7.5, but I'm afraid I can't see any visible effect it has. I'm going to poke at it a little more, though. "	nAnswer
2386	15160312	@L2G Do you right click on the icon? Should look like ![Ohne Titel](https://f.cloud.github.com/assets/901234/279445/260e8f36-9127-11e2-9391-72b13e88c2ea.png)  	Clarify
2386	15160699	@Nerzahd So you say it is working with this patch? Or was that just a screen from when it worked ^^. 	whQuestion
2386	15161000	@Diapolo  yes. it works with your patch. 	Reject
2386	15171360	"@Nerzahd Thanks for testing :). @laanwj Seems we have a working patch now, can you review? "	Statement
2386	15181521	"I was confused, sorry. Still learning Qt's terminology as it relates to Mac OS's terminology, so I mistakenly thought the ""tray icon menu"" would be associated with the menu-bar icon and not the dock icon. But since the menu-bar icon is `#ifndef`'d right out of the build at present, I don't know why "	Clarify
2386	15305739	ACK 	Clarify
2386	15379498	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bcd1db7a88705fd32393061092be9a81c426532c for binaries and test log. "	nAnswer
2386	15379699	"@laanwj Does this collide with the GUI refactoring, if no we should pull this now :).  Edit: ping ^^ "	nAnswer
2386	15675206	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5968cf5db2a62689a341c02550eeebbf0dabd5ef for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2385	15136181	"We really need a -setalertkey option to use a non-standard alert key for testing, along with tools to create alert messages. Make CAlert::CheckSignature() use a single pszAlertKey and then set that key appropriately at startup, as well as have a contrib/alerts directory with some simple Python scrip"	Clarify
2385	15137036	"@petertodd : good idea.  That can be done in a subsequent pull.  Reworked/rebased to whitelist the characters in the alert message, as suggested by @jgarzik.   "	Statement
2385	15137152	"ACK, though I wonder about the conditions of when fThread is true or false (and alertnotify will be in a free thread, or not) "	Clarify
2385	15138666	"fThread == false was implemented just so the unit test doesn't have to Sleep() and keep it's fingers crossed that it waited long enough for the thread to finish.  Normally fThread is true, so the main event processing loop doesn't wait.  "	Clarify
2385	15235387	You should mention it in the warning that's printed if you don't have a bitcoin.conf (with a username/password). That way people who are setting up Bitcoin for the first time are guaranteed to see it and consider using it. 	Statement
2385	15380079	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3d9d2d423bbdf97ef729b8c4a2dddc30a01e1415 for binaries and test log. "	nAnswer
2385	15632907	ACK 	Clarify
2384	15141544	Makes sense and good thing is your patch doesn't cause the need to re-translate :). 	Clarify
2383	15089759	"Needed feature, Bitcoin developers please review. "	Statement
2383	15090826	"DO WANT  even if we need to make it a .conf option, this will be much better than manually patching the client with each build. "	Clarify
2383	15092875	I love you! No homo. 	Statement
2383	15101191	NAK  Don't encourage censorship based on where Bitcoins are going rather than the technical details about how they are being transferred.  My https://github.com/petertodd/bitcoin/tree/block-uneconomic-utxo-creation patch is an example of a way to approach the issue based on politically neutral techn	Clarify
2383	15102440	Address filtering is a DEFINITE no. Do not forget that addresses are disposable. 	Reject
2383	15147695	Looks good visually and functionality-wise. I'll have a look at the code when I get home.  	Statement
2383	15152130	Definitely needed as part of the client! 	Emphasis
2383	15152341	"@petertodd @gladoscc I don't see what's wrong with giving people a *choice* to ignore transactions. Anyone can implement their own address filtering by editing the source code, so what do we gain by adding a technical barrier? "	Clarify
2383	15182536	Including such a mechanism in the official Bitcoin reference client implies we support censorship; an obvious extension of this patch is supporting automated blacklists. 	Statement
2383	15183280	"@gruez ""Anyone sufficiently motivated could build a chemical weapon, what do we gain by not equipping every adult with one?""  Having to modify the software gives people enough friction to think over their change. Not just ""I should do this because some website said to click here for awesomeness"". .."	Clarify
2383	15632861	"GUI looks good. But NAK on the filtering. This is a censorship measure, and an ineffective one at that. "	Statement
2383	15638914	"I beg to differ @laanwj, I don't understand your point in not letting me control my own resources. Did someone put you there to decide over what bitcoiners have to have in their client software? "	Emphasis
2383	15642602	Let's see what the community has to say about this https://bitcointalk.org/index.php?topic=160785 	whQuestion
2383	15673850	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/427dcfb215a5892c8108bc76b40fe9bab9eacb24 for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2383	17148336	We won't be adding any blacklisting functionality at this time.  There are some other active pull requests on dust relay limiting which should generally address the rest of the concerns here.  Thanks to all involved to actually putting code on paper and making a concrete proposal.   	Clarify
2383	17515284	https://bitcointalk.org/index.php?topic=197414 	ynQuestion
2383	18966168	This patch is a potential solution to MAX_BLOCK_SIZE limit give it permits Bitcoin users to ignore spam transactions under set limits.  https://bitcointalk.org/index.php?topic=221111 	Other
2380	15072260	uh.  sha1sum bitcoin-qt  009e1253e48c669e21296928ff1dfeb351618597  bitcoin-qt  	Statement
2378	15043953	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c83dd7490cde4385e8191c88dd746cb15d9a01f8 for binaries and test log. "	nAnswer
2378	15082983	"@gavinandresen @sipa @laanwj and other core devs: I dislike the fact that we release versions with unfinished translations, IMHO our release process should cover these things much better. I'd like to vote for a central place where a release schedule is maintained, so that I can sync these translatio"	Clarify
2378	15083768	"@Diapolo v0.8.1 is branched directly from v0.8.0, and not from git HEAD. It has only 4 commits and no changes to translatable texts.  In general, I agree with your comment about a better process for translations though, but I really don't have the time to work on that. "	nAnswer
2377	15141741	I also dislike the fixed sizes we see and use widely in the Qt code... 	nAnswer
2377	15675214	Which OS/theme etc is the screenshot from? My Bitcoin seem to use a monospace font that fits even at minimum width:  ![windowsReceiveCoins](https://f.cloud.github.com/assets/1425520/320468/9ef748f0-9944-11e2-98af-37c5114c19bf.png) ![kubuntuReceiveCoins](https://f.cloud.github.com/assets/1425520/3204	Clarify
2377	15677570	OS = Ubuntu Windowmanager = Openbox and everything is ran under VNC server. 	Clarify
2377	19776653	The latest version fixed this. 	Statement
2376	15028387	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/774ce679856378ae2bf83a2ba71e26a889c0640a for binaries and test log. "	nAnswer
2376	15040487	That link says that _FORTIFY_SOURCE is a glibc feature; and glibc library is only used on Linux.  So this is pretty much a no-op.  	Statement
2376	15041209	Really? I tried to websearch it and found it in quite a few obviously Windows based open-source programs. 	nAnswer
2376	15088268	"http://man7.org/linux/man-pages/man7/feature_test_macros.7.html  ``Use of this macro requires compiler support, available with gcc(1) since version 4.0.`` Hmm... "	Other
2376	15089054	"gcc header files on my mac do have #if _FORTIFY_SOURCE .... so it is gcc, I think, not just gcc on Linux.  So ACK from me on pullling this; an extra #define won't hurt if you're compiling with something other than gcc. Would be nice to add a comment explaining that _FORTIFY_SOURCE is a gcc-compiler-"	Clarify
2376	15099572	I updated the comment to reflect it's GCC compiler-specific. 	Statement
2374	15141792	"That screen was intended to be removed, but AFAIK no one ever started to write a patch for it. Is your machine a rather old or I/O bound one that causes the freeze? "	Clarify
2374	15173928	My machine is not old. The screen should not be removed as it provides feedback for the user that the application is loading.   If the user tries to start the application and gets no response he or she will be confused. It usually takes some time before the main gui shows up. 	Clarify
2374	15178013	I still need a better explanation of what you consider frozen or when this happens (what is displayed as current state?). 	Clarify
2374	26982757	"Refers to the old splash screen, I think this issue is gone now, so closing. Pulls to improve the slash screen even more are welcome as we're not going to remove it.  "	Clarify
2373	15013306	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/298db97f231661a5cafab37dc9a591f1980b7f5a for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2373	15013608	"Pull-tester is upset because it creates a block (b39) that violates the new rule (it fills the block up to 1MB with abnormally tiny transactions that have scriptSig OP_1 and scriptPubKey OP_1).  @TheBlueMatt : easiest fix, I think, would be to have pull-tester create blocks with timestamps from the "	Clarify
2373	15015520	"4,500 txids can easily break pre-0.8 clients if there's even a 1 block deep reorg, right? Since it isn't for very long, might it make sense to use a lower limit? (If this has already been discussed and resolved in my semi-absense, just let me know and I'll drop it) "	Clarify
2373	15015587	"No, not easily, because most transactions are duplicated between the two legs of most forks.  Longer forks are a risk, but are (happily) rare. "	nAnswer
2373	15015628	"AIUI... even if both competing blocks were EXACT duplicates in terms of included transactions, they would still get a pre-0.8 node stuck in a reorg if the conflict-resolving block contained even as few as 165 transactions...? "	Clarify
2373	15015750	I don't believe so: sipa's re-org code tries to resolve the conflict using as few blocks as possible.  Pre-0.6? 0.5?  (I forget when the re-org code got smarter about making smaller transactions) nodes may get stuck; that is a good reason for them to patch or upgrade or workaround sooner rather than	Clarify
2373	15018286	"> I intend these three commits, applied on top of the v0.8.0 tag, to be the 0.8.1 release.  What's the third commit? "	Other
2373	15024559	"A 1-block-deep reorg requires 3 blocks in a single commit (not 100% sure on the last one): 1) undo stale block, 2) apply winner block, and 3) apply conflict-resolving block "	Other
2373	15026573	"@petertodd : third commit just bumps version numbers to '0.8.1', I removed it from this pull only because it doesn't merge cleanly with git HEAD.  @luke-jr : deep re-orgs are definitely a theoretical problem, but we have to weigh two months of chronic unconfirmed transactions if we set the block siz"	Clarify
2373	15027297	"I doubt 2,000 txids would cause much unconfirmed transactions, but whatever. ACK @ 120k locks DB_CONFIG, but think perhaps we should give a simple formula so admins can make their own informed decision. Obviously upgrading to 0.8 is the way forward, but a lot of people still have custom patching tha"	Clarify
2373	15034822	"Re the plan, I understand the 1st bullet point, but not the 2nd.. What is the reason for the 2nd please? "	Clarify
2373	15035036	"@gavinandresen  Yea, the pulltester test was designed to trigger this case, I suppose it should be switched to do two such blocks, a must accept with a past timestamp and a must reject with a timestamp that triggers this rule. "	Clarify
2373	15041654	"@gavinandresen When is 0.8.1 scheduled? I'm asking, because we should update translations, if there is time left. "	Clarify
2373	15141700	@gavinandresen If these are IN 0.8.1 why not merge it to current head? 	whQuestion
2373	15143785	Closing; I cherry-picked the final 0.8.1 versions of these. 	Statement
2372	15017407	Is this on OSX? Possibly related #2371  	whQuestion
2372	17236075	Closing as a dup of #2371  	Statement
2370	15315690	"1. Is it possible that some of the inputs of the first transaction are already spent? 2. After leaving Bitcoin up and connected for several hours, long enough that pending transactions would be retransmitted, does the transaction appear on the unconfirmed list at http://bitcoincharts.com/bitcoin/txl"	Clarify
2370	15315877	"The transaction did confirm in the end, so it was not a double-spend. This wasn't until I started the client up again later. "	nAnswer
2370	15715514	"@ThePiachu Do you mean that both transactions eventually got confirmed? If so, why is this issue still open? "	Clarify
2369	14945989	"I think more people should think about what Github issues is for at first. This is no help for TX processing (if not related to a code bug or the client itself), it's all about problems with our reference client bitcoind and bitcoin-qt!  No offence here, but the amount of non-code related issues is "	Clarify
2369	14946536	"Where should people go for these sorts of issues? Or does the FAQ already answer this? If so, perhaps it could do with being more prominent, which would involve a patch of sorts. "	Clarify
2369	14946626	@Definit what version of the client are you using? 	whQuestion
2369	14946657	"Im pretty much looking high and low for any help at this point. So far, no clear answers and one big circle of go here, go there's... "	Other
2369	14946664	0.8 now...  	Statement
2369	14946695	"@Definit I suspect this is unconfirmed because the fee wasn't high enough. The network is experiencing more traffic these days and miners are being more selective about which transactions to include in blocks, especially due to the recent block 225430 hard-fork issue. "	Clarify
2369	14946697	when i sent the bitcoins it was with 0.6  when nothing was working I updated thinking this would solve the issue. 	Clarify
2369	14946714	"if the fee wasnt high enough, how do i resolve that... so that it's fixed...   "	Reject
2369	14946757	"blockchain.info has no record of this hash, so I suspect it's disappeared from the network, and you still have the funds. You may need to rebuild your blockchain, or a -rescan may work to correct your balance display. "	Statement
2369	14946799	"how do i do either of those, sorry for the newbish ignorance.  Rebuild the blockchain info... and -rescan  Im oblivious to both, using win7 "	nAnswer
2369	14946862	if something works from what you helped with/mentioned... a nice donation will be sent as gratitude. 	Clarify
2369	14946954	I think this issue is worthy as the resolution is to make it easier for people to rescan or re-download their blockchains in such situations - or to even display when a transaction has disappeared from the network - i.e. effectively rejected. 	Clarify
2369	14947092	"12NJFh662w9B1PHg22uy8nV2bGFxWxEmyd (for donations)  Either run it from the command line with the -rescan option, or delete the blocks directory from your Bitcoin directory in Application Data.   "	Clarify
2369	14947231	"sort of confused, maybe im doing it wrong, but when i run it from the command line with the -rescan... nothing happens  "	nAnswer
2369	14962676	"Installed Open Bitcoin Wallet onto another pc.  Loaded my original wallet.dat backup created 8-2011.  After 7hr's or so, the blockchain was loaded fully, and all is well.  I actually made an extra 4btc from doing this, assuming they were sent to this wallet.dat file after I had been using a more rec"	Clarify
2367	14977658	"Follow-Up: I installed v0.8 on Linux and loaded database (8GB). This solved the issue. The timestamp became exactly the same as transaction 2, which was send 24h later than transaction 1.  History earlier was: I ran Bitcoin.exe on MSW XP started with v0.7 and upgraded to v0.8. "	Clarify
2366	14883520	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/efba4ab3f3a26c03f5253133a45e8025e2c447e2 for binaries and test log. "	nAnswer
2366	14885662	"You should just remove setAddress entirely.  NACK on doing it that way though, it violates the JSON-RPC standard:   http://www.ietf.org/rfc/rfc4627.txt?number=4627  Section 2.2 :  ""...names within an object SHOULD be unique."" "	Clarify
2366	16317635	Closing until a JSON-compliant solution exists. 	Statement
2365	14901440	"You can try with -onlynet=""IPv6"" but AFAIK this is only for outgoing connections. "	Statement
2365	14916243	That worked (but w/o the quotes)  -onlynet=ipv6 	Statement
2364	14865140	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/67f82f019b8e73efa07cf2ed478fb53d3c8d51b1 for binaries and test log. "	nAnswer
2364	15270347	"As long as this consists of that many commits I'm rather sure no core dev will give you an ACK, so you should squash everything into one commit. "	Clarify
2364	15362226	"RE: ""Is there a good reason not to implement this?""  The attitude for the core client is the the opposite:  Is there a good reason TO add this?  Unless you have a compelling use case for this, I'd rather leave it out.  Less is generally better, less code to review for security issues, fewer bugs, .."	Clarify
2364	15362669	@Bobalot  Can you walk me through what problem this solves that isn't solved equally well by just polling once a second (to a few seconds)? 	Clarify
2364	15368712	Per-tx events are going to average at least once per second.  For this patch -- yuck -- you are continually running new OS processes.  It is far more efficient to combine stock bitcoind with https://github.com/jgarzik/pynode/tree/mini-node if you simply want to see all transactions that are accepted	Clarify
2364	15369061	"My point about polling was that new transactions are coming in at more than once per second, so simply polling every few seconds will be less work, no dos exposure, and can still give acceptable responsiveness. "	Other
2364	15674169	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4a5e4de2adeb3dc7ddc2d0cd9214c43714bd80fe for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2364	15953334	"I guess you're right, launching a new process is a terrible thing to do on every transaction. This was really just an ugly hack, having found mini-node it seems using that would be a much easier and safer way to achieve what I wanted.  @gavinandresen it isn't really a good idea to implement this, bu"	Clarify
2364	15985502	"Yes, I consider -blocknotify and -walletnotify also borderline ugly and inefficiently, but this is just too resource-intensive for what it gains. The 0mq support could do things like this much better, imho. "	Reject
2364	16317662	"No consensus, closing. "	Statement
2363	14857280	"If you have malware on your system, then the malware can simply replace bitcoind/Bitcoin-Qt with a wallet-stealing version of bitcoind/Bitcoin-Qt... right?  I'm generally against whack-a-mole security features that will stop THIS round of malware, but will do nothing against tomorrow's smarter malwa"	Reject
2363	14933325	Honestly Bitcoin software features that go anywhere near the wallet.dat should be as predictable and idempotent as possible if you ask me. The last thing we need is some complexity intending to add casual obfuscation causing a wallet to get corrupted... 	Clarify
2363	14945002	"I agree these kind of measures cannot protect against the general case of malware. However, a decade or so ago (but also a few times since) there were various bugs in the browser origin policy that made it possible to retrieve a file if you had the *exact* name. This is what led Mozilla, for example"	Clarify
2363	15603118	We are going to have multi-wallet support? When will it probably be done? 	ynQuestion
2363	15633389	"If you need multiwallet support badly, can you help testing @codeshark's pulls?  https://github.com/bitcoin/bitcoin/pulls/CodeShark  Testing will always help get things merged sooner.  Closing this issue, as the consensus is that we don't agree that this is bad practice. "	Clarify
2361	14828290	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1b7c9b064d97eedde4dc49c7380546a6a05e0e9c for binaries and test log. "	nAnswer
2361	14828339	With fontsize 13 it is consistent with what other elemts? Sorry I don't get it ^^. 	whQuestion
2361	14883204	"Wallet at 11 points was smaller than ""Recent transactions"" at 13 points.  It seemed like a typo, and when I changed it to 13 points, it looked nicer to me. I can post some before-and-after screenshots. (Not sure why I didn't, to be frank and honest.) "	Clarify
2361	14890989	"Would be nice to see your screenies, as I seem to see something different :). "	Statement
2361	14945128	"I think the problem is that ""Wallet"" has a fixed font size, whereas ""Recent Transactions"" has not. So, depending on your system font size, it may be either larger or smaller. Hardwiring it to 13 is not a general solution either. Maybe remove the font size override for wallet completely?  "	Clarify
2361	14945894	I'm also for removing that special casing there. Perhaps it's sufficient to leave it just bold then. 	Reject
2361	14947096	"Fine with me too. Or maybe a relative font size that is specified in em will work, like in CSS? Ie being able to say ""I want this 1.2 times bigger than normal letters"" would be nice. "	Clarify
2361	14987675	"I'm happy with all of these ideas. I didn't realize ""Wallet"" was being set to an absolute size while other text was being set to a relative size. As the ticket title indicates, ""consistency"" is the key! :smile_cat:  "	Emphasis
2361	15151243	"Here's the problem I was originally trying to fix. Note how ""Wallet"" on the left is smaller than ""Recent transactions"" on the right.  ![Screen shot demonstrating the original problem on Mac OS](http://i.imgur.com/Csftn0p.png) "	Clarify
2361	15151714	"By the way, @laanwj, I'm looking at this in the design window in Qt Creator 2.6.2, and it looks like both labels specify a fixed point size. Moreover, I don't see how it's possible to define relative sizes.  I'm still very much a rookie with this Qt stuff, so your patience and understanding is appre"	Clarify
2361	15305911	"If there is no way to set relative sizes (I don't know of one, either) I recommend removing all explicit font sizes from the xml. Setting absolute sizes is a bad idea these days. "	nAnswer
2361	15378100	"Sounds like there is a bigger discussion to be had here, with a broader scope than what this ticket covers. "	Statement
2361	15379683	@L2G IMHO we can pull this if you just remove ``<pointsize>11</pointsize>`` from the .UI file instead of changing it to 13 :). 	Clarify
2361	15440769	"OK, or I could create a new branch so you don't have an extra, vestigial commit in there. "	Statement
2361	15441152	"Here's how it looks on Mac without a font size specified for the ""Wallet"" label:  ![No font size for ""Wallet""](https://f.cloud.github.com/assets/106988/301403/a6a7e01c-95d1-11e2-80a8-0f4d803f21d3.png)  "	Clarify
2361	15443139	"You can squash the 2 commits into one, so that you don't need to create a new branch. Use ``git rebase origin -i`` when you are on this branch. You will then see the 2 commits an can replace ``pick`` for the first with ``reword`` and ``pick`` for the second with ``squash``... just save then and edit"	Clarify
2361	15506034	If it is easier for you to create a new branch just do that and reference this old pull in the Github description of the new pull :). 	Statement
2361	15567735	"@Diapolo, are you talking about the progress message that says ""Processed X blocks of transaction history""? That doesn't show up for me unless I hover over the sync status indicator in the lower-right corner; then it shows up as a tool tip. "	Clarify
2361	15572452	"I was talking about the text on the blueish progressbar, which should read something like ""x blocks remaining"". Is that uncommon on Mac to have text on progressbars? "	Clarify
2361	15572459	ACK 	Clarify
2361	15590216	"I think it's pretty uncommon. I don't know whether it's failing to show up because Qt won't do it or because someone just commented it out with `#ifndef Q_OS_MAC` like they did with the system tray icon (""status menu icon"" in Apple parlance). I'd have to do some digging.  I have another idea for som"	Clarify
2361	15674556	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/15e9739f3b0c93ed7b9f076873a1c4b112f41894 for binaries and test log. This is an automated test script which runs test cases on each commit every time is updated. It, however, dies sometimes and fails to test properly, if you"	Clarify
2359	14767460	This would make no sense. The block size is too small for scaling at 1 mb currently.  There is no point in decreasing size. This would just break more things and would require a hard fork. 	Clarify
2359	14773176	We have hard fork because all daemons under 0.8 NOT accept 1MB blocks. Force upgrade to 0.8 or it will come back and hit again. 	Clarify
2359	14773342	"This issue is confused. The issue is not directly caused by size. And you can't solve one hardfork by adding another, unless you mean the target, in which case it's still is the wrong thing to change to avoid the issue.   "	Clarify
2359	14782030	"Ok, how then avoid same situation in future? Majority of users are on old (<0.8) versions that use BDB and WILL have same trouble when some mine will create another huge block...  New database system is superior to BDB and we should force users at some point to upgrade to avoid same issue in future "	Other
2359	14782262	"It is being worked on, but outside the scope of this github issue. "	nAnswer
2358	14755934	"Wow! Okay, and a big thanks!  "	Emphasis
2358	14785456	"Everything is fine, you just chose a really... uhh, ""interesting"" ... time to run Bitcoin.  I'm going to close this issue, there is nothing to be fixed.  "	Clarify
2357	14848430	"Rebased, and added -rpcthreads to --help output.  But the SIGTERM handler is not working properly, which is why the pull tester is upset... "	nAnswer
2357	15148140	"I really like the reduced complexity of the code, I didn't test it out yet though. "	nAnswer
2357	15200339	"I can't reproduce the pull-tester issue in an Ubuntu VM, but I did fix a compiler warning. "	nAnswer
2357	15204077	"Let's see what pull-tester is doing now, seems the old entries are gone and I wanted to also take a look :). "	Clarify
2357	15311905	ACK (with some inline minor nits mentioned) 	Clarify
2357	15328020	"I really like this change (except the polling to check whether someone interrupted... i wonder if one can call a condition variable's notify in a signal handler...). I haven't gone through the code in detail, but I see nothing terrible.  I've tested both bitcoind and bitcoin-qt under valgrind, with "	Clarify
2357	15330882	"I tested it under OSX 10.8.3 with a command line build of bitcoind and it does not stop when I send the ""stop"" rpc command.  "	Clarify
2357	15341449	"There is definitely a bug with the signal handler / RPC stop on OSX at least, if I try to stop shortly after startup the ""stop"" get swallowed and further stops have no effect.  "	nAnswer
2357	15348823	"Fixed two issues, and made one improvement:  1. Running -daemon, the shutdown detection thread was being started before the fork(). Oops. I moved the -daemon code to run earlier, in AppInit() (which has the added benefit of simplifying the code a bit). 2. A request to shutdown during AppInit2() star"	Clarify
2357	15635977	on freebsd I needed to the add boost_timer lib to the linker 	Statement
2357	15648266	"right now I got this while closing with ""stop"":  Assertion failed: (!pthread_mutex_lock(&m)), function lock, file /usr/local/include/boost/thread/pthread/recursive_mutex.hpp  "	Emphasis
2357	15651219	"@denis2342 : when you say ""right now"", do you mean with this patch or without it? "	Clarify
2357	15689983	"@laanwj No, Sleep() (as opposed to sleep()) was an own function in util.cpp that takes milliseconds as argument. I'm in favor of renaming it to MilliSleep() to reduce confusion. "	nAnswer
2357	15690227	"Yes, agreed. This is certainly an improvement in naming, then.  "	Statement
2357	15739635	"Squashed a few commits, rebased, and changed unsigned constants from 'u' to 'U'.  I'm still puzzled as to why shutdown isn't happening immediately on the pull-tester machine, I can't reproduce that problem on either my Mac or a debian VM.  I'll debug directly on the pull-tester machine next. "	Clarify
2357	15778996	"got it again with the latest changes while using ""stop"":  > ./bitcoind stop Bitcoin server stopping > Assertion failed: (!pthread_mutex_lock(&m)), function lock, file /usr/local/include/boost/thread/pthread/recursive_mutex.hpp, line 105.  "	Other
2357	15784574	"@denis2342 can you run under a debugger and get a call stack for that assertion? I'm guessing something is being called after main() exits, but I'm just guessing... "	Clarify
2357	15851107	Sigh. That took way too long to figure out.  Boost 1.40 (running on pull-tester) versus 1.53 (running on my machine) difference; boost 1.40's thread_group cannot interrupt_all() if another thread is waiting on join_all().  I'll rework the code to be boost 1.40-compatible.  	Clarify
2357	15863195	@gavinandresen Why are we supporting such an ancient Boost version anyway? I don't get that :). 	whQuestion
2357	15874183	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/723035bb6839c5d65bfee96d501a8c54814778e3 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2357	15875391	"I'm going to pull this, I suspect @denis2342 is seeing the same intermittent crash-at-shutdown problems that we saw before on OSX (or are you seeing them on freebsd?) "	Clarify
2356	14702292	See #1522 	System
2356	14706348	"Yeah, seems to be a duplicate, please use the linked thread from @fanquake and just close this one, thanks. "	nAnswer
2356	14751667	Closing in favor of original report at #1522. 	Statement
2354	14706369	"Please close this duplicate, thanks. "	nAnswer
2352	14706315	"NACK, it was my intention to have the current alignment, as OpenSSL is used as part of the client and shouldn't ne aligned to client version. "	Statement
2352	14748821	Agree NACK: I like Before better. 	Clarify
2351	14674419	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0df65da397f5b1927783f7a8dba2f69e1cfef3ff for binaries and test log. "	nAnswer
2351	14674878	"Needs unit tests and a thorough test plan. If you want this to be pulled, you'll also need a user-friendly discussion of what this changes and how it affects SatoshiDice, how it affects users who might already have coin dust in their wallets, etc.  Or, in other words: writing the code is the easy pa"	Clarify
2351	14675031	"Oh, frankly I'm surprised you think the issue is settled enough to be writing that stuff at that stage; I wasn't expecting this to be anywhere close to being pulled yet. "	Clarify
2351	14675100	"If it isn't anywhere close to being pulled, why did you submit it?  I don't like ""Pull Request As A Forum For Discussion"" ...  "	whQuestion
2351	14675116	"(oh, WHY I don't like pull-request-as-a-forum-for-discussion:  because it make my job harder, and wastes people time reviewing code that may never have a chance of being pulled) "	Clarify
2351	14675263	"Oh, I see you just want pull-reqs saved for code that has already had the initial discussion about it specifically done elsewhere; the pros and cons of the basic idea and varients have been discussed endlessly elsewhere. "	Clarify
2351	14675333	Closing; please re-open when this is ready for pulling into mainline.  	Clarify
2351	16089443	"Recent data spam seems to make this worth revisiting, and re-opening.  "	Statement
2350	14660451	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4db114667fe540fe6edf90e1db7f5c999b857e4d for binaries and test log. "	nAnswer
2350	14761166	I've been waiting for this one. 	Statement
2350	14762301	"ACK, good catch "	Accept
2349	14639738	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/817abe0c4b89d743dab617fb1912a5317dc75b13 for binaries and test log. "	nAnswer
2349	14748806	ACK 	Clarify
2349	15985558	"ACK; needs a rebase, though. "	Clarify
2349	15993643	"@sipa What about ``-rpcthreads``, does this make sense there too? Or for ``-genproclimit`` (which seems missing from our help message in init.cpp?)? "	Other
2349	16317722	"@Diapolo As long as we don't have good lock isolation, RPC processing is effectively single-threaded anyway. I don't even think there's any good reason for more than 2 RPC threads right now. "	Clarify
2349	16322940	@sipa AFAIK we currently use 4 RPC threads as default ;). I just was asking if these changes could be valuable for other thread-related command-line parameters also. 	Clarify
2349	17165571	"Re ""needs a rebase"", am I supposed to do that? (my knowledge of git/github is pretty basic still) "	Clarify
2349	17180931	"Ok, did the rebase, with help from @rdponticelli. "	Statement
2349	17181063	"Thanks. If you can squash the two commits together also, I'll merge. "	Clarify
2349	17181752	"'twas easier to reset both diffs and commit a new one again (""easier"" == ""I've done it in the past"" :)). "	Clarify
2349	17182623	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/22192ca744892568dc8d68fcbcec5d6d0aaa8d2e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2348	14552754	"Suggest renaming ""unlocked"" at the same time, since it can be confused with wallet encryption lock/unlock.. ""threadsafe""? "	Emphasis
2348	14554084	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dcf8b8fd9e9fc964eda083ee82e46df58958f705 for binaries and test log. "	nAnswer
2348	14555868	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/10ef3611697cdf867730689f6968ba48adc4d6e2 for binaries and test log. "	nAnswer
2347	14534954	What's the transaction id?  Did you pay a fee to send the funds and what was the transaction size.  	whQuestion
2347	14543304	There are much better places to ask these sort of questions - such as [StackExchange](http://bitcoin.stackexchange.com/) 	Other
2347	14551718	"Address has no unconfirmed transactions against it. OP says thank you, so taken as resolved and closed. "	Clarify
2345	14492840	"What you're suggesting would not be effective: Anyone can get access to many IPs, Bitcoin has no central authority to certify blocks came from the IPs they're claimed to have come form. Nor is otherwise ""moderating"" actually a desirable thing. The system is self-regulating.  "	nAnswer
2345	14856900	"The system is self-regulating sounds like famous last words.  Is there anything in this ""self-regulating system"" to stop someone from hacking the top mining pools and injecting code to take over the network?  That said, tying things to IP is most certainly a useless effort.  I might suggest altern"	Clarify
2345	14933582	"These are interesting ideas but there are obvious (albeit nontrivial) countermeasures that can be taken to thwart them. Unless a perfect solution is found (and that'd be pretty unlikely to even exist in my humble opinion given the anonymity inherent) any ""51% detection system"" merely risks causing a"	Clarify
2345	14943904	"@gmaxwell wrt ""The system is self-regulating"" I misunderstood.  Also thought it would be clear ""you"" would be an address that mined bitcoins would be awarded to.  ""Trusted"" being in terms of deciding consensus on the block chain, taking the chain with the greatest trust behind it that factored in ri"	Clarify
2345	14977570	Is there any system in place that currently monitors for attacks on the network?  (Other than double spending?)  Seems like the obvious first step. 	Clarify
2345	14978039	@hrobbins What attack are you asking about and I'll let you know if I know of something that monitors for it? 	whQuestion
2345	14980008	"@gmaxwell Specifically thinking about the >50% attack, the ""Cancer Nodes"" attack, or general misbehavior of the network like the 0.7/0.8 fork which seemed to catch people off-guard. "	Clarify
2344	14429014	"You should be able to clear history with the ""clear"" button. (Either that is in 0.8.0 or it still must be merged :p) "	Clarify
2343	14403837	"I'm generally in favor of this sort of thing, in that it helps foster understanding of the system (e.g. understanding that it spends coins and not accounts) and avoids people getting pushed to webpages to get similar functionality.  I'm not keen on the ""back to input"" change option, it's not obvious"	Clarify
2343	14407850	"update: removed ""back to input""  @gmaxwell I am actually already computing the fees while selecting inputs assuming 2 outputs "	Clarify
2343	14409147	"sorry guys, the build issues are because I never tested this with Qt 4.7, I will commit an update in the next days.  "	Clarify
2343	14413208	"Please merge this.  For many users, having this feature in the client (and not some external utility) is a higher priority than anything else that has happened since the 0.6 release.  Consider how that affects their incentive to upgrade. "	Clarify
2343	14417181	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e90eb8f68d245364022c840ceee496a836b0cf5b for binaries and test log. "	nAnswer
2343	14417799	"How was this or should this be tested?  Can you write up (or, better, get somebody to write up) a test plan? See https://github.com/bitcoin/QA/blob/master/TestPlanCreation.md for how.  This is definitely a large enough feature with enough possibility of disastrous consequences if there is a bug (peo"	Clarify
2343	14419157	"I concur with @eldentyrell - if this isn't merged then a fork will occur, which may potentially be more popular than this one - some diversity of this client is probably a good thing though to maintain what bitcoin is meant to be about - decentralised. "	Clarify
2343	14419205	Actually I'm not worried about a fork so much as people simply using increasingly-ancient versions of the client.  Right now there are a bunch of people who will simply keep using coderrr's 0.6-based binaries forever if they aren't offered something strictly more useful. 	Clarify
2343	14419206	@rebroad  I'm wondering why you think it's appropriate to use threatening language over code that doesn't currently compile? Good luck with that fork.  	Clarify
2343	14419417	> This is definitely a large enough feature with enough possibility of disastrous consequences if there is a bug (people sending coins to /dev/null) to spend some good solid time testing carefully.  Keep in mind that the people who use this feature will choose an older guaranteed-to-be-more-buggy-si	Clarify
2343	14419862	"If someone is eligible and wants to write such a test plan, please contact me.   I can help with some coins for the work, just in case they end up in /dev/null while testing:) "	Clarify
2343	14420378	@eldentyrell They could always merge coincontrol with the relevant stable branch (not to dissuade merging this..)  @gmaxwell I didn't interpret @rebroad as threatening at all O.o 	Clarify
2343	14421643	"@luke-jr, I'm talking about non-{template-heavy-C++}-programmers (the majority of bitcoin users). "	Statement
2343	14421897	If you've selected a bunch of coins in a bunch of different groups it's not easy to unselect them. There should probably be some discoverable way to select all / unselect all. 	Clarify
2343	14422138	"Shows transactions which are currently in listlockunspent. These should be greyed out. (perhaps with a padlock on them, bonus if the gui gets the ability to lock and unlock them)  "	Clarify
2343	14422152	"@gmaxwell confirmations are shown with tooltip. priority does not matter in my version of coin control.  ALL SELECTED INPUTS ARE GOING INTO THE TRANSACTION FOR SURE. If you select 100BTC but only send 1 satoshi, still all 100BTC will be inputs, rest will send back as change.  Also there is already s"	Clarify
2343	14422455	"actually I am using the listlockunspent methods to realize coin control, so combining the GUI and cli methods is not possible with this. The GUI would delete your locks, if set by cli. if you guys think this is no good, I need to change this. "	nAnswer
2343	14422549	"The lockunspent code is trivial, so if we want to go that route we could basically duplicate it for this. I'll have to contemplate and look through your code. Still just doing really basic tests right now. "	Statement
2343	14422710	"@gmaxwell ah Im sorry with the priority thing, now I know what you mean, youre right, showing this in an extra column could be useful. "	Clarify
2343	14422816	"Yea, fee behavior is misleading, it fails to override it.  Reproduction: Select 50 BTC input. Shows fee: 0.  Send 49.99999999 BTC.   Produces a transaction that pays 1e-8 in fees.  or, Select 50 BTC input. Shows fee: 0. Send 1e-8 BTC.  Prompts to charge for a 0.0005 fee. abort.  or, Select 50 BTC in"	Clarify
2343	14462951	" ![screenshot8](https://f.cloud.github.com/assets/2814559/224452/557b10f8-85d5-11e2-9934-a3e147e63a30.png)  just want to say, that Im working on this, update in 2 or 3 days. gmaxwell made some good points. Added screenshot, what do you think? "	Clarify
2343	14485414	Looking good @cozz - I notice @jgarzik commented on the bitcointalk thread about RPC functionality - but I wasn't quite sure of the relevance - is he implying some duplication of effort as a result of this pull? 	Clarify
2343	14495285	"@rebroad - @jgarzik does not want to patch Bitcoin-Qt but instead provide this functionality through another external app. You could realize this through the lockunspent methods.  (except the extremely important feature that all selected should go into the transaction for sure, you have to patch bit"	Clarify
2343	14933788	Just want to chime in that this functionality is very cool and also very powerful. I hope this can get sufficiently tested and included (even some reduced subset if necessary). 	Clarify
2343	14966206	@cozz I'd like to install this Perhaps you could include instructions for the novice github users for downloading it..? (including me!) 	Clarify
2343	15009975	Could you rebase this so it can be tested with current master? 	ynQuestion
2343	15016740	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b0dc2ad87f2b816dfd2cee1ff5c94c1024c56e8e for binaries and test log. "	nAnswer
2343	15016784	"UPDATE:  ![screen_shot5](https://f.cloud.github.com/assets/2814559/267707/5d4c5480-8eb4-11e2-8003-5aec5404477f.png) ![screen_shot6](https://f.cloud.github.com/assets/2814559/267709/91555b14-8eb4-11e2-973a-45d4a630ca6a.png)  code-cleanup and rebase  - address-label is now shown, if you enter a change"	Clarify
2343	15017240	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bc86b7377a4469d97d98765e6c5e8f9d9a07b3a3 for binaries and test log. "	nAnswer
2343	15019576	"Sorry for interrupting this pull request but imo those are almost essential features that should be included in the official client, please merge :> "	Other
2343	15020219	 @rebroad I have published binarys also: https://bitcointalk.org/index.php?topic=144331 	Statement
2343	15053826	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/28403fb61e6bec7c7a207f01c23935fa3b6efaa9 for binaries and test log. "	nAnswer
2343	15054517	UPDATE: rebase 	Statement
2343	15055105	"I'm not opposed to merging this (for 0.9). Code changes look sane in general, and as it is disabled by default casual users won't be overwhelmed. More advanced users get some control over change, priority, fee etc which is good. Of course it all needs to be well tested, and conflicts with other comi"	Clarify
2343	15145690	"Could you make the values selectable (so it's possible to copy them)?  Also, this need a rebase (again :( ) "	Statement
2343	15236268	"I've been testing this, and I seem to be having some crashes with wallet.db being unable to be read. So far it's not happened on the build that didn't have this coincontrol merged. Will explore further... "	Clarify
2343	15718515	@rebroad: sounds like a very serious problem; did you manage to get more information from the crashes? 	Clarify
2343	15768408	@Nothing4You You you dont need to select you can direct right click and copy to clipboard  @rebroad if you cant reproduce the error I cant help you here.  From my standpoint its not possible to create a corrupt wallet with the coin control patch. I guess the changes are less critical than some peopl	Clarify
2343	15816612	"Does this correctly calculate fee/kB in the case of unconfirmed (change) inputs? More specifically, does it include the size of unconfirmed ""parent"" transactions in the calculation? If not, should it? "	Other
2343	15986182	"The changes to core look very sane (I haven't looked at the Qt code), but one thing I'm unconfortable with: coin control settings effectively become per-wallet state. That means that when using coin control from within Qt, it will also affect transactions created via RPC (which doesn't have the same"	Clarify
2343	16000873	"Agreed @sipa, it should not be state but an extra input to the sendtransactions "	nAnswer
2343	16465721	"Bug: Clicking on any part of the list other than the checkbox column (eg, clicking on an item's Confirmation count) sets the focus to that column, and the space-bar cannot be used to check/uncheck the checkbox. "	nAnswer
2343	16692473	"Why is change grouped in with other addresses? Seems to me as change is only every used as an input once, it should never be grouped... "	nAnswer
2343	16710725	I don't see how a relationship is inferred to an output (that it is change is not represented in the transaction itself). 	nAnswer
2343	16712270	"Just chiming in, this all sounds like a great idea. "	Statement
2343	16712295	"@luke-jr Without special measures to try to make the change look like a regular output (try to mimic precision/patterns in amount values, for example), I think it's safer to assume that change can be inferred. "	Clarify
2343	16715772	"> that it is change is not represented in the transaction itself  @luke-jr, do you mean:  1. In the blockchain?  Of course not.  2. In a client's local transaction records?  The client can make note of the purpose for which a private key was created (to receive change or not) at the time of its crea"	Clarify
2343	17505574	"Thought: it would be nice if the coin control had a way to run the coin auto-selector, and display the choices in the coin control screen for any changes/review. "	Clarify
2343	18480273	can this please be implemented in RPC too? <3 	ynQuestion
2343	18659631	@ahdinosaur You can do coin control using the raw transaction api in RPC. 	Reject
2343	18664208	"We'd like to merge this ASAP, but it really needs @sipa's comment fixed (no per-wallet state, use CTxDestination) before it can be merged. "	Clarify
2343	18720595	I have rebased this branch here: https://github.com/sipa/bitcoin/commits/coincontrol  It misses: * Updates to the new dust logic * The coincontrol settings class I suggested instead of wallet state * CTxDestination instead of CBitcoinAddress 	Clarify
2343	18737682	"I only did not submit any more updates, because I thought you guys require a testing plan for merging. Anyway I will look at this and push either an update or the current state after the weekend. "	Clarify
2343	18862897	"update:  - new class CCoinControl in wallet.h   class has      - CTxDestination for change      - Coin Control Methods      - Lock Unspent Methods        I have merged lockunspent - methods into this class, because otherwise         we would have again same state for gui and rpc for lockunsppent.   "	Clarify
2343	18865005	"Maybe my comment wasn't clear, but this isn't what I meant at all. You've now moved the coin control logic to a separate class, but it's still kept as state in CWallet (and in addition, it holds a backreference to the wallet it is part of...).  The idea was to have something like CCoinControl, but j"	Clarify
2343	18866958	"thx for quick response.  ok, I kinda see. I will give this another shot. Are you fine with merging the lockunspent into the class? Should I create a new file src/coincontrol.h for the class? "	Clarify
2343	18867086	"Yes, I think the lockunspent stuff much more belongs in CCoinControl than in CWallet - I disliked it being there in the first place. But then that means that the RPC module gets its own CCoinControl instance, to maintain the lockunspent data. "	Clarify
2343	18908805	"Although I do agree w/ @sipa RE lockunspent data, it was an open question at the time whether it should be stored in the wallet or not.  Some people requested a second iteration of lockunspent store the lock list in stable storage, thereby solving an issue with the current implementation: one must r"	Clarify
2343	18981046	"update:    - I have not merged lockunspent into coincontrol now, to not complicate things   - class CCoinControl is now in src/coincontrol.h and independent from wallet     - the class is optional parameter to createTransaction,AvailableCoins,SelectCoins,sendCoins     - class is only passed in GUI c"	nAnswer
2343	19071850	"Yes, jgarzik agreed, put these into other pull requests unless they are directly related to Coin Control.  BTW, it seems that some incarnation of #2651 will likely happen.  Your patches have incompatibilities.  Would you consider rebasing on current master and checking if things remain compatible wi"	Clarify
2343	19078156	"I rebased your Coin Control on top of master and #2651 ""display txfee in first sendCoinsDialog message box"".  When used in combination, ""display txfee in first sendCoinsDialog message box"" selects from available coins which do not include the inputs chosen by the user using Coin Control.  Work would"	Clarify
2343	19092973	"@wtogami is right. If the pull get's ACKed and merged, pull #2651 needs overhaul and some merge effort. "	Clarify
2343	19100038	"@jonasschnelli It seems #2651 is closer to acceptance than #2343 Coin Control, so Coin Control should rebase on master with #2651 as a dependency. "	Emphasis
2343	19161931	"The changes look good overall to me (though I haven't checked the GUI code or whether the creation logic matches the current filtering policies), apart from two nits I left inline. I think it's likely #2154 gets merged before this, so you may need some rebasing, but I don't think it'll be particular"	Clarify
2343	19228329	update: sipa changes 	Statement
2343	19268576	"Is anyone else seeing this layout problem?  I've seen it with at least the past two versions of Coin Control, including the current master plus the latest commit.  Fedora native and gitian linux builds are equally affected. ![cc-layout-problem](https://f.cloud.github.com/assets/93665/637707/4fbfb462"	Clarify
2343	19277762	"update: solve layout issue. I had used fixed heights at some point, which was no good. "	nAnswer
2343	19310204	"Hi cozz, did you see my email? My team would like to make a donation to you for this work. "	Statement
2343	19333802	"update: Diapolo changes  I am using labels now, instead of index numbers. "	nAnswer
2343	19368034	**Space Bar Bug** It seems spacebar often fails to check/uncheck.  Not sure what causes the instances where it does not work.  Clicking and moving around a bit sometimes restores the spacebar ability.  **Isolated Cause** Clicking on the column titles like Priority to sort causes the spacebar to fail	Clarify
2343	19368705	"**Move OK button to bottom right** Could you also please move the OK button on the input selection dialog to the bottom right?  That seems to be where other dialogs have their button when the user wants to ""continue"". "	Clarify
2343	19368841	"**s/Minus Fee/After Fee/** Would you consider renaming the ""Minus Fee"" label?  It is currently a bit confusing.  Perhaps ""After Fee"" would be more understandable? "	Clarify
2343	19370633	"**Possible bug with priority calculation.**  I have sent a few Coin Control transactions to combine tiny p2pool dust.  On the 5th attempt, the input selection dialog has dust listed as ""low-medium"".  I sort by Priority and manually select the 67 lowest of the low-medium inputs, keeping the tx size b"	Clarify
2343	19370676	"**Possible bug with byte size calculation** The ""Bytes:"" of a 67 input transaction in Coin Control is 9994, but after confirmation, ABE block explorer shows those tx's with byte sizes like 9955 or 9962.   **Update** I might have figured out the cause.  The byte calculation is assuming non-compressed"	Clarify
2343	19386785	**Escape button bug** This may be related to the spacebar bug above.  Often the Escape button fails to dismiss the CC input selection dialog. 	Clarify
2343	20270507	"**More regarding byte size calculation** I now realized, is the discrepency really about leaving room for a possible change output?  What happens if there is a change output and the target address is uncompressed?  Will the actual tx size be in excess of the estimate in that case? "	Clarify
2343	20422144	"update: - labels are now selectable, because people often ask ""how to copy to clipboard?"" - fix spacebar/esc bug, I had to subclass the treewidget for this - s/Minus Fee/After Fee/ - s/nBaseFee/nFee/ - remove (nAmount - nPayFee) parenthesis - added a ""~"" before bytes and say ""Can vary +/- 1 Byte per"	Clarify
2343	20427175	@cozz Sounds great!  Could you please provide this new version rebased to 0.8.2 as well? 	Emphasis
2343	20431575	  @wtogami  http://sourceforge.net/projects/bitcoincoincont/files/bitcoin-0.8.3-coincontrol.tar.gz/download   	System
2343	20453629	"https://github.com/litecoin-project/litecoin-0.8/commits/awesomecoin-cc8 We are testing it in this side-branch.  I'm liking the improvements over the previous version! https://github.com/litecoin-project/litecoin-0.8/commit/874db0996bc34aacf9d848b83d9cdbfb148c433d Not Bitcoin's problem, but I am not"	Reject
2343	20453813	@cozz a tiny request.  Could you please push each new revision of Coin Control to a new branch on your github?  It is difficult to compare the changes to previous versions when the earlier versions are gone. 	whQuestion
2343	20454477	@wtogami It's not difficult at all. Pushing to the same branch is necessary to update the pull request. 	Statement
2343	20457505	"@luke-jr I may be mistaken, but isn't what he is doing push --force, which wipes access to the previous revisions? "	whQuestion
2343	20457553	@wtogami Presumably. Don't you have a local copy? 	ynQuestion
2343	22451445	"This has been stable for a while now, and I'm not aware of any unaddressed concerns. Time to merge? "	Emphasis
2343	22451681	"ACK behavior, just tried it out some, and I'm very happy with how it behaves now. "	nAnswer
2343	22454294	"ACK on the code changes to core. I didn't check the GUI code in detail, but it seems there's a lot of duplication of fee logic there. "	nAnswer
2343	22466293	"Yes, there is some duplication of fee logic. The stuff hardcoded in CreateTransaction(..) in wallet.cpp  is not so easy to get rid of. But we could change the GetMinFee(..) method in main.cpp, so that it takes a parameter nBytes, and then do not serialize the CTransaction in this method, but use thi"	Clarify
2343	22466627	"That sounds like a good idea. But I would to it in a separate commit, not pull. So it would be part of this pull request, but also clearly distinguishable from the coin control functionality in git. "	nAnswer
2343	22507252	"update:  - added second commit ""pass nBytes as parameter to GetMinFee(..)""  - remove some duplicated fee logic and use GetMinFee(..) instead  - sipa nits  - change context menu order ""Copy address,..."" to match order from the Transactions tab "	Clarify
2343	22534163	"I'd still be much more comfortable ACK'ing this if there was a written-up QA test plan. I see a lot of ad-hoc testing (e.g. @wtogami testing priority calculations sweeping up dust) which is fine, but the purpose of thorough testing is to find edge cases that aren't tested because ""it works for what "	Clarify
2343	24274890	@gavinandresen What sort of test plan?  Completely automated is necessary? 	whQuestion
2343	24275028	@cozz Needs rebase. 	System
2343	24281264	"@wtogami : no, completely automated is NOT necessary.  The kind of test plan described here:   https://github.com/bitcoin/QA  e.g. https://github.com/gavinandresen/QA/blob/master/PaymentRequestTest.md   "	nAnswer
2343	25031273	"update: - rebase/fix merge conflicts - replace hardcoded 57600000 with AllowFree(..) - minor fee bug: occured for sub-cent change and unusual fee setting, 0 < fee < 10000 - minor gui: hide change label when checkbox unchecked  Testplan: https://github.com/cozz/bitcoin/blob/cozz1/cctestplan.md  @gavi"	Other
2343	25066480	Excellent test plan!  The only section missing is interaction with JSON-RPC -- e.g. could things break in weird ways if a JSON-RPC send is done while the input selection dialog is up?  	Clarify
2343	25108354	"Not break, but the rpc scenario to consider is: Coin control thinks the selected output is spendable, while actually the output is spent. This can happen if you spent an output with rpc while working around in the sendcoinsdialog. So you select an output with coin control, then spend it with rpc. Th"	Clarify
2343	25116179	"@cozz That kind of thing can probably even happen in the regular wallet with co-current RPC operations, so yeah, if you could think it through carefully and come up with a good solution and user experience that'd be quite valuable. Just make sure the error message you got is reasonable friendly - ""T"	Clarify
2343	25415418	"update:  - selected but spent outputs are now automatically removed from the coincontrol-selection on label update (which is also triggered just by opening the dialog)  This is now a simple solution to the problem described above, solved with one if-statement.  test-plan update: - added 12. Double S"	Clarify
2343	25491339	@cozz Great work!  Could you please post a new backport to 0.8.5?  You have many testers there that would help to validate the recent changes. 	Clarify
2343	25756894	@mumblerit http://sourceforge.net/projects/bitcoincoincont/files/bitcoin-0.8.5-coincontrol.tar.gz/download 	System
2343	26240566	Any remaining concerns blocking this merge? 	ynQuestion
2343	26681569	"https://bitcointalk.org/index.php?topic=144331.msg3375525#msg3375525  ""Transaction times shown on CC window are not equal to times shown on Transactions tab. They are -2 hours off in my case (GMT +1 zone).""  I'm not sure if it's already fixed, I'm just reporting it ... "	Clarify
2343	26688367	"How is the test-plan testing going, or how did it go?  Has anybody run through the entire test plan on both Windows and Linux and yet?  (ideally, it would be tested on OSX also).   "	Clarify
2343	26905257	"update: - fix transaction times bug reported by @HostFat  - because of #3008    - change labels from 10000 to 1000 bytes     (I did not have to change fee-logic, only tooltip label and label turn red threshold)   - testplan: change from 10000 to 1000 bytes - because of #2945    - ignore bytes from t"	Clarify
2343	26922513	Can we have this backported to bitcoin-0.8.5 please? 	ynQuestion
2343	26970088	Apart from some minor nits the code looks good enough for merging now. How is the testing coming along?  	Clarify
2343	26971797	"How does this interact with payment requests, when they show up in sendcoinsdialog? "	whQuestion
2343	26972122	Do all labels in your GUI honor changed display units? 	ynQuestion
2343	27092736	"update:  - code nits    - introduced GUIUtil::setClipboard    - calling getBalance(coinControl) now in walletmodel.cpp    - replaced ""WARNING"" with ""Warning""    - added notr=""true"" to ui non translatable strings  - added ""coinControlUpdateLabels();"" at the end of SendCoinsDialog::pasteEntry(..).    "	Clarify
2343	27098135	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/51a2d9cfabf4264a8833da708d19eac4a1f83d87 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2343	27273316	"ACK, whether the code is perfect yet or not, it works and isn't hacky or crazy. "	nAnswer
2343	27337571	ACK after rebase.  Please just merge.  Litcoin has found no show-stopping bugs in the past few months of testing while this patch has continued to receive polish and tiny fixes.  https://github.com/litecoin-project/litecoin/pull/77#issuecomment-27046107 Litecoin's Coin Control had this simple debug 	Clarify
2343	27338178	"@wtogami  ""Please just merge"" is not helpful.  ""Mr. Foo. Went through the test plan and completed all the tests successfully"" is. "	Clarify
2343	28052736	"Coin Control tells me 3 inputs and 1 output uses 618 bytes, but this doesn't seem to be the case? https://blockchain.info/tx/939a4e1b3264eee96a86e56fc1f07b2d52ae6240896d8b196e6af1cf9967ee06 "	nAnswer
2343	28106326	618 = 3 * 180 + 2 * 34 + 10 This would be 3 inputs from uncompressed keys and 2 outputs.  590 = 3 * 148 + 4 * 34 + 10 This would be 3 inputs from compressed keys and 4 outputs.  Calculation depends on how many inputs/outputs and also if inputs are from compressed or uncompressed ecdsa public key. If	Clarify
2343	28476817	Rebasing this now...  See #3253  	Statement
2343	28506052	Closing this then. We dont need to have two coin control pull reqs open. 	Clarify
2341	14350760	"This is in the ""random crashes on Windows that we can't explain"" category of bugs.  If you are a Windows developer willing to help out, please compile and run a debug version and see if you can get a stack trace.  Otherwise... I'm going to close this as ""We'd love to fix it if we could, but we don't"	Reject
2341	26602451	I get the very same crash on starting Bitcoin-Qt built on windows with gcc 4.81 and WIN32_LEAN_AND_MEAN. win8 64  It does not even write a debug.log 	Clarify
2341	26604709	"As @gavinandresen says, without a stack trace (with symbols and line numbers) we can't do anything. You'll need to debug the issue yourself, especially if you build with your own toolchain and build options. "	Clarify
2341	26669370	Hint for later: It could be I had 4.6 object files mixed in. 	Clarify
2339	14234775	"By 0.8.0 Beta you are talking about the official non-RC relase? Can you post some parts of the debug.log, that could help. "	Clarify
2339	14248293	"Yes, the Windows .exe install package currently shown on the main page at bitcoin.org.  From debug.log: -- Bitcoin version v0.8.0-beta (2013-02-18 18:38:34 -0500) Using OpenSSL version OpenSSL 1.0.1c 10 May 2012 Startup time: 2013-02-28 18:17:58 Default data directory C:\Users\Satori\AppData\Roaming"	Clarify
2339	14279196	Well a walletDB error is related to your Bitcoin wallet file and you could try to first backup your wallet.dat and then start the client with ``-salvagewallet``. 	Statement
2339	14316370	"Thank you, Diapolo!  That seems to have worked like a charm.  Bitcoin loaded, did a bit of scanning, and now has resumed loading from the blockchain. "	Emphasis
2339	14327926	"@Tindalos If everything is working now, you can close this issue ticket :). "	Clarify
2338	14022177	I figure I get this simply included in the protocol so that we can later bother with the actual download optimizations. 	nAnswer
2338	14023600	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/cbfc77352d095d562860fa8695ada5ac73cf7f67 for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2338	14034730	"Hah, neat. Do the merkle blocks generated by such a filter have much overhead for the representation vs just a generic list of hashes? "	Reject
2338	14037030	@mikehearn 8 bytes + 0.25 byte/tx + overhead of sending the transactions in separate messages instead of inline in a block. 	Clarify
2338	14047166	Actually 32.25 bytes per tx (we chatted about it offline) 	Other
2338	14064677	"Yea, I think thats pretty good considering you have to atleast transfer the 32-byte sha256 hash of the tx (atleast given that you've already received most, if not all, of the txn in question). "	Clarify
2338	14082448	"Yea, absolutely could do better, but since this is already in the protocol, I figured I might as well enable it without wasting tons of CPU cycles hashing. "	Clarify
2337	14019067	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/32ba00f84b1059fa8cb50be232330a5df2ebac87 for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2336	14020107	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/b7cf0454ad6d831965d8ace7209b54726c166aec for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2336	14020489	@BitcoinPullTester  LOL. Should he write a unit test for the unit test? 	Clarify
2336	14021196	"Yo dawg...  Of course, I did test that those unittest's fail if you invert the logic... "	Clarify
2336	14276624	Changed to RETURN from 0xff as per IRC discussion. 	Clarify
2336	14348626	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/091f18419011bfee6242270e52237f524ca23c8e for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2335	14020679	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/3770896e76c9171ebb38f7f47c3949089617856b for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2335	14020719	"@BitcoinPullTester Uh, how? "	whQuestion
2335	14030145	"That message is posted everywhere, dunno if Gavin paid Matt some Coins for it ^^. "	Reject
2334	14344511	"I wanted to open this issue a while ago but thought maybe I don't understand something. But that's true, the message is wrong when you've caught up. I've done a bit of grepping of the source and found the related function, it's BitcoinGUI::setNumBlocks(int count, int nTotalBlocks) on line 500 @ src/"	Clarify
2334	14344974	"Well, here's a little patch to make it work as expected. It forces updating the block count and time since the last block every 10 seconds (20*500ms).  ```diff diff --git a/src/qt/clientmodel.cpp b/src/qt/clientmodel.cpp index 084ad12..d7fe156 100644 --- a/src/qt/clientmodel.cpp +++ b/src/qt/clientm"	Other
2334	14346784	"Indeed, the underlying problem is that the tooltip is generated when a block comes in, not when the tooltip is requested to be rendered. @eurekafag's patch works around this by sending the numBlockChanged signal even though the number of blocks hasn't changed (which is contrary to the principle of l"	Clarify
2334	14347318	"Maybe it would be good to split the setNumBlocks function in two, one for setting the block count and another for updating the tooltip with time passed since the last block. Then we can update only the time once in a while following ""the least surprise"" principle as you said. I set 10 seconds to cle"	Clarify
2334	14356388	"I don't know anything about Qt, but according to your principal of least surprise it would be better not to mention the time since the last block was received at all than to use a value that could be out by several hours.  My Internet was down all night.  When it comes back, sometimes bitcoin-qt doe"	Clarify
2334	16873658	"How about including the time and date that the last block was received?  Currently I hover over the green checkmark and see ""last received block was generated 9 seconds ago"".  I have no idea whether that was today or yesterday.  Sometimes the client takes a long time to even notice that it's out of "	Clarify
2334	16914231	"It used to show a time and date, and then people wanted it this way. There is just no way to satisfy everyone, sorry. "	nAnswer
2334	16914692	"Of course, there's a way. It's called ""options"". Just add an option to show the time in a ""date"" form or ""x y ago"" form which I personally hate because it's too rough and often even seconds matter. It's outrageous that even github adopted this format for comments and even commits which is too bad. B"	Clarify
2334	16917499	"We won't add options for every trivial ui decision. That's a maintainability and testing nightmare. We are understaffed in that regard already.  This issue must be solved nevertheless, and you are right in that simply showing a date is the most straightforward path to that if we don't want to mess w"	Reject
2334	16956982	"> It used to show a time and date, and then people wanted it this way.  I don't think that's really accurate.  I can understand if people wanted it to say ""3 minutes ago"" instead of showing a time that is 3 minutes earlier than the current time, but I doubt anyone wants the current system which is t"	Clarify
2334	28207536	"This is no problem anymore (starting from commit 24cde0b7d1ad014ffca5d0af896bc50b30e5ddcd) as the smallest granularity of generated XXX ago is in weeks, not minutes or seconds. "	nAnswer
2333	14020928	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/f703e1efde24c1dff91982787cc8d59e69be7017 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2333	14029933	"@TheBlueMatt How can my change here cause this: ``test/util_tests.cpp(307): error in ""util_seed_insecure_rand"": check count<=10000/mod+err failed``? "	Other
2333	14829844	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/502ecf77dbc091dd0da72c4aecd5186c7dd49470 for binaries and test log. "	nAnswer
2333	15222891	"Can any core-dev confirm this is okay? I know that @gmaxwell recently changed that message with another pull, but perhaps didn't see that duplicate, which used the same string.  Edit: It was #2384. "	nAnswer
2333	16033267	Needs rebase. 	System
2333	16034077	Rebased! 	Emphasis
2333	16035233	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/894b7c1534165ec5c3b78cd09ae56db843f8a915 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2332	14021283	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/78ed0b43d88a24e139dc1b93fa02c52c9091d808 for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2332	14028230	"Ugh, how can this reduce total test coverage? "	Other
2332	14829256	"@laanwj I updated the pull, should be better now :). "	Clarify
2332	14831443	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e1ca89df1fd986a580565f9fe724b86209e76f32 for binaries and test log. "	nAnswer
2332	15027278	@laanwj Perhaps you consider this also mergable then :)? 	Clarify
2331	13999199	"Please don't create pulls for translations! If you want to contribute to the current translations just do this via https://www.transifex.com/projects/p/bitcoin/resource/tx/, as we fetch our translations in intervals from there. Can you please close this pull :). "	Emphasis
2331	14000305	"Thank you, I try to fix translation via transifex "	Clarify
2330	13986378	"I should add, I have personally designer better ones here: https://bitcointalk.org/index.php?topic=98240.msg1368488#msg1368488  But I'm not suggesting mine should be used; if the community wants to it can, i've already released them, but I'd be just as happy for someone else's work to be used, as lo"	Clarify
2330	13986881	"The gold coin was retired because it was too blingy - creating associations with casinos, video games, ""get rich quick schemes"" etc. The new one is more stylized, simplified, just showing the virtual coin concept.  Feel free to design a better looking icon, or fix up artifacts, but it should be in t"	Clarify
2330	14002673	just resize the picturebox so it's bigger 	Statement
2330	14003298	"Actually, you'd have to resize the icon downwards until the drop-shadow is properly contained, but that rather bypasses the main point, that the icon is poor. It doesn't follow the Apple HIG, nor icon ""Style"" - icons are supposed to be photorealistic or near to, and have shading and tone, lit from a"	Clarify
2330	14004956	"Obviously it doesn't follow the mac interface guidelines. The icon is used on all platforms, we don't have a team of artists at our beck to do design for every platform's specific fashion-of-the-day (MS fanboys want this, Mac fanboys want that, Ubuntu fanboys want thus).  Closing this issue as it is"	Clarify
2330	14005090	"Reopening this as I agree that we can use a new icon, and the ones in the thread that you link are actually pretty nice. "	Clarify
2330	14008575	"I sent you a private e-mail about that, but I'll state publicly here, that I am sorry for my poor choice in words; I edited my original comments almost instantly; they do not reflect my thoughts.  Maybe the best thing to do would be to make a post on the Bitcoin forums; ""Design a new icon for Bitcoi"	Clarify
2330	14008654	"The low resolution issue is present on Ubuntu as well, in the launcher to the left of the screen. I wonder if the icon could be included as an .svg as well, because I think common Linux distributions can read that as well. "	Clarify
2330	14008720	"Certainly wouldn't be an issue; provided the original icon is created in a vector format, ie Illustrator...  I personally generally only draw in vector, although I know some icon designers draw in photoshop/gimp etc.  Perhaps if we do go down the forum-call line, then mandate the artwork should be s"	Clarify
2330	14028990	"The current icon is in the source tree in svg format (""bitcoin.svg""). I think we should require the same from any replacement icons.  Although vector doesn't completely make the scaling issue go away, especially at the very small sizes (such as 16x16/24x24/32x32 for the notification icon) we still n"	Clarify
2328	13898092	"Yes, this is frequently confiusing. It means that Bitcoin as a whole is still in ""beta"", not version 0.8.0 specifically.  "	Reject
2328	13900855	indeed :p 	Emotion
2327	13875646	"See -datadir="""" switch and close this ;). "	Clarify
2327	13881100	"yep, this is already possible with the flag @Diapolo mentions. closing "	yAnswer
2327	13907559	I mean there is no visual interface to setup that option.  	nAnswer
2325	13840793	"This needs to be retranslated and an update for bitcoinstrings.cpp (which I do from time to time, just wanted to mention) and I remember that the ""block"" in front of database was added, because we have a similar message for the wallet db :). "	nAnswer
2325	13844009	Sometimes I feel my comments are getting ignored ^^. 	Clarify
2325	13844342	"@diapolo Sorry, it's probably because we're mostly used to responding to comments we *don't* agree with  I agree that this will have to be retranslated (though with 0.8 final being out of the door there's a lot of time for that).  And for wallet/block database, yeah, I'd say leave out ""database"" for"	Clarify
2324	13834286	Thanks for the report; I'll see if this is a false positive or a real problem immediately. 	Clarify
2324	13834691	"Almost certainly a false-positive, but I'll do a little more research and will double-check the OSX build machines to make sure they aren't infected with anything.  Reference:   https://discussions.apple.com/thread/4786131?start=0&tstart=0  "	Clarify
2324	13835507	Very odd; running ClamXAv V2.3.4 I cannot reproduce the false positive:  ----------- SCAN SUMMARY ----------- Known viruses: 1854537 Engine version: 0.97.6 Scanned directories: 2 Scanned files: 18 Infected files: 0 Data scanned: 164.66 MB Data read: 95.93 MB (ratio 1.72:1) Time: 23.748 sec (0 m 23 s	Clarify
2324	13853846	"No problem, better safe than sorry. "	nAnswer
2323	13817598	"Same resolution as for #2322: wait for (or work on) a freebsd port, we offer no support for that platform.  "	Clarify
2322	13815586	"GCC 4.2 is ancient and probably missing functionality we use. On top of that, Bitcoin has never worked on or supported *BSD, so you'll probably have to provide patches if you want to get that working... "	Clarify
2322	13816293	"Bitcoin (bitcoind) has worked on FreeBSD 8.x since bitcoin 0.4.x. BitcoinQT has worked as well on FreeBSD at various points, and will with 0.8.x. http://www.freebsd.org/cgi/ports.cgi?query=bitcoin&stype=name http://svnweb.freebsd.org/ports/head/net-p2p/bitcoin/ As such, FreeBSD makes for a great bit"	Clarify
2322	13816848	"I have to submit the port soon - I'll do so this evening. I have tested it during the rc cycle, and I have just now started the first test build. I'm building on 9.1 STABLE, and will do so using clang too.  Some patches were required some time ago, but they have all been accepted upstream or elimina"	Clarify
2321	13817619	Same resolution as for #2322  	Emphasis
2321	13864514	Closed as won't fix; we don't have somebody supporting BSD.  	Clarify
2320	13814454	I'm realizing now that this may be intentional. Nevermind! 	Emphasis
2320	13814469	https://github.com/bitcoin/bitcoin/blob/master/src/version.cpp#L14 	System
2319	16715066	Doesn't pull #95 address this? 	Other
2319	16892805	Which version is this? 	whQuestion
2319	28206653	Should be solved as there is no flood control disconnect anymore since a9d9f0f5f72ab1f9ebc2f76bfe3b7921fa2826d7 	Other
2316	13814962	"Working in latest release 0.8.0 with {""id"":1,""method"":""getaccountaddress"",""params"":[""dianne""],""jsonrpc"":""2.0""} and {""id"":1,""method"":""getnewaddress"",""jsonrpc"":""2.0""}  for the previous methods that didn't work  "	nAnswer
2315	13666192	"@gavinandresen From what I can see, this also fixes the crash-at-shutdown issue. "	nAnswer
2315	13674336	Nice! I'll try to find time to test it a bit later tonight or early tomorrow. 	Clarify
2315	13677976	"I'm getting an assertion failure after saying ""Yes, please re-index"";  chainstate/blocks data uploaded to:   http://skypaint.com/bitcoin/corrupt_db.tar.gz  Assertion failed: (dummy_versions_.next_ == &dummy_versions_), function ~VersionSet, file db/version_set.cc, line 715.  4   org.bitcoinfoundatio"	Clarify
2315	13678609	"Hmm, I just get the question, and reindex works. A no results in an exit... and a exception thrown at shutdown.  The reason is that Shutdown() isn't called if AppInit2() exits in an abnormal way, and thus ThreadScriptCheckQuit() isn't called, thus the script check threads just keep running. "	nAnswer
2315	13698379	"@gavinandresen I added a very simple destructor to CCheckQueue that calls Quit(), which should take care of taking down the sigcheck threads during shutdown.  I have no explanation for your assert error, though. "	Clarify
2315	13700374	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/f7f3a96b74bb795d6e184a628adce21c744d234f for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2313	13650718	"That archive is way outdated, you need to build all required libs and stuff for yourself in order to get it working. Try a search, there is another open issue, which covers most of that. "	Clarify
2313	13662846	"I've removed the windows bitcoin-qt build instructions for now, no one is maintaining the windows dependencies archive anymore so they don't make sense. If someone can write full build instructions for windows, without having to package any binaries, that'd be appreciated. "	Clarify
2313	13666123	Kind-of-sideways-related:  https://sourceforge.net/projects/bitcoin/files/Bitcoin/GitianVBox/  	Statement
2313	28218771	Closing this as it relates to the old build system and an dependencies archive that doesn't exist anymore.  It is recommended to build everything from source as mentioned in https://github.com/bitcoin/bitcoin/blob/master/doc/build-msw.md instead of using compiled dependencies built by someone else. 	Clarify
2312	13700715	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/9a0864b9ae3777d229694ab6d20736f05e4f9ca7 for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2312	13736269	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/74ba33905791b34153e8ad0e469c878b4900a5ef for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2312	13747344	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/907a2aa4c78833ce93455567ae10ff2f506e752e for binaries and test log. "	nAnswer
2312	13955651	"Really, I can be a fucking damn nit-picker, but that indentation thing could have been fixed. I'm thinking about never doing anything coding style related in core (if that is what you guys want, then win-win :-P). "	Clarify
2312	13956686	"That's probably best for your heart-rate Diapolo :) Learn to stop worrying and love the inconsistent indentation. On the other hand, if you submit a pull that only fixes the indentation on those few lines I'll merge it for you. "	Clarify
2312	13958158	"No offence to anyone :), I just though out loud ^^. I think @laanwj your suggestion to keep a look at my blood-pressure and heart-rate is the best I can and will do :D. "	nAnswer
2311	13637313	ACK: tested clean builds of both bitcoin-qt and bitcoind individually with custom CXXFLAGS. 	Clarify
2311	13730121	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/1d83141803477f9625e301149fc9611f43f94592 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2310	13580101	(added an own pull so I can try fixing the pulltester build issue) 	Clarify
2310	13581187	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/69be30d7e64eba0c936d9221b73b2bc35bebc7e2 for binaries and test log. "	nAnswer
2310	13600250	"Interesting, I had a idea about five days ago of how to improve estimation (which can be network-bound or cpu-bound):  -Include with each checkpoint the size of the blockchain at that checkpoint (which will loosely correspond with CPU work as well as download bandwidth) -Include with the last checkp"	Clarify
2310	13615350	"nit: compiling with clang 3.3 on my Mac:   src/qt/bitcoingui.cpp:534:9: warning: unused variable 'totalSecs' [-Wunused-variable]     int totalSecs = genesisBlockDate.secsTo(currentDate);  And running against a pre-0.8 datadirectory gets a crash, passing a NULL *pblockindex to GuessVerificationProgre"	Clarify
2310	13616045	updated 	Statement
2310	13626942	"Some feedback:  There is a space (or LF) missing before ""Transactions after this will not yet be visible.""  I'd prefer proper plurals. Using workarounds like ""day(s)"" are looking unprofessional. Easy fix: Drop to the next lower unit just before the switch from 2 to 1 would occur.  "	Clarify
2310	13627168	"I ran the win32 pull-tester build without issue, but was taken aback by the new message. ""six hours behind"" looks like it's going to take six hours to do something.  I don't know if this is the way forward as this communicates even less information. I would rather have an estimate of how long it's g"	Clarify
2310	13627204	"@schildbach Qt will automatically change ""day(s)"" to ""day"" or ""days"" as appropriate. "	Clarify
2310	13627729	"@luke-jr Hu? I'm almost sure I saw ""day(s)"" in the actual running software. I'm running Ubuntu Linux 12.10 in case this matters. "	Clarify
2310	13629695	"This isn't based on the last version of my commits. I fixed the totalSecs already, along with some other changes such as the LF before the transaction message.  @schildbach: in Qt that is avoided by adding the correct plurals in the english translation file, no need to hack around in the source code"	Clarify
2310	13632926	"@laanwj In that case, pull my commits into your pullreq and I'll close this? "	Emphasis
2310	13646360	Yep good idea 	Accept
2310	13647874	"I just retested this on latest sipa/progressbar and I am definately seeing the ""(s)"" in day(s) and hour(s). I'm trying to do a screenshot. "	Clarify
2310	13647915	![Screenshot from 2013-02-16 11:40:50](https://f.cloud.github.com/assets/743306/163359/e6f4230c-7825-11e2-91ce-af9ff8b2b183.png)  	Emotion
2310	13650028	"@laanwj Updated to your latest pull's code (I think...)  @qubez If you're keen on making graphs, can you compare with the method implemented in this pullreq? It's fairly similar to what you propose, except it uses transactions and not blockchain size, as transactions are already computed (so don't r"	Clarify
2310	13650757	"@schildbach As long as the english translation master file is not updated in the correct way, you will see this generic string. Most of the time I update these file or laanwy does. This is a non-issue, really :). "	Clarify
2310	13653022	"@sipa yes this is the last version, and indeed the translations still have to be updated   "	yAnswer
2310	13678644	"There is more. Sometimes it says phrases like ""and 0 day(s)"". Will the whole phrase also automagically get cut by the translations? "	Other
2310	13682372	"I'm pretty sure you cannot get 0 day(s) as under 2 days it shows hours, but it's possible to get 0 hour(s) if secs < 90*60 *but* count < nTotalBlocks. I suppose something less than an hour could be displayed as an hour. "	Clarify
2310	13683237	"@laanwj emphasis on the ""and"". Probably it was ""and 0 hours"", I just wanted to describe the scheme. Could in future as well happen with ""and 0 years"" if you decide to add centuries. "	Clarify
2310	13683294	"Fyi the ""and"" has been gone for a while. "	Clarify
2310	13684671	"@laanwj Ok thanks for fixing.  With the current version, there is another problem: The progress bar does not appear to progress well. It started with about 100 week(s) behind, and the bar was nearly empty. Now I'm at 29 week(s) behind, and the bar is filled by perhaps 15%. I'd expect to be filled ei"	Clarify
2310	13684889	"The progress bar *was* relative to app start a few versions ago, and that confused people, as they thought the download restarted every time.  The code in this pull request displays the absolute progress, in verification cycles computed from the number of transactions, from the genesis block to now."	Clarify
2310	13686666	"@laanwj Please read my report. My arguement is that about 15% fits neither calculation. Genesis was 210 weeks ago, in my test case I had 29 weeks to go. In terms of time, I had 86% done, yet it showed only about 15%. In terms of transaction I cannot say, but if you look at https://blockchain.info/ch"	Clarify
2310	13686761	"@schildbach That is because signature verification is only enabled after the last checkpoint, so transaction after that  are given much higher weight in the calculation (15 times more). Feel free to suggest a better factor (or heuristic for determining it), but for a test I did, this resulted in a v"	Clarify
2310	13691552	"Signature verification gets ""turned on"" only for the last 5000 blocks - the problem @schildbach is describing is that most of the download time is downloading blocks 0-216116, the progress of which is figured as 50% by 108058, but the actual percentage of blockchain size/transactions downloaded and "	Clarify
2310	13694929	"@qubez Using block chain size or transaction count shouldn't matter much - they are very correlated.  What this pull does is change the progressbar to reflect ""verification time progress"". Effectively, it counts/estimates transactions, weighing those after the last checkpoint higher, as those requir"	Clarify
2310	13697114	"I have no problem believing that sipafactor(tm) is correct for your system and for a reindex or import of blocks already downloaded. However:  1: a. verification up to last checkpoint is not well multithreaded, vs b. signature verification is well multithreaded  result: end user reindex on 1 core vs"	Clarify
2310	13698102	"@qubez I think you misunderstand this patch, given the graph above. I do not have a constant time per block (with a different speed before/after the checkpoint) - it's a constant time per _transaction_ (with a different speed before/after the checkpoint), and transactions have a pretty constant size"	Clarify
2310	13698250	@qubez Please don't post graphs which are pure conjecture. If you're going to go through the trouble of making a graph please make it on an actual measurement. What you're proposing is actually just a less accurate version of what Sipa already implemented his change uses the transaction count which 	Clarify
2310	13701235	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/9f2467ad6241ce6cf0897ed30c676598d59441a7 for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2309	13579907	"Hmm, why is this a pull of a specific commit? I wanted my branch... "	yAnswer
2308	13575613	ACK 	Clarify
2308	13576654	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3913a99087961c64f225b275eaa90a1a621f45af for binaries and test log. "	nAnswer
2307	13535062	Need more information:  - what os? - does the rest of the UI appear? - is bitcoin running at all afterward or did it suddenly quit? - anything dtrange in debug.log if it happens?  I'm pretty doubtful of a race condition in showing the icon (excluding an qt bug) as that's done at fixed point in the m	Clarify
2307	13535133	"On Wed, Feb 13, 2013 at 10:30:13PM -0800, Wladimir J. van der Laan wrote: > - what os?  GNU/Linux -- Ubuntu 12.04.2 LTS  > - does the rest of the UI appear?  Yes, rest of UI appears  > - is bitcoin running at all afterward or did it suddenly quit?  It runs just fine. Only you can't minimize or any U"	Clarify
2307	13535374	"Ubuntu/unity has some known problems with desktop functions in qt (for example, showing the tray icon goes through an unity-specific plugin that's sometimes buggy), I think there's an issue about this.  Having said that, I use ubuntu 12.04 as main os myself and have never encountered this afaik. You"	Clarify
2306	17197820	Per https://github.com/bitcoin/bitcoin/pull/2584 I believe this is resolved. 	Statement
2306	17197850	Thanks to @tariq786 for the fix! 	Emphasis
2306	17197860	Closing as resolved. 	Statement
2305	13526098	"What OS?  Clean shutdown the run before, or did your machine or bitcoin crash?  This might be a case of ""your disk drive was flaky for some unknowable reason.""  "	Clarify
2305	13540376	"OSX 10.6.8, HFS+ journaled disk. Unfortunately I don't know if bitcoind was running or not while the machine crashed (we can assume it was). On [SE](http://bitcoin.stackexchange.com/questions/7640/bitcoind-corrupted-database#comment10022_7640) Nick pointed out the exactly line I'm hitting, so if you"	Clarify
2305	13540695	"@Lohoris The problem is not a corrupted downloaded file - that's easy. In your case, the database is corrupted, despite several systems which try to prevent ever getting an inconsistent state on disk. You also don't need to redownload anything. Starting with -reindex will rebuild the database using "	Clarify
2305	13541090	"Oh! I'll try, thanks. Of course if this works it could be considered fixed... (it's unlikely I'll be able to try before tomorrow, sorry)  "	Clarify
2305	13599831	"reindex at block ~100000 started re-downloading, so I can't go on testing it right now (I've got a limited bandwidth). Maybe I'll go on testing it on monday, sorry for the delay.  "	Statement
2305	13601939	"I'll spam this bug, for interesting reading:  - http://www.codeofhonor.com/blog/whose-bug-is-this-anyway  On a properly functioning computer this stress test should never fail, but surprisingly we discovered that on about 1% of the computers being used to play Guild Wars it did fail! One percent mig"	Clarify
2305	14576195	"Didn't have time to test it properly so far, sorry. I'll close it for now, and I guess if someone else encounters this same problem upgrading, he'll be able to re-open it...  "	nAnswer
2305	15005008	Ok this happened again right now.  I'll reindex and see what happens.  	Clarify
2305	15166734	"Reindex worked, as expected. Next time this bug happens, what do I need to do before reindexing to debug it?  "	Clarify
2305	16589774	I am having this error i dunno what to do i have bitcoin wallet on Windows Vista when i open it i get Bitcoin-QT: System Error: Database Corrupted  what shall i do to fix it? 	Clarify
2305	16590051	Try running it from command line: `bitcoind -reindex` 	nAnswer
2305	17431084	"I think this functionality should be added to the GUI too.. Not everybody is a computer pro, and knows how to handle the command shell.. if the index is broken, a window should pop up ""it crashed - should we reindex blabla... yes/no?"" "	Clarify
2305	17567448	"I'm going to close this as ""corruption probably due to the run-out-of-file-descriptors"" bug that was fixed.  "	Clarify
2305	17591353	"Good, I'll update and let you know if anything happens. "	Statement
2305	20992250	"This keeps happening to me with version v0.8.3-beta on OS X 10.8.3 Bitcoin-qt spends a few hours ""Reindexing blocks on disk.."" and then all is well for a day or so, until I gracefully shutdown bitcoin-qt and upon opening I am greeted with the Corrupt database error dialog. Any updates on this? "	Clarify
2305	24405960	I'm getting this on ubuntu 12.04. it re-indexed once when upgrading to 0.8.4 and a few days later its doing it again. I'm running on a SSD for another possible data point that might be relevant.  Will running -reindex on the cli compete faster? 	Clarify
2305	24410655	"I've just stated seeing this issue on ubuntu 13.04 on a laptop with an SSD. I saw the error earlier today, re-indexed successfully and got the error again now. Edit: I'm running v0.8.3.0-g40809ae-beta. "	Clarify
2305	24419465	See https://bitcointalk.org/index.php?topic=290922.0  or just update to 0.8.5 	ynQuestion
2305	24423920	Thank you for the information. There does not seem to be a PPA version of 0.8.5 for Ubuntu yet. I assume the correct place to clone and build from is: https://github.com/bitcoin/bitcoin/tree/0.8.5 	Statement
2305	24428307	"@nikolajsheller Yes, though the official Linux binaries in tar form are for ubuntu. "	Reject
2305	26154946	I confirm the issue on MacOS. I got my database corrupted a few times already. I always recover using bitcoin-qt -reindex. That works fine but takes hours. The last time I paid attention to close the application in a clean way. I did and re-opened the application several times without any issue. Non	Clarify
2305	28157375	"On Mac OS X 10.9 (Mavericks) with Bitcoin-Qt 0.8.5, I was getting the ""System Error: Database Corrupted"" error every time I started the Bitcoin-Qt client. I tried deleting everything in my Bitcoin directory except `peers.dat` and `wallet.dat`, but the error persisted.   What fixed it for me was dele"	Clarify
2305	28157606	"`peers.dat` is not a LevelDB file. Only the blocks/index/ and chainstate/ directories contain LevelDB databases, so the problem must have been with either of those. "	nAnswer
2305	28221936	"@sipa The only two files that I kept were `peers.dat` and `wallet.dat`. I deleted everything else and every time I started the Bitcoin-Qt client I received the ""System Error: Database Corrupted"" message. It wasn't until I deleted everything *including* the `peers.dat` file that the problem resolved "	Clarify
2304	26784519	Duplicate of #330  	System
2301	13476899	"Maybe we need a different uri prefix for testnet? Discriminating on the internals of the address is going to be fragile at best, as the browser logic cannot handle it.  edit: hm I suppose it's also possible to determine/set the testnet flag in the URL handling logic, though I hardly think that fits "	Clarify
2301	13496852	"I taught the URL handling logic to handle testnet/non-testnet addresses, and it should work on all platforms except OSX: https://github.com/gavinandresen/bitcoin-git/tree/testneturis  The logic is basically: If given a testnet bitcoin:address on the command-line:   Try to pass it over a testnet-spec"	Clarify
2301	27279846	Closing; payment protocol fixed for all platforms except OSX (because of the way OSX starts up apps we can't fix).  	Clarify
2299	13411697	"Suggested additional test:  Click multiple links in rapid succession, does it break, can the user accidentally confirm the wrong payment? "	Emphasis
2299	13420555	"This needs some testing, but it is absolutely the right way forward.  "	Statement
2299	13434492	"I'll make the server its own class. And I'll use QString::number (I missed that method reading the QString docs).  I should have this working on the Mac, too soon.  "	Clarify
2299	13459679	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8269a0953ee9ccbdc422433fc37184e60f94b178 for binaries and test log. "	nAnswer
2299	13526169	Updated / rebased.  I'm happy with this code now.  	Clarify
2299	14005003	ACK 	Clarify
2298	13366466	Appears -fPIE is not being passed down to the leveldb build. 	Clarify
2298	13754183	"Tried again with recent merges, -fPIE is being passed, but it might need -fPIC too? "	Other
2298	27097307	"Closing, as this relates to the old build system "	nAnswer
2297	13362380	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1ed2cfc452baaab2fe0c0a40fd085024b5200c14 for binaries and test log. "	nAnswer
2296	13361260	"Does the synchronisation make progress (hover over the sync icon in the right bottom, does the number of blocks increase over time)? Is there an error shown in the bottom bar?  If it's just too slow on your system (slow CPU, encrypted disk, ... can slow things down), you may be interested in trying "	Clarify
2296	13362002	No error. The progress bar disappeared after the first night I left it running and it just continually tried to sync but never did. I am going to try 0.8 	nAnswer
2296	13370202	"We need to look at your debug.log I think, can you upload it to a pastebin service for examle? Is there a spinning animation in the lower right of the window? "	ynQuestion
2295	13359965	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f40a267ce534eb1cc0ccf944fdd0e5311f99bd92 for binaries and test log. "	nAnswer
2295	13360568	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/33c055c4f1eca07bd914a5b40a21f92ad82dde9f for binaries and test log. "	nAnswer
2294	13358295	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ab823efbf0a51e0f8dab1ea3d1f27552fea12332 for binaries and test log. "	nAnswer
2294	13358438	"This change seems to require some small re-translations, is this intended for 0.8 or for 0.8.x? As translators need time, we should be sure when to pull this. I don't want to argue over the pull itself ^^, didn't yet try it anyway.  I would also feel better, if the testnet todo could be fixed before"	Clarify
2294	13358973	"@laanwj If you want to mimic the behaviour of Bitcoin Wallet, you should have a look at https://code.google.com/p/bitcoin-wallet/source/browse/wallet/src/de/schildbach/wallet/ui/BlockchainStateFragment.java (lines 145-169).  First of all, it does not show seconds or minutes. It starts with ""1 hour b"	Clarify
2294	13359922	">  It starts with ""1 hour behind.""  It's important to not start reporting as soon as an hour. Otherwise users start freaking out and corrupting their installs whenever there is a 1 hour block gap (plus the timestamps can pretty easily be an hour behind).  "	Clarify
2294	13359940	"Diapolo: At first I simply re-used the ""XXX ago"" messages, but I think it was a bit confusing and ""behind"" indicates better what is the case. Yeah it will cause some translations.  I'm not sure about testnet. I suppose it's not really that important what date is used there for the genesis block.  Sc"	Clarify
2294	13360047	"@gmaxwell I had these thoughts as well about 18 months ago. Back then I was seeing max 45 minutes gap, and I thought timestamps are not off more than 15 minutes. Note that I have a separate warning for when your system clock is off.  So how many minutes of threshold would you suggest? "	Clarify
2294	13360079	"@laanwj Its probably shed-painting, but people start to think in weeks, months or even years if you have larger timespans. Nobody has got a feel of how much 1237 days actually are. "	Clarify
2294	13375850	"Ok but apart from small details, perfect being the enemy of good and such, is this a step forward compared to the current implementation? "	nAnswer
2294	13376024	"I agree with @schildbach that when numbers get too large, they become hard to interpret. I wonder if using more decimals just to show progress would be useful. For example: X hours (2-48 hours), X.X days (2-14 days), X.XX weeks (14-60 days), X.XXX months (>60 days). Certainly the decimals don't real"	Clarify
2294	13377259	"Decimals imo have the same problems as large numbers, it's still a garble of numbers you're just adding a point somewhere in the middle.  Another option would be to convey ""liveness"" in another way than global progress so that it doesn't matter that large time units are used.  For example a lowtech "	Clarify
2294	13378259	"@laanwj Yeah, just brainstorming - I'm not convinced about the many decimals idea either. Adding dots sounds like an easy and useful way to convey progress as well. "	Clarify
2294	13378987	I'll give that a try... 	Statement
2294	13418966	"Ok I changed the time units to @schildbach's, and for the first time in history the spinner does something useful: it spins a frame every time setNumberOfBlocks is called with a changed number of blocks. So both liveness and progress is covered again. "	Clarify
2294	13419213	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3683d71a8535c2e2505799baf2e7a1f7a1aaf3aa for binaries and test log. "	nAnswer
2294	13419805	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/75124792ad76204a93c0b2e97c054dda618163bc for binaries and test log. "	nAnswer
2294	13420973	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/876fa2cbae0cb990d79bc981ccbabccdc55f9ee1 for binaries and test log. "	nAnswer
2294	13481088	Here is a commit that changes the progressbar logic to use (projected & corrected) transaction counts for progress: https://github.com/sipa/bitcoin/commit/e1882ae47afe2e05e627f34af885a910c1303fc2 	Statement
2294	13481919	"Cool, so I understand that makes the progressbar better match the part of total time spent acquiring the block chain? "	Clarify
2294	13481983	"@laanwj Yes, it actually seems to speed up a bit, as the very early blocks have almost no transactions in them, but still require a per-block processing time.  Only disadvantage is that it requires 4 measured/guessed control parameters. Guessing them wrong doesn't result in worse behaviour than we a"	Clarify
2294	13482201	"With the current code in the pull request, usig secs, it looks like the first half-ish goes really fast, and after that it almost grinds to a halt (but that was the same when still using blocks). "	Clarify
2294	13482244	"Yes, this fixes that very nicely. I mean this almost reverts it: it seems the very first ""blocks"" go very slowly, and it speeds up slightly along the way. Try it :) "	Clarify
2294	13482303	I will once I get home :) was just trying to get the gist of it 	Emphasis
2294	13521815	Added a commit to improve testnet support: https://github.com/sipa/bitcoin/commits/progressbar 	Statement
2294	13574673	"Here's a graph of block-based progress vs my branch's code during a reindex on my VPS: http://bitcoin.sipa.be/progress.png  The last checkpoint is at 0.299252 progress, so slightly before the strange 2-minute gap (i have no clue what happened there, perhaps an I/O hiccup at the hosting provider). "	Clarify
2294	13576080	Looks good! I've just merged your changes into this pull. 	Emphasis
2294	13576304	"@gavinandresen In the added refactor commit, I've added some comments. "	nAnswer
2294	13577506	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/100d0c570f2c07c8c8b0993f5c5f69ae1e528270 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2294	13577675	Anyone an idea why pulltester fails to compile? 	ynQuestion
2294	13578025	"Here's another graph, on a fast 6-core machine. The slowdown factor of 15.0 in the current code is clearly way too much here... http://bitcoin.sipa.be/progress-6core.png "	nAnswer
2294	13578774	"I don't understand the pulltester failure either, it gives a warning then bails out. "	Reject
2294	13578818	Scroll up: checkpoints.cpp:45: error: too many initializers for 'const Checkpoints::CCheckpointData' checkpoints.cpp:53: error: too many initializers for 'const Checkpoints::CCheckpointData' 	Statement
2294	13579066	@Diapolo More seriously: I'll add some comments :) 	Clarify
2292	13341558	"Not a bug. USE_UPNP=0 means ""build with upnp, but disable by default"". Read the docs: USE_UPNP=- "	nAnswer
2292	13341717	"Right. Missed that, sorry "	Statement
2291	13341063	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d9ab371f837476f863ca5c7a96e52f7f052f8246 for binaries and test log. "	nAnswer
2291	19706187	"Your output is superior to the existing output.  However, I am forced to NAK because it breaks the existing API.  Given the lack of interest in this pull request, inclined to close for lack of interest plus API issue.  "	nAnswer
2291	21071737	"@jgarzik How does this break the existing API? From a readover, it seems to behave the same when called without options...? "	Clarify
2291	21090367	"@mb300sd BTW, this needs a rebase. "	nAnswer
2291	25786018	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4c4c4d79046cc6523fcfa300485146a2bfead319 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2291	26688273	"NACK: jgarzik is correct, this changes the RPC API, which is unacceptable:  Output of listaddressgroupings before: ```     [         [             ""miD5tprKXUrU97H5fK7pKfwyTH9aDgi5vd"",             50.00070000         ]     ] ``` After: ```     [         {             ""address"" : ""miD5tprKXUrU97H5fK7"	Clarify
2289	13336143	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/17121ec4fed58ec4a6f74c5ab4b4f9229619bd9a for binaries and test log. "	nAnswer
2289	13353205	"So is this a compilation fix for Debian Squeeze, did I get that right? If yes I would say kick it in before 0.8 RC ;). "	Reject
2289	13356346	"Yes, this helps compatibility with older Qt versions and is perfectly fine with me, I wish the debian folks would simply submit their changes as pull requests instead of sending a link with a list of patches though.  "	Clarify
2287	13288676	Closing as duplicate of #1064   	Statement
2286	13270631	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ba1d08008e6a8335eb0fca3c7d6c1ff4701b9bad for binaries and test log. "	nAnswer
2284	13236504	"Depends on your used version, but you should try to look at the -detachdb=1 switch.. "	Statement
2284	13238907	"... or the RPC command 'stop true' which detaches databases before stopping.  This won't be an issue starting with the 0.8 release, because we don't store the blockchain in .dat files any more.  Closing this issue.  "	Clarify
2283	13224262	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f561f3f37f6f6d95b90fa22b68df614267fbb936 for binaries and test log. "	nAnswer
2283	13595121	@laanwj ping 	System
2282	13211397	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/999ee87f70ea58ecd656830a0deabb6720aae815 for binaries and test log. "	nAnswer
2282	13329412	You'll probably want to squash this into two commits for a better chance of getting it merged. 	Clarify
2282	13329874	Yeah this for sure needs to be squashed to have a merge-chance :). 	Statement
2282	13330040	ACK if you squash the two commits together. 	Clarify
2282	13336914	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/06e437001a2b5fe173a54508b95f447def30dde3 for binaries and test log. "	nAnswer
2282	13338141	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f53e2c38e7f3e2bad5b302621f6ffbb10d8f2bfc for binaries and test log. "	nAnswer
2282	13339942	"Think I did it right, still getting used to git. "	Statement
2282	13343263	Looks good. You got an 'ACK' from one of the core devs so this will be merged when there ready. 	Clarify
2282	14022121	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/a09cb4cade9adb1d4c7bd408737c224a698956fb for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2282	14215349	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/44d7f4cbebd446f8f4a48ff9048d4549c0e2448a for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2282	14216597	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/550479b09f1a2bacc5a5fe2b9259baaa3c05029e for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2282	16020449	Anyone an objection against this? 	ynQuestion
2282	16024708	@codeshark Does use of pwalletMain here to get the account gum up the mult-wallet support? 	whQuestion
2282	16024773	"@gmaxwell All wallet RPCs receive an extra parameter pointing to the wallet, that will indeed need to be adapted for this method too, but it's a trivial change. "	Statement
2282	16024965	ACK then. This works fine for me. 	Clarify
2281	13195525	I don't think that will give you a useful error message when you need one but don't provide it. 	Reject
2281	13195813	"Excellent point, gmaxwell.  ACK on 2264 over this one.  "	Clarify
2279	13191066	"For belt-and-suspenders sanity, I think places where we rely on other methods to set state.Invalid should have asserts; e.g.:      // Check it again in case a previous version let a bad block in                                                          if (!CheckBlock(state, !fJustCheck, !fJustCheck)"	Clarify
2279	13197845	"After more code review:  ACK for 0.8  But I think some deeper thought would be good for a better approach to handling database corruption/loss.  For example:  if CBlock::DisconnectBlock() returns error(""DisconnectBlock() : no undo data available""); ... then SetBestChain() will return false-but-with-"	Clarify
2279	13198418	I suppose an advantage of the return-CValidationResult model would be that we'd get the compiler yelling at us for any missing states... 	Clarify
2279	13203888	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7cdc37c0a427a378944cf58798164320110efe39 for binaries and test log. "	nAnswer
2278	13198135	"This might actually be a good idea. IIRC, ZIP files support random access (unlike gzip and bzip2). "	Other
2278	13198202	"25% savings on diskspace is ""meh"" to me, I vote no.  Disk space is cheap, development and testing time is expensive.  "	nAnswer
2278	13201803	"zip random access only works per file, not arbitrarily. It requires restarting the compression per file, which would probably shoot the compression amounts to heck.  If we wanted to compress blocks we could probably do much faster (more compression with less cpu) doing something that understood the "	Clarify
2278	13226716	"Disk space doesn't come cheap on SSD.  It depends if it can be done rather transparently... like pipe through zip upon load/save. Hybrid is to only zip the ""full"" block data files that won't be modified anyway. Like unix system log rotation.  "	Clarify
2278	13228879	"Agree with @gavinandresen . I've done some work with random access to compressed data in the past and IMO it's not worth the complexity in the case of bitcoin, especially if the savings is only 25% in the best case (without re-positioning structures and/or extra block resets). On devices with limite"	Clarify
2278	13239813	"I'm going to close this as ""we've got much higher priority things to work on""  If you feel like experimenting, you might try linking the 0.8.0-release's .bitcoin/blocks/ to a directory on a fuser-zip filesystem (fuser-zip is a filesystem stored in a .zip file).  "	Clarify
2277	13162060	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/50bb929ad55ed066858aeebc38fd632756f6c2c6 for binaries and test log. "	nAnswer
2277	13184403	"Not the right fix according to @sipa -- instead, need to make sure that invalid blocks always return an invalid CValidationState.  "	Clarify
2276	13145616	"Change is supposed to be invisible to the end-user, so I'd expect it to be using the ancestor transaction's confirmation count... "	Clarify
2276	13145885	"The problem is that the client is telling me my ""balance"" and how much is ""unconfirmed"", but the ""unconfirmed"" amount isn't accurate.  It only counts unconfirmed coins from others, not change from myself.  The ""overview"" tab in the Qt client makes the same mistake as the RPC getbalance call.  So it "	Clarify
2276	13146751	"Sounds like you're trying to guess what transaction fees will be added. Changing this won't help you much there, though, as there's still too many other factors (including randomness) involved... #1645 is probably more in line with what you want? "	Clarify
2276	13146939	"No, I don't care about transaction fees.  I was trying to place a bet on satoshidice and have it be processed immediately.  They won't process a bet immediately if its inputs are unconfirmed, and I can't tell by looking at my wallet's statement of my ""unconfirmed"" balance what my unconfirmed balance"	Clarify
2276	13147838	"The code assumes that you would never double-spend yourself, so it assumes that change outputs WILL be confirmed and are always safe to spend.  It didn't used to, but users complained because they'd do something like: Receive 5 BTC a couple of days ago Spend 2 BTC.  Then try to spend 1 BTC and get a"	Clarify
2276	13148033	"I can see that it's safe for me to spend unconfirmed coins that represent my change.  But others don't know that it's my change, so when I send unconfirmed change to them, they might not trust that it will ever confirm.  I want to be able to find out how much ""trustworthy"" funds I have, so I know wh"	Clarify
2276	13149848	I don't think the user interface should be made worse just to make it easier for you to enable a DDoS against Bitcoin. 	Clarify
2276	13149945	I think that having the interface show a correct value for my unconfirmed funds instead of the current incorrect value would make it better not worse.  Misleading the wallet's user into believing that he's spending confirmed funds when in reality they're unconfirmed isn't the right thing to do. 	Clarify
2276	13150260	"I'd support displaying an ""Change needing confirmation:"" .. but having the balance diminish by >X when you send X would be confusing and would rightly create anger and fear in response. "	Clarify
2276	13150614	"Actually I can never remember whether the Qt GUI's overview tab is telling me ""balance X of which Y is unconfirmed"" or ""balance X plus Y more which is unconfirmed"".  If it showed ""Total Balance"", then a gap, and then a breakdown into: ""Confirmed"", ""Unconfirmed Change"", and ""Unconfirmed Deposits"" it "	Clarify
2276	13151403	"Confirmed is a very subjective measurement. For transactions from others (untrusted parties), it means they're buried 6 blocks deep. For your own (a trusted party), there is no reason to think it would be unconfirmed even before mining. "	Clarify
2276	26983781	Closing this (works as intended)  	Other
2275	13138138	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c78a5175be9fd9a9af6a778713054ca3a999f4d2 for binaries and test log. "	nAnswer
2275	13466153	"@SergioDemianLerner : RE: nSigHT & 0x83 : good idea.  RE: why not extend to OP_CHECKSIG:  the cache only exists during the execution of a single OP_CHECKSIG, because standard transaction types only contain either a single OP_CHECKSIG or an OP_CHECKMULTISIG in each scriptPubKey.  If we ever have lots"	Clarify
2275	16086333	"Implemented @sipa and @SergioDemianLerner suggestions, and rebased to master so pull-tester is happy.  "	Statement
2275	16087788	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/61a29a7c0676eb0d422ff828f0ba006ba0fc8e2e for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2275	16353840	"@gavinandresen Sorry, this was a dangerous suggestion of mine: the sighash depends on the position of the CHECKSIG in the script, when there are OP_CODESEPARATORs present. You should probably index the map by pbegincodehash as well. "	Clarify
2275	16362890	"Bah.  OP_CODESEPARATOR is evil and should be abolished.  This optimization isn't high on my list of things to fix, and before pulling we should create some tricky OP_CODESEPARATOR unit tests, so if anybody else is motivated, feel free to do that (I'm buy with payment protocol stuff).  "	Clarify
2275	16404771	"First, good to know Sipa catched the problem before it was too late. Excellent job!  I've been pushing to remove OP_CODESEPARATOR and adopt a simpler verification system with a hard-fork in many forum posts, showing strange uses of it.   It's clear than it can make enormous damage and makes no good "	Clarify
2275	16409536	"@SergioDemianLerner I'm in favor of removing OP_CODESEPARATOR, but I think you mean a soft fork. As far as I know, there has never ever been a hard fork in Bitcoin's history (but we'll do one in 1 month...). Also, there's no need for one here. Simpy turn OP_CODESEPARATOR into a 'return false' - no n"	Clarify
2275	16467404	"Nothing really important, any opcode could be used.  Just a way to mark which script is the one being signed. The idea is not to insert parts of the script of the previous output in the scriptsig for verification. Currently to explain to a new user how a transaction input is verified we need 200 wor"	Clarify
2275	16467590	"If we're going to do an actual hard fork for the script language, give me a few days and I can come up with tons of small fixes. If we're not scared of redoing the scripting language from scratch (I am, however), I think we can come up with something vastly better (except for being tested).  However"	Clarify
2275	16467707	"If ever the signature verification procedure is changed, I would simplify it more:  Let T0 be the original transaction. T1 = T0 with all scriptsigs cleared. Let X = SHA-256 ( SHA-256 ( T1 )  ) Then HashTransaction(T) = SHA-256 ( X  ||  n ))  ) Where n is the input number to be verified. Then  X coul"	Clarify
2274	13109241	What version of:  Bitcoin Linux gcc boost  ... is this happening on? 	whQuestion
2274	13182724	"looks like latest update has fixed the problem.    Bitcoin - what ever was available from github on that date  Linux - Gentoo gcc - gcc (Gentoo 4.6.3 p1.10, pie-0.5.2) 4.6.3 boost - dev-libs/boost Installed versions:  1.49.0(1.49)(17:48:45 02.11.2012)(-examples -python)  "	Other
2273	13103351	"FYI:  In the last 1,000 blocks, there was exactly 1 transaction larger than 100,000 bytes: http://blockexplorer.com/tx/454f61695d3fb320cc538003b9c8ca1ba982eb7cd71abe8c9ecc02a1f843da1f  "	nAnswer
2273	13103535	"ACK.  ... that >100k example is a nice utxo set cleaner, I'm sad to not see more of those!  "	Emphasis
2273	13111240	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0b377f4ee36d9468b63ec5c207f281b1f2003f49 for binaries and test log. "	nAnswer
2273	13121465	ACK 	Clarify
2273	13133485	Updated to add a comment as suggested by Mike Hearn.   	Clarify
2272	13103446	Does this affect Bitcoin-Qt in a way we need to take care of? Just asking without any research... 	Clarify
2272	13111498	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d28bd8b7ca2d0d9ad5f01e005b49acdd3a9eb917 for binaries and test log. "	nAnswer
2272	16020348	ACK 	Clarify
2272	16034852	@sipa Can you comment to my question above ;)? 	Clarify
2272	16051844	I don't think this influences the GUi in any way. 	Statement
2271	13088564	Disk caching is your OS's job... and 0.8 already does a better job at this in general. 	Statement
2271	13088774	"That is the problem, that this ""OS job"" is not working in this scenario (perhaps because it does not have priorities to what should be kept in disk cache and for how long and have strict barriers for write buffers expiration), so this should be application job IMHO.   "	Clarify
2271	13088948	"Well, give 0.8rc1 a try when it's released. Should be any day now. "	Statement
2271	13088978	"ok, thanks! "	Emphasis
2271	13090117	"Another non-issue IMHO, every I/O limited application WILL be faster when residing in a RAM disk... "	Other
2271	13090963	"My point is just it can use system memory explicit way, and not to write to disk everytime it finished with one block. This definitely will be faster.  If you take ANY application, rewrite it so all the data that it uses will be on disk, not in memory, it will be I/O limited application then. But ap"	Clarify
2271	13091596	"I learned that already and I'm tell you, that the client is not optimized to be ""FAST"", but the highest priority is data-safety and sane code. As Luke pointed out, we switched the DB engine from BDB to LevelDB for everything except the wallet (which still uses BDB), so 0.8 will be much more ressourc"	Clarify
2271	13091727	"ok, cool. thanks. "	Statement
2270	13090009	Fixed with 0.8 can be closed! 	Emphasis
2270	13093003	should be solved in 0.8 	Statement
2269	13087502	Probably uploading blocks to another peer. You can use your OS/router to rate limit it if you need to. Not a bug IMO. 	Reject
2269	13087955	"Well, OK.  However in the faq there is opposite https://en.bitcoin.it/wiki/Man_page#How_much_network_traffic_does_the_bitcoin_client_generate.3F  ``` How much network traffic does the bitcoin client generate?  Almost none. ```  or no?  "	Other
2269	13088022	"It's about traffic. Notice the numbers are in ""per day"". "	Clarify
2269	13088470	"It was using 100% bandwith (70KiB/s) during, say, 30 or 60 minutes (not sure). It's not ""Almost none"" for me).  "	Clarify
2269	13088610	It's definitely bursty. 	Statement
2269	13090066	"Bitcoin was serving nodes, so that is hardly an issue or bug in the end. Perhaps if it was doing this all day long. Remember the reference client is a full node. "	Clarify
2269	13093065	"That's because it is a P2P program, thus a client as well as a server. This is expected behavior. If bandwidth is a problem, use one of the lightweight clients. "	Statement
2268	13054303	I'm not aware of any security problems with *using* UPnP. 	nAnswer
2268	13054519	"As I understood those vulnerabilities affect UPnP servers, not clients? In that case disabling it in bitcoin (which can already be done through a configuration option) makes you nothing safer, you need to disable it in your router.  If there's also problems with the upnp *client* library used by bit"	Clarify
2268	13063520	@laanwj I'd vote for checking if we are using the current version or if there were known security issues with our used one. 	Clarify
2268	13065067	"Yes I already looked but haven't been able to find any problems with miniupnpc, and the linked site (upnp-hacks) even recommends using the miniupnpd (server) stack by the same vendor. Thus there is no software issue at our side. There's no problem with *using* UPnP when it is already available on a "	Clarify
2266	13042666	"ACK, though don't see the need for two commits, rather than one.  "	nAnswer
2266	13046674	"NACK, please never ever touch the translation files ;), see #2251. "	Clarify
2266	13056985	"Alright, it looks like there's a better pull request open anyway that's going to solve the problem with all the translations needing to be changed anyway. "	Clarify
2264	13024368	Marked as 0.8 milestone because it's a pretty irritating regression. (I hadn't noticed until now because my normal offline signer is offline and thus isn't running the very latest bitcoind)  	Clarify
2264	13026087	"ACK  Thanks, I ran into this myself a few times.  Note for anyone testing this the bug is only a problem when a txin is unknown to bitcoin, IE not in the mempool or blockchain, and therefore the scriptPubKey has to be provided explicitly. "	Clarify
2264	13111831	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/21c6d3aead31ba80af060749ba55c1aee9bf2cca for binaries and test log. "	nAnswer
2263	13016449	"Yes, what is the issue? "	whQuestion
2263	13034438	"Sorry sipa... I'd think that may be a bug, not an issue. "	Clarify
2263	13093116	"This is a one-time backward compatibility upgrade, and thus expected behavior. "	Statement
2261	13017884	"Is that a slow machine? Perhaps you are I/O limited. That should get way better with 0.8. You could also try to lower the -checkblocks to 288, although I'm not sure if this is recommended for 0.7 clients. "	Statement
2261	13018532	"I'm not sure but it smells strange to me, the machine is this one: https://en.wikipedia.org/wiki/MacBook#Unibody_aluminum_model  "	nAnswer
2261	13026761	You have a 5400 rpm HDD in it or a SSD? Do you want to say 0.7 is now slower than before (a few weeks ago)? 	ynQuestion
2261	13026859	5400. It has always been slow.  	Statement
2261	13026880	"Then this is a non-issue IMHO, as the client is very I/O intensive. As I said this will get much better with the 0.8 release. "	Clarify
2261	13026900	"Being totally unresponsive for 20 minutes however is very bad. It would be much better if somehow it managed to give some feedback, if only responding ""loading"" to requests... (of course if it managed to also really answer some requests while loading those data, it would be even better).  "	Clarify
2261	13361312	"@Lohoris please try v0.8.0rc1, and see whether this improves the situation. "	nAnswer
2261	13362095	"@sipa for some reason it started re-downloading the blockchain from 0, so it's going to take a while... I'll let you know : ) "	Clarify
2261	13382555	"Nope, it is still slow as hell :/ "	nAnswer
2261	13383030	i have same issue.  last mac. on macbook pro 8gb memory. 	Clarify
2261	13383075	"There is nothing specific for us to fix in this issue, except ""make it faster on older, slower machines, please.""  And we already know that, and have a long-term plan to fix it (headers-first simple payment verification mode, graduating into load-full-blocks and full-verification if the machine has "	Clarify
2261	13383422	"Please bear with me: being slow on slow machines is perfectly fine. What I'd like to see solved is it being unresponsive.  If it has to load stuff at startup and it takes a while, fine. But in the meantime it shouldn't be unresponsive, it should still respond to requests either with the correct answ"	Clarify
2261	13383490	"also. just keeping bitcoin app in the dock slows down macbook pro for real.  if i keep it running, i unable to watch movies (my memory 4 gb free at the time) movies periodically hungs and continue after several seconds. "	Clarify
2261	13389128	Do you have a huge wallet.dat file? 	ynQuestion
2261	13390096	"188kB.  ``` looris@Palace-of-the-Nine-Moons:/tmp $ ls -lh ~/.bitcoin/ total 14358744 -rw-------   1 looris  staff   5,7M  1 Dic 10:26 addr.dat -rw-r--r--@  1 looris  staff    56B 28 Nov 17:34 bitcoin.conf -rw-------   1 looris  staff     4B 11 Feb 15:51 bitcoind.pid -rw-------   1 looris  staff   2,"	Clarify
2261	14554100	"Looks like it's a bit faster now. Not sure why it didn't improve _immediately_ after upgrading to 0.8, but until this happens again, I'll just close it. "	nAnswer
2261	15992682	I would also like to confirm this issue and think it would be best if the RPC Server would be the first thing started so it can respond to any client right from the start. It should be on it's own thread so it can respond even if the main thread is choked. Perhaps it could return the value of a glob	Clarify
2259	12991132	ACK 	Clarify
2259	13132470	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/55a05fb8d268d9faa5aca48f7d1a10f2afd636da for binaries and test log. "	nAnswer
2259	13133633	"ACK. There will be a lot of reindexing with 0.8, so I'm inclined to pull this sooner.  "	Statement
2259	13153861	"Added @gmaxwell suggestion, and a comment on the source. "	Continuer
2259	13187103	ACK; before 0.8 	Clarify
2259	13192277	Is that logical && correct? 	whQuestion
2259	13193516	"Yes, it is logical and correct.  Pulling.  "	yAnswer
2255	12991158	@rdponticelli: you can just push to a branch already associated with a pull request to update it. 	Statement
2255	12991368	"Yeah, I know. But that would have left 2 commits for a trivial change, right? Or a history rewrite, if I would have amended the commit, no problems with that?  Anyway, I thought it would be cleaner this way... "	nAnswer
2255	12991570	"Inside you own branches you can amend/rebase/rewrite as much as you want. In public branches such as bitcoin/bitcoin, it isn't. "	Statement
2254	13110231	Any progress? 	ynQuestion
2254	13138440	Failures to reproduce so far:  No issue running the test under valgrind on my Mac.  No issue running the test compiled-on-windows (native mingw).  I'll see if I can reproduce the problem creating a binary on my cross-compiling machine. 	Clarify
2253	12973551	ACK 	Clarify
2253	13014326	ACK. I tagged this for 0.8.  	Statement
2253	13017200	What about that Genesis block after -reindex with empty datadir thing? Is that on track for 0.8 final (just not for the first RC)? 	Other
2252	12926250	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2e045f36d184866df3904cad6a05ad5ce8938d38 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12926331	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5b989722be0e090e63608399468a902b76cc13dd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12926547	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5b989722be0e090e63608399468a902b76cc13dd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12926706	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5b989722be0e090e63608399468a902b76cc13dd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12927733	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5b989722be0e090e63608399468a902b76cc13dd for binaries and test log. "	nAnswer
2252	12928064	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/2768e9045ab923ab58be22656621bf97701de237 for test log.  This pull does not merge cleanly onto current master "	nAnswer
2252	12954129	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/v0.7.2 for test log.  This pull does not merge cleanly onto current master "	nAnswer
2252	12954162	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/32a928e1d7b8c2db1f6fa8c2b5e716706c528fe3 for test log.  This pull does not merge cleanly onto current master "	nAnswer
2252	12955121	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/32a928e1d7b8c2db1f6fa8c2b5e716706c528fe3 for binaries and test log. "	nAnswer
2252	12956034	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5b989722be0e090e63608399468a902b76cc13dd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12957174	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/eb49457ff279721cc3cef10fe68fd75b4aa71833 for binaries and test log. "	nAnswer
2252	12957470	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/cf9b49fa50f439e57896ce2c176214052833a09a for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12958489	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/485d667748b776a1932e3e14dc1b9dfe2ba841d0 for binaries and test log. "	nAnswer
2252	12959190	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3fb9b99cca390e8ac5838c03363c46a99396e463 for binaries and test log. "	nAnswer
2252	12959945	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/269d9c6492dc275650d2137d53f4afdca88e3216 for binaries and test log. "	nAnswer
2252	12960726	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/05e5e158878c4b1e5fa60d791b3022aae57d1206 for binaries and test log. "	nAnswer
2252	12961468	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/36311b9a194e3546006478157279383ffa624cf0 for binaries and test log. "	nAnswer
2252	12962178	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d3ab598fd5261a89002c0b12913c4f3e22e82f33 for binaries and test log. "	nAnswer
2252	12962888	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/699bc3d14d79b5769bbc082e02b25754936d57dc for binaries and test log. "	nAnswer
2252	12963565	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/db3b4ade7ba8a91afaa649177d5f297f20eb40fd for binaries and test log. "	nAnswer
2252	12964131	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5b989722be0e090e63608399468a902b76cc13dd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12964388	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/4dfae2fd2f07e19430ca057d4b367ce7f6c7fd0c for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12965159	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/85b534b23eb2c39fc97a4c5e9de6f61580bb61b1 for binaries and test log. "	nAnswer
2252	12965696	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/cb2e1bdaa902197ba0f04aebd00420a4680548e0 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12970297	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/ac7b8ea0864e925b0f5cf487be9acdf4a5d0c487 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12971222	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/85b534b23eb2c39fc97a4c5e9de6f61580bb61b1 for binaries and test log. "	nAnswer
2252	12971441	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5b989722be0e090e63608399468a902b76cc13dd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12971720	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5b989722be0e090e63608399468a902b76cc13dd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12972177	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/299808300504159e8bf108581add76b5ce4d32cd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12972754	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/db3b4ade7ba8a91afaa649177d5f297f20eb40fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12972983	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/18379c80874ad6f4fa0e962dd2046e2fa7ecd287 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12973269	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/ef3988ca369900206b0cfc32cc1958aee0e43710 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12973474	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/86c82bf9d09f4b3f9c29cc49a4615efd8c60a152 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12973755	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/ef3988ca369900206b0cfc32cc1958aee0e43710 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	12973958	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/3da44d7b603751eb4eac89b24071e9c3dbf0d761 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13585022	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13585499	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13585904	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13586348	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13587456	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13588205	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log. "	nAnswer
2252	13588919	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log. "	nAnswer
2252	13589644	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log. "	nAnswer
2252	13590089	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13590740	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13591281	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13591485	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13591884	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13592263	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13592616	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log. "	nAnswer
2252	13592969	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2252	13593135	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13593861	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13594134	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13594375	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13698272	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13698846	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13699107	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	13699870	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/2f0fa79db290d5139c27409055b2035099afa6fd for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2252	14825401	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/0a4e67afadd738151ae1cd4468b5422a21a0eabf for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	14825532	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/0a4e67afadd738151ae1cd4468b5422a21a0eabf for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	14825710	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/0a4e67afadd738151ae1cd4468b5422a21a0eabf for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2252	14826638	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0a4e67afadd738151ae1cd4468b5422a21a0eabf for binaries and test log. "	nAnswer
2252	15096414	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/34d62a8efe4c51b2dd73d56fa03001d4accee4ad for test log.  This pull does not merge cleanly onto current master "	nAnswer
2252	15096843	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/34d62a8efe4c51b2dd73d56fa03001d4accee4ad for binaries and test log. "	nAnswer
2252	16947101	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/master for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that th"	Clarify
2252	16953914	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/master for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the autom"	Clarify
2252	16957299	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/master for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the autom"	Clarify
2252	16961039	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/master for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the autom"	Clarify
2252	17085766	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/master for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that th"	Clarify
2251	12925661	"For the omissions, can obviously update them to increment the years or add The Bitcoin developers where necessary. Your wish is my command, haha. "	Clarify
2251	12930004	"Sorry, but this does not fix #2217 completely, as I intended to add copyright info to all Qt files also and harmonize the used format to that of the core.  I'm also not sure about changing translations here, as they need to go to Transifex then and overwrite the current state there. Please leave tha"	Clarify
2251	12970461	Shall I   1. Back out the changes to the translation files other than English? 2. Find where @luke-jr's suggestion should be inserted into the code and change the English translation to match it? 3. Add the copyright notice to all of the Qt files?  I unfortunately am going out of the country for the	Clarify
2251	12982191	I suggest to remove all changes to translation files (and the .ui file) and if you want add our copyright header to all Qt files. I'm going to implement Lukes suggestion. 	Clarify
2251	13240357	Relevant:  http://stackoverflow.com/questions/3487007/when-to-update-the-year-in-open-source-copyright-notice  Updating every single copyright is not the right thing to do.  And there is a good reason NOT to:  it messes up the change history. 	Clarify
2251	13342561	That makes a whole lot more sense.  I guess then I/we need to determine what files have changed thus far in 2013 and simply ensure that those have had the copyright updated.  Do I correctly assess this? 	Clarify
2251	13383911	"See:   http://www.contentious.com/2007/01/07/copyright-notice-is-the-year-really-necessary/  In particular:  ""If the work is a derivative work or a compilation incorporating previously published material, the year date of first publication of the derivative work or compilation is sufficient.""  I say"	Clarify
2251	13399671	"So the resolution is not to do anything, and simply have some kind of a policy to update the copyright information when a file is updated? "	nAnswer
2251	13402202	"Even better, he's proposing to only update the year on creating a new file. "	Statement
2251	13413144	"Ah, OK. Upon re-reading, I understand that sentiment better.  If it's so resolved, well, I guess this can be closed! "	Emphasis
2250	12924236	ACK 	Clarify
2250	12926929	ACK with exception for comments. 	Clarify
2250	12927041	I pulled that block from bitcoin.org with the intention of keeping the text consistent.  ![](http://i.imgur.com/DmqNrRP.png)  Perhaps both should be changed. Or should README.md lead the way? 	Clarify
2250	12927106	"Probably both should be changed, but given that it's on bitcoin.org already, that's probably not a topic/discussion/blocker for this pullreq and should be fixed independently.  ACK "	Clarify
2249	12912739	ACK.  Tested; fixes #2228 and #2239   	System
2249	12912815	No way this fixes #2228 ... 	nAnswer
2249	12912967	@sipa : I stand corrected: it fixes a variant of #2228 where no IBD was done if you start with an empty data directory and -reindex.   	nAnswer
2249	12913017	"Ok, that seems plausible. "	Statement
2249	13014195	"I take back my ACK:  this breaks unit tests. TestingSetup() in test/test_bitcoin.cpp needs to call InitBlockIndex, I think.  "	Clarify
2249	13017771	Fixed. 	System
2249	13133174	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/386037615ae02f972287a958d22a5bd2760626a7 for binaries and test log. "	nAnswer
2248	12911638	"Haven't tested, but looks good. A constant for that timestamp would be nice, though... "	Statement
2248	12912802	"@sipa Agreed, don't we have one in main.h for this? "	ynQuestion
2248	12916682	"No, there is currently no constant for this. Let's leave that for a later improvement (the number returned isn't important at all, could even return 0, the null pointer check is). "	Clarify
2247	12911652	ACK (right before tagging rc1) 	Clarify
2247	12990421	Closed without merge? 	ynQuestion
2247	12990836	Perhaps sign of a delay? 	ynQuestion
2247	12991092	Gavin don't close your pulls without merging them :P :P 	nAnswer
2247	13013562	"Bah, that'll teach me to clean up my source tree late at night when I'm tired... (I deleted the branch by mistake)  "	Clarify
2246	12906177	Looks like you closed the pull rather than merged it: https://github.com/bitcoin/bitcoin/pull/2120 	Clarify
2246	12906285	"Ok, I poked the correct button this time. "	nAnswer
2246	12906361	"Lol, this bug is cursed. "	Statement
2245	12905109	So can I have a checkpoint containing 38 in the future :)? We could devote checkpoints to devs ^^. 	Statement
2245	12905445	"ACK, timestamps and tx look pretty boring to me...  @Diapolo Ha, and next a fundraising drive! "	Clarify
2244	12904222	ACK 	Clarify
2244	12905058	ACK of course. 	Clarify
2243	12896817	ACK if pulltester & gitian are happy with this. 	Clarify
2243	13110559	Ahh.. without this non-default cflags break the build.  Where'd pulltester go?  	whQuestion
2243	13121496	@TheBlueMatt can you force a pulltester run on this pullreq? 	ynQuestion
2243	13134398	"ACK.  Although I think leveldb/libleveldb.a should probably depend on FORCE, so if bug-fixes are made to leveldb source files we don't have to make clean to pick up the changes. "	Reject
2243	13135129	@gavinandresen That sounds like a good idea to me. Shall I add it to this pullreq? 	Clarify
2243	13323983	Amended to fix gitian spec to use standard CXXFLAGS for -frandom-seed 	Reject
2243	13337162	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2effd4162b45a8e99529797e403efc05bf341864 for binaries and test log. "	nAnswer
2243	13621585	"Testing this... doesn't fix the problem, the -Qt build is non-deterministic.  Also, I don't like the extensive changes to the leveldb/Makefile, it will make merging upstream changes harder.  I'm testing an alternative that cherry-picks some of the changes here, but doesn't touch anything in leveldb/"	Clarify
2243	13637533	"Closing, mostly superceded by #2311 "	Other
2243	13757547	Reopening with one remaining fix that wasn't in #2311  	Emphasis
2243	14022448	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/3a9c2d51e12fcf321daa78303e38c725b6477b66 for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2243	16086780	ACK  	Clarify
2241	14119293	"Debian is at least looking at including memenv, won't happen until after Wheezy is released though: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=701075 "	Other
2241	14121602	@maqifrnswa memenv is only needed for test_bitcoin. 	Statement
2241	19705816	"ACK  Though this will certainly need updating, pending autotools work  "	nAnswer
2241	19707658	"I'd delay this until after autotoolification, as it would need to be redone from scratch otherwise anyway.  However, all but test_bitcoin not linking against libmemenv.a seems meaningful by itself. "	Clarify
2241	21080560	"In the meantime, I fixed a bug building test_bitcoin against system leveldb (memenv.h is not in a subdirectory) "	nAnswer
2241	21306528	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/9f62e7c190d27b14b834d6d085ad136c496e83d0 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2241	26050354	"This needs rebase because of Autotools, dunno if it's even required... "	Clarify
2241	26403300	Closing this as autotools will need a completely different solution. 	Clarify
2240	12893683	"We never use this information for any important logic; it's only a display issue.  That said, some heuristics are probably possible to filter out meaningless values. "	Clarify
2240	12893814	"The received node heights are put through a median filter for this reason. One or even two large outliers will not affect the displayed value in any way.  There is no ddos potential at all, as the number is not and should not be used for anything critical. "	Clarify
2240	12894040	Thanks :). 	Statement
2239	12892067	"Cause is, that an empty data-dir contains no /blocks/ and no block-files at all but we set fReindex = false not till the import thread is running and fails calling ``OpenBlockFile()``. I guess this is not very nice for bitcoind also. "	Clarify
2239	12908100	"Can't reproduce in bitcoind.  In Bitcoin-Qt, the crash is pindexBest being null in:     49      QDateTime ClientModel::getLastBlockDate() const    50      {    51          return QDateTime::fromTime_t(pindexBest->GetBlockTime());    52      } "	Other
2239	12918977	Fix pulled. 	Continuer
2238	12888307	"Duplicate of #1137 and a thing I can't fix, because no other seems to care ;). "	nAnswer
2238	12897607	"On 30/01/13 13:58, Philip Kaufmann wrote: > Duplicate of #1137 <https://github.com/bitcoin/bitcoin/issues/1137> and > a thing I can't fix, because no other seems to care ;).  I had done a search with the ""Qt"" but managed to miss that report :/ Should I close this one as it's indeed a duplicate of #1"	Clarify
2238	12911202	"Yes, it should be closed as a duplicate. "	yAnswer
2237	12874537	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/af8998824c7c1c762c6b47c32afefb7d1f4f0276 for binaries and test log. "	nAnswer
2237	12876089	"No major objection, but it is unusual that there are two DNS seeds from one entity.  Not typical policy. "	Reject
2237	12876238	"That's actually just one seed, look at the comment above the seed defs, src/net.cpp:1147 ""The first name is used as information source for addrman."" "	Clarify
2237	12892563	"Whoops, you're right.  Comment rescinded. "	Reject
2236	12872843	Closes #2203  	System
2236	12872874	ACK assuming pull-tester is happy.  	Clarify
2236	12873083	"From reading the man page, it sounds like you want _LARGEFILE64_SOURCE too?  "	ynQuestion
2236	12873262	"@jgarzik _FILE_OFFSET_BITS changes the size of off_t, and makes fopen transparently support large files. _LARGEFILE64_SOURCE adds off64_t, fseeko64()... in addition to the normal ones. "	Clarify
2236	12873670	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/58ac2a35835935cd0d4336d85c08158f29e0ccde for binaries and test log. "	nAnswer
2235	12872061	ACK 	Clarify
2235	12872429	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/15ebd4865af31167e9141bb6b1818b7e08267dac for binaries and test log. "	nAnswer
2234	12864300	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/74fbb151de21ca8d94dc39482fd4a95bc3b7e529 for binaries and test log. "	nAnswer
2234	12870276	"I think @sipa said he was going to check in a script that would generate these from seeds.txt, so that at least the list is a little bit verifiable.   "	Clarify
2233	12829381	"Yeah I think the most sensible solution would be to generate the message when the tooltip is requested, not when a block comes in (not enough), or every second (overkill). "	Clarify
2233	12832035	"What about tooltip requested AND when a block comes in? Both is a rare event, but combined it would be powerful enough: You can request an update by re-hovering and you can also just watch the blocks flow in by continuing to hover. "	nAnswer
2233	12832898	"No, you can't do the second. Qt never updates tooltips that are open whatever you do. You need to re-hover to request an update. "	Reject
2233	12837140	"#2227 is also related to this, as updating only happens on a new block. Simplest solution would be to throw away the cached values and update on timer, guess we currently use 500ms intervals, right?  "	Other
2233	12839320	"@laanwj In this case, I would avoid using timespans with second precision. Use the term ""less than a minute ago"", that's accurate enough. And you don't expect it to increment under your eye. "	Clarify
2233	12840001	"Agreed, it doesn't really need to be that precise at all. I prefer that solution to franctically updating on a timer. There's the debug window for ""real time"" precise stats. "	Reject
2233	12854790	"@laanwj ``I prefer that solution to franctically updating on a timer.`` I dunno what franctically means, sorry ;). Are you fine with a pull that removes cached values from ClientModel::updateTimer() so that statusbar and so on get's updated via an interval? "	Clarify
2233	12856127	"No, please only update if something is changed, like now. "	nAnswer
2233	12856251	Well then this and my other problem are not solvable via timer and as I said I don't understand what you consider a solution for this cases then. 	Reject
2233	14346807	See #2334 	System
2232	12822512	-1.  Lol. 	Statement
2231	12801973	See #2230  	System
2231	12803217	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8fdc94cc8f0341e96b1edb3a5b56811c0b20bd15 for binaries and test log. "	nAnswer
2231	12804453	ACK 	Clarify
2230	12793207	"I tagged #2216 for 0.8  Changing directory naming scheme:  yes, I think that should be done now, it will save lots of time explaining in the future. I don't care what the naming scheme is, just pick one and make it so.  Auto-generated README:  I say no, we can do that in a future release. ftruncate("	Clarify
2230	13361346	#2231 was merged. 	Statement
2229	12764742	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f92555255c2d928ce618d383aa5da46bd195ef43 for binaries and test log. "	nAnswer
2229	12764789	"Test plan: either (1) start syncing from scratch or (2) delete the blocks/rev* files and start a -reindex. In both cases, at any point in time, should the filesize of the blk* files be a multiple of 16 MiB and the rev* files a multiple of 1 MiB. "	Clarify
2229	12778996	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2d5e0349e19eec9b4c322cdeab37cb0019551fb6 for binaries and test log. "	nAnswer
2229	12784498	The test succeeded under OS X Version 10.8.2 	Clarify
2229	12794774	Reindex test passes on Fedora 16/17.  Needs windows testing. 	Clarify
2229	12797549	"This is just an optimization, yes?  I think it can wait for 0.8.1.  "	Statement
2229	12798345	"Indeed an optimization, but one that is easy to test. Ok for 0.8.1. "	Statement
2229	12870340	Nit: use #elif   ACK  	Clarify
2229	12872277	Added a commit to drop the pre-allocated padding when finalizing a block file (=moving to a next one). 	Clarify
2229	12872380	"ah, good to not waste 30MiB... "	Statement
2229	12872418	@gmaxwell Largest advantage is the ability to cat the files together to create a bootstrap.dat :)  ... though I'm sure people would otherwise complain about wasted disk space too :p 	Clarify
2229	12873950	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1eb578796c98f457546059b66eb98fd0efc8e690 for binaries and test log. "	nAnswer
2229	13093344	ACK 	Clarify
2228	16712413	Closed by #2461  	System
2227	15994231	See #2469 	System
2226	12761903	I have no idea what you're doing. 	Reject
2226	12761965	"Hey wow and I had no alcohol... okay, the GUI has 2 states, BLOCK_SOURCE_DISK for importing and BLOCK_SOURCE_REINDEX for reindexing. The core currently always sets fReindex and fImporting, when doing a reindex right? This pull changes this so we can differentiate these 2, that is all.  Edit: Oh yeah"	Clarify
2226	12762136	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0a5342e2c00706a37d85a967f71de8acd213bc13 for binaries and test log. "	nAnswer
2226	12762344	"I don't think that's what you're doing. I haven't tried, but I think this will cause a node to start IBD during reindexing or importing, as (!fReindex || !fImporting) is always true. So, to do what you want, those boolean conditions in the core testing for shouldn't be touched.  I'm not sure it's sa"	Clarify
2226	12762450	"Seems my brain messed that up, so just closing this without further discussion-need ^^. Thanks for your time... "	Emphasis
2225	13361401	"This seems strange indeed, certainly now the block chain doesn't need bitdb anymore.  @gavinandresen I assume this was added for the wallet salvage code. Is it (still) necessary? "	Clarify
2225	13383547	"Yes, it was added for the wallet salvage code.  I have no idea if it is still necessary, but I plan on spending zero time figuring that out (and testing) because I assume we will be removing our BDB code entirely fairly soon with the upcoming wallet rewrite.  "	nAnswer
2225	15994226	"A pull for this is open, so closing. "	Statement
2224	12745685	Isn't this redundant with #1816 / 46888e6abca27dd6d2132aab7cd63f25363057c6 ? 	ynQuestion
2224	12745825	"@luke-jr seems I completely forgot about that. Shouldn't be hard to integrate rejection reasons into this, though. "	Clarify
2224	12746090	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a54f890b0ece69a2174c02ac8b877011595e93fc for binaries and test log. "	nAnswer
2224	12784712	This closes #2206  	System
2224	12785654	Should also address #2146 	yAnswer
2224	12796437	ACK 	Clarify
2224	12814537	"I added a commit to deal with LevelDB errors. It seems to work, but I don't like it. The exception is being caught in several places inside main to do be able to do a graceful shutdown, but it's unclear if all cases are covered (though the worst case is a lesser clean shutdown...). The reported erro"	Clarify
2224	12815123	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b054775da97a5db0f1cebd3fc8baf92f280a87d3 for binaries and test log. "	nAnswer
2224	12843002	ACK if you also fix this bug in init.cpp (otherwise I get a core dump starting with a corrupted database): https://gist.github.com/4665513 	Clarify
2224	12872253	Updated. 	Statement
2224	12872489	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/1e21fd0f8f887740152f2339189aabc679cd983f for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2223	12741129	"Tested with transaction id a0d85e45c4b54e98bb7c67044a88e20b434db58f75fad9dd4dac6d5ba215296f  Created using createrawtransaction, then modified the input sequence number and lock time by tweaking the hex  Attempted to send before the locktime using sendrawtransaction. RESULT: TX rejected  Waited unti"	Clarify
2223	12741405	ACK  	Clarify
2223	12741468	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6f8730752cf92ff8269812c01a6d9d35fff82e75 for binaries and test log. "	nAnswer
2223	12742273	"Doesn't this defeat the whole point of non-final transactions? Feels more like we're disabling a possibly-useful feature so that people can goof up and not be affected unless someone is trying (nothing stops them from relaying a non-final direct to the vulnerable service...).  In any case, as long a"	Clarify
2223	12742796	@gavinandresen Do you also account for the fact that an attacker can send a timeLocked tx and then a plain normal tx that builds on the first one? The second one looks normal but in fact will also be timeLocked. 	Clarify
2223	12742861	"@goonie The non-final txn should not enter the memory pool, so its children should be treated as orphaned. "	Clarify
2223	12743900	"@gmaxwell I guess that makes sense... I suppose if someone comes up with other valid use cases, this can be reconsidered in the future anyway. "	Clarify
2223	12745143	"ACK  Tested what Gavin did as well as tested various incoming transactions including chains. Also tested what happens with non-final tx's already in your wallet; an error ends up in your logs and they don't make it into the mempool. Re-transmission does occur, and provided that a conflict is not out"	Reject
2222	12739442	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/56869fc07cd2378a47e13479b83c8c76038947c2 for binaries and test log. "	nAnswer
2221	12739704	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f369d02c51077ffa1644954d0478e93966e1bb72 for binaries and test log. "	nAnswer
2221	12741417	ACK  	Clarify
2220	12737094	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4af611676b784df41a9771792e828d62756c448d for binaries and test log. "	nAnswer
2220	12738514	"https://github.com/bitcoin/bitcoin/pull/2184 already implements dynamic loading and unloading of wallets. But in the interest of incremental commits that are easier to verify, I decided to open this new pull request with the idea of having a discussion on the UI design and merging in these changes f"	nAnswer
2220	12738949	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5bf2943a81e0937e4be0e8d2c6b4545b8d320cc4 for binaries and test log. "	nAnswer
2220	13134889	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ea02ca6e44b089ecdd5395d0255857a1023914e3 for binaries and test log. "	nAnswer
2220	14005170	"Can you rebase this? Now that 0.8.0 final is out, I intend to test and merge it soon. "	Statement
2220	15306058	"@CodeShark I still plan to merge this as one of the next things, can you rebase please? "	Emphasis
2220	15307963	I'm on it... 	Statement
2220	15310938	Let me fix up some whitespace issues before you merge. 	Clarify
2220	15311495	"Allright, laanwj, it's all yours :) Let me know if you need anything else. "	Statement
2220	15312233	"Fix the commit message, please "	Reject
2220	15313861	"The last rebase includes all current changes, i.e. the header and cpp cleanup pull? Then I'm fine with starting the evolution ^^. "	Clarify
2220	15633224	Merged (manually due to slight #include conflict that I introduced by merging another pull) 	Clarify
2220	15715787	"@CodeShark Is it intended that bitcoingui.cpp and walletview.cpp seem to have quite much duplicate code in them? It would also be nice, if you could take a look at #2436. I created pulls for some other stuff that was not working, but perhaps there is more. We need to be really careful with such pull"	Clarify
2219	12735893	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8257c7e3e845a455606373b480154877274bbc6f for binaries and test log. "	nAnswer
2219	12737735	I personally don't really like buttons appearing/disappearing while typing (causing layout changes). It might be better to use enable/disable? 	Clarify
2219	12738132	"Let's take this even one step further. If the user has already selected an address, why would she want to type another one? So I'd suggest disabling the address field (meaning it is only used for display, editing is disabled) and remove the addressbook button in that case.  No interactive layout cha"	Clarify
2219	12739421	They may have selected the wrong one and want to change it... 	Reject
2219	12739550	"In this case, go back and select the right one. Also, do you think a lot of people will even notice their mistake? They would need compare the hash value against a memorized value. "	Clarify
2219	12752371	"This discussion seems rather controversial, so @laanwj would you ACK this, if I just disable the button on valid address entered? I'm fine with such a solution.  Edit: Changed to enable/disable instead of show/hide. "	Clarify
2219	12752690	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/90ca3d8ff0f8e4e91c13ed1ed801bda7aa08ea49 for binaries and test log. "	nAnswer
2219	12784395	"@philip yes, disabling is fine "	yAnswer
2219	12903876	"I disagree with this change. I often sign a message, then want to change to another address later. It'd be annoying to have to edit the address to make it invalid just to change it... "	Clarify
2219	12903953	"You are right, but you could also use the clear button ^^. "	Clarify
2219	15042124	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/177783b285c6a421a2c02f7434f058bb5f843143 for binaries and test log. "	nAnswer
2219	21396466	@laanwj @luke-jr Is there any interest in this? If no I'm fine with just closing this pull. 	nAnswer
2219	21602818	"I'm not really convinced this is an useful or expected behavior, to be honest.  It arbitrary prevents the user from doing things (ie, select another address) without being clear what can be done to do override that. He'd have to jump through a hoop by deleting a character from the address. Usually I"	Clarify
2219	21603749	"That's fine with me, closing this. "	Statement
2218	12732381	"That makes sense in a theoretic fashion, however I don't see any use case for opening it twice. Do you? "	Reject
2218	12732541	"As I said, I think the UI is misdesigned. All I'm saying is: There is a button, but nothing happens when clicking on it. If you cannot handle the button, remove it. "	Clarify
2218	12732741	"Ok, agreed then "	Statement
2218	12733504	"Perhaps we can tell the addressdialog, that it got opened from sign/verify message dialog and just hide sign/verify stuff then. Or should we only allow the OK button, when addressdialog is opened as seperate dialog?  Edit: Nice catch, thanks for reporting. "	Clarify
2218	12734457	"From a UX perspective, I would remove the ""Chose address from the addressbook"" button from all dialogs in case that dialog was opened with an address already selected.  "	nAnswer
2218	12735033	I'll take a look :). 	Statement
2218	21396495	@laanwj Can you tag this with GUI? 	ynQuestion
2218	27959650	"It's no longer possible to invoke it recursively, closing "	nAnswer
2217	13864607	Updating ALL the copyrights is the wrong thing to do; see the discussion in #2251  	Statement
2216	12727609	ACK 	Clarify
2216	12728082	"@gmaxwell There are currently ``18 open issues`` tagged for 0.8, so there is plenty of time :-D. Perhaps some core dev needs to define which of these are really wanted for 0.8 IMHO! "	Other
2216	12728154	"I've been adding several issues I think about for 0.8 here, the past few days. I intend to do most of them myself, but this at least gives others a chance to help out, and if nothing else, it's a nice todo list. "	Clarify
2216	12793232	@Diapolo : I went through and removed the 0.8 milestone from everything that I consider non-critical. I would like to get a rc1 out today or tomorrow. 	Clarify
2216	12793401	"@gavinandresen Thanks, makes sense and I support that cleanup :). "	Statement
2216	12910513	This was done and pulled.  	Statement
2215	12712971	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/cf39a9f398e190199dd453947e2724ba860b9f98 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2215	12714247	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/20b6c6089480e4d9ac9602dbfe5affd3f9625b23 for binaries and test log. "	nAnswer
2215	12752391	"@luke-jr It was one of your feature-requests, can you take a look if this does what you wanted ;)? "	Emphasis
2215	13224184	@laanwj Addressed your concerns :). 	System
2215	13224913	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b621e2841b18822247bf18dab1b614182d55086a for binaries and test log. "	nAnswer
2215	13229036	ACK 	Clarify
2215	15027292	"@laanwj I'll rebase after the header / cpp cleanup got in, so perhaps we can also get this in soonTM. "	Clarify
2215	15042786	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/311993ab106c250a1779bfdb649cf4f8c2416fb5 for binaries and test log. "	nAnswer
2215	15044451	"Yes, this one should be merged asap "	yAnswer
2213	12643249	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/134347ac00071556f463f5ebf8cff99c5ccf7b94 for binaries and test log. "	nAnswer
2213	12689181	@laanwj Are you ok with the idea to have a fully translated RC ;)? 	whQuestion
2213	12692511	Yes! 	yAnswer
2213	12727820	Updated to include new strings from #2168. 	nAnswer
2213	12728529	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d001476cbc7e9511e149e5ab2e30b258e65ace89 for binaries and test log. "	nAnswer
2211	12632070	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/97c92f6f1b87c6637fa7e19599b5a45005741990 for binaries and test log. "	nAnswer
2210	12623289	- fixed needed ``#include <QTextDocument>`` in sendcoinsdialog.cpp 	Other
2210	12632507	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c8c9c3bad62bb39266535e99fe6206b2de3f6dfe for binaries and test log. "	nAnswer
2210	13135688	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/167761c60514b524eb019039c14d243b345b888b for binaries and test log. "	nAnswer
2210	13209065	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/b00139fbfadbcb15af0e285aacf1f7d6728ff166 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2210	13223618	Seems to be a @BitcoinPullTester error... 	Statement
2210	13359099	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f162a728e535ce6557cbdfd2fed32cbb3445e801 for binaries and test log. "	nAnswer
2210	14022977	"Automatic sanity-testing: WARNING, see http://jenkins.bluematt.me/pull-tester/726e30abf847e8e2606e14706641846aa8746751 for binaries and test log.  This pull decreases total test coverage, please add unit tests to test all new code and help us add test cases for existing code. Coverage report can be "	Other
2210	15017999	I just installed qt5 on my system (which is used as default qt now) and building bitcoin-qt no longer works. Merging this branch also isn't possible anymore. ``` [...] cd /home/rschwab/build/bitcoin-git/src/bitcoin-build; /bin/sh share/genbuild.sh /home/rschwab/build/bitcoin-git/src/bitcoin-build/bu	Clarify
2210	15023969	"There is currently no Qt5 compatibility. I have the needed changes in my local build, but as long as this one is not merged, I don't want to open the Qt5 compatibility pull. "	Reject
2210	15024040	"I'm using arch linux, can you suggest me a better way than removing qt5 while building bitcoin-qt, then reinstalling it? "	Emphasis
2210	15025632	"I'm no Linux guy, sorry... is there any way to point your compiler to the old Qt4 instead of Qt5? As long as @laanwj doesn't merge this, because of other refactoring pulls you will be unlucky, sorry. "	Clarify
2210	15025710	"I'm sure there is a way, ~~I just have no idea how I would do that~~, which is why I asked. Using `qmake-qt4` should be the solution, didn't test it yet though as I don't have the time to compile now. "	nAnswer
2210	15026438	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/ba32615717fe58bbd0b58f4696392cdd7116e3fb for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2210	15027043	@Diapolo I'm fine with merging this now.   Seems there is a merge conflict though:      src/qt/paymentserver.cpp:122: error: invalid use of incomplete type 'struct QUrl'     /usr/include/qt4/QtCore/qmetatype.h:260: error: forward declaration of 'struct QUrl'   	Clarify
2210	15027105	"@laanwj Indeed, I removed QUrl from paymentserver.cpp by mistake. I hope @BitcoinPullTester is happy now after the last update. "	Clarify
2210	15027525	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/32af5266cfc604a32ed90b6099f8b2fb308d6c15 for binaries and test log. "	nAnswer
2209	12632858	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/52c4988344ccaa8b2d400f3c15f66460fcd3149a for binaries and test log. "	nAnswer
2209	13136497	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/128599e1d27aa47985d6fc8997a2d41ffe77867d for binaries and test log. "	nAnswer
2209	19705682	ACK  	Clarify
2209	19861244	Please rebase. 	System
2209	19944933	ACK 	Clarify
2208	12622144	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e15cb2b9d90ee421d14881f232711016d5d3867a for binaries and test log. "	nAnswer
2207	12622179	Should we just take this before the 0.8 rc?  	Statement
2207	12622359	"/votes yes  AFAIK the only changes between the tested 1.7 version are the last commits, right? "	yAnswer
2207	12633240	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/36311b9a194e3546006478157279383ffa624cf0 for binaries and test log. "	nAnswer
2207	12659292	"Yes, the only changes between the tested 1.7 version are the last commits.  "	yAnswer
2206	12610318	Due to fa45c26a0e5d3597814cef5ebd64e3db1b3b017d it doesn't even test when writing blocks anymore (because pre-allocation is infrequent it effectively never tests at runtime) 	Clarify
2206	12616023	"@gmaxwell Right, it's only at pre-allocation time (which makes sense, when just looking at block storage), but we still need to prevent out-of-disk-space when doing coincache flushes, as these are large bulk writes. "	Clarify
2206	12910655	Fixed by pull #2224  	Other
2205	12605330	I agree 	Accept
2205	12739998	Closed by #2222  	System
2204	12583989	"ACK to cleaning that up, I always see that shutdown code and wonder how that is working anyway ^^. Even all that little sleeps() in there or the exit thread... some things look rather weird. "	Clarify
2204	13357769	Two more crash-on-exit reports in the rc1 thread:   https://bitcointalk.org/index.php?topic=142151  	ynQuestion
2204	16892867	@gavinandresen Does this still exist after the threads rework? 	ynQuestion
2204	17235981	"Closing, fixed by the threads work. "	Statement
2203	12584428	Isn't that size limit also there on Windows? 	ynQuestion
2203	12588012	@Diapolo pretty sure we'd have gotten tons of complaints from windows users if that was the case. Are you able to import from a >2GiB bootstrap.dat? 	whQuestion
2203	12589503	"@sipa I never played around neither with that auto-import, nor with the normal -loadblock at all. Can you hand me the link to the bootstrap.dat download? "	Emphasis
2203	12589786	Just concatenate some block files. 	Statement
2203	12590160	"Any way to do this in Windows, I dunno how ;). And you are talking about pre 0.8 block-files I guess (which I still have as I use the latest 0.7.2 for my main wallet). "	Clarify
2203	12590194	"Block file format didn't change (and the gaps caused by pre-allocation don't matter).  Install cygwin, run ""cat blk*.dat >bootstrap.dat"" ? "	Other
2203	12590462	"You are right, I forgot, that there was no format change ^^. Beat me, but cat is nothing I've ever heard of :-P. "	nAnswer
2203	12591539	cat = unix command to concatenate files :) 	Clarify
2203	12593686	Importing now... resulting file size after cat is >6GB. 	Other
2203	12595124	@sipa I had no problems while bootstrapping! 	Emphasis
2203	12596838	"@Diapolo thanks, good to know. So the problem is really only on Linux 32-bit. Maybe OSX 32-bit as well, but I have no way to test that. "	nAnswer
2203	12616154	@gavinandresen DId you ever try importing a >2GiB file on 32-bit OSX builds? 	Other
2203	12632879	"Importing >2GB file works fine on 32-bit OSX, at least with git HEAD.  "	Other
2203	16892878	Fixed by #2236  	System
2201	12910667	Fixed by pull #2224  	Other
2200	12584555	"IMHO this should be done before we start RC phase, if the only change is that corruption fix. "	Clarify
2200	12728197	Implemented in #2207. 	System
2199	12561337	"NACK. Setting thread priorities is non-portable; the only reason the code did it originally was to de-prioritize the mining threads. Since we don't really support CPU mining any more, that reason has gone away.  A pull to remove setting thread priorities entirely would be better.  "	Clarify
2199	12562385	"@gavinandresen If this is true: https://bitcointalk.org/index.php?topic=137680.0 it perhaps does make sense to define our own enum with priorities in util.h, and have CreateThread take such an enum value. It could be a no-op in all but WIN32. "	Other
2199	12564184	"@gavinandresen I think your point is valid in terms of CPU mining beeing unsupported (although I love to use it on testnet to quickly generate a block), but as @sipa pointed out there is that ""issue"" in Windows, that the whole OS is lagging, when the ThreadScriptCheck is run. Also there is ThreadMes"	Clarify
2199	12569499	If we're going to keep thread priorities I agree with this solution to pass the priority at thread creation. There is never a need to change it on the fly and I'm happy to get rid of that inlined function in util.h.  	Clarify
2199	12583518	"Added: - removes thread priority code for non-Windows OSes, so these will just   get a no-op  Still, I think it makes sense to evaluate if the current prios are chosen wisely or if there is room for improvement.  @gavinandresen Are you still on NACK or does it now seem to make sense for Windows :)? "	Clarify
2199	12633576	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f2cb7f4d1220375bb340309c12f67689448f4e7f for binaries and test log. "	nAnswer
2199	12633917	"My hidden agenda: I've got ""reimplement NewThread to use boost::thread and get rid of the ugly fShutdown and vnThreadsRunning[] nonsense"" near the top of my TODO list.  And last time I looked, boost::thread didn't expose a way to set thread priorities.  An #ifdef WINDOWS in the Qt startup code that "	Clarify
2199	13580590	"Current master can hit the CPU pretty hard with it's multithreading, I caught up with 50 blocks and it pegged my quad core CPU at 100%, enough to stall my GPU miner. We would expect a similar hiccup about every 10 minutes. Reindexing or downloading blocks makes it hard to watch a video or other stuf"	Clarify
2199	14749939	"I finished my big thread cleanup: https://github.com/bitcoin/bitcoin/pull/2357  It replaces most calls to NewThread with calls to boost::thread_group::create_thread(), so is entirely incompatible with this pull.  Instead of trying to tweak individual thread priorities, maybe it makes more sense to p"	Clarify
2199	14761582	"I will take a look at your pull but agree, this one is obsolete and we should consider your next idea. IMHO it would be nice to still allow Bitcoin-Qt to use all cores, if a users explicitly wants that. "	Clarify
2199	14762365	"Agreed Gavin, good idea to keep a free core for the ui+os to prevent overall sluggishness. "	Statement
2198	12555895	So this doesn't include the switch to Boost 1.52 and even doesn't rely on the static switches? 	ynQuestion
2198	12596880	"Test results, on a Windows XP SP3 virtual machine:  Memory usage:   570MB peak during initial block download   ~300MB typical usage during IBD  ~200MB peak usage restarting fully synced  "	Other
2198	12633881	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b1024662eafddd5560fbfbac29333e5e967ca0f8 for binaries and test log. "	nAnswer
2196	12550465	Can you make a pull request? 	ynQuestion
2196	12625994	Done.  https://github.com/bitcoin/bitcoin/pull/2211 	Statement
2195	12533700	"Nice, much better than a separate makefile for each platform  Edit: we probably want to add mingw32 (crosscompile) to this as well "	Clarify
2195	12634213	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cb23ca73567011551b09326e616e869826128fd7 for binaries and test log. "	nAnswer
2195	12748636	@luke-jr: I added instructions for Ubuntu Precise users on how to install db4.8 using the steps you gave earlier. 	Clarify
2195	12749136	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4c92791df5c96128e03834a8a1a52c07c2164cf5 for binaries and test log. "	nAnswer
2195	17360881	bitcoin-qt.pro.temp is out of date (missing some changes to bitcoin-qt.pro).  And should be named bitcoin-qt.pro.template.  	Clarify
2195	19705572	"Closing, as an autotools effort is actively underway and preferred.  Can reopen, if that effort fails or stalls insurmountably.  "	nAnswer
2194	12474608	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6e65420bd5d3335bd971d452e9981dea41a5b1cc for binaries and test log. "	nAnswer
2193	12474678	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5950fc1c72c91cfdea238853065c0d4f6c8dac38 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2193	12474855	"Seems this breaks the URI tests. I suppose we are allowing URIs, which contain no query? "	nAnswer
2193	12486671	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/446cbf5fe9384f0e49397e2bb7a9db1005476f56 for binaries and test log. "	nAnswer
2193	12494237	"I don't think a query is necessary. BIP 21 is the authorative source on what URIs we should accept or reject, maybe check there. "	Clarify
2193	12496977	"@laanwj Yeah, I checked there and we don't require a query in an URI, so I removed that check and updated this pull. As you can see pull tester is fine with it now :). "	Emphasis
2193	12501612	"Ok, ACK "	Accept
2192	12458630	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/903d146030e741441c288873ef3c682fb5019101 for binaries and test log. "	nAnswer
2192	12458893	"This replaces a ping-after-getdata, correct? "	ynQuestion
2192	12458945	"Yeah. I have code that can do both. It's a part of resolving the issues Peter Todd raised, from the bitcoinj side. "	nAnswer
2192	12510115	Could an attacker fill up memory using vNotFound?   	Other
2192	12510173	"There's no way for it to grow larger than the original getdata request, is there? "	Statement
2192	12510248	"ACK, no vulnerability because the response will always be smaller than the request.  "	nAnswer
2192	12510319	"Quibble on the naming:  ""notfound"" is pretty generic.  Maybe  ""inv_unknown""  ? "	whQuestion
2192	12510512	"There's a limit on how long message IDs can be :( inv_unknown is 11 so it just fits, but that naming scheme would be constraining in future.  Really, the whole protocol needs to get more explicit. This is just one example of a general problem.  How about we introduce a convention for cases where a c"	Other
2192	12511937	How about we introduce a convention where all situations that _might_ result in a response _do_ receive a response.  	whQuestion
2192	12514150	"I'm all for that, but it has to be done piece-wise. This is one chunk of it.  "	Statement
2192	12540792	"ACK on this change, but I disagree with requiring a response for everything.  In its core, the P2P protocol is a gossip system. Nodes make sure they tell eachother about stuff they learn, and request what they don't know. This network layer caches and bundles requests, prevents duplicates, re-reques"	Clarify
2192	12598411	Merging now.  Can tweak later.  	Bye
2192	15669475	I still wonder if this wants a BIP. 	Clarify
2192	15748163	"This should certainly require a BIP. As a side note, I wonder if adding a timeout value to getdata is worthwhile also - i.e. most nodes wait 2 minutes before requesting a tx or block elsewhere. If a node responds more than 2 hours later it's only likely to be sending something the node already has. "	Clarify
2191	12454758	"Sounds like it worked fine? If you want to send from another account, use the sendfrom method. "	Clarify
2191	12509285	"Not a bug, sendtoaddress always debits the """" account.  If you don't like that behavior, don't use sendtoaddress.  "	Reject
2191	17197555	"Hmmm, this happened to me today, the negative balance kind of freaked me out for a moment. What is the proper way to send coins on the command line to a specified address, if not sendtoaddress? Or is this expected behavior? "	Clarify
2191	17197722	"That is expected behaviour, if your incoming transactions credit accounts other than """", but outgoing transactions debit account """" (the default if you're not using sendfrom), the """" account will go negative. As accounts are purely virtual balances, and have nothing to do with the actual amount of c"	Reject
2191	17204118	"Errr. Ok. Interesting. So, is there a way to do something like a sendtoaddress command that won't leave me with odd negative balances?  "	ynQuestion
2191	17205478	Use the sendfrom RPC command.  And you can use the 'move' RPC command to reset account balances to what you expect (and listaccounts to see all accounts / balances)  	Clarify
2190	12446349	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8301ff5077d449c0f6ddf49f386685ea6a4dd16d for binaries and test log. "	nAnswer
2190	12450039	ACK  	Clarify
2188	12436569	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/192cc910ec7cade1d0dce7f3b111e7fc7720e607 for binaries and test log. "	nAnswer
2188	12509938	ACK 	Clarify
2188	12539827	"I have no problems with this change or its implementation specifically, but I think it shows how much the protocol locks us into a specific implementation. I think it would be cleaner if there was no special casing to work around the latency problem, and txids sent as filtered blocks were treated as"	Clarify
2188	12568248	"Given that performance is the primary reason for this change, I'm not very keen on adding latency for cleanness reasons. Anyway, this work is done for now. Better protocols can come in future. Let's get it merged and launched so end users can benefit. "	Clarify
2188	12568902	"@mikehern this response make it feel to me that you're now railroading the change.  Personally, this is triggering a reflexive negative reaction. I think the fact that you feel the need to defend it this way is a sign that it may be too immature to include.  Better protocols can come in the future, "	Clarify
2188	12571062	"The standard way to use SPV clients, at least for now, is to start them up when you need them and shut them down when done. Keeping it running 24/7 doesn't make a whole lot of sense especially on a phone. So the steady state is synchronizing the chain as fast as possible. That's why latency matters."	Clarify
2188	12571490	"@gmaxwell Im not so sure that the whole bloom filter stuff is/was railroaded...actually it was pretty well thought/implemented through.  This pull itself one could argue is being railroaded, but only because it doesnt make sense for the bloom code as-is to be included in any releases (in part due to"	Clarify
2188	12571525	If you're bulk pulling the chain why do you need to serialize getting the transactions with getting the next block? 	whQuestion
2188	12571951	"It reduces memory requirements during chain sync. Anyway, I disagree that requiring a getdata is better. The node knows exactly what comes next after sending the filtered blocks. A getdata is superfluous.  WRT ""railroading"". The code we have works fine. This tweak is not essential but simplifies the"	Clarify
2188	12573412	"As I didn't want to restart the discussion about this, I probably shouldn't have brought it up again. I believe the Bloom filtering was well thought-out, and the reason for sending transactions immediately was also clear. Reducing latency for mobile clients was a design goal, and that outweighs neat"	Clarify
2187	12427218	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/35c12d176e13d51456db8f0e9fa0c398891a1fab for binaries and test log. "	nAnswer
2187	12611110	ACK 	Clarify
2186	12619413	"I know that some core devs hate these pulls, but it contains only non-controversial changes and I see no reason to not pull it, as it cleans up some small (but real) glitches. "	nAnswer
2186	12634515	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0df693f626639a48dc176dcd379efabf0124e9af for binaries and test log. "	nAnswer
2186	12727928	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b2c08c3cb1caf43c24ca8fab1b4de44b58485375 for binaries and test log. "	nAnswer
2186	12728782	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/314c417b518ec66440faf4654085f5e5f4eea08d for binaries and test log. "	nAnswer
2186	12735292	ACK 	Clarify
2186	12735553	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e753544066e149e95df9d691e7ef3e2e79054dfb for binaries and test log. "	nAnswer
2186	12752377	"Let's not discuss further, sipa ACKed, so just merge this, as there are 0 code-changes now :). "	Other
2186	12888249	"Last rebase adds: - remove an unneeded MODAL flag, as MSG_ERROR sets MODAL - re-order an if-clause in main to have bool checks before a function call "	Other
2186	12888626	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8d98fe9b16279805a3296e6265af261dcaa24428 for binaries and test log. "	nAnswer
2186	12889635	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8c22df667ef4e611efc69f3721ac7b8b461f6b0c for binaries and test log. "	nAnswer
2186	13210085	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cb4bc816a2a1244812c2e3e1022e9fce6b90ed1b for binaries and test log. "	nAnswer
2186	13999515	/merge me? 	ynQuestion
2185	12960797	"I get the same error, with 0.7.2 "	Statement
2185	12964605	Can you show us your debug.log? What OS are you on and did your PC crash? 	whQuestion
2185	13048234	"I use Windows7 64bit SP1 and my PC never crashed it just kept saying that message at the bottom of the screen. It still says the same thing at present. the debug log is too big to up load and if i copy and paste it, i get a message saying ""Comment field was blank"" in red. If you know of a way for me"	Clarify
2185	13048384	Just use some of the pastebin services :). 	Statement
2185	13158708	"Just a random selection.  ERROR: FetchInputs() : ad09c76a86 mempool Tx prev not found d788af4a1b stored orphan tx ad09c76a86 (mapsz 10001) mapOrphan overflow, removed 1 tx ERROR: FetchInputs() : a2936f3ddb mempool Tx prev not found 481b69b282 stored orphan tx a2936f3ddb (mapsz 10001) mapOrphan overf"	Other
2184	12338010	Nice!  It's a huge pull request though; will take some time to look at it.  BTW: seems there is a merge problem?  	Clarify
2184	12355424	The merge is actually not that horrible... 	nAnswer
2184	12634817	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/227637f431b1994d0d87b66993129fd4a1e0a0e1 for binaries and test log. "	nAnswer
2184	24548230	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/18ad19fbde0688645f52e26ae545da2849d7c9b4 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2184	24565969	Needs a rebase to keep up with autotools. 	Statement
2184	24571959	"Actually, I accidentally pushed this - I am no longer supporting this branch and will close the pull request. "	nAnswer
2183	12321363	This is IMHO no issue to be posted on Github. 	Statement
2183	12321728	Where then? 	whQuestion
2183	12321875	"Perhaps via IRC or the bitcointalk.org forums, but I consider issue directly related to specific issues with the client. Your complaint may be true, but in terms of development process or coding changes it's much more of a long-term goal. Great work is currently done, as @sipa did a great job with s"	Clarify
2183	12322040	"@pascalBokBok Just to clarify: the purpose of the reference client is being an implementation of a full Bitcoin node. It can by definition not do anything but verify every transaction in history.  There are a number of solutions, if this is a problem: * If you're unable to spend the resources requir"	Clarify
2183	12323124	"@sipa cool. Didn't know about multibit. According to multibit installer: ""MultiBit is experimental software. Do not use it with large amounts of bitcoin."" Since I administer an associations bitcoins I'm somewhat hesitant to use it.  Problem is people can't get started without waiting 24 hours with t"	Clarify
2183	12323632	"It's a compromise between security and bandwidth use/cpu time. Verifying everything is safest, and that's what the satoshi client does. You can't have both.  This is a well-known discussion and with a little searching you find it a zillion times in other places. Let's close this issue. "	nAnswer
2183	12324665	@pascalBokBok All of Bitcoin is experimental... 	Statement
2183	12330607	"@laanwj ACK to close this ""issue"". "	Clarify
2182	12252556	"You can't fee-check orphan transactions: without the parent, the value of the inputs are unknown. "	Reject
2182	12267303	"When (tx.AcceptToMemoryPool(true, xxx, &fMissingInputs2)) is executed, then it means that at least one of their inputs have been received, so it may be complete. So it is correct to try to check the fees at that time. "	Clarify
2182	12267351	Look at the code surrounding line 3205. 	Statement
2182	12268351	"Sergio's correct, if we get a transaction that fulfills an orphan's missing inputs, we should treat the orphan as if we just received it over the wire.  Changed the true to a false, and fixed the comment and message for the ""orphan now has all inputs, but is rejected by the free transaction ratelimi"	Clarify
2182	12622133	"Revised test plan:  On PRE-PATCH bitcoind:  Run testnet-in-a-box setup, with 'bc1' and 'bc2' nodes, both with -limitfreerelay=0  send a zero-fee transaction from bc2, sending coins to bc1 EXPECT: transaction ends up in bc1's memory pool (use getrawmempool to verify)  Apply this patch, re-run test: E"	Clarify
2182	12632680	"Results of testing successful, but I did have to tweak the free-transaction code so limitfreerelay=0 did what I wanted it to do (it was letting the first free transaction into the memory pool). "	Clarify
2182	12637669	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9c9f5c1303dff0c010e9e68ba7b5619330edfb68 for binaries and test log. "	nAnswer
2181	12242762	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3a2e07493b9a07f4d7f2c9d54e9a3b03593e4405 for binaries and test log. "	nAnswer
2179	12229185	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a03034244b72ff653ec27b1415e934867527d5bc for binaries and test log. "	nAnswer
2179	12236674	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d230ca5e3ba077418f3f16d5e99cc085f33a45fd for binaries and test log. "	nAnswer
2179	12283137	Nice. Should the cert/pubkey be in the source tree as well? 	Statement
2179	12285768	@mikehearn : good idea.  	Statement
2179	12337087	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3fa4681ea7289ddc377fc7944f7fbebe5d946356 for binaries and test log. "	nAnswer
2179	12386957	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6b3dac6552d74784f110c7e142a328c21c1acc65 for binaries and test log. "	nAnswer
2179	12427917	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/db8ca3fc2eff4351064c72bd312017d7bab87ea9 for binaries and test log. "	nAnswer
2178	12228733	Doesn't exploiting this require you to have the private key in question yourself...? 	ynQuestion
2178	12229440	"No.  Anyone that can connect to you can check if you're the owner of a wallet address. Even if all the outputs of the address in question have been spent, there is a modification of the disclosed attack that can be used to check if you owned that address, as long as you keep the keypair in your wall"	Clarify
2178	12230181	"Thanks Sergio, I was about to start working on a patch for this.  Is that the only place in the receive-a-tx-from-the-network callchain where network behavior is different for ""my"" transactions than other-people's transactions?  "	whQuestion
2178	12232870	"Is far as I can see, that's the only place IsFromMe() is used in the whole main.cpp file.  I don't understand how own transactions are handled in SendMessages() (see comment ""always trickle our own transactions""). Maybe there could be a problem there. I don't know.  Nevertheless it could be possible"	Clarify
2178	12234760	" This source code looks interesting... it could be the source of another DoS vuln...  bool CWallet::AddToWallet(const CWalletTx& wtxIn) {  ... something ...  #ifndef QT_GUI         // If default receiving address gets used, replace it with a new one         CScript scriptDefaultKey;         scriptDe"	Clarify
2178	12235022	"No.  There is no way for the attacker to know what your default key is, unless you tell them. They cannot find it by sending transactions to random addresses, there are 2**160 addresses.  If you do tell them, then yes, they can make you generate a new default key by sending bitcoins to that address."	Reject
2178	12238131	"Pardon. What exactly is the ""default key"" ?  If you used that key once, then an attacker can try all possible existent keys in the blockchain until he hits your default key. "	Clarify
2178	12238413	"There are around 1M unique addresses in the block chain. They can all be tested against ""if (txout.scriptPubKey == scriptDefaultKey)"" very quickly. "	Clarify
2178	12238484	"And per the code you showed above, the default address is changed as soon as a transaction is received to it. So, typically, there will not be any transaction to a default address. "	Clarify
2178	12238582	"The point is that scriptDefaultKey is not updated in the inner loop even if is changing. So the same address can be stored in 10K prevouts, and tested at the same time, amplifying an time deviation 10K times. A 1 msec deviation will result in a 10 seconds delay.   "	Clarify
2178	12238658	"Good code: BOOST_FOREACH(const CTxOut& txout, wtx.vout) { if (txout.scriptPubKey == scriptDefaultKey) { CPubKey newDefaultKey; if (GetKeyFromPool(newDefaultKey, false)) { SetDefaultKey(newDefaultKey); SetAddressBookName(vchDefaultKey.GetID(), """"); scriptDefaultKey.SetDestination(vchDefaultKey.GetID("	Other
2178	12238705	"Now I see. Yes, you're right @SergioDemianLerner. That line would prevent the amplication. It's still something that's hard to exploit nonetheless, IMHO. "	Clarify
2178	12238880	"Adding that line is a good idea.  Two things on the top of my TODO list right now:  1) Fix the IsMine() check in the penny-flooding-check code  2) Do not add dust-spam transactions from other people to the wallet (avoids all sorts of wallet-bloating attacks).  (2) needs some thought, though, and may"	Clarify
2178	12238955	@gavinandresen about 2): WHAT? and let those fill up everyone's UTXO sets forever? 	Other
2178	12239032	@sipa The UTXO bloat can be addressed by only including them when confirmed. The penny flood breaking things can be addressed by excluding the dust in the primary coin selection but then adding them back into transactions with change as a post-processing step. ... but the incentivize the latter we n	Clarify
2178	12239243	@gmaxwell Excluding them from the coin selection process is very different from not adding them to the wallet. 	nAnswer
2178	12240222	"(regarding the exploitness of the previous vuln) It takes only 24 days, sending transactions a full 50 kbytes/sec bandwidth to test for 1M addresses (with amplification 50x) in order to discover a single default key. If generating a new keypair takes 2 msec, 50x amplification requires the attacker t"	Clarify
2178	12240900	"@SergioDemianLerner : the default key is generated randomly (because keypool keys are generated randomly).  If there are ever bitcoins sent to it (thereby revealing it in the blockchain), then it is changed. That is what this code does.  So, again, unless you tell the attacker what your default key "	Clarify
2178	12241181	"Ok. Thanks Gavin. I didn't know that. In  CWallet::CommitTransaction() first AddToWallet() is called and then wtxNew.AcceptToMemoryPool() is called, so there should be not even a window of time for an attack.  Sorry!  "	Statement
2178	12259926	"Aside: Does anyone even use this default key, or can it be deprecated? I removed the functionality in bitcoin-qt because users were annoyed and confused that adresses were automatically being created. "	Clarify
2178	12664421	I went back to the source code to see if  SyncWithWallets() could be used as an oracle for transactions with IsMine()=true. I found that the only two timing differences from a transaction sent to me over another not sent to me are:  1. wtx.WriteToDisk() in CWallet::AddToWallet()  I haven't measured 	Clarify
2178	12785561	"This can be closed, as the patch got merged. "	Statement
2177	12225380	"I didn't include any wallet statistics in the debug window (and didn't pass the walletmodel in) on purpose: to make it independent of any wallet, for example when multiple wallet support is added.  Then again, if you think this is useful, these kind of things could be shown per open wallet, i guess."	Clarify
2177	12226168	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/326db1531320092191baa7a9e391404c3c8e8dc4 for binaries and test log. "	nAnswer
2177	12635489	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/326db1531320092191baa7a9e391404c3c8e8dc4 for binaries and test log. "	nAnswer
2177	15632989	"Btw, can anyone come up with something fun to add in the overview page? We're making it emptier and emptier,  Maybe a graph or visualization or something? Or a minigame? (j/k on that last one)  "	Clarify
2177	15659640	"@laanwj Agreed, the overview page could get some more details or new stuff... I have no great idea yet. "	nAnswer
2177	15661708	Less is more imho. 	Statement
2177	15671682	"@schildbach Your vote here, Just remove or move to debug-window? "	Other
2177	15671829	"The main point is getting rid of useless (for the normal usecase) / confusing info on the main screen.  Imho it can be useful on the debug window, but even then I'd make it more clear that there are different ways to count transactions so the user needs to know which metric this is. "	Clarify
2177	15671997	"The ``unique transaction IDs`` counts the IDs only once e.g. payments to yourself generate 2 transactions, but both share the same transaction ID. How is that metric called then ;)? "	Clarify
2177	15672072	Number of unique transactions would make a good label for that imho. And I guess that's the number most developers (= users of the debug screen) will be interested in. 	Clarify
2177	15687308	"I'm still for completely removing it, for the sake of minimalism (and due to conflicts with multiple wallet support).  "	Statement
2176	12214825	"I have code for this ready and I'll create the pull request, when my addrbook fixes and cleanup are merged (#2157 and #2165).  Btw. you can also click on the small addressbook button on the send coins page.  Duplicate of #861 "	Clarify
2176	15832465	"@schildbach Can you please close the ticket, as the feaure is now in the client. "	Statement
2176	15838777	"Tested, it works. Thanks for implementing this! "	Emphasis
2175	12214959	Can you verify that a client restart fixes the wrong display? I also observed that problem recently while generating some testnet coins. 	Clarify
2175	12215528	"The counting of the number of transactions uses different criteria than the transaction list. This has always been the case as it counts on a lower level, though it may make sense to change. At least these differences exist - when to count mined transactions or not - how to count transactions with m"	Clarify
2175	12215760	"No, restarting the client indeed doesn't help. I think - however you count - numbers should be consistent (or ""number of transaction"" removed - what is it good for?). "	Clarify
2175	12215878	Fine with me to remove it 	Statement
2175	12216575	"I'm also fine with removing that label. The other solution (to update counting etc.) would be much more effort and could create other problems IMHO.  @laanwj It's a little weird to me, I have a testnet wallet, which shows 15 tx on overviewpage, 12 are displayed in the tx list and listtransactions """""	Clarify
2175	27097599	Number of transactions was removed from overview page so this is no longer an issue. 	nAnswer
2174	12202031	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3d07cf2b6bee9ef1ecfbb54cd8f08904857a22e4 for binaries and test log. "	nAnswer
2174	12203943	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fcbc2d8427bfef6066ae3fd5638976548bdd2c42 for binaries and test log. "	nAnswer
2174	12335849	"I was being facetious in my last commit, obviously... "	Statement
2174	12337750	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f260a599a075f84f220343b2dae4264d8225324c for binaries and test log. "	nAnswer
2174	12635775	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f260a599a075f84f220343b2dae4264d8225324c for binaries and test log. "	nAnswer
2174	13121717	ACK if you squeeze the two commits together. 	Clarify
2174	16020325	Can you please squeeze these together? 	ynQuestion
2174	18693407	Poke @CodeShark  	System
2174	19861256	Please squeeze? *puppyeyes* 	ynQuestion
2174	19944985	ACK 	Clarify
2173	12183109	Closing as duplicate of #1028 	Statement
2172	12191690	ACK 	Clarify
2172	12199528	Updated to use just ``block database`` (instead block/coin database) to be better understandable for our users. 	Clarify
2172	12202263	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/06494cabb48f005f058cc8e6f6b1b33ee1464e8b for binaries and test log. "	nAnswer
2172	12237370	ACK 	Clarify
2171	12191646	ACK 	Clarify
2171	12196482	ACK 	Clarify
2171	12202466	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bb41a87d57ac885dcd951a11827ca57329224802 for binaries and test log. "	nAnswer
2171	12455107	/merge me ;)? 	ynQuestion
2170	12153306	I'd be very surprised if this has anything to do with blkfile_upgrade. What did you compare with that did work? Git head? 0.7.2? Compiled in the same way? ... 	Clarify
2170	12156126	"By fail you mean the QR Code dialog does not open / show up? Does it show up, when clicking on the QR Code button in your addressbook or the send coins tab? "	Clarify
2170	12162949	"It's the same for address book and receive coins: There is no button, but the context menu option is silently ignored (means: nothing happens). A QR code for sending coins doesn't make any sense to me. "	nAnswer
2170	12163001	It was working on the latest Ubuntu package bitcoin-qt 0.7.2-quantal2. 	Statement
2170	12164824	"Could it be, that there is a problem with the qrencode lib, did you use USE_QRCODE=1 while compiling? I looked at the source and indeed, if USE_QRCODE=1 is not specified, we still ofter the context menu option, which is a bug :), so thanks for noticing. "	Clarify
2170	12165441	"No, I didn't. readme-qt.rst tells me to just run qmake, then make.  If there is an option to disable QR code then the context menu options should disappear IMHO. "	nAnswer
2170	12165937	"@Goonie As I said above, you found a bug. A fix is in the referenced pull. "	Clarify
2168	12133401	How much will this increase a nodes load / how much larger will the resulting database be? 	ynQuestion
2168	12141856	"@Diapolo Around 500 MB extra in storage, and a lot of extra I/O. I didn't spend much effort optimizing this, as I don't consider this functionality a priority. "	nAnswer
2168	12143294	"@sipa Thanks, I was just interested in the technical base aspects :). "	nAnswer
2168	12229257	"Could you grab a service bit and make ""getdata"" use the new index too? Or is that too much additional work for this change? "	Clarify
2168	12229369	"@mikehearn I'm absolutely against making this available to the P2P network. If there is one thing I don't want services to depend on, then it is the availability of a fully indexed transaction history. If you really need one, fine, but maintain it yourself. "	Reject
2168	12231368	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1f4691130ea0c54c69ceb04407507cd80dd05133 for binaries and test log. "	nAnswer
2168	12231508	"I'm not sure I see the issue. Yes you can make a node do lots of disk IO, but downloading the block chain does that too. It'd be nice to fix, but it's not a new attack vector.  Apps that need indexes like that will end up just using blockchain.info or various random other sites/protocols to get what"	Clarify
2168	12236562	"The only thing keeping history is necessary for, is bootstrapping fully validating nodes. However, that doesn't require an index (or even a Bitcoin node at all - it could be provided by an HTTP-based file service or other protocols - something that web has plenty of). I'm sure that making a feature "	Clarify
2168	12238992	"OK, good points. Now I agree with you. "	Accept
2168	12636041	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2d1fa42e85c9164688aa69b3f54f015fbefc06aa for binaries and test log. "	nAnswer
2168	12709241	"Test plan that I'll finish executing after lunch:  Default arguments, getrawtransaction  w. arbitrary old, not-in-your-wallet txid, fully-spent txn EXPECT: transaction not found  Rerun with -txindex=1 EXPECT: startup fails with ""must -reindex"" message  Note disk space used by blktree/ subdirectory R"	Other
2168	12709506	"@gavinandresen RE test plan: * getrawtransaction without txindex should work for not-fully spent confirmed transactions, mempool transactions or transactions in the relay cache. For not-fully spent confirmed transactions, it may be slower than with txindex present. In general, without txindex I cons"	Clarify
2168	12720408	"Test results: success!  Disk space: blktree/ 30M --> 600M  Time to -reindex:  (note: running -g build, no -dbcache set) 1 hour 50 minutes  (same time, with/without -fullindex)  I'm going to pull.  "	Clarify
2167	12097529	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a35a8e3219e933265b0e34f7c72e08ed33ac0f63 for binaries and test log. "	nAnswer
2167	12196649	"From what I read, this simply tells the OS that the application is prepared to deal with a >2GB address range. Not all Windows OSs/platforms support it, but enabling this flag should be a no-op for those.  If someone can verify binaries built with this still work on a 32-bit XP, I'm fine with mergin"	nAnswer
2167	12392222	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1f0ce2dd68313094af7cf6647bdf5936bee8352c for binaries and test log. "	nAnswer
2167	12393361	@sipa I'm going to try the pulltester binary with WinXP tomorrow :). 	Statement
2167	12418847	"@sipa Did an IBD with bitcoin-qt.exe, tried a wallet encryption and there were no errros, the client started and closed just fine as expected. Btw. it seems @BitcoinPullTester is using an older OpenSSL version then we do with Gitian. "	nAnswer
2166	12096535	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/17c1f7f04f24d2cea133ec0567f153b12bf4cd5b for binaries and test log. "	nAnswer
2166	12197308	ACK 	Clarify
2165	12084503	"ACK on code changes, haven't tested yet "	Reject
2165	12084603	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8910caf3ac09c91b6d2c6b3775780f57b3790e83 for binaries and test log. "	nAnswer
2165	12093999	"@laanwj I intend to extend the addressbook context menu with an option to directly feed the send coins tab with address and label. This pull is nearly ready, but I thought it would be good to get this and the addrbook fixes merged before. "	Clarify
2165	12165196	"added: - don't show QR Code context menu, when USE_QRCODE=1 was not specified   when compiling the client  This is related to #2170 and should fix that bug. "	nAnswer
2165	12169156	"added: - comments for all slots that are not related to a button (to ensure to not use a ``on_foo_clicked()`` format, which causes warnings from the Qt IDE) "	Clarify
2165	12202695	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3ae584fb15e05e098cce3d818e39a590ba9269cd for binaries and test log. "	nAnswer
2165	12543264	"@laanwj ping (seems 0.8 progress is speeding up, thats why I'm pinging you more often ^^) "	Clarify
2165	12559014	"@laanwj This is the screen directly after starting the client and switching to the addressbook: ![1](https://f.cloud.github.com/assets/1419649/87452/4ffc9a72-64c2-11e2-9f23-28bc68c0fdc9.png)  It seems like the first address is ""somewhat"" selected, so I tried to access the context menu via Keyboard, "	Clarify
2165	12622513	"@laanwj My whish is to get your final decision on this, so we can get it into 0.8 RC :)! Your final vote counts. "	Emphasis
2165	12623587	"I like to merge this because of the QR_CODE context menu...  But I'm still not really happy about the deleteAction. I don't see an obvious way to trigger it either, but explicitly disabling it is safer if, perhaps due to some other change, it suddenly becomes possible.  Please try to make pull reque"	Clarify
2165	12623777	"In that state I consider your vote a help, you say revert that deleteAction change and I'll do this asap :).  Edit: @laanwj I chose to revert that change! "	nAnswer
2165	12625859	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/bb0726a8cfbe985beb668790bb5d01a4caaaa5c4 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2165	12626138	``cp: writing `out/test_bitcoin.exe': No space left on device`` seems not to be related to my last update! 	Clarify
2164	12094088	"I've never seen the first error message (that on screenshot 1), it that really a OS dialog? Looks a little weird. Is your PC uo to date in terms of Windows updates? You have XP SP3 and all recent security and Visual C++ Runtime updates installed? "	Clarify
2164	12099821	"Dialog is produced by dwwin.exe (DrWatson) crash reporter, file scanned just to make sure it is clean:  https://www.virustotal.com/file/92e5974dfd91acebf5d8bd5f14361c0afd7528ef6503d1d8a8c26e64c115a0cb/analysis/1357828251/  All OS patches found here already applied:  http://www.microsoft.com/en-us/do"	Clarify
2164	12102733	How much RAM has your machine? 	whQuestion
2164	12107941	"You didn't finish the test plan-- I only see the new version of bitcoin running in your debug.log files, the last step in the test plan is to make sure downgrading works properly.  The idea behind forking the test plan and then actually editing it as you test is to treat it as a checklist, so tester"	Clarify
2164	12119149	"Test run number 3:  Upgrade     Note how much disk space is being used by the bitcoin data directory. = 5,9 GB     Run the new bitcoind/Bitcoin-Qt binary. = Done EXPECT (all tests except for FAT32 filesystem):     blktree/ subdirectory created in bitcoin data directory = Yes     small (less than 1GB"	Clarify
2164	12157777	"Perhaps we have a problem when aborting -reindex then? I'll try a -reindex later...  @gavinandresen I also got a MSVC++ Runtime error message, while the -reindex was running. That was with an own build... restarting the client without -reindex just leads to the same crash. Will need to start an IBD "	Clarify
2164	12232545	"Regarding datadir size, new version of client creates /blocks subdirectory, copies existing blockchain and index files there - or it just creates dummy files of same size, can't tell - and never deletes them, hence size of datadir almost doubling after full reindex. "	Other
2163	12066274	ACK 	Clarify
2163	12067044	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e451e2b42eaad052acb47adebc118409772183b1 for binaries and test log. "	nAnswer
2163	12068216	"Fixed the misinformation about jenkins, added a link to Matt's repo where the build scripts live (and rebased into one commit).   "	Clarify
2163	12069764	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/545d604b09b1c6882e40a071cd41474339652e79 for binaries and test log. "	nAnswer
2162	12063301	"Tweaked based on tester feedback: output amounts with full 8-decimal precision, and support scripthash addresses. "	Statement
2162	12409045	"Sent you a pull request for this, https://github.com/gavinandresen/bitcoin-git/pull/29 "	Emphasis
2162	12683608	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dba91a9a6783057d7f308eeabb0ef4a6772c9562 for binaries and test log. "	nAnswer
2161	12060989	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/74102ce089021edd05214c2f0c19b96b11659fc3 for binaries and test log. "	nAnswer
2161	12066212	"ACK, but I think you should collapse the empty curly braces. "	Clarify
2161	12067863	@gavinandresen done 	Statement
2161	12068200	ACK  	Clarify
2161	12068251	"I was thinking that we should archive satoshi code snippets somewhere, perhaps in contrib/  He did a bit of fClient work, emailed some code snippets to others, etc.  Would be nice to collect the Not Used Yet ones, and not bury them in email boxes or git history. "	Clarify
2161	12068403	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c2b72ba27f0b41d15c70818cb974d4fe7188d17c for binaries and test log. "	nAnswer
2161	12235785	@jgarzik : the fClient work is in the 'blockheaders' branch here. The only code snippet I got from Satoshi is now merged (the signature cache).   	Clarify
2160	12038819	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/635c3829c6a4ebae311d43881ea88265e444a4c7 for binaries and test log. "	nAnswer
2160	12066773	"Here are the issues I think about for this seemingly trivial one-line change:  Is adjusted time valid before you're connected to any peers?  Check code:  yes, will be current time.  Are there any issues with calling GetAdjustedTime from multiple threads? Check code: nTimeOffSet in util is not protec"	Clarify
2160	12067823	Is the adjusted time that interesting? I think that the measured adjustment itself is more useful. 	Clarify
2160	12070411	"gmaxwell: I was just experimenting with nLockTime and noticed that there currently isn't any way to get the network adjusted time over RPC. (or even at all?) In theory a nLockTime-using application might care, but 1) none exist yet and 2) mining is too unpredictable for it to matter much and 3) what"	Clarify
2160	12071381	"gmaxwell: Forgetting sounds reasonable. Regarding pushing: well, what's the big deal? The acceptance window is two hours, and AddTimeData doesn't allow nTimeOffset to be larger than +-70minutes. Lets suppose it gets pushed back as far as possible: on reception we reject a block with a time > 2 hours"	Clarify
2160	12078086	"The timestamps must go forward eventually as they must be greater than the median of the last ten, and stacking them all up would make the difficulty skyrocket. Sadly, they can't really be /forced/ more tightly than that without endangering convergence. If it were ever an issue one could implement a"	Clarify
2160	12141641	@sipa: Modified to return the offset itself. 	Clarify
2160	12636612	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8686f6467c9db2606706baca33842c97ff7621f8 for binaries and test log. "	nAnswer
2159	12037602	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/10046e27dbc10270f59385231736da2a9a327a8f for binaries and test log. "	nAnswer
2159	12039283	Ack 	Clarify
2159	12045571	ACK 	Clarify
2158	12021921	"There is no reason to increase your number of outgoing connections, doing so won't help you and will only waste network resources.  "	nAnswer
2158	12024281	"I agree with @gmaxwell; the harm to the network of filling up more ""I'm listening"" ports of your peers outweighs any possible benefit of having more than 8 outgoing connections.  Closing.  "	Clarify
2157	11997697	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/ae1c11d44a4ea90001ea777883cc2cef8a60c846 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2157	11999520	@TheBlueMatt Can you fix @BitcoinPullTester? ``fatal error: error writing to /tmp/ccBCY0YL.s: No space left on device`` 	nAnswer
2157	12004064	"Cool  btw: `add qSort() for cachedAddressTable, as qLowerBound() and qUpperBound() require the list to be in ascending order (see http://harmattan-dev.nokia.com/docs/library/html/qt4/qtalgorithms.html#qLowerBound)`  Are you sure this is needed? It should already stay in sorted order by picking the i"	Clarify
2157	12006664	"@laanwj Take a look here, the unsorted list caused some weird issues for me.  ![qSort](https://f.cloud.github.com/assets/1419649/50837/c9293020-59b6-11e2-8630-cc0b82c3b201.png)  "	Clarify
2157	12013102	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ae1c11d44a4ea90001ea777883cc2cef8a60c846 for binaries and test log. "	nAnswer
2157	12043610	"I consider this a rather important bugfix and would love to see it in 0.8. I'll try to get some bug-reporters, to test this. "	nAnswer
2157	12050679	"Code changes are OK, but if some people can confirm that this solves their bug that'd be great :) "	Statement
2157	12051772	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e6d230056202b05a27f187dff2648eb5c76fcfee for binaries and test log. "	nAnswer
2157	12134122	"@laanwj Take a look at #1839, it seems this indeed fixes the problem. "	Clarify
2156	11970649	"NACK, this wastes screen space for no benefit (since values are always shown with the same unit). An option might be okay, but I can't imagine why it would be enabled unless/until Bitcoin-Qt supports displaying mixed units in the transaction list. Note that Spesmilo had options for these, so I am sp"	Clarify
2156	11970961	"As always my pulls are offers, if they get discussed and NACKed / ACKed im fine, as long as there is some feedback :). "	Statement
2156	11971130	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bd8f72b29b9ba4680b5596086eb167b4bbad9f5d for binaries and test log. "	nAnswer
2156	11972022	"If you want to show units in a table, add (btc) to the header, don't repeat it every row that's very cluttered. "	Reject
2156	11974811	"@laanwj You are absolutely right, bad idea here :). "	Accept
2155	11960374	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/72bb8e1b3498a79702e47c2e64895f3b29f9ee45 for binaries and test log. "	nAnswer
2155	11960899	"@gmaxwell:  Cast from Decimal to float will be safe as long as floats are 64 bits.  Checking for that is a good idea:  ""information about the precision and internal representation of floating point numbers for the machine on which your program is running is available in sys.float_info.""  ... or mayb"	Clarify
2155	11963999	Closing this for now; I found a nasty bug doing more testing (on testnet-- using same address as input and output could lose coins to fees).  I'm going to rework to sanity-check fees on the final transaction and write a test plan.  	Clarify
2154	11954241	Why namespace db_cpp ?  Seems to me the database copy of pchMessageStart could be a static member of the DbEnv. 	Statement
2154	11955199	I'd rather avoid adding more dependencies in CAddrDB for something that isn't really used elsewhere. 	Reject
2154	11955851	"@gavinandresen That doesn't make sense. This is for peers.dat, which doesn't use BDB at all, and I suppose CDbEnv will be gone as soon as we kick out BDB-based wallets. "	Clarify
2154	11958863	"I'm still not clear on exactly where in the code it's best to: 1) set the magic bytes for CAddrDB 2) Set the call handlers for net.cpp  I tried running and got this error: http://pastebin.com/tJU9Gsi2 But tried restarting and it initialized correctly, and now it seems to be running fine. "	Clarify
2154	11961014	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/03014e2ff26d4ab6195f8b0bfc29c712dec509de for binaries and test log. "	nAnswer
2154	11974287	"RE: namespace db_cpp:  Fine, make it static in CAddrDB, I forgot that peers.dat is not a BDB file (and pass it into CAddrDB constructors?  or is CAddrDB a singleton class? )   "	nAnswer
2154	11983843	@gavinandresen Noted and done. 	Continuer
2154	11985144	cp: writing `out/bitcoind.exe': No space left on device cp: writing `out/test_bitcoin.exe': No space left on device  WTF?!?!?!  Shall we all chip in and get BlueMatt some more hard disk space? 	Other
2154	11995664	I am going to keep pushing commits as an extra backup despite BitcoinPullTester being out of disk space. 	Clarify
2154	11997567	"I think you are doing good work, but I'm sure you will get faster ACKs or merges, if you try to keep pulls smaller. Perhaps @sipa or other core devs can comment. "	Clarify
2154	11998020	"Our bottleneck is code review and testing.  If you want your pulls to get merged, then you need to help fix that bottleneck-- either recruit reviewers/testers to review/test your own code, or volunteer to help review/test other people's pulls.  Or only refactor code that has good unit tests, so we c"	Clarify
2154	11998134	"Oh, also:  you might want to help test or update https://github.com/libcoin/libcoin which is a fully refactored version of the core code, that, last I checked, nobody used because nobody trusts it (because so many changes were made without thorough testing).  "	Clarify
2154	12004408	"The changes I'm making will be well-documented and possible to rigorously review. And if more unit tests are needed, I'd be glad to help write some up.  I'm making incremental changes, hopefully each change easy to understand and track. I haven't changed any actual logic in the code nor implementati"	Clarify
2154	12005270	"Also, I'm willing to do comprehensive testing on earlier commits with the hope of getting them merged without having to merge everything at once. "	nAnswer
2154	12016496	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4af9a6c7e0d1246852195b47c200a974dff47ab1 for binaries and test log. "	nAnswer
2154	12017209	"Just for the record: I've been discussing these changes extensively with @CodeShark the past few days, and I think they are very valuable. They should make the code easier to understand and reuse.  Getting 0.8 out now certainly has priority over refactorings, but as these are almost entirely just co"	Clarify
2154	12024460	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/aea31289a59166195d2d7270eacb0905b14d476a for binaries and test log. "	nAnswer
2154	12033350	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/366fb8aa64a581c22064dae33a3d08769375b9f3 for binaries and test log. "	nAnswer
2154	12610332	The core commits will be reorganized into four stages:  - 1) move core class methods that should remain class methods implemented in main.cpp out of main.cpp and into core.cpp. (move)  - 2) move core class method implementations in main.h that should not be part of core classes out of the class decl	Other
2154	12636618	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/366fb8aa64a581c22064dae33a3d08769375b9f3 for test log.  This pull does not merge cleanly onto current master "	nAnswer
2154	12904904	Rebase needed 	Statement
2154	12905016	I'm sure @CodeShark intents to rework this pull into smaller more logical pieces after 0.8 is final. 	Clarify
2154	18926011	"OK, very much like where this code is going.  ACK 90% of it, modulo inline comments made earlier.  One specific criticism with this rebase:  the rebase problems were all fixed in a final, appended commit.  That does not work, because it breaks bisection properties.  Each commit needs to produce a tr"	Clarify
2154	18926293	"I'm very much in favor of the code changes here (and they look move-only to, apart from the registration functions). It's only a first step, but it's a very needed one IMHO.  I agree with the comment about the last commit fixing everything, but apart from that, I'd like to see this merged soon. Sinc"	Clarify
2154	18926462	"Agreed, RE holding other pullreqs, to avoid the endless rebase pain on @CodeShark 's part. "	nAnswer
2154	18953522	I'll try to get this done today. 	Clarify
2154	18968056	All the commits build with make -f makefile.unix now.  Still left to do: - Move CBlock to core - Remove main.h include in net.cpp. - Unit tests 	Clarify
2154	18975027	The unit tests have run successfully on all the commits in linux. Need a few more eyes to review for correctness and some help with a few more tests on other platforms. As for the other two things I had listed as TODOs - moving CBlock to core and removing the main.h include from net - I'd rather mer	Clarify
2154	18975560	"OK, looks pretty good.  ACK everything except the indirect function pointer stuff.  Definite NAK on the function pointers.  Let's fix that up, and we can get this merged. "	Clarify
2154	18976753	What do you suggest in place of the function pointers? 	whQuestion
2154	18977111	"@jgarzik Not sure you see the reason for those indirect pointers. They are there to break the dependency of net on main, and seen as such it seems perhaps weird, if the only user of net is main for now.  However, over time, net should turn into a class ""CNetworkNode"" or something, which exposes a wa"	Clarify
2154	18977190	"If there's any reasonable critique of the function pointers it's about style, not performance. A more general-purpose messaging system would be very nice - but in absence of a clear design, at least the function pointers avoid any dependencies on outside libraries. "	Clarify
2154	18977837	"I'd also prefer boost::signals2 over registering function pointers. We're already using them elsewhere in the code, and it is exactly the type of decoupling they are designed for.  "	Clarify
2154	18978497	"Agree with Gavin on boost::signal2, let's avoid raw function pointers in c++ "	Statement
2154	18978640	"Very well, I agree it's a cleaner solution. "	Accept
2154	18983753	I'll add signals later today... 	Clarify
2154	18996278	Just so this isn't forgotten: @TheUni just noticed this doesn't update makefiles (yet) 	Other
2154	19021448	"@sipa I have deliberately avoided putting anything in core.cpp to avoid makefile issues for this merge. Eventually, it will probably make sense to move some of the code in core.h into core.cpp. "	Clarify
2154	19024477	"When I had worked on this originally, net.cpp was calling StartShutdown directly. Happily, this has since been removed.  I had overlooked the fact that ProcessMessages was still being called directly from net.cpp. I'll fix the appropriate commits once everyone agrees with the messaging approach. "	Clarify
2154	19024746	"@CodeShark You'll still at least need to add core.h to bitcoin-qt.pro, and while you're on it, I don't see any harm in adding core.cpp to the other makefiles too - that'll make it easier to move stuff there in the future. "	Clarify
2154	19026897	@sipa done @TheUni core.h/core.cpp will have to be considered in what you're doing 	Clarify
2154	19028913	"Sorry, hit the close button by accident. "	nAnswer
2154	19029536	Alright - code freeze until merge. 	Statement
2154	19097651	"ACK. Code changes look good to me, and I've tested syncing/mining/receiving/sending on testnet. I have a few inline comments left, but those can be dealt with in follow-up commits, so we don't need to stall the merging process too long. "	Statement
2154	19171474	"I've tested this commit on testnet, no problems found. "	nAnswer
2153	11927472	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/765e22b82cf1e998fd2ad38c68eacb1c48ad2ff0 for binaries and test log. "	nAnswer
2153	11928275	"wow, did this cause rendering issues?  "	Other
2153	11928818	"AFAIK there were no rendering issues, at least I didn't observe any on Windows. "	nAnswer
2152	11927219	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/34259306984540634fb13802f1abe2f96fa2bfec for binaries and test log. "	nAnswer
2152	11927258	sipa: leveldb is included in the bitcoin sources <- closing 	Statement
2151	11923860	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/aec056edb588707f81f31f6f2d72aa01e8945bae for binaries and test log. "	nAnswer
2150	11914145	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d5f528f14647b6270096921b917ee5379bdd19e5 for binaries and test log. "	nAnswer
2149	11902239	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4e68391a7f3b3361584af032bf671bd9dc0677fe for binaries and test log. "	nAnswer
2149	11902736	This is changing things in the wrong direction. BTC values should be changed to amounts. 	Clarify
2149	11904428	"I am all for using satoshis expressed as an integer, or amounts encoded as strings in the RPC interface. But consistency is more important.  I hope we can one day do a nice ""RPC v2"" with consistent names, nicely separated calls for net/wallet/blockchain, with support for multiwallet and authenticati"	Clarify
2149	12236030	ACK 	Clarify
2148	11861995	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a79bb07800bbc8c72cf97cf8b34e9137ea84b03a for binaries and test log. "	nAnswer
2148	11889630	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/54413aab135aa84f60bfcb477a4d2ecfb72edbac for binaries and test log. "	nAnswer
2148	11915429	ACK 	Clarify
2148	12304731	Is there some background to this? I don't understand why... 	ynQuestion
2147	11862529	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a399b4973b5d0f7b00d26d5e059db6479181a36c for binaries and test log. "	nAnswer
2147	11915472	ACK (apart from my code comment) 	Clarify
2147	11923637	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8ffbd6c3789843cb024a3ee425ac4cc0482eaeb7 for binaries and test log. "	nAnswer
2146	12910639	Fixed by pull #2224 	Other
2145	11848411	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/24e864547189c6b9347740f50d5fed656fc48816 for binaries and test log. "	nAnswer
2145	11849681	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/aa38398d4bd32c6b90175d08b65ecb324701a368 for binaries and test log. "	nAnswer
2145	11851050	ACK  	Clarify
2145	11857317	"Some  problems with making reindex automatic is that reindex is quite burdensome and intrusive so you may want to control when its run, and the other problem is that making it automatic may hide hardware or software errors that can also cause silent failures.   A failure of this test is something wh"	Clarify
2145	11869901	"@gmaxwell there is a trivial undo test possible: verify their checksums. However, how meaningful is it to check undo data without checking the coin state - there is no scenario in which you need undo data but not coin state.  In way, the system is backwards. The coin state is by far the most importa"	Clarify
2145	11869999	"@Diapolo such a flag would be possible, but why add it? The next startup the database will most likely still be inconsistent, so it would be detected again (and if it isn't, maybe it was something temporary...).  For GUI users, I would like to see something like ""Your database is corrupted. Do you w"	Clarify
2145	11870019	@gmaxwell Suggestions for better reporting are welcome :) 	Clarify
2145	11883622	"@gmaxwell I've added a new level in between 1 and 2 (which verifies undo data). I've also changed the heuristic for determining how far to roll back a bit - it now aims for using +- 5-10 MB extra for validation, even with very small dbcache. "	Clarify
2145	11884387	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1f355b66cd90f1bd96a862604a7216e8ba56f853 for binaries and test log. "	nAnswer
2145	11894681	ACK ACK ACK 	Clarify
2145	11922004	Well the reported messages are still confusing. It's not actually checking 2500 blocks at level 3... 	Clarify
2145	12146073	"Because this increases our sensitivity to corruption so much, I'd rather pull now and get the messages just right in another pull.  "	Clarify
2144	11862012	@Xenland Would that be sufficient?  ![signature](https://f.cloud.github.com/assets/1419649/41839/cc0169d8-55ed-11e2-8cfb-2a245b8f72f9.png) 	Other
2144	11920031	"@Diapolo Looks good, I can definitely instruct my users with that solution. Cheers! "	Emphasis
2144	11929134	"@Xenland My patch got merged, you can now close this issue. "	Emphasis
2144	11935053	@Diapolo Thanks mate! 	Emphasis
2143	11836352	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5fb8d5275d519883bbae036d04c065d3ac68ad8c for binaries and test log. "	nAnswer
2143	11923977	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/37f070f564b425f62f95a76383d475eabb2b4aff for binaries and test log. "	nAnswer
2143	11928273	ACK  	Clarify
2142	11810765	"Compiles fine, no obvious weird behaviour, while doing IBD and such. "	nAnswer
2142	11812660	ACK 	Clarify
2142	11836493	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ee3374234c60aba2cc4c5cd5cac1c0aefc2d817c for binaries and test log. "	nAnswer
2142	11922080	ACK 	Clarify
2141	11836657	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/81f7e19735b13ade595c004680f0eefb70aa739d for binaries and test log. "	nAnswer
2141	11913681	"Can please some other core dev merge translations updates, as @laanwj seems to have not that much time to participate. I don't want to get in a hurry before we do 0.8 RCs as translators need time to catch up! "	Emphasis
2141	11913841	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2e43c92428e29737ba1a993bd5c99604dd4185de for binaries and test log. "	nAnswer
2137	11764475	"When you say you edit the label of the uppermost label in the list, i.e. changing part ""25.0"" to ""75.0"",   do you mean changing part ""50.0"" to ""75.0"" ? "	Clarify
2137	11970301	"I can extend this bug report!  Double clicking on an address in the addressbook and not making changes duplicates the entry. Very weird, I guess I need to look into this ^^. "	nAnswer
2137	12043665	@SimonVrouwe Can you test the fix from #2157? You find a Windows binary for that pull over here: http://jenkins.bluematt.me/pull-tester/e6d230056202b05a27f187dff2648eb5c76fcfee/bitcoin/bitcoin-qt.exe 	Clarify
2137	12137586	"I tested it and it works!   The version that I used was on Linux, so I installed bitcoin-qt 0.7.1 on windows machine which reproduced the bug (Issue #2137) as above. Then I tested the (http://jenkins.bluematt.me/pull-tester/e6d230056202b05a27f187dff2648eb5c76fcfee/bitcoin/bitcoin-qt.exe) and it work"	Clarify
2137	12785592	@laanwj Can be closed! 	Emphasis
2136	11746908	Closing this as WONTFIX.  	Statement
2135	11746892	"Not without a lot of re-implementing, because those multiple bitcoind instances would try to all write to the blockchain at once.  Closing this.  "	Clarify
2132	11723883	Good point & solution. I can't really think of a reason not to sign the hash. 	Clarify
2132	11853297	I opened the discussion here(https://bitcointalk.org/index.php?topic=134479.0) As git comments here will be used for posting updates/changes that are agreed upon (Seems to be the protocol for discussion around here any ways) 	Clarify
2132	11853645	I don't see any reason to keep this open at this time.  	nAnswer
2131	11734974	@gavinandresen Updated. 	System
2131	11836841	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3e4655404a8839a03c241fdcf67e063940eb462b for binaries and test log. "	nAnswer
2131	12422487	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e1771b85af3d16e12bab2243ea50adf2d52eaf3c for binaries and test log. "	nAnswer
2131	12598031	I think this goes one step too far.  Some almost-baked thoughts on the problem we're actually trying to solve (we'd like transactions ids to be immutable):  I think this ties into a bunch of other almost-baked thoughts I've had surrounding bumping the transaction.version. I think it might make sense	Clarify
2131	12636926	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e1771b85af3d16e12bab2243ea50adf2d52eaf3c for binaries and test log. "	nAnswer
2131	12637027	DOS rules don't prevent a miner from modifying a transaction. We really do need to actually remove the malleability. ... though the actual enforcement would need to be on a version=2 transaction. 	nAnswer
2131	13121681	"@gavinandresen I really don't like the fact that this would mean rules at the transaction validation level would need knowledge about the precise inner script semantics. IMHO, we should just gradually introduce rules to remove malleabilities, and then perhaps use tx.nVersion==2 rule to enforce them "	Clarify
2131	21091621	@sipa Needs rebase (or close if it was merged in another form?). 	Clarify
2131	22735066	Rebased. @jgarzik @gmaxwell @gavinandresen @laanwj: opinions? 	System
2131	22735438	"Without this, or a substantially similar, change we cannot eliminate malleability attacks on unconfirmed transaction chains.  Though I almost wish the evenness procedure had been specified in BIP32, as now we're going to see hardware wallet deployed that produce odd signatures.  They can be fixed wi"	Clarify
2131	22737406	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a81cd96805ce6b65cca3a40ebbd3b2eb428abb7b for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2131	22740291	ACK. 	Clarify
2130	11837016	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/943e7768f33a7c766d1be5db8aea64a46e37253b for binaries and test log. "	nAnswer
2130	11922368	"Many of your TODO's look like todo's for yourself rather than concrete plans for changes in the source code - leave those out. If there is a concrete plan, and it's obvious: just add a commit that actually implements the change. If it's something big you'd rather leave for a follow-up pull request, "	Clarify
2130	11922553	"Okay, I stripped out the todos. Should I squash everything in this branch down to one commit in order to get it pulled? (total git noob here) "	Clarify
2130	11922709	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4debb8059a3d29a88b72b2bc61a4e0f6bfc7e522 for binaries and test log. "	nAnswer
2130	12636933	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/4debb8059a3d29a88b72b2bc61a4e0f6bfc7e522 for test log.  This pull does not merge cleanly onto current master "	nAnswer
2130	12904881	Rebase needed 	Statement
2130	19703713	"Poke @mikegogulski   The general sentiment towards these changes seems positive.  Let's rebase and get this moving, or close.  "	Clarify
2130	21090978	"I've rebased this as my mikegogulski_walletencap3 branch. It does, however, create a dependency from wallet.cpp -> main.h; I don't see any obvious way to fix this, considering that IsFinalTx is not tied to any class. "	nAnswer
2130	23221198	Closing - non-responsive.  Feel free to rebase and reopen.  	Statement
2129	11692233	"ACK, but there should be a comment in the code explaining the +1 "	nAnswer
2129	11837172	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d7836552e64b1f949385f7b11836ece99f7c3d67 for binaries and test log. "	nAnswer
2129	11922383	ACK 	Clarify
2128	11679669	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/233b122177528f1e6758890b77ba93e0b114a3c6 for binaries and test log. "	nAnswer
2128	11688501	"I like the introduction of that variable, which holds the value ``Bitcoin``, I'm unsure about the switch from local user to local machine. What is the benefit here? I also think NOT requiring Admin privileges is far more user friendly, as perhaps some use the client on machines, where they simply ha"	Clarify
2128	11688955	"Can you write up a test plan?  Something like:  Test installing on top of an old installation, and then uninstalling. EXPECT: all installed files and registry entries removed (but data directory: blockchain and wallet files: left intact).  Note for testers:  Run regedit and look for registry keys {."	Clarify
2128	11702445	"@Diapolo Yes, having user local installs would be great.  However to provide that functionally the nsi install scripts are much more complicated than what we have now.  Ideally the installer will only as for permissions as it needs them.  (For example a user local install will not require any escala"	Clarify
2128	11702478	"I'm not sure user-local installs are a real concern, considering that it'd be a pretty bad idea to use Bitcoin on a system where anyone else has administrative controls... "	Clarify
2128	11746360	Is it possible for the build bot to create the nsi installers? 	ynQuestion
2128	11769639	"We have no build bot (Gitian), which handles this nsi stuff AFAIK. "	nAnswer
2128	11837388	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/44e2863c7d0d9cb3d50803d776cb97993b06860b for binaries and test log. "	nAnswer
2128	11922395	"Ping me here, and I'll do a gitian build of your branch. "	Statement
2128	12637245	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/44e2863c7d0d9cb3d50803d776cb97993b06860b for binaries and test log. "	nAnswer
2128	12642212	"Vista and after support %LOCALAPPDATA%, which is the non-roaming data store (on XP and prior NT-based OS, the corresponding local data is %USERPROFILE%\Local Settings\Application Data).  As an example of use, this is where Google Chrome installs it's program and user data. Google doesn't care about "	Clarify
2128	18693744	"Rather than hardcoding the decision, can we ask -- as some installers do -- whether to install for (a) current user or (b) all users? "	Clarify
2128	18717404	@jgarzik I'm not sure how to do that.  However this pull request is better than the broken behavior that the current installer has on some windows environments. 	Clarify
2128	18725083	@da2ce7  so is the pull request going to be a admin only install or will it be a multi-user or current user install only? 	Clarify
2128	18734922	"Only the Administrator will be able to make changes to the Bitcoin install files. (Install, Update, Remove) However all users will be able to use bitcoin, and have their own interdependent %APPDATA% user files (Wallet, Blockchain).  "	Clarify
2128	19703886	"ACK changes conceptually.  Let's get this tested, especially on multiple Windows versions.  "	Clarify
2128	20862887	Rebased. 	System
2128	21292039	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c80efe132575f2ca65479d784f18f5c6e6d478ec for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
2128	26688014	Needs a rebase and a test plan written and tested on at least two versions of Windows (oldest we support and newest).  	Clarify
2128	28204997	"Closing this pull as it has been inactive for a long time. I also don't really like requiring admin rights to install, this has always annoyed me for other software in the rare cases I had to use windows.  In any case: please ping me or open a new pull request with a rebased version if anyone still "	Clarify
2126	11649149	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/da30975fe13ab227e1b48d68675e7cf8aa84d8e3 for binaries and test log. "	nAnswer
2126	11649463	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2da3e92e55f821514fe4f914eda8e78bcb960e2f for binaries and test log. "	nAnswer
2126	11948902	I like it.  I already modified the source myself to include the IPs that were requesting blocks (so I could tcpkill the lunatic clients)....  I remember asking about that in the dev channel and they prefer not to have the IPs show up.    I run a bitcoind (or two) on my home connection from time to t	Clarify
2126	12637988	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2da3e92e55f821514fe4f914eda8e78bcb960e2f for binaries and test log. "	nAnswer
2126	12901788	"As darkhosis mentioned, logging IPs by default is a bad idea since it makes Bitcoin users targets for crackers who want to abuse the information. "	nAnswer
2126	12905151	@luke-jr Agreed 	System
2126	12924727	I'll edit to remove the IP address logging... Will close until this is done. 	Clarify
2125	11646550	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7f49bfde58ddf53611229ae2e0215fbea3b1425b for binaries and test log. "	nAnswer
2125	12638323	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7f49bfde58ddf53611229ae2e0215fbea3b1425b for binaries and test log. "	nAnswer
2125	16324499	"Can you test whether this is still needed, after the recent network changes? "	Clarify
2125	16324526	"It seems unneeded, AFAICS  "	Statement
2125	16325446	"Yes, I also don't see what this should help with, but rebroad seems to have unusual network problems of some sort, so I still wonder whether perhaps those improved because of the recent network changes. "	Clarify
2125	17772701	"@sipa yes, this still is useful after your network changes. This patch is still providing me with valuable functionality - especially when combined with #1382  "	Other
2125	17774767	Can you explain what exact difference in behaviour you notice?  	whQuestion
2125	18693941	"@rebroad Agree w/ @sipa.  Please explain *precisely* what behavior differences and problems are being seen.  ""still useful"" is insufficient :) "	Clarify
2125	19703974	"Closing.  Happy to reopen, if behavior differences can be specifically quantified.  "	Statement
2123	11634441	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/75fafc30d24648588801baa50242c6d05cd5d75b for binaries and test log. "	nAnswer
2123	11639160	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3d12bdaa7ce61bc6dbe395a7f083325f041b4a00 for binaries and test log. "	nAnswer
2123	11688846	"I'm interested in how that analyzer outputs found stuff, can you perhaps post that? As I'm on Windows it's not that easy to get such stuff working over here ;). "	Clarify
2123	11698994	"On Linux, you can get the analyzer to run by adding  CXX=clang++ --analyze  right above the ""LINK=$(CXX)"" line in makefile.unix, then do a full build. It will output its warnings as though it were a compiler (though it won't actually compile anything). I'm not familiar with the Windows build process"	Clarify
2123	11915547	"I've also seen these warnings by the analyzer, but I'm not so sure about removing the code. It's there to make maintenance easier (ie, will make it somewhat more robust when adding code by making sure hSOCKET will never have an invalid value, and nSize will always be up to date). Compilers are gener"	Clarify
2123	11922670	"agree with @laanwj   Being able to get useful information through a static analyzer is nice, though. "	nAnswer
2123	11923600	It would be indeed better to keep these 2 and so I'm fine with just closing this. 	Statement
2123	12236472	"Closing this, I like the belt-and-suspenders easier-to-maintain code.  "	Statement
2122	17772734	superceded by #2445  	System
2121	11605549	"Sorry, guys - I changed the branch names and it closed the original pull request https://github.com/bitcoin/bitcoin/pull/2117  The pull request remains open but under a new name. "	Clarify
2121	11654887	"A multiple wallet version of bitcoind is underway: https://github.com/bitcoin/bitcoin/pull/2124  That branch will eventually be merged with this one. In order to distinguish spendable wallets from watch-only wallets, a new member will be added to the CWallet class as well as a new corresponding valu"	nAnswer
2121	11667391	OMG this is great! 	Emphasis
2121	12638905	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/89f806c1d5e171ab48b29eeea8937fb2078e917a for binaries and test log. "	nAnswer
2121	16070503	Neat.  I'm surprised it was this easy.  	Statement
2121	17119482	Just a remark so we don't forget (I haven't checked whether it's possible with this implementation): it'd be nice to have a way to include arbitrary P2SH addresses as watch-only 	Clarify
2121	19705409	"Looks pretty good.  Minor nit:  ""label"" is deprecated in favor of ""account.""  The help text must be changed.  And if you are going to change the help text, go ahead and name the var strAccount as other, new code does.  Would like to see this merged.  "	Clarify
2121	19707446	"Yes, please rebase.  Regarding labels vs. accounts - I consider them separate things, which incidentally (and regrettably) overlap (if an address A has label L, payments to A will credit the account also called L). In this case, similarity with the existing API (importprivkey) is more important in a"	Clarify
2121	20089823	is it possible to download and test this modification? I'd love to try it. Can't seem to select this branch 	nAnswer
2121	20750593	"I would love to see this rebased and merged! I'm going to be using this functionality for an upcoming new version of [Coinpunk](http://coinpunk.org), to support client-side encryption for private keys, so that `bitcoind` becomes a listener, and cannot spend any of the user's money. This is a huge li"	Clarify
2121	20794229	I'd also love to see this make the next release. I have a project where I need to watch a large number of addresses without having the private keys on the server. I think the pull request would solve my biggest current development challenge. 	Clarify
2121	20794862	"Just thinking about an alternative to this: Set a wallet passphrase so that all the private keys are encrypted and then write a separate utility to overwrite the encrypted private keys with zeros in the wallet file. Since bitcoind is not going to access the keys anyway while they're encrypted, it sh"	Clarify
2121	20795381	"Thanks for this, tstranex. I hadn't considered that. I might look into this as a fall back. In my case, I'm using vanity addresses so actually don't need to create addresses via RPC. "	Clarify
2121	21090451	@CodeShark Needs rebase.  Although I don't think this makes sense to merge until we have HD wallets and it can be an entire read-only address-chain... 	Clarify
2121	21094840	"I compiled and tested this code, and it seems to work fine. Does it collide with HD wallets? If not, I would really like to advocate for getting this in. I strongly believe that this code solves a critically urgent security problem.  Without this code, I'm concerned that we may get more services tha"	Clarify
2121	21095113	"@kyledrake HD wallets should solve all of those issues, that's my point ;) "	Clarify
2121	21185979	"@luke-jr I'm cool with HD Wallets, but HD Wallets are a long way away. This is a light, simple patch to solve a very big problem, that enables some major new infrastructure for bitcoin. I tried to rebase it and I got very close, I think someone with knowledge of the bitcoin source would very easily "	Clarify
2121	21188742	I think CSecret became CKey (and the old CKey become CPubKey).  HD wallets IIRC are planned for the next release. 	Clarify
2121	21189019	"CKey and CSecret were merged. CPubKey is still CPubKey but inherited some of the pubkey-only functionality of the former CKey.  I consider this a very useful feature, and it's orthogonal to HD wallets. Sure, BIP32 specifies a derivation that can be useful for watch-only wallets, but it still needs t"	Statement
2121	21190332	"@sipa Do you have any free time this week to look at this? I think it's a really super easy fix for you because you are very familiar with the code (and awesome). I think I got pretty close, I just don't know any C++ and I'm completely unfamiliar with the bitcoin keystore plumbing. http://i.imgur.co"	Clarify
2121	21193634	FYI this patch compiles successfully against ec0004aca0a2bf11f99c9587ddb2bf8ea818d3bb.  I've tested `importaddress` with `listtransactions` and `getbalance` and it agrees with blockchain.info. 	Statement
2121	21292048	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/007a28374165f67d713a318bc37ef1286684cad5 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
2121	21562875	"For those of us in the bitcoind camp using an old unstable master so we can get `importaddress`, I have merged `importaddress` with @runeksvendsen's hint of ec0004a here: https://github.com/kyledrake/bitcoin/tree/importaddressupdate  Since I posted on this pull request, I have gotten emails from peo"	Clarify
2121	21591425	@kyledrake Have a look at #2861. 	Statement
2121	21666382	"It would be nice to add a feature in the code to easily or automatically LOCKUNSPENT all unspent coins of the imported watch-only address. Not to mention that those coins are not spendable without privkey.  In shell I run this: bitcoind lockunspent false $(bitcoind listunspent 0 9999999 '[""12c6DSiU4"	Clarify
2121	21793102	"Superceded by #2861, closing. "	System
2120	11597904	"Tested in a testnet-in-a-box setup, sent 10 random 1-ouput transactions (sendtoaddress) and 10 random 2-output transactions (sendmany), then used getrawtransaction to make sure the change outputs were random. "	Clarify
2120	11598147	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b68208178884d006d16cd0712a89b7abf3e32fbd for binaries and test log. "	nAnswer
2119	28219543	"It shouldn't start downloading only re-indexing/converting when upgrading to 0.7.x. Probably this was a result of some corruption. Closing, because there is nothing we can do here and this refers to ancient versions. "	nAnswer
2118	11577619	"The bug is really that the tray icon isn't there, because it was a configuration to ""hide"" the window when minimized. So this is a duplicate of #1522  "	nAnswer
2117	11555872	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/513f8059232f8288a4798ac62f1a9982924ab716 for binaries and test log. "	nAnswer
2117	11556493	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cb944ad47e8ce752376783f0104c5ae20b2c88fb for binaries and test log. "	nAnswer
2117	11556803	How do you control whether the Bitcoin client includes the address in balances or not? I think it would be helpful to be able to watch addresses without considering them your own. 	Clarify
2117	11558519	"Right, so there are two solutions I see here:  1) Ignore nonspendable outputs from balance calculations for sending transactions and add an option to the getbalance method (or add another API call) to distinguish between total balance and spendable balance.  2) Add support for multiple wallets and r"	Clarify
2117	11558600	"Probably option #1 is best, so there can be ""this is mine, and I have the private key somewhere else (so prompt me for it when I need it)"" too "	Clarify
2117	11558666	"Not just ""prompt me"" but we should actually store some kind of token which is returned. Unfortunately pretty much none of our private key using APIs are setup in a way that would reasonably work with them returning 'need private key with token foo'.  "	Clarify
2117	11568959	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f92db3b58692820e1cd72d2beaa653ba225f09ab for binaries and test log. "	nAnswer
2117	11569693	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fc05746a0bfce4de4686d8bb0880082e9cf2b7b5 for binaries and test log. "	nAnswer
2117	11578670	"I think a feature to have a number of balances would be ideal, and that way the user can choose which addresses to includes in which groups of balances. Either this, or just have a default separate balance for the offline (i.e. public only) addresses (well, two, one for unconfirmed, and one for conf"	Clarify
2117	11579803	"I think that would make things too complex for users. Ideally, we'd just have multiwallet support and watch-only wallets, without per-address spendability. "	Clarify
2117	11600856	"As to not break compatibility with the existing RPC calls, I'm thinking we can have a main wallet which is always used as the default wallet. If the user wants to use a different wallet, the name of the wallet would have to be specified in the call. Unfortunately, it doesn't look like we can use man"	Clarify
2116	11527260	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5dfbd4ff68c68c0565311576cf7e04a3d5c8f8e5 for binaries and test log. "	nAnswer
2115	11522484	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d42d932bed6b564cbfc00216d1c04cd5248ddeef for binaries and test log. "	nAnswer
2115	11535582	"I think it would be better to have CreateNewBlock construct some meta-data object with fees in it, which can be used by getblocktemplate.  EDIT: this definitely needs fixing of course, but it seems silly to have GBT redo the fee calculation in an incomplete way, when CreateNewBlock perfectly knows a"	Clarify
2115	11546446	"No reason it can't be optimized after merging this fix, IMO. "	Reject
2115	11546507	/me is working on having CreateNewBlock return fee data in addition 	nAnswer
2115	11548360	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/3a291f97f0dc1c98f980a3f5679000339416961f for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2115	11548921	"Okay, CreateNewBlock now returns a CBlockTemplate struct that contains the block and fee and sigop data. "	Statement
2115	11549482	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0f927ceb5b90ec02be36ddb20b2f4cff82589265 for binaries and test log. "	nAnswer
2115	11557268	Code looks good to me. I'll do some testing soon. 	Clarify
2115	11871204	ACK 	Clarify
2115	11871263	Been running this for almost two weeks on a node. Did basic sanity checks. ACK. 	Clarify
2115	11871857	ACK  	Clarify
2115	11872928	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f3d872d1eabeb5c999162f709626ee20c8789c42 for binaries and test log. "	nAnswer
2114	11512769	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/87b83f97f3c3293ee1950fa646d3857426625cb4 for binaries and test log. "	nAnswer
2114	11539679	"Is the specification of the format signatures follow easily available? I assume it's an RFC or the like somewhere, (as well as whatever defines ASN-encoding) but what one? It'd be helpful if IsCanonicalSignature() had a comment directing people to what standard (and part of the standard) we're tryin"	Clarify
2114	11639671	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bffc744444c19e25c60c8df999beb83192f96a8a for binaries and test log. "	nAnswer
2114	11674823	@petertodd Good idea. I'll try to add some references in comments soon. 	Clarify
2113	11503967	"ACK, compiles and runs nicely for me.  You should add hash.h to bitcoin-qt.pro, though.  "	Clarify
2113	11506759	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0fb9073edd49a39a64d7c7dbf6e6100a7259c0e1 for binaries and test log. "	nAnswer
2113	11506965	"ACK, util.h has grown too large anyway  "	Other
2113	11512111	"@laanwj Indeed; maybe I'll need to split off a few more things, but I think that's nice anyway (like moving the adjustedtime stuff to network, as it's quite insane that util depends on netbase now...). "	Clarify
2112	11437044	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f0bf5fb2453a8c6a089cf0e4e000558efe97620a for binaries and test log. "	nAnswer
2112	11444059	ACK 	Clarify
2112	11465173	ACK 	Clarify
2111	16892898	Does this still occur in git head? 	ynQuestion
2111	16896163	"I havent tested in quite a while, nor am I planning on it, if anyone wants to test I can provide a server to do so. "	nAnswer
2111	20066767	"runeks> BlueMatt: You told me to let you know when bitcoind had successfully run on a armhf system for 14 days. It has now. I compiled bitcoind for my Raspberry Pi, and it has been running since June 19.  So it may be fixed now, Im gonna look into enabling armhf builds on the Ubuntu PPA, see if anyo"	Clarify
2110	11413163	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a8fbbd8fb0b29f3d852936e913a94d6d21baebd8 for binaries and test log. "	nAnswer
2109	11413240	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7601152ce24b6c9a67335e641a242a0be6888dfe for binaries and test log. "	nAnswer
2109	12455211	"I consider this a cleanup, which doesn't break a thing, I tried the resulting exe, which is working fine. We shouldn't use 2 different scopes, if win32 is sufficient IMHO! "	Clarify
2108	11413322	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e8c120cfeb81acd538bc10ae8834d136c55d2c8b for binaries and test log. "	nAnswer
2108	12558641	Any reason not to switch to latest Qt version? 	ynQuestion
2108	12580134	"Yes, it is time-consuming to rebuild dependencies for gitian, so when we do, I would rather we upgrade QT and boost and openssl any other dependencies (and maybe the OS we build on and the version of the compiler we use) all at once. The pain of changing dependencies is, I think, the reason we have "	Clarify
2108	12582845	"@gavinandresen If you prefer batch dependency upgrades perhaps I should just include the latest Boost version also. I'm fine with creating that pulls, because at least in the Win-world it is (most of the time) essential to stay up-to-date (security and performance wise).  I took a look at Gitian als"	Clarify
2108	12639183	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e8c120cfeb81acd538bc10ae8834d136c55d2c8b for binaries and test log. "	nAnswer
2108	15295160	"@gavinandresen So just to understand, when I create a patch to use Qt 4.8.4 does this require any manual or additional work for the core-devs who create the Gitian builds or does it just increase the compile-time once? "	Clarify
2108	15302811	"It requires manual/additional work. We have to rebuild our dependencies, and if the rebuilt dependencies have some non-determinism we have to spend time figuring out which of the dependencies is a problem and either fix it or just throw in the towel and trust one person's dependency to be correct.  "	Clarify
2108	15508232	Closed in favor of #2414 	Statement
2107	12133411	"@gavinandresen Can you close this issue, as you fixed it already. "	nAnswer
2106	11359320	(retracted ACK)  Can you give step-by-step gitian building commands; e.g. make_base_vm ?something? ... and which dependencies will we need to rebuild?  	Clarify
2106	11359441	"There's no way that ACK can mean you tested it, given the followup question...    ./bin/make-base-vm --suite precise --arch i386  Then rebuild Qt, Boost, and deps. "	Clarify
2106	11361964	mea culpa:  ACK code changes.  I'm making-base-vm now... `./bin/make-base-vm --suite precise --arch i386`  Fetch a new boost and qt for inputs: `cd inputs wget https://downloads.sourceforge.net/project/boost/boost/1.52.0/boost_1_52_0.tar.bz2 wget http://releases.qt-project.org/qt4/source/qt-everywhe	Clarify
2106	11381293	"Please update contrib/gitian-descriptors/README too (mention the new make-base-vm).  Successfully gitian-built HEAD plus this pull.  Running Bitcoin-Qt -testnet in a Virtual Box Windows XP service pack 3, 2GB memory VM:  + Installer works properly + Runs, starts syncing with the chain ... but then c"	Clarify
2106	11395155	"Results of running inside the mingw gdb (binary cross-compiled on my linux machine -g, then copied over):    https://gist.github.com/4289251  "	Other
2106	11401803	"@sipa If we have a new compiler ready with Gitian, #1674 should be tested also. Could you do a build with that integrated, as I guess pull-tester is not yet using the same compiler suite. "	Clarify
2106	11402905	"I suck at gitian (yes, I changed the yml to point to sipa's repository, but somehow can't get it to work, I also tried `leveldb17` instead of the hex id)      bin/gbuild --commit bitcoin=e65f01a ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml     fatal: ambiguous argument 'e65f01a': unknown r"	Clarify
2106	11404844	"@laanwj I've given up trying to make gitian fetch what I want by itself.  I have a wrapper script at http://bitcoin.sipa.be/builds/bitcoin-build.sh.txt, which injects the commit you ask for from a local repository into gitian. It also does some other things like singing and packaging. "	Clarify
2106	11408253	"@gavinandresen I added a commit that changes the Logv implementation (to something based on our util.cpp's strprintf). It's not very efficient, but maybe this works better (strange va_list semantics?). Can you try again? "	Clarify
2106	11413357	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5f710985e0ee97c70a5e67ec08e6d4023dda0ca1 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2106	11616723	"Okey dokey...  I've been working through this in two Windows virtual machines, one mingw32 and one mingw64, and having trouble with both-- mingw32 with the new code, mingw64 with building dependencies properly.  But, I think I'm one issue away from getting the mingw32 build working; see https://gist"	Clarify
2106	11639315	"@gavinandresen Added your patch to this pull request, rebasing it after removing my alternate Logv inplementation.  Is removing -O2 from the command line options accidental? "	Emphasis
2106	11639378	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/59d0df6124deb2be88ee1cd23b4add47b27728f8 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2106	11788925	"I'm currently taking a look at this and try to build it with my IDE... will report back later.  Edit: Got an error, during linking: ``d:/mingw/bin/../lib/gcc/mingw32/4.7.2/../../../../mingw32/bin/ld.exe: cannot find -ldbghelp``  @sipa I fetched your leveldb17 branch, does this include Gavins last co"	Clarify
2106	11791832	"@sipa Thanks for fixing. Can you now also remove that line, as we don't need Boost chrono with Boost 1.52. https://github.com/bitcoin/bitcoin/blob/master/bitcoin-qt.pro#L387  Edit: What is the main benefit of this pull, does it fix certain known issues with Windows or should it be faster? A few more"	Clarify
2106	11793304	@gavinandresen Done (hope you didn't mind me modifying your commit).  Did you see https://bitcointalk.org/index.php?topic=129861.msg1427066#msg1427066 ? 	Clarify
2106	11794378	"@sipa : don't mind at all; I was lazy and didn't compile Qt libraries (or Bitcoin-Qt) on my Windows VM.  RE: leveldb port using a ton of disk space on Windows:  yes, saw that, it makes me want to cry... I do now have a VM that can run the mingw gdb, so hopefully ""we"" can reproduce/fix it, but I'm no"	Clarify
2106	11794546	"Well, the filenames are blahblah.(null), and as those names are constructed using snprintf (see db/filename.cc), I'd say there's something wrong with snprintf still. Sure that #define _snprintf you changed was harmless? "	Clarify
2106	11794933	"@Diapolo  * The native windows backend for leveldb should be faster than the boost one.  * Keeping up with more recent (and less-patched) LevelDB versions seems a good idea for future extensibility. * A more recent VM image to build with also means a more recent compiler, and things like link-time o"	Clarify
2106	11795064	"Oh, that's the issue:  snprintf(%llu) won't work on 32-bit windows / mingw32 ...  (at least, I THINK that's the issue)  Needs more research thought; what did the other windows leveldb port do? "	Clarify
2106	11795387	"@gavinandresen It uses the exact same snprintf construction - as this is not code that is specific to the Windows port at all. Then again, we have no reason to assume that the issue reported in that forum post doesn't already exist in the current git master... "	nAnswer
2106	11795627	@gavinandresen Maybe the solution is just replacing the %llu's in the current leveldb code by macros like PRI64u in the core code. I hate maintaining such patched trees though... 	Clarify
2106	11797969	Summarizing discussion from IRC:  mingw and *printf and 64-bit formats are complicated; see:   http://sourceforge.net/project/shownotes.php?release_id=24832  Compiling leveldb -posix works for me in a 32-bit Win XP mingw32 environment. Patch:   https://gist.github.com/4431213  	Other
2106	11810805	@sipa I found http://blog.qt.digia.com/blog/2012/05/08/qt-commercial-support-weekly-19-how-to-write-your-own-static-library-with-qt-2/ which mentions a few things about static linking with Qt. Perhaps it's at least a little interesting for you.  @gavinandresen When did you update your commit? I'm as	Clarify
2106	11837510	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/13a5f3a808ec983e99b6b20d573f6653e7750197 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2106	11847111	I ran @sipa's latest gitian-compiled binary overnight in an XP VM on -testnet with no issues.  	nAnswer
2106	11870352	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/f6d8bf5093aad8c55a84e20a4c6b52a89cee1d0a for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2106	12099211	"Just a small feedback, I'm testing another IBD with this (emtpy datadir) and now have ~54000 blocks to download. Bitcoin-Qt is currently using ~745MB of RAM, which seems to be a quite high number. I'll take a look and see how this progresses now.  @sipa  28000 Blocks to go and now it's using ~1GB RA"	Clarify
2106	12202788	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/02fd69985969076f3cd0b2a645a56de6059138a5 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2106	12244345	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/8f79bccc36cbb7234da08db8ea22a6ce37f5d5a8 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2106	12422700	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/e813e14f68a844c0c6c364aa66f9040f06e56bfe for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2106	12639191	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/e813e14f68a844c0c6c364aa66f9040f06e56bfe for test log.  This pull does not merge cleanly onto current master "	nAnswer
2106	12659654	"closing, as #2198 is merged "	Statement
2105	11363246	Fixed in 0.7.2. 	Statement
2104	11343527	"Please add 'txids' to the lisreceivedbyaddress help text, and can you write up a little test plan for how this should be tested?  (e.g. expected results passing the 'minconf' param, if includeempty=true do you get [] for ""txids"" (preferred) or is that field just missing, etc). "	Clarify
2104	11403202	"Okay, no problem with help text, but I'm slightly unsure about tests: currently, for example, adding following tests to `rpc_rawparams` routine:          BOOST_CHECK_NO_THROW(r=CallRPC(""listreceivedbyaddress""));         BOOST_CHECK(r.get_array().empty());  does not result in failed test, though, of "	Clarify
2104	12599509	Still needs a test plan; see https://github.com/bitcoin/QA   for how to write one.  	Clarify
2104	12639502	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1a20469428ef623f4edc2cdac72aef001836536c for binaries and test log. "	nAnswer
2104	12665699	"@gavinandresen What is the preferred way to create test protocol for RPC calls? For most users the easiest way, in mu opinion, would be to use Debug window in Bitcoin-Qt. Or is it better to create some script (in e.g. Python) which does all necessary calls via network (purely automatically or may be"	Clarify
2104	12670884	"I think it would probably be best to give testers a script to follow.  Install THIS executable, then run it like THIS, then  open the Debug window and execute the following RPC commands: ....  If you write a Python script to try to test this, a bug in THAT code might hide a bug in your code. And tes"	Clarify
2104	12900822	This txids will grow indefinitely... not sure it's a good idea. 	Statement
2104	16020292	"ACK.  @luke-jr They shouldn't, as address reuse is discouraged. If you know you are reusing addresses, you're taking the performance penalty here too. "	Reject
2103	11322850	"The progress bar itself is meant to give a rough visual indication of the sync progress. We used to have a percentage in the progress bar in the past, but it was removed and replaced by a number of blocks because the percentage gave a sense of precision that is not there. "	nAnswer
2103	11323386	"IMHO the percentage really helps the user to estimate the pending blocks, the number is too messy. Check the example:  http://i.imgur.com/QF0GP.png "	nAnswer
2103	11323476	"Another thing is that when the client is restarted after some time of inactivity, it will have fallen a few blocks behind but always show 99.X% done, which is confusing (99% of what?). "	Other
2103	11323585	"I support @laanwj, no changes there, as we had more than 1 discussion on that progressbar. I consider the current look and feel as the best compromise. "	nAnswer
2103	11368144	"The 99% issue then must be present at:  https://github.com/bitcoin/bitcoin/blob/master/src/qt/bitcoingui.cpp#L533  Probably it gets calculated wrongly when the client continues syncing.  Anyway, closing it. "	Clarify
2103	11369569	"No, it doesn't get computed wrongly. The underlying (psychological) issue is that the progress bar makes the sync look like a normal linear download of a fixed-size file in the mind of users. Adding a percentage adds to this illusion.  Even though in reality it fetches a growing tree structure of un"	Clarify
2103	12900654	"Maybe using a logarithm for the visual bar would make sense. For text, counting the nines might work: ""4 nines up to date!"" :P "	Clarify
2103	15590921	"Forgive me if this is a repeat, but I'm still new here. :-)  Did anyone ever talk about just starting the progress bar over at the left whenever a resync of more than two or three blocks has to happen?  If someone has Bitcoin-Qt running continuously, I don't think it can get out of sync more than tw"	Clarify
2103	15591580	"Yes, that has been discussed many times. It has even been implemented for a while, because I thought it was a good idea back then, but it made users complain that the sync had restarted from scratch. So it was reverted. "	Clarify
2103	15592612	"@L2G The next version will not meassure in blocks anymore on the progressbar anyway, it is a time-based solution, that tells how many weeks, days, hours your client is behing the network. It will be included in 0.8.X.  @laanwj Sorry to be OT, but any news about the refactorings or my small open pull"	Clarify
2103	15679141	"@laanwj, is that patch that you talked about still around somewhere? I'd love to play with it! "	Emphasis
2103	15679838	"@L2G There is probably no feature that has caused as much discussion as that progress bar already. Different systems have been tried already, and been reverted. IMHO, it just shows that a progress bar is not the correct way to represent this information. Current git head shows ""N days behind"" for ex"	Clarify
2103	15699154	"All I am talking about is this:  (1) The app notices that data is out of sync. (2) It displays a progress bar that starts empty. (3) It syncs up and allows the progress bar to move from left to right. (4) When it is done, it hides the progress bar again.  It doesn't matter to me whether it counts bl"	Clarify
2103	15699175	"And if it is a controversial feature... why not just default to having it turned off, and give the user the option of turning it on? "	nAnswer
2103	15699209	"I believe that adding an option, which must be maintained, tested, etc just to control how a confusing progress indicator is displayed would not be a good use of time or testing resources. "	Clarify
2103	15701957	"I probably came off sounding like a snot about this, and I apologize. I won't belabor the idea. "	Reject
2102	11349782	ACK 	Clarify
2102	11351517	Anything else that you'd like to see changed or added in it? 	ynQuestion
2102	11355881	"ACK means ""acknowledged, looks good""  The QA information is obsolete, but I think we should pull your changes and then make further edits.  "	Clarify
2102	11358802	Sounds great. 	Statement
2102	11413513	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/67068a13ec07e89c8a0c95be209ea54570066806 for binaries and test log. "	nAnswer
2102	11674888	ACK 	Clarify
2102	11786794	ACK 	Clarify
2102	12237308	"Sorry, I forgot this pull request existed when I rewrote the README.md a little while ago.  Closing this, because at this point it should be easier to start from the README.md in the tree rather than this pull.  "	Clarify
2102	12354932	Alrighty. I'll try to get to it at some point in the next day or two. 	Clarify
2100	11317423	"$13 is a decrease from a previous $25, which used 0.01 BTC COIN_DUST-equivalent just fine. "	nAnswer
2100	11379926	"Meh.  Lets have some offline discussion.  Having a back and forth argument in a pull request isn't going to be as productive as chatting on IRC some, when I think there is probably already agreement on this even if we don't know it yet. "	Clarify
2100	11413590	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/477acd1a11e238caf30c180c623f0999de26a2ac for binaries and test log. "	nAnswer
2100	11413669	"FWIW, I wasn't actually making an argument against the pullreq, just posting a (devil's advocate style) comment. "	nAnswer
2100	12639796	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/477acd1a11e238caf30c180c623f0999de26a2ac for binaries and test log. "	nAnswer
2100	17080791	Superceded by #2577  	System
2099	11317348	"Looks good to me. Note, however, that ultraprune currently has problems in some cases with hard linked files. IMO those should be fixed regardless, so not a blocker for this. "	Clarify
2099	11317554	@luke-jr I only know of problems with read-only files. Whether a file is hard-linked shouldn't be even be observable by applications (except for the output of stat()). 	Clarify
2099	11356830	"This is definitely the easiest solution imaginable, assuming it works for Windows users.  Importing instead of reindexing is probably sometimes a better choice (it helps with heavily fragmented block files, for example, and results in the intended smaller files), but I suppose those cases can be han"	Clarify
2099	11413599	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/662bdaa9c36c0b0da29edd82fa9bebbee9a1ecaa for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
2099	11420113	Thanks @sipa -- updated to use string().c_str() and rebased.  	Clarify
2099	11420314	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f4445f9982a760869c430f3d4b1302f7eb509bd8 for binaries and test log. "	nAnswer
2099	11646785	"If the linking fails, can it copy or move the file instead rather than download from the genesis block? "	Other
2099	11651295	I wonder how difficult it would be to have the code just use the old blk000?.dat files directly when they exist. 	Clarify
2099	11652244	"The reason to move to a new naming scheme was:  * to have them in a separate directory, so they can be moved more easily to a different volume  * to make pruning easier eventually (as only being able to choose storage with 2 GiB accuracy is a bit crude).  Hardlinking removes that second advantage, b"	Clarify
2099	11652478	"I was thinking more like ""if blk000?.dat exist, start new files with the next number. when reading, if the blk0000?.dat is missing, check blk000?.dat"" so the files would be stored as the same filenum :) "	Clarify
2099	11674879	"In case hardlinking fails, I don't think there's any harm in adding the found source files automatically to the list of files to be -loadblock='ed. They will be downloaded anyway otherwise, and loadblock happens in a background thread anyway, so it can only speed things up. "	Clarify
2099	11998550	"RE: doing something smart if the hardlink fails:  I'm not planning on testing that, and I don't believe in adding untested code even if it should OBVIOUSLY work.  If somebody wants to implement and test that as a separate pull, great, but it is not on my priority list because it would benefit so few"	Clarify
2099	12061200	Test plan with testing bounties:   https://github.com/gavinandresen/QA/blob/master/HardLinksUpgrade.md  First bounty claimed. 	Clarify
2099	12062998	"@gavinandresen Can you explain in the ""build binaries yourself"" case which branch we need to build? The main ""bitcoin"" repository does not appear to contain 0.8 related stuff. "	Clarify
2099	12064286	"@Goonie from the branch this pull request refers to. bitcoin/bitcoin.git master does in fact contain the code that will become 0.8 (it's marked ""0.7.99"" now). "	Clarify
2099	12137312	"The hard-linking does not appear to work on my system (Ubuntu 12.10 64bit). In two different cases, my .bitcoin directory grew from 6.3 GB to nearly 12 GB and my df (disk free) significant reduced. The files in blocks are of different size than the blk*.dat files and have different inode numbers.  T"	Clarify
2099	12141832	"@Goonie Very strange. Which commit did you use (bitcoin reports this in the version string, see the first debug.log line printed) "	Clarify
2099	12142385	@sipa 2013-01-10 22:20:55 Bitcoin version v0.7.1-297-g429915b-beta (2013-01-06 07:26:43 -0800)  Maybe I should mention that I was using the Ubuntu package (0.7.2-quantal2) before. which is a little bit different to the official build in its dependencies. 	Clarify
2099	12143160	"@Goonie I'm afraid I confused you. You built from git head, it seems. This page is a pull request: a change requested to be merged in git head, but not yet there. The branch to pull from is in gavin's repository (https://github.com/gavinandresen/bitcoin-git.git), in branch blkfile_upgrade.  It's als"	Clarify
2099	12147250	"@sipa Ok, this time I'm using v0.7.1-269-gf4445f9-beta. It looks like its using hard links in the blocks directory. It managed to reindex about 211700 blocks in 80 minutes. Then suddenly the status bar text disappeared. From the icons on the lower right and from debug.log I can tell its still accept"	Clarify
2099	12151231	"@sipa Another issue: the ""Show QR code"" context menu option silently fails. I remember it was working before because I was using QR codes to scan with Bitcoin Wallet. "	Clarify
2099	12151573	@Goonie : context menu breaking wouldn't be a @sipa bug-- can you open a new issue about that?  	Clarify
2099	12159432	"@Goonie The GUI is using an estimated block count, which it get's from the connected nodes and the last checkpoint, to be able to compute a ""Blocks left"" number and to display the progressbar. If you have more blocks than the estimated block count there is nothing to predict anymore and so the progr"	Clarify
2099	12197801	ACK 	Clarify
2098	11304647	"Why do you keep insisting on having all block files in a single continuous chunk? I implemented pre-allocating specifically to address the excessive fragmentation the previous mechanism seemed to cause on some platform, but it's unreasonable to want every file to only be one chunk.  I'll consider th"	Clarify
2098	11307634	"Because I have the code and it's working fine, as it does, what it is intended for. Why is something unreasonable, if it's possible to do via some rather simple OS-calls?  I added some code to print to the log when ReadFromDisk() and WriteToDisk() are called and at least ReadFromDisk() seems rather "	Clarify
2098	11308362	NACK. 88 more lines of code to maintain is a greater cost than the potential benefit here.  	Statement
2098	11308525	"First of all, dealing with fragmentation is a reasonable request. It's not Windows-specific by the way - if you don't allocate a file in one go, it will lead to fragmentation on just about every system and every filesystem. Pre-allocation is the solution to this, and it's already implemented. If Win"	Clarify
2098	11308767	"@sipa At least you try to clarify your position... though I don't agree on the 100 fragments part. The undofile size is a reasonable comment, but for blockfiles a to be filled 128MB file is clearly not wasted space. I'll keep using this with my local build, but guess I won't create a pull for that C"	Clarify
2098	11331735	"@Diapolo my suggestion:   1) implement AllocateFileRange for Windows (just inside the function body, using macros) that doesn't try to do more than that function intends.   2) If, after benchmarking with 1) you can still observe a noticable slowdown, we can increase the chunk size for Windows - or m"	Clarify
2096	11294808	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/303b0009dc4ef3dbe4d9caabfe94798ee51579d4 for binaries and test log. "	nAnswer
2096	11297400	ACK 	Clarify
2096	11322906	ACK 	Clarify
2096	11356942	ACK 	Clarify
2095	11282453	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6a3aef39e70e6da81cbd2484c1721d44f9b02d9a for binaries and test log. "	nAnswer
2095	11283241	"Yes good idea, ACK "	yAnswer
2095	11289939	"Yeah, good idea, ACK. "	Accept
2094	11280307	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/333df361162c6440257edf59a907d5d5e8b91e49 for binaries and test log. "	nAnswer
2094	11281300	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8672bd3ba22664c8ee061f2876c174120bf27f56 for binaries and test log. "	nAnswer
2093	26784797	"Not sure if these still apply, lots has changed in logging in the last few months.  "	Clarify
2093	27958831	"This is a result of how multi-line log messages are handled (as CTxIn::ToString() returns multiple lines). I'm not sure that every line should be prefixed with a new timestamp in this case as it's only one message, so prefixing only the first line makes sense in a way.  "	Clarify
2092	11289909	"Your valuable input is most likely not important enough to result in patches too soon. I just want to say, if you are able to code, your best bet is to create a pull-request for such things :). As I said, thanks for the ideas anyway. "	Clarify
2092	11290105	"I've wondered myself why it uses that strange US format, but ti seems it just uses strftime's %x, which outputs ""The preferred date representation for the current locale without the time."". I've probably set my locale to something US-like. I wouldn't mind changing it to a standard format, though. "	Clarify
2092	11295854	"The US prefers stupid :( No idea which LC_TIME might do ISO8601, doubt anyone would know to set it, and it wouldn't conform anyways because only part of the string (the %x) is covered by LC_TIME, the rest is hardcoded such that it won't be ISO8601. This should be most of them... find -sE . \! -regex"	Clarify
2092	11363275	Fix merged for 0.8.  	Reject
2090	11233779	Seems it's a warning during compilation of the tests. Not really an issue in itself.  Do the tests run OK?  	nAnswer
2090	11234368	Just fyi in case bitcoin's usage would warrant consulting with boost to fix. I trimmed out the much noisier intermediate instantiation traces for these.  Yes they do. 	Statement
2089	11211261	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6ede3440c96920062625b9b044d227632944a80c for binaries and test log. "	nAnswer
2089	11211916	"I don't think disallowing IPv4 local connections (e.g. from mining daemons and monitoring tools) is a desired effect of onlynet.  I suspect this will also block all onion peers even when onlynet tor, though I haven't actually tried it.  "	Clarify
2089	11216131	"IMHO when we have a switch to block certain networks, this should include ALL connections (in- and outbound). What did we intend with ``-onlynet`` otherwise?  If people really want to explicitly allow IPv4 connections, they can use ``-bind`` (remember #1778, which is for such cases). As this network"	Clarify
2089	11216186	But the problem is that incoming onion connections come in as an IPv4 connection from 127.0.0.1. So -onlynet=tor would block incoming onion connections... 	Statement
2089	11216236	"Right, so the user could just add -bind=127.0.0.1 :).  This is from the commit message of #1778: ``usage case: specify -bind=127.0.0.1 -onlynet=""Tor"" to allow incoming connections to a Tor hidden service, but still don't allow other IPv4 nodes to connect / get connected`` "	nAnswer
2089	11216285	Yes. but this very commit will still block such connections. 	Clarify
2089	11216323	"Then it's not well implemented by me, I just want to know if the idea from the pull is worth further work on it :D. "	nAnswer
2089	11216363	"In general, there is no knowing what network an incoming connections comes from (though perhaps some special cases can be made, meh). "	nAnswer
2089	11216474	"I'm not sure if that was a yes it's worth further work or a no, we (core devs) don't like the general idea. "	nAnswer
2089	11216569	"I like the idea if it can be done without resulting in surprising misbehavior, though I'm not convinced that this is possible. :) "	nAnswer
2089	11216690	"Perhaps if I'm thinking a few minutes longer and come to the same conclusion I'll just close this, but as always I like the valuable feedback :). "	Clarify
2089	11307879	As this just seems to cause weird behaviour I'll close this for now ... perhaps in the future we can re-think the idea and implementation. 	Clarify
2088	11210545	Current help-text for -dnsseed is ``Find peers using DNS lookup (default: 1 unless -connect)``. You should indeed test with current master or at least 0.7.1 or 0.7.2 RC to verify that problem is current.  This code is used to check if ThreadDNSAddressSeed should be started:  <pre>     if (!GetBoolAr	Clarify
2088	11210988	"0.6.x is quite old now is there a particular reason you're reporting against it?  (As diapolo points out, the behavior you're writing about is fixed in 0.7). Since this area of network handling was completely rewritten reports against old versions here are less useful than typical.  "	Clarify
2088	11232849	"There were some recent commits in 0.6.x leading to thought it was still active. 0.7.x seems ok re ticket, will migrate.  These are places where 9050 still shows up. Don't know whether these are defaults if unspecified?, hardcoded? or what? Hope they are overrideable to the user's actual port.  ./src"	Clarify
2088	11263386	"-proxy and -tor allow to specify the used port, so 9050 is not ""hardcoded"" AFAIK. "	Reject
2087	11198708	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5d32d3f8cd14f259cea92dfb5df07ead33b4bfb7 for binaries and test log. "	nAnswer
2087	11207734	ACK  	Clarify
2087	11212380	"I don't see any harm in merging to HEAD (not 0.7.2) now, as 0.8 is still a long way off. "	Statement
2087	11216326	ACK 	Clarify
2087	11216414	"I created a 0.7.2 branch, with:  0.7.2rc2 a commit so gitian-descriptors point to github instead of gitorious this commit, to checkpoint @ 210,000  I'm in the middle of sanity testing it by doing a complete blockchain re-download. If it is sane, and when y'all are comfortable the checkpoint is burie"	Clarify
2087	11216498	"One difficulty adjustment being 2016 blocks, e.g. 212016, which should be in a couple days. "	Other
2087	11356960	Which would be now. 	Statement
2085	11210704	"Did your PC crash while Bitcoin was running? Which OS, which client version? "	Other
2083	11169935	"Are you sure the message was not telling:  <pre> Error initializing database environment C:\documents and settings\administrator\application data\bitcoin! To recover, BACKUP THAT DIRECTORY, then remove everything from it except for wallet.dat. </pre>  Btw. please close the other double-post, thanks."	Other
2083	11170171	"The error message can hardly be any clearer in what you need to do, can it? "	ynQuestion
2083	11170269	"yes, this is what it is saying  Error initializing database environment and settings\administrator\application data\bitcoin\database! To recover,BACKUP THAT DIRECTORY,then remove everything from it except for wallet.dat. "	Emphasis
2083	16057238	"The message is clear enough, but it doesn't explain what happened. (For me, it was after migrating my stuff to a new machine and downloading and running the 64-bit bitcoin-qt 0.8.1.) I'd *really* rather not reinitialize my blockchain, so a hint as to what has happened would be great.  ETA: I found m"	Clarify
2082	26985598	"Detachdb doesn't exist anymore, closing "	Reject
2081	11141704	"ugh, duplicate. "	Statement
2080	11103468	Now you just need to merge your 2 commits into one. 	Statement
2080	11104255	"Thank you for the feedback, I just rebased so I think it's just one commit now with proper spacing. "	Statement
2080	11110626	"Now fix the commit message, and you're golden. ACK on the code change. "	Clarify
2080	11115857	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/331bc98a7fb0aa5bee965faa8cf1a58868d28558 for binaries and test log. "	nAnswer
2080	11115869	"I removed the mention of the tabs and spaces from the commit, I assume that is what was wrong with the message.  Thanks for the ACK. "	whQuestion
2080	11118428	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/44051af1a87a5fb8f4e88442c0eb64a1b4ecf2e6 for binaries and test log. "	nAnswer
2078	11076805	I just think this would fit much better into the bitcointalk forums :). 	Clarify
2078	11077045	"Bitcoin was never meant to solve the unfairness, and inequality inherent in capitalism. It supports an economy but is completely neutral as to what that economy is.  You know what, instead of proposing a vague idea, work it out in detail, make an implementation, experiment and see how it works. Like"	Clarify
2078	11091409	"Diapolo and laanwj thanks for your feedback, I agree with both. "	Reject
2078	11091492	Also note Bitcoin was never meant to be anonymous either. 	Clarify
2077	11058578	"This is a known side effect of the new database layout in v0.8. There is no global transaction index anyone, only one for unspent transactions, since that is all that is needed for normal operation. The intention is to add a full index, but make it optional for people who need getrawtransaction for "	nAnswer
2077	11058774	"Oh, I did not know that, but it obviously makes perfect sense when using the client as a wallet. I am using this particular instance as a transaction and block sniffer and as such need to have all the transaction data.  I assume that, since I don't have anything on this instance's wallet, as wallets"	Clarify
2077	11059961	"It has nothing to do with wallets - the block validation system and the wallet system are quite separate. Wallets keep whatever information they need themselves.  It's just how the new validation engine is designed: there is never need for more information than unspent transactions outputs, so that "	Clarify
2077	11060269	"Ok, so when parsing and validating a block the client does what it needs to do and then stores the unspent transactions for validating future blocks only, and when these are marked as spent they get removed from the database. Is this correct?  Not removing spent transactions would break the validati"	Clarify
2077	11060888	"There is currently *NO* transaction index at all. The fact that getrawtransaction works, is because we can use the UTXO database to find (for unspent transaction) the confirmations of the transaction, calculate which height that corresponds to, search the block index for the disk location of the blo"	Clarify
2077	11061011	"Fair enough, thanks for all the explaining. I might get my hands dirty on the transaction index, but I'm well served with 0.7.1 for now, just wanted to get some testing on the development version. "	Clarify
2077	14650653	"How about another approach for getting the raw transactions through the API when the block is known to the client:  Add third optional ""blockhash"" parameter to ""getrawtransaction"". The parameter could be used to specify the block which is used to look up the raw transaction.  Or alternatively: Intro"	Clarify
2077	15515059	Hi!  Blockhash parameter on getrawtransaction is good help for any transaction inspector. Regards! 	ynQuestion
2077	15625349	Hi! I generated a commit usefull for me. I sent a pull request https://github.com/bitcoin/bitcoin/pull/2421 Regards! 	Emphasis
2076	11054856	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bd011eafb3b4caf470ac2def2ea321e772267dec for binaries and test log. "	nAnswer
2076	11297005	"My default setting on command line flags tends to be ""avoid, unless necessary""  Is there a case where we would _need_ a flag?  Ideally the default should just make sense, and users should not need to change anything. "	Clarify
2076	11297344	"I don't think it should be a flag, but maybe a 7-day strict boundary between relay / norelay is too deterministic. I don't think we really want to make the network forget everything that's more than a week ago - except for crawlers, node connections are just not tried frequently enough to know that "	Clarify
2076	11299459	"What are the value of old addresses, versus cost?  Most other P2P networks and DHTs have a far shorter lifespan for addresses.  As my testing showed, the _large majority_ of addresses we pass to other peers are 100% useless. "	Clarify
2076	11299514	"Just saying there is a difference between ""not having seen in the last week"" and ""having tried the last week and failed"".  IIRC there are more timestamps available to make a good decision. "	Clarify
2076	12640083	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bd011eafb3b4caf470ac2def2ea321e772267dec for binaries and test log. "	nAnswer
2076	16084870	"Closing.  Not much interest, and comments suggest a desire for something else. "	Reject
2075	11037936	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/56e396ce0d7b9299a03f0132c49150335e503ee2 for binaries and test log. "	nAnswer
2075	11051683	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/35cda0806a0d0fa780c7435a450ad50da6b5bc9b for binaries and test log. "	nAnswer
2075	11094711	"Thanks for the review, Diapolo. Latest commit closes all of that except the pass-by-reference question you posed. "	Reject
2075	11116881	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b62f6de0a2402032be7de3de99713346fae7acc4 for binaries and test log. "	nAnswer
2075	11150257	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f342af9bfcfb50a7951fd1882410ebe791deccba for binaries and test log. "	nAnswer
2075	11151650	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1668147ff31bfb36c680e4d4a8aff066fc288b6d for binaries and test log. "	nAnswer
2075	11152248	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a16766870ea277f613ec1a3e6e3e7c65c44eee59 for binaries and test log. "	nAnswer
2075	11164269	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/801be244dd41790b522fe464f32dea48241fe549 for binaries and test log. "	nAnswer
2075	11655323	Nice effort. The Wallet interface could certainly use cleaning up.  I would like to eventually merge this with https://github.com/bitcoin/bitcoin/pull/2124 and https://github.com/bitcoin/bitcoin/pull/2121 	Statement
2075	11667156	Thanks. I'm going to leave some comments over there. 	Clarify
2075	11674807	"Looks good in general. Instead of comments in the code about what is supposed to be done, I'd rather see a commit that actually does it. On the other hand, this is probably easier to explain what you're about to do, and get comments without actually coding it.  One nit: I don't like the wallet code "	Clarify
2075	11675105	"Hi Pieter, thanks for the feedback. Tagging @CodeShark here too.  I laid off on turning comments into code simply for want of more feedback. Not too much sense in plowing ahead with a raft of changes which will get rejected for reasons I hadn't anticipated.  I think your nit is a serious issue, actu"	Clarify
2075	11676296	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/c7b1086d9f79722a7f4749cd0b924dff708b3c3a for test log.  This pull does not merge cleanly onto current master "	nAnswer
2075	11687122	something tells me i've failed to do my first rebasing properly. Anyone got an education link that applies to this project's workflow? 	Statement
2075	11688567	To which branch did you intend to rebase?  To rebase to current master I normaly do this: git fetch upstream -p git rebase upstream git push origin %BRANCHNAME% -f 	Clarify
2075	11694118	Closing this down in favor of https://github.com/bitcoin/bitcoin/pull/2130 	Statement
2075	11694427	"You know you can push to a branch that is already pull-requested, to have the pull request updated? "	ynQuestion
2075	11694469	"*mumble* I guess. I'm not over the learning curve in using git yet, by any means. In this case I wanted to rebase cleanly onto bitcoin/bitcoin, screwed it up here, so decided to try fresh on the new branch walletencap3. "	nAnswer
2074	11021134	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/69e42e7d03fe7115b345ee0cd4f2a869941f4bbc for binaries and test log. "	nAnswer
2074	11034582	"ACK  Edit: @sipa Can you please take a look at #2063 and #2068 as I consider them ""minor"", too :). "	Clarify
2074	11062864	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f00687beada5622efc9b565aa5cee84659e13c0f for binaries and test log. "	nAnswer
2074	11117084	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3fb9b99cca390e8ac5838c03363c46a99396e463 for binaries and test log. "	nAnswer
2074	11120291	ACK 	Clarify
2073	11015669	If you can change that to a little more descriptive commit message I'm sure that's an easy ACK :). ``Update makefile.mingw to use libleveldb.a not .lib`` would be a suiting title I think. 	Clarify
2073	11016501	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/679131b235aca28bbe417b13fb0aacf6f4ff4dd8 for binaries and test log. "	nAnswer
2072	11007060	"Please <b>never ever add a DEP exception for Bitcoin-Qt</b> as we designed it to be compatible with that security technique and it's a good thing to have. The DEP crash is caused by some problem with the client but could aswell have saved you, by mitigating an attack on your client (which is most li"	Other
2072	11012181	"i dowloaded bitcoin qt from http://bitcoin.org/ the win ver, and firt time running it, i started it and it was getting all the stuff it needs, next day i got error "	Clarify
2072	11012253	is the bitcoin-0.7.1-win32 ver 	Statement
2072	11013233	"unistaled and reintal, have same prblm "	Statement
2072	11013883	"You need to answer my question from above, did your PC crash while the client was running? You could also upload the debug.log somewhere, so we can take a look. If you don't know what the debug.log is, please use your favorite search-engine to find out. "	Clarify
2072	11014024	"yes maybe my pc crashe when running bitcoin, cos sometime it get far to hot, the debug log? well only ran logcat or my mobile android, let me chk what i can find to my pc "	Clarify
2072	11014241	but if u could point me to a debugin log tool for win sure it will be faster :) 	Clarify
2072	11014716	Just search for a debug.log file in the clients data-directory. 	Statement
2072	11014719	"ok, i got it running with my ollyDbg, i have the log, will that work for you? what me to copy paste the log data here o prefer a file?  "	Emphasis
2072	11014878	"well on the client, the only data directory will be: C:\Program Files (x86)\Bitcoin\src\test\data but inside only have some .json files but cant fine any debug.log  "	Other
2072	11014979	"If the client was running and crashed with the error of this issue, there IS a debug.log! Perhaps in ``%USERPROFILE%\AppData\Roaming\Bitcoin``. "	nAnswer
2072	11014994	"o sory my ignorance there, thx a lot "	Statement
2072	11015064	"og og it, kinda large file, whant me to dump it plain in here or send a file somehow  "	nAnswer
2072	11015230	"I refuse to aid any more, if you are not reading my comments a little more thoroughly... I said upload it somewhere (eg. pastebin). "	Clarify
2072	11015397	"sry, about that, didnt saw that part, going to pastebin, and thx 4 the help "	Clarify
2072	11015522	here it is: http://pastebin.com/i7Zrbrpx 	ynQuestion
2072	11040435	"thx 4 the help, ye i have nothing in my wallet. "	Statement
2071	11006931	"I'm very much in favor of encapsulating the actual logic for many RPC methods to where it belongs. However, that doesn't mean that the conversion to JSON should happen there.  For example, if CWallet and CWalletTx had a cleaner interface for requesting information, this could reduce duplication betw"	Clarify
2071	11007093	"Yeah, I'm going to back out the JSON stuff. My eventual goal for this is to make CWallet a fully-functional first-class object, hide CWalletDB entirely, and have the RPC methods talking strictly to the wallet object. In addition to the ""standard"" benefits of proper encapsulation, this will eventuall"	Reject
2071	11007249	"@mikegogulski Sounds great, I think that's what we want. Note that there are some plans to move to another database backend for the wallets. Just so you don't waste effort on code that's going to be thrown out anyway. "	Clarify
2071	11007371	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/82afcf6b0f6b6f286dca8d5444c43997bb602e1b for binaries and test log. "	nAnswer
2071	11008492	"Got it. I think it should be no problem, since the model I'm stumbling toward is like: ``` consumer(e.g. bitcoind, bitcoin-qt, others)->walletRPCinterface->walletobject->... ->...walletdbobject->nativedbobject ->...blockchainRPCinterface->blockchainobject->whatever ``` where walletRPCinterface is th"	Clarify
2070	11006929	closing per Sipa's other NAK 	Statement
2070	11007886	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/acda14866a6ea2c4695f8bbc583bff8a63d2dcc7 for binaries and test log. "	nAnswer
2069	11006664	NAK. I don't think the wallet code should depend on a JSON library. 	Statement
2069	11006902	"Hm, true. "	Accept
2069	11008399	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bf484901c9ab74f4b93f014660728ae63f4a2710 for binaries and test log. "	nAnswer
2068	10986870	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d29a6037cf283503646a3d02a1e46d507882b6e4 for binaries and test log. "	nAnswer
2068	10987439	This seems like a much better way to do it. 	Statement
2068	11042086	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fa45c26a0e5d3597814cef5ebd64e3db1b3b017d for binaries and test log. "	nAnswer
2068	11063173	ACK 	Clarify
2068	11075406	ACK 	Clarify
2067	10986248	"You can remove anything from the address book you want. The address book contains send-to addresses, not receiving addresses. Deleting them does not cause any harm to the wallet itself.  So I don't understand the second point, ""if one of your receive coins addresses is in your Address book, it is po"	Clarify
2067	10987161	"Yep the wallet is fine... BUT one  ""receiving address went missing""   All I know is , that i had the address book open and I was deleting two addresses I did not need, but on selecting one then pressing the delete, there was a delay and when it finally completed 3 were missing. One of which was a ""l"	Clarify
2066	10952201	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e66911cc20c6bcd9200a39c6c3a4027b3102a8ce for binaries and test log. "	nAnswer
2066	11014629	"@laanwj I reverted that reference change, it's now the pointer again as we know that is working :). "	Clarify
2066	11015553	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/15d8ff20294d20e6b11ec54450943eb7c5282ae0 for binaries and test log. "	nAnswer
2066	11075503	ACK  	Clarify
2065	10951421	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3675588a30eae39921afbf00f32f86913d5d2bd5 for binaries and test log. "	nAnswer
2064	10948859	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0af5366f0162b19232db300dd218e8c0c280bb39 for binaries and test log. "	nAnswer
2064	10975201	ACK 	Clarify
2063	10946411	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a8a4b9673e1f4acabe835a692840c54c50862449 for binaries and test log. "	nAnswer
2063	11040452	ACK 	Clarify
2062	10935647	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/484dee31ba1c87aada77b306de2ea450d153069a for binaries and test log. "	nAnswer
2062	11117289	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/89b7019be884962729784ab326c46be88ed4784c for binaries and test log. "	nAnswer
2062	11127207	I've tested this about a zillion times now. ACK. 	Clarify
2061	10938112	"I don't think the 20% speedup is worth the extra code complexity. I could be convinced if there are some EC crypto experts hanging around who will chime in and say ""oh, yeah, that's an obvious optimization and implementation looks correct....""  It seems to me that this type of low-level speedup woul"	Clarify
2061	10938336	"Hal claims that it can be increased to 40% with some other changes, but they weren't immediately clear to me. I think Pieter's plan was to get this in (as it has the structural changes) and then talk to an EC expert he may have access to about doing the rest. That might satisfy both your concerns.  "	Clarify
2061	10941306	I was a little over eager in my last claim there: syncing from start to 210000 the current parallel checking branch without hal is 23:58  while without checkpoints but with hal it's 37:10 for me (47:21 hal-less). 	Clarify
2061	11075455	"If we decide to include low-level crypto code like this, we could just as well include all the ECDSA code (for the particular curve that we use) so that we can build with OpenSSL built without ECDSA.  "	Clarify
2061	11159798	@laanwj I believe there is quite some non-ECDSA-specific EC code left in OpenSSL that would need to be included in that case too... 	Clarify
2061	11174025	"Refactored the optimized algorithm into an almost exact copy of OpenSSL's own ecdsa_do_verify() function, but using an optimized version of EC_POINT_mul(). "	Clarify
2061	11223375	"New commit: if compiled with -DVERIFY_OPTIMIZED_SECP256K1, checks will be compiled in that compare the generic OpenSSL code with the specialized one. It's not enabled by default, but I verified it for the entire current block chain & unit tests. "	Reject
2061	11308007	@sipa This pull can be tested independently from your other one with parallel verification or do they depend on eachother? 	ynQuestion
2061	11308287	They're independent. 	Statement
2061	11406843	Added verification code for checking k == k1 + lambda*k2 and for checking p2 == lambda*p. Verified against unit tests and testnet.  EDIT: and mainnet now as well. 	Clarify
2061	11675195	New commit: implemented a small improvement suggested by Hal. 	nAnswer
2061	12661868	"Added a commit to build the core .o files for tests separately, and add - DVERIFY_OPTIMIZED_SECP256K1 to them, so the unit tests now compare the internal values in ECDSA verification between optimized and non-optimized code. "	nAnswer
2061	12874245	"Added a fuzzer that compares intermediate values during validation in optimized and non-optimized code, for message hashes with a random 1-bit difference for every real check. "	Reject
2061	12874862	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1f369d512b5b5c66e9623d2eaf9692eee9b11d36 for binaries and test log. "	nAnswer
2061	13017997	It would be good if someone checks this new implementation against timing attacks. Systems that automatically sign transactions (like exchanges) may be vulnerable to key recovery using timing attacks. 	Clarify
2061	13018325	This code isn't used for signing. 	Statement
2061	13020838	"Ok, I will check against specially crafted pubkeys/signatures in a few weeks. I've found bugs in other implementations. "	Clarify
2061	13022367	@SergioDemianLerner: thanks! 	Emphasis
2061	14015691	Rebased. 	System
2061	14394283	"Added precomputation of G (doable as a separate pull if necessary), which improves verify performance by 2-3% (consistently), and turn off Hal's optimizations by default; -turbo turns them on. "	Clarify
2061	17363862	"How do these pulls get tagged updated, when I see no changes here? Rebase? "	nAnswer
2061	17364138	"I don't intend to keep this updated, as I'm working on a separately library that implements ECDSA directly, with much more optimizations than this pullreq does. See http://github.com/sipa/secp256k1 "	nAnswer
2061	17364435	"You missunderstood my comment, this pull or issue was listed updated for me and I asked what made Github think it was updated. I think your work on this is great, but my intention was just to understand Github here. "	Clarify
2061	17364528	"@Diapolo Github hiccup, I guess. "	Statement
2060	10932035	"Benchmark result: on my system (an i7-2670QM), a reindex of the first 210000 blocks, with script verification enabled everywhere, and -dbcache=900:  * HEAD: 3h22m  * -par=4: 1h14m  With -par=4, CPU usage is around 350% (though the first ~100000 blocks cause lower CPU usage)  "	Other
2060	10979285	* cleaned up the code * moved the job queue implementation to checkqueue.h * added comments * enabled by default (-par=0 autodetects) 	Clarify
2060	10988492	"I love your comments, great work here. I still need to try out the code though :). "	Clarify
2060	11083829	Nice! 	Statement
2060	11084354	"I've been doing some benchmark, and it seems the contention on the (single) lock protecting the queue makes the throughput and contention overhead go rather high when using too many threads. At least extrapolating from what I see on my system. more than 8 or 16 threads will probably cause significan"	Clarify
2060	11117780	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8f706026e6dee8e38cca0d17acbfc75107d2dcba for binaries and test log. "	nAnswer
2060	11164828	"Changes: * Access to the script check queue is now piped through a RAII CScriptCheckQueueControl, which guarantees the queue is fully processed before continuing * Print the number of threads used in debug.log * Don't store block validation results in signature cache (only mempool transactions are s"	Clarify
2060	11164998	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5c713c9daa1128d407d9c483d1abae9bde6d48ad for binaries and test log. "	nAnswer
2060	11413748	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2f3ae3eebd979c1c4c7f43d9cfbe95f61db93ec6 for binaries and test log. "	nAnswer
2060	11539429	"Given that any non-trivial code has at least one bug (see http://www.murphys-laws.com/murphy/murphy-computer.html), this is indeed bad news :( "	Other
2060	11980472	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ef0f422519de4a3ce47d923e5f8f90cd12349f3e for binaries and test log. "	nAnswer
2060	12394056	"ACK.  Benchmark results on my mac, testing by doing a fresh sync of the -testnet blockchain pulled over the LAN:  Without this pull: 32-bit compile: 270 seconds 64-bit compile: 180 seconds  With this pull: 64-bit, 4-CPU : 125 seconds   "	Other
2059	10921117	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/49f4d1d7ab71531d4552a7d1b5b79dfc99883d49 for binaries and test log. "	nAnswer
2059	10921554	"Example output:       - Connect 688 transactions: 758.16ms (1.102ms/tx, 0.623ms/txin)      - Connect: 770.16ms      - Flush 1455 transactions: 2.30ms (0.0016ms/tx)  "	Emotion
2059	10921832	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c79fdf173098cb8ebdd9ab4f2a2b8e4fca1042ce for binaries and test log. "	nAnswer
2059	10924636	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c222ef6d830d884e2075864029668884e3da9459 for binaries and test log. "	nAnswer
2059	10934955	"@Diapolo I've changed the code to always report in ms, but sometimes with some decimals. Avoids the necessity for a mu symbol, and is more readable. All timing printfs should honor the fBenchmark yes - should be the case now. "	Clarify
2059	10935696	"@sipa Thanks, I'm fine with that benchmark stuff then.  Edit: Seems the ``Make SetBestChain() atomic`` sneaked in here ^^. "	Statement
2059	10937526	"@Diapolo Yes, since they touch the same code, I didn't bother writing them separately (I even mentioned it on the pullreq summart!). If there's an issue with the other pullreq, I'll rebase this one, and if the other gets NAK'ed or delayed, I'll separate them. "	Clarify
2059	10942490	"@sipa I think your smaller pulls should make it much faster into master, so I have no problem with what I noted above :). "	Clarify
2059	11062988	@Diapolo Feel like testing this? I'd like to know what kind of output you get on Windows. 	whQuestion
2059	11063128	ACK 	Clarify
2059	11074262	"@sipa Yeah, will do that today :). Do I need to start an IBD or are you fine with just any occurance of that messages from the log? "	Clarify
2059	11075643	ACK 	Clarify
2059	11076017	"@sipa Here are a few examples with current master + some mods to block file pre-alloc and CAutoFile (dunno if these are related for the benches).  12/06/12 07:57:25 - Connect 293 transactions: 2776.80ms (9.477ms/tx, 3.644ms/txin) 12/06/12 07:57:25 - Connect: 2870.41ms 12/06/12 07:57:25 - Flush 976 t"	Clarify
2059	11117977	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8a28bb6deee2df7dac3288c1bc6db6221e5e43b6 for binaries and test log. "	nAnswer
2059	11124220	"Some values during IBD:  12/07/12 08:08:31 - Connect 60 transactions: 15.60ms (0.260ms/tx, 0.153ms/txin) 12/07/12 08:08:31 - Connect: 15.60ms 12/07/12 08:08:31 - Flush 146 transactions: 0.00ms (0.0000ms/tx)  12/07/12 08:08:32 - Connect 165 transactions: 31.20ms (0.189ms/tx, 0.092ms/txin) 12/07/12 08"	Other
2059	11127710	@Diapolo Seems microsecond_clock on your system has a resolution of 15.6ms - what I assume to be 1/64 of a second. That makes the numbers -benchmark would report quite useless... 	Clarify
2059	11128004	"@sipa I didn't even take a close look at the numbers, but your assumption makes sense, if I look at the numbers. Any idea for a working code-path for Win32 then? I could try with GetTimeMillis() instead and see if that numbers make more sense, as at least a ms timer-resolution should be possible (an"	Clarify
2059	11128104	"@Diapolo GetTimeMillis uses the same boost function to get the actual time, so I doubt that will make any difference. Up to you to find something that gives an accurate clock in Windows :) "	Clarify
2059	11128185	@sipa I had read some stuff a few days ago on that issue and it seems ... well hard to do it portable. Any the native WIN32 APIs for time stuff is a thing I've never used ^^. I'll take another look.  Edit: ``Note that the existence of the higher resolution classes (eg: nanoseconds) depends on the in	Other
2058	10919204	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/57b7b8137e23d877bd4d6d8f750ed1a87b65681d for binaries and test log. "	nAnswer
2058	10919515	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/11c2cb7a7f8ed2234ccbb7a1eb25135afc518eed for binaries and test log. "	nAnswer
2058	10920649	ACK 	Clarify
2058	10924728	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d33a9218abda80d32239789f6ceaec6d68a290ce for binaries and test log. "	nAnswer
2057	10915916	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b19388dd88ebfcc49caf21511530ba5faad1ccf1 for binaries and test log. "	nAnswer
2057	11075590	ACK 	Clarify
2057	11077883	ACK 	Clarify
2056	10909101	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cb1e827f6d558b7cb311bc73e1bbdb770c468776 for binaries and test log. "	nAnswer
2056	10910537	@gavinandresen Updated. 	System
2056	10911188	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8259c573212213e3cd8da7146af525e067c4ddaa for binaries and test log. "	nAnswer
2056	10912073	ACK 	Clarify
2056	11014827	"I've been using this for a while and did not observe strange things. But my observations (as always) should be considered just entry-level in terms of client-usage-and-test-scenarios ^^, sorry :D. "	Clarify
2056	11063094	ACK  	Clarify
2055	10901823	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3e0a28aa534fbb41029682de14d8a49c2bb7696c for binaries and test log. "	nAnswer
2055	10909485	ACK 	Clarify
2055	10910523	"Can you squash into one commit? Also maybe add a mention that if you build using a libdb++ version above 4.8, the compiled client will produce wallet.dat files that are incompatible with release binaries. "	Clarify
2055	10946761	"Yeah, please don't recommend using libdb++ 5.x as long as we're still using berkelydb for the wallets, as that  causes format incompatibilities with binary installations.  Apart from that, ACK after squashing to one commit. "	Clarify
2055	10951205	Squashed into one commit and added reference to the Berkely DB warning :). 	Statement
2055	10951427	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/91a99fdedb0cea1f6059f1f06856a5b648debce1 for test log.  This pull does not merge cleanly onto current master "	nAnswer
2055	10952616	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2fdd1a8637074e22ae8c3109204d7ecd57a1ff78 for binaries and test log. "	nAnswer
2054	10891762	See #2034 	System
2054	11930184	Closed in favor of #2034. 	System
2053	10869876	See also #2052. 	Statement
2053	10869909	jinx 	Statement
2052	10875411	I like the belt-and-suspenders approach of doing BOTH dropping disconnected transactions during IBD and always checking signatures when adding disconnected transactions to the memory pool.  The second is especially important; I could imagine an edge case of a block chain re-org right at some rule-ch	Clarify
2052	12573791	Fixed by #2056  	System
2051	10844423	"Debian Squeeze with 5c37be2db6177b8e6a4990b2efddcbac46b14a3f  ``` ~ # bitcoind move """" testing 1 true ~ # bitcoind move """" testing 0.1 true ~ # bitcoind move """" testing 0.01 true ~ # bitcoind move """" testing 0.001 true ~ # bitcoind move testing """" 1 true ~ # bitcoind move testing """" 0.1 true ~ # bit"	Other
2051	10897306	@abrkn Are you using the latest version? 	whQuestion
2051	10916461	closing the issue until i am able to test with latest 	Clarify
2050	10822486	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1e84f9794d07e234344c71b177906b0b2dac543b for binaries and test log. "	nAnswer
2050	10824380	"I don't think the importprivkey functionality should be exposed to normal users. It's really pretty dangerous. Instead, I would suggest implementing the sweepprivkey (""import"" the key, flagged as ""not part of my balance, but automatically move any funds seen to another address"") functionality. "	Clarify
2050	10825545	"I'm not sure about this. It's a feature many people will like, and it certainly has legitimate uses. On the other hand, I don't like encouraging moving private keys around or vanity addresses... "	Clarify
2050	10833738	"I don't like encouraging moving private keys around either. They're called ""private"" for a reason.  I agree that ""sweep"" (and ""sweep again if more coins are received on the swept address"") is a much better way to go, and useful in more cases.  "	Clarify
2050	10836678	"What makes importing private keys so dangerous? I suppose it's because it is a kind of trojan horse:  1. Other people could be spending coins from it. This is not a scenario currently supported by the client, and result in non-consisent internal administration (wrong balances, double spends, etc).  "	Clarify
2050	10836802	"BTW your implementation looks very good, haven't looked in full detail, but on a high level you're doing everything as it's supposed it. "	Clarify
2050	10837627	@n1bor I would like to only comment on some style stuff I saw. There are some places where you added unneeded line-breaks (2 in a row). I also think it's much nicer to use speaking names for GUI elements like labels and such (eg: transactionFeeLabel or okButton). Consider this feedback constructive 	Clarify
2050	11032794	Diapolo - thanks for comments happy to tidy them all up! Just not going to do till someone posts on here that they are going to merge the pull. As currently looks like the the consensus is against including this in the client. 	Reject
2050	12640137	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/1e84f9794d07e234344c71b177906b0b2dac543b for test log.  This pull does not merge cleanly onto current master "	nAnswer
2050	16033291	Please rebase. 	System
2050	16035564	"Luke - happy to rebase, but only if you are going to pull into client.  Thought consensus was you did not want to encourage this sort of thing? "	Clarify
2050	16038655	"I'm personally much more in favor of exporting/importing entire wallets. It has much less risk for shooting yourself in the foot, and doesn't require micromanagement from the user. For that reason, it's something I also would object less against to put in the GUI. I intend to work on that soon. "	Clarify
2050	19704866	"Importing private keys really should include a sweep feature for safety.  Creating a transaction immediately spending all coins associated with the imported key to a new address.  It sounds like consensus is mixed, though I'm a bit more friendly to privkey importing than other devs.  But I don't wan"	Clarify
2050	19706055	"I'm in favor of closing this. It may make sense to have a feature like this that is accessible through an expert mode (coin control comes very close to that), but if made generally available, it would lead to even more misunderstanding about wallets.  However, I wouldn't be opposed to having the fun"	Clarify
2049	10867702	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/487db8a2b134d8ef62dff09e29bcc266d2883eec for binaries and test log. "	nAnswer
2049	10906635	"Pretty decent.  Only nit:  Unix standard is $TMPDIR, and fall back to hardcoded /tmp if that fails.  But maybe boost already covers that.  "	nAnswer
2049	10907020	ACK 	Clarify
2049	10908177	"@jgarzik boost::filesystem::temp_directory_path indeed tries that (and 3 other env variables), and falls back to /tmp afterwards. It is only available in boost filesystem v3 though (introduced in 1.44). "	nAnswer
2049	10909012	ACK  	Clarify
2048	10811946	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e6955d04111e842cce55dc230d9dcc971560a299 for binaries and test log. "	nAnswer
2048	10815589	ACK 	Clarify
2048	10815793	ACK 	Clarify
2048	10817946	"Do you mind adding a CheckPoints::fEnabled, and setting that from AppInit2(), instead of constantly reparsing the command-line flag? "	ynQuestion
2047	15994245	"Posted in #2461, so closing this. "	Statement
2046	10779276	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f82102121f7c48d94c218af0089a71dde497fa07 for binaries and test log. "	nAnswer
2046	10946800	ACK 	Clarify
2045	10778106	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/49d58d2d1b862112fa6a4f7fbfb45d726b023c25 for binaries and test log. "	nAnswer
2045	10780433	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8f824def5784ab9177803af9ce561e4ffd3a4eac for binaries and test log. "	nAnswer
2045	10952980	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/50ecd7b68970062bfb540798370dbfab6d376086 for binaries and test log. "	nAnswer
2045	10986232	"@laanwj This should be sane now, it was rebased after the removal of the modal flag. "	Statement
2045	11120386	@laanwj Considered ready to get merged? 	ynQuestion
2045	11307896	@laanwj ping 	System
2044	10762163	ACK Though I guess we still have to verify that backupwallet indeed returns false in the can't-overwrite case 	nAnswer
2044	10762342	"@laanwj Yeah, this is not the fix for the underlying problem (if there is one), but an easy addition anyway :).  So perhaps Boost is the problem here, I'm thinking of the second path in BackupWallet(). <pre> #if BOOST_VERSION >= 104000                     filesystem::copy_file(pathSrc, pathDest, fil"	Clarify
2044	10768426	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ad525e9c8fa2b15f1afe6b7284de638a090e891a for binaries and test log. "	nAnswer
2044	10782403	"boost v1.42.  I compiled your code and tested it on my case. It shows an error now :-) .  I don't know what versions of libboost was used on 6.3 and 6.2, but I had the same problem with those precompiled versions. "	Statement
2044	10793371	@luke-jr please make this end up in the stable release too 	Clarify
2043	10758831	"We need more details... such a report is simply unuseful, sorry to say. "	Statement
2043	10762216	"You need to at least supply your OS and it makes sense to pastebin the debug.log, which the client should have created. Also did you supply any command-line parameters and what you mean by paralysed... did you use Bitcoin-Qt or bitcoind? "	Clarify
2043	10762819	I assume the disk I/O is just killing his machine.  @robzrob What hardware are you on? OS/cpu/ram/disk? 	whQuestion
2043	10770081	eh? 	ynQuestion
2043	10920186	@robzrob the mail interface to the issue tracker probably stripped any images you tried to add to an email. 	Clarify
2043	10922155	OS Windows XP Home 5.1 Build 2600 SP3  CPU AMD Athlon(tm) 64 X2 Dual Core Processor 5000+ MMX 3DNow (2CPUs)  RAM 896MB  DISK Samsung HD161HJ  	Other
2043	10927810	"Is your HDD LED flashing like crazy or staying on, after you started the client? "	whQuestion
2043	11007713	Staying on. 	Statement
2043	11009559	"Seems your machine is to weak to run a full node then ... when the HDD LED stays on it means there is a lot of load on your disk, which seems to freeze your PC, sorry mate. "	Clarify
2043	11013418	Got 915GB free space on an external harddrive.  Would it be worth trying to install it on that? 	Other
2043	11013922	"If it's a USB drive: don't. They have much higher latency, which is very important for the block database (at least until 0.7, in 0.8 it may become doable, but that's not finished yet). "	Clarify
2043	11013961	"It's not the required space (which is ~3-4 GB for current block-chain and stuff), it's the limitation of your PCs processing power and input/output (disk/memory and so on) performance, which is too low. "	Clarify
2042	10748502	Need rebase already?! 	ynQuestion
2042	10755255	"Oops yeah, I'll fix that in a bit. (I built it on top of ultraprune's branch) "	Clarify
2042	10768449	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/ec2a8eedfc8fd37f340bc6a434d64c87eae0b5b4 for test log.  This pull does not merge cleanly onto current master "	nAnswer
2042	12660121	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/ec2a8eedfc8fd37f340bc6a434d64c87eae0b5b4 for test log.  This pull does not merge cleanly onto current master "	nAnswer
2042	12899604	"I think I was asleep when I wrote this. The fReadOnly bug is real, but isn't fixed correctly in this case and only matters for read-only blk*.dat files, which have other problems not addressed herein. When/if I take the time to correctly get read-only blk files working, I'll open a new pullreq.. "	nAnswer
2037	10769036	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2646080e3dc1a1da5be2c066329eb80e1ca0ef7b for binaries and test log. "	nAnswer
2037	10870180	ACK - this seems pointless indeed. 	Clarify
2035	10735894	"Indeed, maybe I'll take a look tomorrow... "	nAnswer
2035	10748478	"Ugh, this is bad if it is true, silently ignoring backup requests "	nAnswer
2035	10749377	"I tried it and was able to overwrite the file. The modified stamp of the file got updated.  @Joukehofman Can you please give more details, OS, Bitcoin version and so on. "	Statement
2035	10749513	"Ubuntu 10.10, bitcoind version 7.1 with this patch: https://github.com/bitcoin/bitcoin/issues/2021#issuecomment-10472113  But according to the date, it also didn't work with versions 6.2 and 6.3 "	nAnswer
2035	10749671	"@Joukehofman I need to further ask, you tried to backup via bitcoind or the GUI one Bitcoin-Qt? I tried the Bitcoin-Qt dialog, which is working for me on Windows 7 x64. "	Clarify
2035	10749696	bitcoind 	Statement
2035	10752419	"I tried backupwallet RPC command via RPC console and that also works, I can't seem to reproduce on Windows. "	nAnswer
2035	10758771	One glitch I found is that RPC console converts this input ``C:\Users\Diapolo\Desktop`` into ``C:UsersDiapoloDesktop`` so it means to achieve what I want I need to escap back-slashes ``C:\\Users\\Diapolo\\Desktop``.  @laanwj It would be nice to tell the use that fact in the welcome message? 	Clarify
2035	10760554	"I'm at 3ed1ccb0898b22353e9fcc942b43df98c9a3bf4c, and can confirm that 64-bit bitcoin-qt console on Ubuntu 12.10 is silently failing to overwrite files that exist. "	Statement
2035	10761485	"@diapolo yes, you should surround paths with '' (single quotes). Otherwise you get into trouble with spaces as well. "	Clarify
2035	10762045	"Can you guys try, if with #2044 the client at least shows an error. What boost versions are you using?  @laanwj I remember Gavins proposal to change the format of the RPC commands help messages... would make sense :). "	Clarify
2035	10762409	The RPC overwrites fine for me.   I wonder if what is happening is that the behavior of backupwallet is confusing people and the wallet is being written someplace they don't expect instead of over the expected file?  	Clarify
2035	10762575	rm /home/user/wallet.dat && /home/user/bitcoind backupwallet /home/user/wallet.dat works fine 	Other
2035	10762754	"Boost 1.46 here.  backupwallet /path/to/writeable-dir/non-writeable-file doesn't give an error, but backupwallet /path/to/non-writeable-dir/file does.  backupwallet /path/to/non-writeable-dir/ doens't give an error message either, even though it would normally backup to /path/to/non-writeable-dir/wa"	nAnswer
2035	27958296	Fixed by #2044 	System
2033	10684635	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c52f3b86ceb4b2d933f919e06275c670f31dbdb6 for binaries and test log. "	nAnswer
2033	10686086	I just observed mempool transactions depending on spent inputs on v0.7.1 with this patch - maybe it doesn't work. 	Reject
2033	10692632	"Ok, seems the implementation didn't actually remove recursively. Should be fixed now. "	Clarify
2033	10769681	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/231b399952fd620ee0f72b1947024dba9651630d for binaries and test log. "	nAnswer
2033	10858013	ACK.  I note we do not yet have any mempool unit tests.  But I did test it with a bunch of real mainnet reorgs. 	nAnswer
2033	10909547	ACK 	Clarify
2033	11579143	did this fix a bug that had been present since version 1? 	Other
2033	11579731	"@rebroad Yes, indeed. Not a bad one, though. "	nAnswer
2033	11582771	@sipa it looks like it was a bug that could have successfully created a DOS attack that may even have broken the network - i.e. create loads of conflicting transactions so that the mempool fills up to its limit and then the nodes would have stopped passing on new transactions... yes/no? 	Clarify
2033	11589493	Unless the attacker managed to attack a mining node so that they saw the later spends instead of the earlier ones.  Or any pool mining owner who wanted to do this presumeably could. 	Clarify
2033	11589620	Anyone who controls a large amount of hash power has much more potent attacks available to them than this. (E.g. orphan flooding) 	Clarify
2033	11613095	"Why would orphan flooding be a more potent attack than filling the mempool? I'd have thought the orphan pool filling up would be far less of a problem than the mempool filling up. Sorry, probably a discussion for #bitcoin... "	Clarify
2033	11613195	Not orphan transactions. Orphan blocks. 	Statement
2032	10657455	ACK 	Clarify
2032	10684780	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ecd67a142066ba7e5e2a92d152cb8bfb156d6f69 for binaries and test log. "	nAnswer
2032	11505631	Will this fix still work after all the commits done lately? 	Clarify
2032	11508443	"Yes, as there were no recent changes to signverifymessagedialog.ui this commit will merge just fine to current master.  @laanwj Ping :) "	nAnswer
2032	11786806	Can we get this merged please? 	ynQuestion
2032	11791381	This seems to change both sign and verify to alt-m ? 	Other
2032	11791798	"@sipa Indeed, but they are on different tabs and each tab is reached by the now changed shortcut, so that we now have a shortcut to reach the tab and a shortcut to execute the sign or verify :). "	Clarify
2032	11792007	"Tested: indeed, typing alt-m triggers the shortcut in the current tab "	nAnswer
2031	10610561	ACK  	Clarify
2030	10623009	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fe703deae753710dc80dcc280ff475af06c0ac85 for binaries and test log. "	nAnswer
2029	10537019	Not a Bitcoin-Qt bug. See https://bugreports.qt-project.org/browse/QTBUG-25083 	Statement
2029	10544233	"Yes this is clearly an upstream bug in Qt, nothing we can do here.   According to the issue that @luke-jr links, it isn't addressed yet. This would be something you'd expect them to address in Qt5. "	Clarify
2029	10544406	"I suppose the font-scaling issue could be avoided by allowing the user to override the application font size... windows would still open too small, but hey that's better than headaches. "	Clarify
2029	15634649	Closing as this is upstream issue 	Statement
2028	28208655	"The parameter that determines where the RPC client should connect to, `-rpcconnect`, has hardcoded default to `127.0.0.1:(rpcport)` (see https://github.com/bitcoin/bitcoin/blob/master/src/bitcoinrpc.cpp#L1122), so I don't understand how it could have been using a different interface on your system. "	Clarify
2027	10496961	"libdb4.8++-dev should be in the Bitcoin PPA. If you compile with any other version, your wallet will not be compatible with other client builds.  Not sure how USE_UPNP=- relates to this issue. Sounds like it's working as expected. "	Statement
2027	10497604	"I was referring to https://github.com/bitcoin/bitcoin/blob/master/doc/readme-qt.rst.  That makes no mention of Bitcoin PPA.  My point is, the instructions, as written, don't work for this version of ubuntu.  I'm too ignorant of linux to know if it affects other versions or not. "	Statement
2027	10498462	"I see that now, regarding the USE_UPNP flag.  That was further down, didn't read that far. :(  Thanks.  That doesn't seem to help the 4.8 reference though. "	nAnswer
2027	11178055	is this a fix for this problem?  #2055  https://github.com/bitcoin/bitcoin/commit/2fdd1a8637074e22ae8c3109204d7ecd57a1ff78   	ynQuestion
2027	11182979	"There's a ppa where you can install 4.8++-dev from, I don't know the name I think it's mentioned in one of the doc files. "	Statement
2027	15634976	"build-unix.txt now mentions where the 4.8 package is available, closing "	whQuestion
2027	25311413	"kinda of amusing you are so quick to close the topic without really having any information regarding fix, you simply just assume build-linux.txt mentions it?? for it dosnt... Anyway me and a lot of other people are using 5.1 and will continue to use 5.1 so expect your wallets to be obsolete in good "	Clarify
2027	25311970	"You're welcome to use 5.1, if you don't want or need compatibility with builds that use 4.8 - the information is just there to not accidentally break people's compatibility. Recent Ubuntu releases do not have dev files for 4.8 anyway, so you'll need to find them in a backport or install them manuall"	Clarify
2026	10490823	Updated as suggested! 	Emphasis
2026	10625139	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/933304fe886c8e7f3dd6d90acec3f8ee7cd60980 for binaries and test log. "	nAnswer
2026	11006080	"Question: why is openssl special with homebrew?  It'd be really nice not to have to ship a Makefile.osx patch that is likely to break when we change Makefile.osx in the future, and it looks like openssl is the only change that couldn't just be made to Makefile.osx directly.  Also: I think breaking t"	Clarify
2026	11069513	"I note also that I'll need to remove the `USE_IPV6=1` from the make command, per #2064. "	nAnswer
2026	11087387	"I just set up a machine to do a release build a couple of days ago for the 0.7.2 release, so I went through my bash history and updated the instructions:     https://gist.github.com/4224563   "	Clarify
2026	11186235	I've not forgotten about this. I intend to get to it mid week. 	Reject
2026	11297607	I've incorporated the suggested changes and squashed everything together. 	Clarify
2026	11299009	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/82cc0ea4fb3e6847ba7475d4fa28942132009de4 for binaries and test log. "	nAnswer
2026	12660154	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/82cc0ea4fb3e6847ba7475d4fa28942132009de4 for test log.  This pull does not merge cleanly onto current master "	nAnswer
2026	12904847	"@colindean, rebase needed "	Statement
2026	12919365	@luke-jr I think I did it right...? 	ynQuestion
2026	13342539	I updated my branch to ensure that it merges cleanly with master. 	Statement
2026	13645465	"I just updated again, resyncing with master and with two optimizations:  * OpenSSL 1.0.1c is no longer hardcoded * Static compilation now works (tested on another 10.8 machine without any of the dev dependencies)  The makefile patch is still necessary. A future optimization would ideally remove this"	nAnswer
2026	13674372	"Another update, after discovering a new formula in Homebrew for building berkeley-db4 without having to revert to an older version of the formula. Revised the makefile patch and the instructions to reflect this. Now, the only existing difference between the Homebrew and MacPorts instructions is the "	nAnswer
2026	13813147	"Rebased to current master as of 0.8.0 release.   @gavinandresen @luke-jr, anything else? "	Other
2025	10485159	"Cannot reproduce this problem on 0.7.1 nor master, either with or without your patch :-/  "	nAnswer
2025	10485922	"@laanwj Strange ... have you got a Windows machine, as it only happens on Windows. I know sipa could not reproduce it on Linux and it also does not happen with bitcoind. "	Clarify
2025	10678832	"hmm, I just get an error message that the proxy adress is invalid when I type: ```bitcoin-qt.exe -proxy=crashme``` in the windows 8 command prompt (cmd). Then bitcoin closes. "	nAnswer
2025	10678980	Also just getting an invalid proxy error on Win7. 	Statement
2025	10679511	"I had a non default datadir set also, perhaps that fact leads to the crash. Closing this, as the patch is merged. "	Statement
2025	10682443	@Diapolo Care to verify 0.7.2rc1 fixes this? http://luke.dashjr.org/programs/bitcoin/files/bitcoin-qt/0.7.2/test/rc1/ 	ynQuestion
2025	10692325	"@luke-jr Yeah, I'll take a look now, will report back in a few minutes.  Edit: Crash is gone, fix is working! "	Emphasis
2024	10485027	"I don't understand how this can fix anything. The code should be equivalent. I suspect this is a memory corruption issue, and that by adding a variable you're moving some memory out of the way, probably moving the corruption issue to some place else.  "	Clarify
2024	10485083	"~~I think I understand the problem: fDbEnvInit seems to be never initialized to false when CDBEnv is created. It should be initialized to false in the constructor.~~  ~~Otherwise, if the CDbEnv is created and destroyed without calling Open, something bad may happen in the destructor.~~  Edit: Hm no "	Clarify
2024	10485195	"Another possibility would be a static destructor order issue. We've had those before with GetDataDir(). In which case this patch can actually solve the problem, by not calling GetDataDir()! But I thought that problem inside GetDataDir() was solved.  ACK anyway, this change can never hurt, storing th"	Clarify
2024	10485949	"The last time my debugger was working correctly, I saw that inside the Boost .string() code it was crashing. So this patch solves that by preventing the use of Boost filesystem in the destructor. "	Statement
2024	10486018	@laanwj Could this be related https://svn.boost.org/trac/boost/ticket/6320?  Edit: Last rebase adds init of the private flags to false.  Edit 2: It seems the crash is coming from path.hpp (Boost filesystem). 	Clarify
2024	10489717	"Haven't tested, but I don't expect to see any difference on Linux. ACK "	nAnswer
2024	10598026	"Looked over the implications visually. This actually fixes a bug on all platforms in theory, though in practice has no effect (besides destructor safety) since we only use CDBEnv for the same path. ACK "	Clarify
2024	10628299	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/be8e1f8479ff46c99f97ac3e396736d36e5458c6 for binaries and test log. "	nAnswer
2023	10468955	"never mind, seems that diapolo got his to work already "	Statement
2022	10462034	"These were the warning my patch fixes: src\main.cpp: In member function 'bool CBlock::ConnectBlock(CBlockIndex*, CCoinsViewCache&, bool)': src\main.cpp:warning: unknown conversion type character 'l' in format [-Wformat] src\main.cpp:warning: unknown conversion type character 'l' in format [-Wformat]"	Other
2022	10463113	Looks like a bug in Microsoft printf family of functions :(  ACK for 0.7.2 & master 	Other
2022	10463246	Thanks for taking a look and I wanted to clarify why I patched it :). 	Statement
2022	10464805	ACK 	Clarify
2022	10468416	"Please fix the commit message.  The one-line summary of your change, as it appears in ""git shortlog"" and other tools, is wholly useless:  ""fix pull #2018""  That is utterly meaningless without further research; it tells nothing about what code is modified, or how it was modified, or why it needed mod"	Clarify
2022	10468996	How is this a bug in the Microsoft printf function @Luke-Jr? 	whQuestion
2022	10469142	"@laanwj %lld is standard C printf format, but not supported by Microsoft's printf: http://sourceforge.net/tracker/?func=detail&atid=102435&aid=1963136&group_id=2435 "	Other
2022	10469162	"Ooh, okay something made by MS is incompatible to the standards, now that's a now one, let's call the press :)  "	Clarify
2022	10471842	"I still don't get those warnings though. We define:      #ifndef PRI64d     #if defined(_MSC_VER) || defined(__MSVCRT__)     #define PRI64d  ""I64d""     #define PRI64u  ""I64u""     #define PRI64x  ""I64x""     #else     #define PRI64d  ""lld""     #define PRI64u  ""llu""     #define PRI64x  ""llx""     #endif"	Clarify
2022	10471900	"@laanwj The original code which Diapolo is referring to used %lld; he replaced that with PRI64u, but it needs to be PRI64d since the argument is signed. "	Clarify
2022	10471969	"Right, I get it now, thanks "	Statement
2022	10472051	"@jgarzik Sorry, yes it was a weak commit message :), fixed it! "	Emphasis
2021	10461230	Those two are fine.  memset change is too many lines of code changes for essentially zero net security benefit (if the attacker can read your bitcoin process' memory then you're already toast). 	Clarify
2021	10462911	Diff to v0.7.1: https://raw.github.com/gist/4090863/715fbe48576dbce157071333f86a138ba34f022b/stdin.txt  Look good? 	ynQuestion
2021	10463136	#2022 looks like a good idea to throw into this too. 	Clarify
2021	10463287	"@luke-jr https://github.com/bitcoin/bitcoin/commit/6b3783a Is fine with me then, your explanation did it's job ;). Just wondering, if the legacy translations will still be used then? I have new translation files ready in another pull now btw. "	Clarify
2021	10464228	"@Diapolo Gavin NACK'd 6b3783a anyway, so it won't be in 0.7.2. Maybe 0.7.3 :) I've pulled in translations of strings that were missing for 0.7.1, if that's what you mean by the second part. "	Clarify
2021	10472113	Revised diff with 0.7.1: https://raw.github.com/gist/4094412/a0a1ca844b60a7e54387c7c637791915238cde70/stdin.txt 	Statement
2021	10515648	Should we wait for #1927? 	whQuestion
2021	10532191	"@luke-jr I would vote no, as this is just a small glitch but not really a heavy UX problem IMHO. I would much more love to see #2024 get in 0.7.2. "	nAnswer
2021	10544520	Agreed with Diapolo. #2024 is a fix for a boost issue which makes boost::path unsafe to use in global constuctors on windows. This can cause a crash at shutdown. #1927 is 'nice to have' category but no need to wait for it. 	nAnswer
2021	10644010	"Backported #2024, added release notes (+ bumped versions), and tagged v0.7.2rc1. "	Other
2021	10646312	"ACK on the diff between v0.7.1 and 0dba651def5 (v0.7.2rc1). I can't build myself right now, unfortunately.  I didn't look at the changed translations closely. "	Clarify
2021	10647946	v0.7.1..v0.7.2rc1 diff: https://raw.github.com/gist/4133508/fd3d389097d24040d929bebd0435fcd21eb7f185/stdin.txt 	Statement
2021	10887344	"v0.7.2rc2 is tagged, if anyone else can contribute gitian builds... "	ynQuestion
2021	10892096	"tagged at gitorious?  It is confusing and error-prone to be using github for issues and major releases, but gitorious for a seemingly random collection of stuff.  "	Statement
2020	10457656	"BlockExplorer is a low-level tool. Bitcoin works substantially different low-level than what you see in the clients as an end user. 1Km... is very likely your own change address, which is hidden at the high level. "	Clarify
2020	10457912	thank you. 	Statement
2019	10469261	congrats on getting it to work :) 	Statement
2019	10472089	@laanwj In the end your patience to explain things made me want to get it working ^^. 	Reject
2017	12666293	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4e4e6d1feca92c346389d4221d022db8f8cd3e78 for binaries and test log. "	nAnswer
2017	14008912	@jgarzik @gavinandresen I'd like to see this in 0.8.1. 	Statement
2017	15362013	Superceded by #2409   	System
2016	10432231	@sipa: ITYM back().  Updated. 	System
2016	10490659	"I like the general design, but this pull mixes an client-side optimization with changing the network protocol policy.  I'm not against making it more strict and not trying to resync after a partial message or garbage data, but maybe that needs some discussion at least. "	Clarify
2016	10594689	"When I didn't have resync after garbage data in bitcoinj I did see failures due to it, though it was long ago.  BTW, is it possible now to send huge numbers of messages and cause OOM conditions? Previously if you did that the unread data would stick around in the kernels socket buffers and be discar"	Clarify
2016	10598565	"The last time I saw garbage occurring frequently was after the feb20 protocol upgrade. I suppose we can start requiring no garbage now...  The is still a receive buffer flooding check, by the way. "	nAnswer
2016	10641183	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8af12a9f5a56de594700abb5b0d9a05adf82d64b for binaries and test log. "	nAnswer
2016	10669153	I wonder why we even need that flood protection. You could just as well stop polling sockets for read events if their receive buffer is above some threshold. 	Clarify
2016	10776200	"For the record: I saw a node segfault with (among others) this patch, in the ~CNetMessage destructor (the CDataStream in it was not allocated, I assume uninitialized memory used as a CNetMessage). "	nAnswer
2016	12735236	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8af12a9f5a56de594700abb5b0d9a05adf82d64b for binaries and test log. "	nAnswer
2016	15362009	Superceded by #2409  	System
2015	10423921	"Patches welcome: I don't have an OSX 10.5 machine to test a fix, but I can make sure that a fix that works on 10.5 doesn't break deployment using 10.6.  "	nAnswer
2015	28208742	"A patch for this was merged, so I assume this was solved. Closing. "	Statement
2014	10399427	NACK 	Statement
2014	10468959	"We had this discussion many times before, this is just not coming back  "	nAnswer
2014	10644359	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d0c637aecbd19506846f35e21b446e856a5e6ab5 for binaries and test log. "	nAnswer
2013	10397634	ACK  	Clarify
2013	10399686	Good idea. 	Statement
2013	10647954	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e754cf4133c9c97e320ae5dec394e338524e650b for binaries and test log. "	nAnswer
2011	10372610	"I think you're a bit over-eager, and missed the fact that mocking is only used in tests. "	Statement
2011	10372825	"Indeed... searched through the client source but didn't search within tests, sorry. "	Reject
2010	10377374	ACK  	Clarify
2010	10398588	ACK 	Clarify
2010	10430736	ACK 	Clarify
2009	10348938	ACK 	Clarify
2009	10356478	"I'm probably overlooking something, but if the lock is grabbed twice in the same thread, how can that cause a deadlock with recursive mutexes? "	nAnswer
2009	10358998	It would seem the BDB locks are not recursive. 	Statement
2009	10359569	"Right,it wasn't clear to me that this concerns the bdb locks, thanks. ACK ofc. "	Reject
2009	10380396	@gavinandresen Do you think this warrants a 0.7.2? 	whQuestion
2009	10381969	"Yes, I think this is serious enough to warrant a 0.7.2.  "	yAnswer
2009	10385645	"I have 0.7.x ready-to-tag as soon as this gets pulled in to master.  Other fixes included: * faff50d Fixes a race condition in CreateNewBlock and a future null deref on testnet. * 4fbad91 Fix out-of-bounds read noticed by Ricardo Correia * bd2e140 CAddrMan: verify pchMessageStart file marker, before"	Clarify
2009	10446350	"@luke-jr I would not include https://github.com/bitcoin/bitcoin/commit/6b3783a as this needs the bitcoinstrings.cpp update (#1999) and a new master file on Transifex, which is what I'm waiting for to start translating the german stuff, to have the changes in for all languages. It's clearly for 0.8 ("	Clarify
2009	10446893	"NACK on these, as I don't think they pass the risk/benefit test:   >    - 128eefa <https://github.com/bitcoin/bitcoin/commit/128eefa> Qt: >    small header changes / fixes >    - 6b3783a <https://github.com/bitcoin/bitcoin/commit/6b3783a> fix some >    double-spaces in strings >    - 0f8a647 <https:"	Other
2009	10447659	"@gavinandresen I disagree here, as I think https://github.com/bitcoin/bitcoin/commit/0f8a647 is quite an important fix / change. "	Clarify
2008	10349891	99% ACK  Prefer unsigned for flags-type variables...  	Clarify
2008	10350119	Some reason not to use an enum type? :p 	Clarify
2008	10350150	"You cannot OR enum type elements together without them degenerating to an integer type, I think. "	Clarify
2008	10351913	"GCC doesn't warn about it, at least. "	Statement
2008	10352454	"@sipa is correct.  Storage class for enum is 'int', unless greater size is needed (int -> unsigned int -> long -> unsigned long -> etc., IIRC)  "	Other
2008	10356561	"Indeed, you can define flags using an enum, but you can't use the enum as parameter when you want to be able to specify multiple flags as it's no longer an enumeration. I believe Qt has a 'typesafe flags' type but that doesn't help us here :) I do think defining the flag values using an enum has a n"	Clarify
2008	10356826	"This might work, too, IIRC: ```` enum my_foo_bits {     FLAG_FOO = (1U << 0),     FLAG_BAR = (1U << 1), }; ````  "	Other
2008	10357651	"@laanwj Nice I observed the same problem with the client interface pull we are working on ^^. We should then change to ``unsigned int`` there, too, right?  @luke-jr: GCC warns about OR 2 enum flags, when the function parameter is expected to be an enum ;), tried it. "	Clarify
2008	10358469	"Yes, it applies there too :) "	Accept
2008	10358918	Updated. 	Statement
2008	10369014	ACK 	Clarify
2008	10398577	ACK 	Clarify
2008	10425348	"Comments from @jgarzik are not in, so it would be nice if @sipa could update to these last 4 suggestions before this should get merged IMO. "	Clarify
2008	10427753	Updated. 	Statement
2006	10434355	ACK  	Clarify
2006	10649689	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/978770b59da4665f8cafc0083487e3c0696c45cc for binaries and test log. "	nAnswer
2004	10349278	"ACK on the code changes, but one nitpick: can you separate the git commit summary (the first line) and the rest? Some git tools assume everything up to the first empty line is the summary. "	Clarify
2004	10353655	Done. 	Statement
2004	10490692	ACK 	Clarify
2004	10492669	"Compiles just fine on Windows and causes no obvious problems, can't really comment on the changes though. "	nAnswer
2004	10651218	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bfc96207998c284e2cb6eb99c99b755a161e723d for binaries and test log. "	nAnswer
2003	10264474	ACK 	Clarify
2003	10265277	"Regarding Begin/End/AbortMessage, wouldn't it be cleaner to introduce a CMessageBuilder class, which holds a scoped lock of a referenced CNode::cs_vSend, and forwards operator<< to the respective vSend? For example CNode::PushMessage(pszCommand, a1) could then become simply { CMessageBuilder m(this,"	Other
2003	10434403	"How about just building unlocked, then copying the message into vSend.  That adds a memory copy (potentially large for ""block"" messages), but it eliminates the locking mess, and also eliminates the whole nHeaderStart-then-back-out-if-we-abort stuff.  Clean and simple, if the memory copy burden is OK"	Clarify
2003	10655317	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/25511af4a57816c4f9bb960527f090a9719c9010 for binaries and test log. "	nAnswer
2003	11075710	"I like @jgarzik's idea. Shared-nothing passing messages is a safe and elegant default, if it turns out to be a performance burden, which I don't believe so, it can always be optimized again **without** the locking mess. "	Reject
2003	11098676	"Indeed, theoretically they are equivalent (still, in practice it is harder to mess up as subtly with message passing, as you can see in one glance what is passed instead of having to spend a lot of time carefully analyzing locks).   But I think jgarzik was talking about one specific case, building a"	Clarify
2003	11298939	Merging; I'm excited about using clang to help us make sure locking is correct and efficient.  	Clarify
2002	10264697	ACK 	Clarify
2002	10264978	ACK 	Clarify
2000	10256563	"Those are artefacts from previous refactorings, in an attempt to prevent unreadable diffs in the first place.  It's probably a good thing to fix those before release. "	Clarify
2000	10260847	ACK 	Clarify
2000	10264694	ACK (long live `git diff -b`)  	Clarify
2000	10264971	ACK 	Clarify
1999	10255245	"I'll generate a new one soon.  Are you sure that you can't do this on windows? I think you can run the script in cygwin, it just requires python and xgettext (gettext-devel package).  "	Statement
1999	10255274	"That cygwin stuff is a little like magic to me, I know I have that MinGW shell, which looks Linux-like, but I'm sure I don't have Python or that xgettext thing.  Would it be possible to let such a script run on the pull tester server, which could somehow create a pull for this from time to time? "	Clarify
1999	10399414	"@luke-jr: You uploaded a new english master file to Transifex, but the bitcoinstrings.cpp update is missing from master, this sucks (and is not how we defined the default procedure). Oh and to complain even more the new master file is also not included in current master...  @laanwj: Perhaps you can "	Clarify
1999	10406025	"@luke-jr: What is happening? It seems we now have an old version again on Transifex and I started translating already ... makes me mad a little, sorry to say. My translation work is gone and I can do it again, when the updated file re-appears. "	Clarify
1999	10407642	"No idea. This doesn't show up in the timeline, so something internal to Transifex? "	ynQuestion
1999	10428857	"hmm, nothing new to translate but all the languages are updated today... "	Clarify
1999	10432586	Perhaps there's simply nothing new to translate? The reason I updated Transifex in the first place was to be sure the strings with subtle English changes (that don't change the meaning) didn't reset the translation - so those were imported from the old translations. Though I seem to recall at least 	Clarify
1999	10438800	"@luke-jr I did a diff of the german language file before and after that mess and no english base strings changed! I don't know what you did, but please use the default procedure of putting new master files in a commit first! "	nAnswer
1999	10447570	See #2019 	System
1999	10472079	"Closed, as now current again :). "	Statement
1997	10254732	ACK 	Clarify
1997	10260882	ACK 	Clarify
1996	11322947	"Duplicate of #1794, accounts are never deleted, this in on purpose "	Statement
1995	10254336	"Need to look at this in detail, but I certainly applaud the effort of improving the locking situation. I dread having to debug deadlocks in the current source.  I also took a look at this in the past (see #1801),  but I didn't have the patience at that time to unentangle the complex web of locks. Al"	Clarify
1995	10257587	"I'm certainly in favor of improving the locking system. I didn't know about clang's -Wthread-safety, but it certainly looks like a nice way to improvements. If we go that way, I'd like to see it completed as well, so that probably means rebasing from time to time, and following up. Unfortunately, re"	Clarify
1995	10259812	"I agree that doing this in multiple phases is a good idea, and that adding the annotations would be a good first step, so that we can all get an idea of the kind of warnings that clang gives in this case. "	Clarify
1995	10260803	Thumbs up from me on improving the locking; ideas for how we can test to make sure we're not making things worse as we improve the code are welcome.  	Clarify
1992	10201700	How about checking the core thesis -- that memset is wholly optimized out -- before proceeding?  I'm not sure gcc behaves this way. 	Clarify
1992	10203124	"Even if GCC would not do this, there is such a wide number of used GCC versions or other compilers used by people, who compile our client, that IMO it makes sense to follow such a hint: https://www.securecoding.cert.org/confluence/display/cplusplus/MSC06-CPP.+Be+aware+of+compiler+optimization+when+d"	Clarify
1992	10203156	"Not everyone is compiling with gcc, clang is also used, and maybe even MSVC. And if gcc is not doing this in the current version there is nothing preventing developers from adding it in a later version.   As it is known that some compilers optimize out memset in some cases, and there is no disadvant"	nAnswer
1992	10207513	"CBase58Data should probably just use zero_after_free_allocator, instead of doing wiping by itself.  "	Other
1992	10223462	"@sipa I updated the pull with your suggestion, can you please have a look. "	Clarify
1992	10254741	ACK 	Clarify
1992	10254997	ACK 	Clarify
1992	10257417	ACK. 	Clarify
1991	10115318	"The problem you refer to was fixed in 0.7.1 already. Transactions received via block download are tagged with the block time now, except in unusual circumstances. "	nAnswer
1991	10119014	"Yes, but what you describe only affects new transactions. This pull request provides an RPC that cleans up all transactions, including older ones. "	Clarify
1991	10123138	"The first time you run 0.7, it should import the older ones intelligently... "	Clarify
1991	10131755	"NACK: I'm against one-time-use RPC commands, especially for problems that we've solved.  "	Clarify
1991	10148403	"Agreed@gavin. One-time fixes should be automatic or if it really needs to be manual, a command-line arg. But this case should be already fixed... "	Clarify
1991	10164925	"This is indeed fixed now, and the RPC is not useful anymore. Closing "	Statement
1990	10254192	"@robbak You should not merge upstream changes but rebase your pull onto current master. The way this pull is now it won't be accepted I think.  - ``git checkout ""local branch""`` - ``git fetch upstream`` - ``git rebase upstream`` - ``git push origin ""local branch"" -f`` "	Clarify
1990	10260902	"Needs to be rebased into one commit, and the same change should be made to the other OS's Makefiles.  "	Clarify
1990	10310368	"I've messed up my clone, so I'll do it again, the right way. Thanks. "	Reject
1989	10080541	"I understand the motivation -- I use the internal miner every day on testnet -- but this change would defeat anyone who scripts setgenerate-on-startup, because it does not automatically re-enable mining once IBD is complete.  "	nAnswer
1989	10082247	"You are right, but to automatically enable the miner it would still be possible to use -gen or set it via the bitcoin.conf. But if you see no way that this options suffice, you are free to close the pull. "	Clarify
1989	10083466	I agree with jgarzik.  Closing.  	Accept
1988	10062187	"@laanwj I suppose ui_interface.h - MessageBoxFlags could be cleaned up or the GUI part needs some reworking to make this options available (which seems not needed, as we only use MessageBoxFlags for displaying warnings / errors currently). "	Clarify
1988	10062429	"ACK! This needed to be done badly :)  Indeed, the UI message interface has a lot of unused flags (inherited from Wx). Some of them could be implemented and used, others are completely useless and can be removed. Feel free to do so.  "	Clarify
1988	10066418	If you are fine with the code please first merge this and I'll create another cleanup-pull afterwards?  Edit: I also thought about changing the message box caption for InitError() and InitWarning() to ``Bitcoin - Error`` and ``Bitcoin - Warning``. 	Clarify
1988	10089714	I'll update this pull tomorrow :) did a litle more work here! 	Emphasis
1988	10096508	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/75ba0be11aef6bff3abebb667564a0671533cd81 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1988	10101054	"Updated to not only fix the bug with always having an error icon, but to also extend the CClientUIInterface. "	nAnswer
1988	10240492	"@laanwj Updated to just use masks, can you please take another look. Thanks for your time :). "	Clarify
1988	10318189	"Updated to make the MASKs part of the enums and now prepends ""Bitcoin - "" to the captions. "	Statement
1988	10318427	"Sorry for being picky here, but I'm trying to get this ""perfect"" in one go.  "	Reject
1988	10318475	"@laanwj I'm the one who loves to do things perfect, so I'm really fine with getting constructive feedback! "	Emphasis
1988	10327841	"Updated to allow more efficient usage of ThreadSafeMessageBox with predefined MSG_ERROR, MSG_WARNING or MSG_INFORMATION, which don't need a string for title/caption anymore.  Example before and after: ``uiInterface.ThreadSafeMessageBox(strerr, _(""Error""), CClientUIInterface::ICON_ERROR | CClientUIIn"	Clarify
1988	10357289	"@laanwj Would it be better (typesafe) to directly use ``CClientUIInterface::MessageBoxFlags style`` instead of ``int style`` in the modified functions? Seems like a not well thought idea, as (ICON_ERROR | BTN_OK) are not recognized as enum but as integer... "	Clarify
1988	10362927	@laanwj I'll merge the last commit if you ACKed all changes and are fine with the pull as is now :). 	Clarify
1988	10363835	Code/design ack - still need to test 	Clarify
1988	10364671	"Good, merged commits, no code changes. "	Statement
1988	10372889	Had to fix the connect() calls in bitcoingui.cpp as they still were using int instead of unsigned int. 	Clarify
1988	10532022	"@laanwj I would love to replace all direct ``notificator->notify()`` with ``message()`` in another pull. Are you fine with using ``message(tr(""foo""), tr(""foo""), false, CClientUIInterface::ICON_WARNING);`` to achieve this :)?  Did you have the time try to test out this pull yet? "	Clarify
1988	10545571	Added a detailed comment for ::message() and added a missing unsigned ;). 	Clarify
1988	10659166	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/60e82f82e638b9059de82e8f093f3ab45a11ed94 for binaries and test log. "	nAnswer
1988	10692396	"@laanwj I need your help getting this in, any time-window :)? "	ynQuestion
1988	10749455	"@laanwj I would like to use the new interface for other pulls, so it would be great if you could prioritize the testing of this pull :). "	Statement
1988	10749506	I intended to merge it this morning but forgot. I'll try to do it in the evening today. 	nAnswer
1988	10749645	"That's fine, thanks. "	Statement
1988	10770223	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5350ea4171be69d16a94e6f40c5e7fa41e00ac13 for binaries and test log. "	nAnswer
1987	10061829	"ACK, security measures are always a nice addition. "	Clarify
1987	10083500	ACK 	Clarify
1987	10092522	"I'm not sure this will help, but ACK. "	nAnswer
1987	10098468	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/b1080c44840e8253ef353725e27a7626eb8a66df for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1987	10163045	"Sorry, that was a timeout due to slow jenkins server..., Ill get this retested (and fix the false negatives here) "	nAnswer
1986	10062557	"I agree this is useful, even with encrypted transport over SSL it's a safe precaution to not use cleartext passwords.  It's a pity though that we need to invent our own authentication scheme for this, but it looks like you evaluated the other options already.  One question: taking a quick look at th"	Clarify
1986	10078302	"Your basic impression is sound.  HTTP Digest was the preferred solution, but that introduces an additional round-trip to obtain a server nonce value, mitigating replay attacks.  Lacking that round trip to gain additional protection, the best one can do is make sure the embedded time is within a cert"	Clarify
1986	10081088	"Just added a commit to clamp the timestamp to +/- 60 seconds.  However, it is still open for discussion, because this is a usability issue:  users with a drifting clock will get an unfriendly, vague ""not authorized"" error message.  The window should be as small as possible... while still being wide "	Clarify
1986	10082143	So why not use digest auth instead of something custom (and fragile) and solve the latency concerns by persisting the connection where you're concerned with that.  The session bring up tear down has more of those nasty round trips in any case.  	Clarify
1986	10083046	"custom and fragile is oversold, considering this is intentionally highly similar to Amazon S3's HMAC authentication scheme.  S3 must even deal with the same issue: picking a time window encompassing average client clock drift, without shutting out too many.  I think they chose 5 minutes.  "	Clarify
1986	10083337	"RE: times:  default should be 'as secure as possible.'  Users should sync their clocks (but an if (fDebug) printf(""rpc timestamp out of sync..."") would be nice to make it easier to debug but not open up non -debug usage to flood-of-bad-authorization DoS attack).  RE: custom and fragile:  This seems "	Clarify
1986	10084019	I'm just concerned that we're solving things that weren't obvious a problem with novel cryptographic authentication protocols.   Even with authentication it is still unacceptable to run RPC across an insecure network because an active attacker can just intercept and replace RPC calls (not to mention	Clarify
1986	10260979	"The DKIM RFC 6376 : http://www.ietf.org/rfc/rfc6376.txt ... also seems very similar.  It uses an explicit expiration time, which seems like the right thing to do.  It is overly complicated for this (e.g. we don't need multiple signature algorithms, don't need to specify which headers are part of the"	Clarify
1986	10316647	Needs rebase 	Statement
1986	10434614	Rebased.  Still need to address valid @gavinandresen etc. comments. 	Clarify
1986	10663520	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/010cc65142f83b1045bc21b64cfe7cb46b8eff78 for binaries and test log. "	nAnswer
1986	18694001	"Closing.  Will reopen with closer integration with Amazon S3 spec, as per comments. "	nAnswer
1986	22891796	"Found a bug. The initial request sends ""Connection: close"" header, but then if the server requests Basic auth instead, it sends the retry over the some socket (which is now closed). "	Clarify
1985	10061729	"The RPC protocol was never designed to minimize data transfer. It's meant for controlling a bitcoind instance on the localhost, in which case the amount of data is of no essence (hence the choice of JSON, too).  Having said that, I don't see ""noncerange"" in BIP 22 at all: https://en.bitcoin.it/wiki/"	Clarify
1984	10061786	"@grimd34th I've been using a similar approach for months with my local Windows build, what wonders me is that the official build process seems to not need ``-loleaut32``, any idea for this?  Otherwise I can confirm this change is needed to directly build on Windows!  Let's see what our pull-tester i"	Clarify
1984	10092931	ACK. Does not break gitian build. 	Reject
1984	10266179	ACK then. 	Clarify
1984	10268653	"Diapolo, i had to add ```-loleaut32``` as per https://github.com/Diapolo/bitcoin/commit/510f7fceb677ce1af3096f5c2b54f3832e5efee2 but i also shifted it around with the other deps "	nAnswer
1984	10460564	@Diapolo Could you shed some light on whether 0.4.x - 0.6.x need this as well? Thanks 	Other
1984	10463432	"I really can't comment for < 0.6 as I never compiled any versions below that for myself, but I remember that some Boost version update made me use a similar project-file. Dunno remember more details, sorry. "	Other
1983	10080914	"I like the old, deprecated names much better than the new ones ;p  "	Clarify
1983	10082363	"IMHO, we should define, what deprecated means in that case and when it is considered safe to remove old naming conventions :). Perhaps add a date or version, when this is the case. "	Clarify
1983	10083144	"ENOCARE/ACK.  (I don't really care, changes looks fine).  "	Reject
1983	10100479	"Have we really arrived at the point that we deprecate commands (and thus break backwards compatibility) for aesthetic reasons?  This means we'll end up with duplicate commands for a long time, make it harder for people to google the commands. And communicating this to users is another problem, as we"	Clarify
1983	10100621	"I just wanted to ask :), your points indeed are clear and valid! As this pull renames without removing the old names that problem doesn't rise. "	Clarify
1983	10104504	"I think the only RPC makeover worth doing is a much more fundamental one, where we normalize commands, separate them clearly into modules (as already reflected in the source code... but who would now guess that gettransaction is a wallet RPC, and getrawtransaction a blockchain one?), normalize the d"	Clarify
1983	10260993	"@laanwj : ""setaccount"" used to be called ""setlabel"", so there is a precedent for breaking compatibility (after maintaing the old names for a while) just for aesthetic reasons.  "	Clarify
1983	10434460	"Consensus seems to be ""don't care / meh / not worth the trouble""...  closing.  Perhaps put this on a list for a bigger RPC revamp, or right before RPC is locked in stone for version 1.0 (whenever that is). "	Clarify
1982	10057932	"I like the idea of exposing certain data via HTTP instead of as RPC calls. Need to think about the format, though. "	Clarify
1982	10060796	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/83dd3f31e230ce8b8cc50026454f5e9b9a2b36a6 for binaries and test log. "	nAnswer
1982	10083819	OK on the first two commits.  What is the use case for dumping crypted wallet keys? 	whQuestion
1982	10434635	"Rebased.  @gavinandresen wallet backup, that doesn't need to be encrypted yet again.  @sipa has a fair point on format, though. "	nAnswer
1982	10667286	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0a60c82ad6f6acdd899825a5db65b2b1d2f7d841 for binaries and test log. "	nAnswer
1982	16084814	"Closing.  Not much interest, and wallet dump format still an open question.  Was originally at @kjj request. "	nAnswer
1981	10053562	ACK 	Clarify
1981	10068475	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1c83b0a3771bc601fdc75588f2cd45318b19c526 for binaries and test log. "	nAnswer
1981	10200605	ACK 	Clarify
1981	10205878	"I'm interested, what benefit does this induce performance wise? Any numbers or some more details? "	ynQuestion
1981	10207447	"Before, the LevelDB write buffer was always 4 MiB, the LevelDB cache for both databases (one very small, one somewhat larger), and the coin cache was flushed everytime 5000 transactions changed.  This commit makes the -dbcache value better respected, by splitting it over all types of caches, using a"	Clarify
1980	10070463	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/ef3c7a8403c07c79880cf028c109abaeb8f40e61 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1980	10254749	/poke @BitcoinPullTester 	System
1980	10434479	"ACK  Seems somewhat important to merge this, yes?  "	yAnswer
1980	10438860	Guess there is no need to wait fot @BitcoinPullTester as it seems to be down? 	nAnswer
1980	10441953	"@jgarzik Yes, kinda.  Reason I want @BitcoinPullTester, is because Matt claimed it had tests for this issue in particular, though it seems to validate head just fine. "	Clarify
1980	10619071	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cd6dc96c4fb24f3c40e989442a6503403a944e78 for binaries and test log. "	nAnswer
1980	10625345	"It seems ""he"" is working again :), nice. "	Clarify
1979	10050509	ACK! 	Emphasis
1979	10081517	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8776f79b9b9f0ee221cafe427adf782216c6fe7f for binaries and test log. "	nAnswer
1979	10082325	ACK 	Clarify
1979	11580000	Bravo! 	Emphasis
1978	10049978	ACK 	Clarify
1978	10066551	"ACK, makes sense and should not need deeper discussions ;). "	Clarify
1978	10087862	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/92467073adc11a76a26bbb55ccaed454169636f3 for binaries and test log. "	nAnswer
1977	10049150	"Are you sure this is a no-op? Maybe one of the included header files between the undef and the define needs the original, or tries to define printf by itself? "	Clarify
1977	10049209	"It was this pull, who included this change https://github.com/bitcoin/bitcoin/commit/69d605f410c83235aa7b757445e7d0166fcfe2d9, but as you see between the #undef and the #define are only boost or std headers, well I'm not sure it's a no-op, but compilation and running the client is working fine. We i"	Clarify
1977	10049324	"That line is actually ancient.  It's showing up the text as being from me because I renamed `src/rpc.cpp` to `src/bitcoinrpc.cpp`. However, the line was in there way before that.  Some deeper git forensics shows that the first commit in which the printf redefinition was in `src/rpc.cpp` was 84c3fb0."	Clarify
1977	10049364	"Thanks for digging, although I'm still not sure if it's needed there or not. MSVC 8 is ancient, also. "	Clarify
1977	10049397	"No one knows. I'm ok with removing it. After all, as you say, all the rpc*.cpp spinoffs work fine without it.  Though my real preference would still be to remove the re-definition of printf, rename OutputDebugStringF to some sane name such as debug_log(), and use that throughout the source code. But"	Clarify
1977	10052514	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ed552cfae078778ebaebf1786bad0305ee730479 for binaries and test log. "	nAnswer
1977	10057945	ACK 	Clarify
1976	10049366	It's too bad all this stuff needs to be included in the headers 	Statement
1976	10056522	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5b28f9261b93c03a833a4f693b1123192d9c349d for binaries and test log. "	nAnswer
1976	10057955	"Meh. Minimizing includes is nice, but specifying your direct dependencies is also nice, as it reduces problem when refactoring things... "	Other
1976	10061364	"@sipa My pulls are just an offer, if they don't make sense for all platforms we support, just comment and close them :). "	Clarify
1975	10684855	"Are you sure that your RAM isn't faulty? you could test it with the windows 7 built in memory tester, takes hours to test I think. "	Clarify
1975	11323004	Closing this issue as it was solved by redownloading the block database. Work is in progress on automatically detecting a corrupt database and rebuilding the index / redownloading when needed.  	nAnswer
1974	10044423	This is repetitive and doesn't add any new functionality. You can check for new incoming transactions after -blocknotify and obviously you will already know about outgoing transactions. 	Clarify
1974	10044686	"No, this triggers when a transaction comes in or goes out in any way, not just when blocks hit.  And now that we have the raw transaction API and offline signing and transmission is relatively easy, it is no longer obvious when transactions go out. "	nAnswer
1974	10057975	"This is probably useful for a lot of people who would otherwise depend on polling (or using centralized services to know when to poll), but it hopefully doesn't inspire people to do 0-conf accepts.  ACK. "	Clarify
1974	10434507	ACK... with maybe some doc describing some usage issues like what Gavin raised. 	Clarify
1974	11655453	I've had a need for this kind of alert in applications before and as a result ended up writing a custom bitcoin client with its own internal filtering. I would love to be able to attach a listener to the mempool (perhaps SyncWithWallets could be extended to this end) which can perform filtering beyo	Clarify
1974	11659181	"How about instead an option to output transaction information to a file instead? That way, a separate program can deal with the problem of flooding, etc, and triggering commands from output as it appears in the file. "	nAnswer
1974	13954885	Couple of ACKS... this is definitely better than what we have now.  I'm going to pull.  	Clarify
1973	10033311	ACK 	Clarify
1973	10033491	That's a good thing! 	Statement
1973	10035748	"Violations of MAX_INV_SZ get you DOSflagged.  So it should get some ""P2P node rule"" flag, perhaps?  MAX_MONEY is an implicit protocol rule. Kinda obvious though.  ACK in any case. "	Clarify
1973	10036627	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9d6633ac0de9d2a24333525cffdf0b23164ecad3 for binaries and test log. "	nAnswer
1972	10001110	ACK 	Clarify
1971	9987732	ACK  	Clarify
1971	9987962	"running an iteration over all blocks for each transaction every time relay transactions is called may eventually become slow for wallets with a great many transactions.  ACK though, since improving that sounds hard and I don't see it being an immediate issue. "	Clarify
1971	9988202	"@gmaxwell It's a loop over all wallet transactions, the transactions contain the hash of the block they are encoded in, and those just require a lookup in mapBlockIndex to know whether this means they are confirmed. So it's a O(n_wallet_tx * log(blocks_in_history)) operation. "	Clarify
1971	9995816	ACK 	Clarify
1971	10009051	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5eaf91a4286380e5db239b63477b627ab91a53e7 for binaries and test log. "	nAnswer
1970	10017175	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8986a1369f572e2d4f50da91ddb172dc37e83abf for binaries and test log. "	nAnswer
1970	10257387	ACK 	Clarify
1970	10260843	ACK 	Clarify
1969	9905656	"It would help, if you could show us more details via the debug.log before the exception. Did the client crash before or did your PC crash while the client was running? Any strange things that happened before that error showed up the first time? "	Clarify
1969	9905892	Version 0.6 also gave some similar error. Please see below part of debug.log. Let me know if you need more information.  Bitcoin version v0.6.3-beta (2012-06-19 16:44:55 -0400) Default data directory /home/pander/.bitcoin Loading addresses... dbenv.open LogDir=/home/pander/.bitcoin/database ErrorFil	Other
1969	9921170	"It seems that your blockindex got corrupted somehow. You should make a backup of your wallet.dat and then clean your data-directory and only leave in the ``wallet.dat``. This leads to a re-download of the block-chain, which can take a while though. "	nAnswer
1969	9937086	"Yes, this workaround worked. It did not by the way for the problem I had with 0.6 a while back.  Please catch these fatal errors and provide a meaningful message for the end user. I can imagine that some users would really not know what to do. A small text and a link to a FAQ or troubleshoot manual "	Clarify
1969	28218103	Closing this as there is no blkindex.dat anymore 	nAnswer
1968	10049093	"@laanwj You added this a few months ago, so perhaps you can comment here? "	Other
1968	10049411	"No idea, and I don't have time to investigate this either. (it's just a predefinition of a function so I think it is impossible that it hurts anything, so let's just leave it in for a year or two)  "	nAnswer
1968	12728362	"Should be removed in the future then, closing this. "	Statement
1966	9851742	ACK; tested on gitian 	Clarify
1966	9853493	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/51600d0ab9ae88c7f2fac8423cf0a8bcc483f969 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1966	9857759	"AFAIK there were problems with Qt 4.8.3 at least when using it on Windows due to problems with ressource-files and qmake, I hope they fixed that.  And I'm missing an updated download link for the updated Qt in: https://github.com/bitcoin/bitcoin/blob/master/contrib/gitian-descriptors/README#L34 http"	Clarify
1966	9861768	"It seems gitian works with this (and already worked) because it first builds Bitcoin-Qt, which has some magic in its .pro file to build leveldb, and that leveldb built gets reused for the bitcoind build. That is fine of course, but we should make sure that building bitcoind separately also works, wh"	Clarify
1966	9869958	@Diapolo So should we downgrade to 0.8.1 then? 	whQuestion
1966	9871325	I don't know what's wrong with 4.8.3. Is it documented anywhere? 	whQuestion
1966	9873070	"I'm fine with 4.8.3 if it compiles just fine with Gitian, I only wanted to mention it is causing some trouble on Windows, when trying to build a project with that version. As this doesn't touch our builds don't weighten that info too much, as it was perhaps a missleading information, sorry then.  Se"	Clarify
1966	9879907	It compiled fine in gitian for me 	Statement
1966	9880611	"Okay, then if you update the 3 missing references to Qt 4.8.3, too, I'm fine with that commit :).  https://github.com/bitcoin/bitcoin/blob/master/contrib/gitian-descriptors/README#L34 https://github.com/bitcoin/bitcoin/blob/master/doc/release-process.txt#L33 https://github.com/bitcoin/bitcoin/blob/m"	Clarify
1966	9882346	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7bf7047b879a3903bbc8646cb5e1dd7ea8aff539 for binaries and test log. "	nAnswer
1966	9882560	"OK, updated with the missing 4.8.3 updates, should be good to pull now. "	Clarify
1966	9882733	ACK (untested but looks sane) 	Clarify
1964	9851115	"If you are native on Windows, you should just comment out from https://github.com/bitcoin/bitcoin/blob/master/bitcoin-qt.pro#L97 up to line 111, as this currently doesn't work on Windows.  I guess you have MinGW installed, so you are able to compile LevelDB via MinGW Shell.  ``cd /c/Users/Diapolo/bi"	Clarify
1964	9853063	"The Boost version I have came in the deps zip, referred to in the `readme-qt.rst`, but I run into a problem which appears to be inherent to the version of boost that is included in that zip, which has no directory `boost/io`: line 15 of `boost\date_time\gregorian\gregorian_io.hpp`: `#include <boost/"	Clarify
1964	9855110	"I was able to compile the boost libraries I need, but only under Windows - making .lib files, not .a files.  I suppose that's no good for compiling bitcoin-qt under mingw.  I see three options and I wonder which one might be best: 1) Install Cygwin and compile the Boost libraries that are needed (ch"	Clarify
1964	9857610	"I would vote for 1), as there is currently no core-dev using Windows as native OS, which means the deps-package won't get an update. I compiled Boost only using Windows command-line, which IS a pain ^^. "	nAnswer
1964	9879794	"It would be the Boost libraries that I'd compile under Cygwin, and then update the dependencies archive.  I'd still do bitcoin-qt under qt with mingw as the windows instructions describe. "	Statement
1964	9953836	"I got cygwin, and started following the instructions for compiling boost libraries (http://www.boost.org/doc/libs/1_51_0/more/getting_started/unix-variants.html - note that the Cygwin bash shell puts me on a POSIX platform) and got an error indicating that bash was trying to execute blank lines: ""$'"	Clarify
1964	9954645	"My two cents:  Combining multiple tool chains (e.g. mingw and cygwin, or mingw and visual studio) is a bad idea.  Try to compile everything with the same compiler.  I would very much like to see somebody figure out how to make everything build with the Visual Studio toolchain, because I think that i"	Clarify
1964	9973219	"@dscotese Yes you need to build *everything* against MingW libs. If any part links against Visual C or MingW, undebuggable madness ensues. As a plus, you will learn a lot about linker internals :frog:!  @gavinandresen I have a build for bitcoind + bitcoin-qt + most deps (everything in one project fo"	Clarify
1964	9995388	"I don't have the need for or the feeling to miss MS Visual C++ support, I'm loving my MinGW / Qt Creator toolchain :). What I would love to see is a working solution to compile LevelDB via that toolset.  I'm able to compile OpenSSL, BDB and Boost dependencies, which is all I need. Currently LevelDB "	Clarify
1964	9995688	@dscotese This is how I build the boost libs with MinGW on Windows:  Example for Boost 1.49 extracted to D:\boost_1_49_0 in my case!  - D:\boost_1_49_0 must be set as BOOST_ROOT environment variable  --------------  open D:\boost_1_49_0\bootstrap.bat replace ``set toolset=msvc`` with ``set toolset=g	Clarify
1964	10004731	"Very helpful.  I balked when I saw that Boost hadn't tested MinGW, and that's why I went to Cygwin.  But I just followed your instructions and they worked perfectly.  Below are some edits (in bold)  > Example for Boost **1.51** extracted to **what we'll use as BOOST_ROOT below**: >  > **Set the BOOS"	Clarify
1964	10005378	"I'm getting two errors, one insinuating that the compiler was passed -fno-rtti (and then the code tries to use runtime typing), and the other that insinuates that exception handling is disabled by default.  Where do I look to alter the flags passed to the compiler? "	Clarify
1964	10006294	"I'm glad you could figure out that Boost stuff now, btw. @laanwj do you think it makes sense to keep that howto somewhere in the doc folder?  Are you using the default MinGW that ships with the Qt SDK?  My toolchain is using -rtti, which is coming from ``\mkspecs\win32-g++\qmake.conf``. I'm not sure"	Clarify
1964	10019192	"Once you get everything working properly, please update doc/build.msw.txt and doc/readme-qt.rst and submit a pull request so we don't forget all of your hard work to get this all working properly.  "	Clarify
1964	10031770	"I installed MinGW before I installed QT, to the root of C, so I compiled the Boost libs with the MinGW in the root of C.  There are only 4 items in my `C:\QT\4.8.3` folder that contain ""MinGW"" so I think my QT installation detected my existing MinGW installation and didn't install its own.  @gavinan"	Clarify
1964	10032186	"AFAIK in order to use a custom MinGW version you also need to build the Qt libs with that MinGW version, did you do this?  Can you open command-prompt and enter ``g++ -v`` and post the output please? "	nAnswer
1964	10036681	Regular DOS command prompt and QT4.8.3 Command prompt and the MinGW Shell all produce the same output: ``` C:\Users\dscotese>g++ -v Using built-in specs. COLLECT_GCC=g++ COLLECT_LTO_WRAPPER=c:/mingw/bin/../libexec/gcc/mingw32/4.7.0/lto-wrapper.exe Target: mingw32 Configured with: ../gcc-4.7.0/config	Clarify
1964	10037790	"Alright, so let's do a step-by-step for getting Qt compiled on Windows with an own MinGW (which you indeed have).  1. Install ActivePerl (mine is ActivePerl 5.14.2 Build 1402), which is needed to compile Qt (you need to google the download) and update it's components via Perl Package Manager (start "	Clarify
1964	10924329	"Thanks for the instructions, and the pointer that 4.8.3. has a qmake problem with resource files.  I'm working on compiling Qt as I type this.  I asked a bunch of questions and I think your instructions answer some, but I wanted to check that I understand:  Is it reasonable to expect the Boost libra"	Clarify
1964	10924501	"The configure.exe command worked, but it's `-debug-and-release` option starts with one dash.  I just started the compile.  http://doc.qt.digia.com/qtcreator-2.4/creator-project-qmake.html describes how to use different versions of QT in QT Creator.  Pretty cool to see all those processes pop up in t"	Clarify
1964	10927864	"The really important thing is you need to build everything with the same MinGW version, this starts from the libs, to Qt (and Qt Creator can also be build for yourself), leveldb and the client itself. So MinGW is the compiler and Qt Creator is your used IDE.  From what you are writing I think you ha"	Clarify
1964	10936115	"I got it compiling, but when I tried to run it, I got ""During startup program exited with code 0x0000c135"". I used ProcessViewer to determine that this is because miniupnpc.dll isn't in the path.  Bitcoin-qt.pro had MiniUPNP enabled by default, and I don't see miniupnpc.dll in my bitcoin installatio"	Clarify
1964	10936750	"After adding miniupnpc.dll to by bitcoin debug directory, I can start the debugger, but I get a SIGSEGV right away on this line in db.cpp: CDBEnv::CDBEnv() : dbenv(DB_CXX_NO_EXCEPTIONS) The stack shows the ""Level 0"" Function is DbEnv::DbEnv(unsigned int), and in the disassembler, it seems that the s"	Other
1964	10942536	"You didn't check out your branch at first, perhaps that's why you see ``master -> master``. Also I never got the miniupnpc lib to compile, so I use ""USE_UPNP=-"". Remember, all libs need to be built by the very same MinGW compiler suite :). "	Clarify
1964	10983555	"I added ""USE_UPNP=-"" - QT Creator now reports my qmake command line as `qmake.exe bitcoin-qt.pro -r -spec win32-g++ ""CONFIG+=declarative_debug"" ""USE_UPNP=-""`, but net.cpp references miniupnp and fails: ``` Makefile.Debug:253: recipe for target 'debug/bitcoin-qt.exe' failed mingw32-make[1]: Leaving d"	Clarify
1964	10984148	"I think the problem I ran into with the USE_UPNP flag was that I didn't clean the project, so it didn't end up recompiling net.cpp.  I deleted the net.o file and rebuilt and that generated a successful compile with `""USE_UPNP=-""`.  I still get the segfault, so I figured I should clean everything and"	Clarify
1964	10986182	"@dscotese Why not backup your modifications in your Git-branch by simply copying them out of the used directory, delete your branch and start with a clean master branch.  ``git checkout master`` ``git branch -D ds_native_windows`` ``git branch ds_native_windows`` ``git checkout ds_native_windows``  "	Clarify
1964	11030749	"Here are the relevant additions to the readme-qt.rst file:  - If you have MinGW before you download the QT SDK, it seems that QT won't install the MinGW with which it was built.  This is a problem because of differences between versions of MinGW, but you can still use your MinGW - you just have to r"	Clarify
1964	11034828	"You wrote you are observing a segfault, but did you ever build a release version in Qt Creator? The used debugger is GDB, which you also can compile for yourself, so perhaps just try a release build before.  Which version of Qt Creator are you using? Was it build by your toolchain or did you downloa"	Clarify
1964	11232525	"I don't understand ""so perhaps just try a release build before.""  Do you mean that IF the release build works as expected, then I can assume the debugger needs to be compiled with the same version of QT that I used to compile bitcoin-qt?  I suppose that makes sense.  The gdb being used was last writ"	Clarify
1964	27959543	"Refers to old build system, and boost::interprocess is no longer used, closing  "	nAnswer
1963	9896928	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0b297a614f80214dbd826fe5af92b4eaa60911bb for binaries and test log. "	nAnswer
1963	9900527	Go BitcoinPulltester go! 	Emphasis
1962	9903609	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f7bb8d71edbe2168622040ed8f13867e44f57cb5 for binaries and test log. "	nAnswer
1962	9992887	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0e53edbd61b9020b338a9fd7cae24fb5ed575d02 for binaries and test log. "	nAnswer
1961	10473673	@wowus Is this related to the problem described in #1960 and the mentioned fix? Can you check if current master fixes this for you. 	Clarify
1961	11019988	@Diapolo It's unrelated. 	System
1961	16892995	I think we should have a look at this before 0.8.2. 	Clarify
1961	17365591	"walletpassphrase starts 2 threads, ``ThreadTopUpKeyPool()`` and ``ThreadCleanWalletPassphrase()`` I guess there is something wrong here when calling walletlock, while the ThreadCleanWalletPassphrase() is still running? "	Clarify
1961	17366669	"The wallet passphrase logic should be rewritten, preferably using a boost::asio timer (we're using boost::asio for RPC anyway).   "	Statement
1961	17550095	Should be fixed by https://github.com/bitcoin/bitcoin/pull/2625  	Other
1961	17665190	"@wowus : I cannot reproduce this either, even on my wimpy 32-bit OSX 10.6 laptop.  What OS/machine configuration are you running on? "	Clarify
1961	17693293	Arch Linux Intel x86_64 	Statement
1961	22745708	"Closing as ""we can't reproduce""  "	Other
1960	9773843	Sounds like a deadlock... 	Statement
1960	9884639	"I'm using `Bitcoin version v0.7.1-95-gc13f5db-beta`.  I've got the same issue here, after using `move` at least the RPC server is broken. as i don't mine with the client i can't tell about other stuff breaking, though `tail -f -n 0 debug.log` still shows it connecting to peers: ``` 10/29/12 20:38:45"	Clarify
1960	10239626	"Same problem here. RPC command ""move"" locks the client. Tested on Windows 7 x64 & Linux 2.6.32-5-amd64, BitCoin v0.7.1 (64 bit) "	Other
1960	10254212	"@laanwj You are way more skilled to debug this, so as this is now high priority you can perhaps take a look at it? "	Emphasis
1960	10348896	Fixed by #2009. 	System
1960	10473663	@94m3k1n9 Can you verify current master is fixing your problem with ``move``? 	whQuestion
1960	10473865	"Yes, moving works for me after applying this patch. "	yAnswer
1960	10474388	Fixed! 	Emphasis
1957	9766292	I'd love to see this functionality in the mainstream client. Does anybody know the history of the uint256 structure? I've never heard of that type of hash. I know it's used in signmessage and verifymessage but options for other hash types (possibly enumerated with another argument to sign/verify) mi	Clarify
1957	9767563	"I'm not against this functionality per-ce, but I don't like to have it in the core. We already suffer from some feature bloat.  I suggest implementing it as an external tool that hashes your file, then signs the resulting hash using the existing `signmessage` call. This keeps everything nice and con"	nAnswer
1957	9767817	"It's a core feature and would benefit many transactions, with a fix on file size limitation (loading the entire file into ram isn't good for performance and scalability) this feature really deserves a position in the main branch. An external tool will lead to lack of addoption and frankly, this feat"	Clarify
1957	9768187	"It's easy to hash a file in a streaming fashion, you certainly don't need to read it into ram.  Also you don't need new RPC server calls for this. You can use the existing signmessage/verifymessage RPCs with the hash of the file (and maybe some added salt) as message. You could even generalize it to"	Clarify
1957	9769860	"Also you don't need new RPC server calls for this. We actually do, I personally won't trust a hash of a hash. Overloading the signmessage/verifymessage to have an option would be fine, but the feature has to implement the signature hash as a direct hash of the file.  The signmessage/verifymessage "	Clarify
1957	9770048	"There is no security difference between using a hash, or using a hash of a hash (there's at most a 0.66 bit decrease in entropy, which makes brute-forcing a collision about 1.26 times faster on average). Given the fact that we're already using double-SHA256 for POW and blockids and txids, you should"	Clarify
1957	9770138	"sipa do you have details about the signmessage/verifymessage uint256 structure and the hash function?  Really the point is that it's a messy implementation, and adds calculation overhead. It can and should be avoided, unless there's a reason we should use hash of a hash. "	Reject
1957	9770244	"The hash function is double-SHA256(""Bitcoin signed message: "" + message). The result of this is stored in a uint256 data type (and unsigned 256-bit integer). It is signed using ECDSA, encoded in a 65-byte structure that allows recovery of the public key. This 65-byte structure is then encoded in bas"	nAnswer
1957	9770535	"In addition to that, the whole Merkle tree concept used throughout bitcoin is based on hashes of hashes (of hashes...). Also many code signing approaches rely on hashes of (groups of) hashes, such as the JAR signing I mentioned. Not trusting hashes of hashes is quite irrational. That's ok, we're all"	Clarify
1957	9770566	"@robbak The reason for this method was having the ability to sign messages with keys corresponding to Bitcoin addresses, so one can prove ownership of coins, or prove being the sender of a transaction.  I do agree it doesn't need to do more than what it can already - it just has to core functionalit"	Clarify
1957	9770839	"This is why I asked if this was the best way! Discussion is good.  I'd still really like to see a ""standardized"" way of signing files with my bitcoin key, but I agree the API doesn't really need to be any bigger than it is. How about keeping ""signfile"" and ""verifyfile"" as client-side calls that gene"	Clarify
1957	9770890	"It is signed using ECDSA, encoded in a 65-byte structure that allows recovery of the public key. This 65-byte structure is then encoded in base64. In this case can a file signature be done in openssl simply using the address private key? That would be standard easy to adopt. "	Clarify
1957	9849312	"@NaruFGT sorry, there are no standard encodings that have all necessary data for public key recovery from a signature, so we had to invent our own. "	Reject
1957	9883090	NACK.  I agred that this is feature-creep.  I think this would be much better implemented as a little python or shell script shipped in the contrib/ directory that computed a hash for the file and then called signmessage.  	Clarify
1957	9903634	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/a7b0f3829e30d43632e2bf342631d011c6ddb270 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1957	10434566	"One explicit NAK, and two ""OK but not in core"" seeming NAKs.  Closing.  Perhaps consider an external utility that does this; look a ""test_bitcoin"" for an example of a non-bitcoind binary that uses core bitcoin data structures. "	Reject
1956	9754611	"Please update doc/release-process.txt if this requires a change to the release process.  Could this be automagically defined if git HEAD has a tag, so we don't have to remember to define/undefine it? "	Other
1956	9755295	"I thought about triggering it on minor=99, I think that would label ""dangerous"" versions automatically.  As for git magic, I don't know. "	Reject
1956	9762628	"Sometimes the version number in merge windows is _._.99.0, and sometimes it's _._._.99 - depending on what release we're aiming at. Testing for this would be a way, but I'm not sure.  The question is where do you put the border between showing the warning and not. Final releases obviously not, withi"	Clarify
1956	9766655	"I've updated the release process to set CLIENT_VERSION_IS_RELEASE to `true` before a release.  We *do* know for sure that the current state is dangerous, so IMO we should merge this as soon as possible, and get the edge-cases clear later.   Pragmatic solution: we could just set it to false next time"	Clarify
1956	9767337	Pragmatic solution: we could just set it to false next time we think the state of the tree is dangerous enough to warrant a warning.  @laanwj I really like that one! Btw. why are there so many changes in the UI file? Is it because of a different layout chosen?  Edit: I seem to miss the bitcoind ch	Clarify
1956	9767627	"@diapolo getinfo returns GetWarnings(""statusbar""), so no special changes are needed for rpc  There are really very few changes to the layout, try `git diff -b` (ignore whitespace changes) or use a character-wise diff tool instead of github's line-based one. The only thing that happened is adding an "	Clarify
1956	9768869	"I didn't look into the getinfo code, thanks for explaining :).  ACK to get this in ASAP. "	nAnswer
1956	9774934	Looks nice! ACK 	Clarify
1955	9774269	"ACK. Help message already specifies that the argument is optional, and the code itself checks whether the argument is present.  "	nAnswer
1954	9739324	"If a -datadir is specified and there's a problem with it, you want to get an error, not a default. "	Statement
1954	9739824	"Well that is indeed also true but just leads to the command-line parsing discussion and silent errors. Perhaps I missunderstood what is causing the crash ... it was bitcoind and seems to be caused by the Shutdown() call. I guess there is no need for this patch then ^^, sorry. "	nAnswer
1953	9728759	"Tested by reproducing both issues while syncing testnet under valgrind, and by mining on testnet. "	Other
1953	9728780	@gmaxwell The part with the LOCK is also described in #1946. I can confirm this fixes the assertion I observed a few times while doing some testnet tests. 	Clarify
1953	9728976	ACK 	Clarify
1953	9729005	"@Diapolo Duh, I should have paid attention to the issues, it would have saved me a few minutes. :P "	Clarify
1953	9729027	"Perhaps it sunk in my pull-request spam :-D, but nice it gets fixed. "	Statement
1953	9740949	ACK 	Clarify
1952	9720127	"The braces aren't necessary, but nice catch. ACK on the change. "	Reject
1952	9721064	Wasn't sure about the coding style ;) 	Statement
1952	9728601	Can you please squash the both commits into one :).  - git rebase origin -i - add squash in front of the second commit 	Clarify
1952	9729061	ACK after squashing to one commit 	Clarify
1952	9736379	Diapolo: I did the rebase thing and git forced me to merge and now there are 4 commits... Should I just create a new pull request?  Edit: never mind I get it now 	Emphasis
1952	9737693	"It's best to fetch upstream changes (current master ``git fetch upstream``), rebase to upstream (``git rebase upstream``) and afterwards rebase origin and squash your commits. You can kick unwanted commits out by simply removing their line while doing ``git rebase origin -i``. "	Clarify
1952	9789338	Cherry picked cde4b11 as 3026baaa7c3. 	Continuer
1951	9715924	"Seems logical, as before the blk000x.dat files had a hard-coded limit of < 2GiB on Windows. I'm sure @jgarzik or @sipa can clarify this. Are you using NTFS or FAT32 as filesystem? "	Clarify
1951	9725372	NTFS and EXT4. Linux PPA build 0.7.0 exhibits the same behaviour. 	Statement
1951	9729271	"Don't blame the file system, modern filesystems can handle huge files (how else would you store your BluRay images :smirk:)  It's probably some trivial issue using `int` or `unsigned int` as file pointer with `fseek` instead of `off_t`.  Looking at `CDiskBlockPos` in main.h:       ...     unsigned i"	Clarify
1951	9732973	"I suppose a CReadBuffer that wraps around CAutoFile or other reader classes, and has a method for skipping input until a fixed string is found, would be a very neat solution that doesn't require any seeking at all.  Also, fixing the byte offsets to use off_t instead of ints in the code would certain"	Clarify
1951	9737788	"Is off_t a 64 bit unsigned integer? That would allow quite bigfiles ^^.  We need to fix this even with ultraprune, because of the bootstrap.dat file mentioned. "	Clarify
1951	9738470	"off_t is whatever the system supports for offsets, but it's not entirely standardized (there's also a off64_t sometimes, with corresponding lseek64 function, defeating the purpose of the origin off_t somewhat).   What I'm saying is that off_t would certainly be an improvement over what we have now, "	Clarify
1951	9739447	"As noted in IRC, the specific problem is that LoadExternalBlockFile() calls fseek(), whose file offset is limited to signed 32-bit (long) on 32-bit platforms.  This impacts Windows, Linux and presumably OSX as well.  1) LoadExternalBlockFile() should be updated to avoid seeking.  Most likely fread()"	Clarify
1951	9739607	I wonder if SEEK_CUR would work? 	ynQuestion
1951	9739710	"SEEK_CUR would probably work, but why chance it?  A simple linear read works fine too.   "	Other
1951	9756183	"A different solution would be to have blockchain-generating scripts create transaction block files less than 2GB in size, perhaps named bootstrap.001, bootstrap.002, etc, and have Bitcoin look for and import these sequentially instead. One must be concerned about another file - blkindex.dat, it is 1"	Clarify
1951	9766916	`off_t` is 64 bit if -D_FILE_OFFSET_BITS=64 is defined. I've just verified this with mingw and linux (someone needs to verify on OSX).   Another problem is that we use `fseek` takes a `long` for the offset. This depends on the architecture. We could instead use `fseeko` which takes an `off_t` (and `	Clarify
1951	13370473	This is reported solved by https://bitcointalk.org/index.php?topic=142151.msg1518404#msg1518404 	ynQuestion
1951	13370882	"Yes, it is solved "	yAnswer
1950	9701795	"Note: The command line for launching bitcoind should not have RPC commands such as getinfo included, those should be issued by a second instance of bitcoind to issue rpcconnect commands. e.g.: console 1: bitcoind -datadir=/home/foo/bar console 2 (after bitcoind has started): bitcoind getinfo  Behavi"	Clarify
1950	9702107	Fyi: Providing -datadir with rpc commands is fine if you have multiple instances of bitcoind running on different RPC ports and want your command to go to the right one. 	Reject
1950	9702435	"About the RPC command: yes it's unnecessary for reproducing the bug, but I just happened to run it that way ;-) "	Clarify
1950	9809178	"@tucenaber Can you please try current master again, there was a fix merged related to the Shutdown() function. "	Clarify
1950	9816166	It works as expected. Close it. 	Continuer
1949	9675363	"I inserted a trigger case for this bug in testnet, confirmed that it failed, and then confirmed that this pull doesn't fail. The code also looks fine to me. ACK. "	Clarify
1949	9686163	ACK  	Clarify
1948	9669171	Agreed this is a good idea; but what should it do for bitcoind (no GUI)? Maybe disable GBT (and getwork) unless fTestnet? 	Statement
1948	9674428	"I think it should be showed only for non-testnet use. If you want to run the alpha on testnet, what could happen? "	Statement
1948	9674637	Agree with @xanatos; i'm also not sure whether it should actually disable features - people will always find ways to do stupid things anyway 	Clarify
1948	9674717	For bitcoind we could make it preface the error field in getinfo. 	Statement
1948	9691690	"Indeed, let's add some big scary warning bar.    "	Other
1948	9777693	Has been implemented and merged 	Statement
1947	9675043	ACK 	Clarify
1947	9729048	"ACK (it'd be nice to use something for IPC that doesn't have problems on so many platforms, see also #1719) "	Clarify
1946	9654571	"The problem persists even after re-starting the client and doing a -rescan.  I was connected only via Tor while testing this, so could it be that my mined block was not broadcasted or via too less nodes (I'm no pro on that part of Bitcoin, sorry if this makes no sense)? "	Clarify
1946	9655859	In addition I was now able to reproduce the following error with the same test condition as described above: ![assertion problem](http://i47.tinypic.com/2py9hxf.png) 	Clarify
1946	9659573	"Can you try moving the line 'CBlockIndex* pindexPrev = pindexBest;'  in CreateNewBlock to inside the large block that is headed by 'LOCK2(cs_main, mempool.cs);' (right below that LOCK2) "	Clarify
1946	9659749	"Yes, I'll try again with the above applied. "	yAnswer
1946	9663172	"I was still able to get the ``Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.`` message, an assertion did not occur anymore ... but I need more time testing this.  Not sure if that message is related to Ultraprune, perhaps I'll take th"	Clarify
1946	9663392	"When connecting a block fails, its work amount is written as bad. When this happens because of an wrong reason, you should restart with a clean datadir, as the warning will remain (until the chain catches up at least). "	Clarify
1946	9663564	"Actually, you shouldn't be able to mine at all during IBD. I'm sure this bug existed before ultraprune, but the resulting assertion failure is probably new. "	Clarify
1946	9664839	"@sipa What do you think about adding this into the setgenerate RPC call?  <pre>     if (vNodes.empty())         throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, ""Bitcoin is not connected!"");          if (IsInitialBlockDownload())         throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, ""Bitcoin is dow"	Clarify
1945	9653904	"I have the same issue patched in my preliminary port directory. I have used the solution chosen by the author of the databases/leveldb port:      --- port/port_posix.h.orig    2012-05-31 00:56:59.000000000 +0800     +++ src/leveldb/port/port_posix.h    2012-06-15 15:07:41.274868153 +0800     @@ -25,"	Other
1945	9654062	All I did was replace the port_posix.h file in bitcoin with the one from the latest commit of leveldb. It seems to me like the cleanest option. 	Statement
1945	9654129	"Note the bitcoin codebase doesn't work in big endian at all right now. Also note that despite many headers/software making the assumption that endian is fixed at build time, that assumption is apparently not necessarily true in theory.  The cleanest option is to use a git submodule to embed LevelDB,"	Clarify
1945	9654329	"Well, if anything, upgrading to a newer upstream version of the the port_posix.h file is no problem in my opinion, certainly if it fixes building for some people. "	Statement
1945	9675053	ACK 	Clarify
1945	9914409	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/17bfb1f4378445aaf5b3c3afdd47e289e22c0545 for binaries and test log. "	nAnswer
1945	9922526	"Alternatively, we could try updating to LevelDB 1.6 entirely? "	whQuestion
1945	9922890	"@sipa Is there a changelog fot that available? IMHO as long as there is no stable release available, we are free to do this whenever it's needed / wanted :). "	Clarify
1944	9699891	"<pre> Upgraded -> Started bitcoin -> Tried donation links which failed -> Quit bitcoin -> Found multiple donation link processes and force closed them -> Tried starting bitcoin again, but would get no gui or unresponsive gui -> Tried your suggestion and got same result -> Reboot machine -> bitcoin w"	Clarify
1944	9732617	Maybe do a check at startup so the client don't start more instances if it's already running? But Bitcoin-qt 0.7.1 does know that the database is locked and quits after the error message is shown in my windows 7 64-bit. 	Clarify
1944	9732720	"There seem to be way too many problems with boost::interprocess... how do other programs deal with this? Sending a message to a running program should be something trivial, in my opinion. Maybe it would require platform-specific code for almost any platform, but that isn't worse than what we have no"	Other
1944	9735444	"Qt supports named pipes on any platform that we care about, imo that's the best solution.  Platform specific solutions are more work and probably require hacking around qt left and right for window handles and such. "	Clarify
1944	9737887	"@burger2 There is a check at startup, which just tries to send new URIs to the message queue used for handling URIs. If that succeeds skip further client startup and exit, if no message queue is available start a new client. To me it seems that check doesn't work reliable, when impatient users are c"	Clarify
1944	9768162	"I wasn't impatiently clicking on the link multiple times in rapid succession. I clicked it twice, the second time only after a few minutes. Rebooting the computer did seem to resolve the issue though, so it might have just been a specific issue to my machine. As I suggested, maybe rebooting a window"	Clarify
1944	9769040	"I was not trying to say you are that kind of impatient user, I just wanted to clarify this can trigger a problem :). "	nAnswer
1944	15832257	"@gavinandresen As your paymentserver pull was merged, this can be closed IMO. "	Statement
1943	9648458	Supercedes #1870  	System
1943	9648629	"ACK  It would be nice if the code movement was pre-pended as a separate, first commit, but that's nit picking.  "	Statement
1943	9649455	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/fb917a38cc17d6484d2ffa93c6cdde6861d30ee2 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1943	9649538	"Works good for me.. I abused this a little bit (running in valgrind, aborted runs, concurrent RPC activity) and haven't yet been able to break it. I haven't yet reviewed the code. (I have a lot of reading to do to fully catch up with ultraprune) "	Clarify
1943	9649641	"Er. Perhaps I spoke a bit too fast. the reindex appears to have been aborted by recieving a new block from the network, which caused a wad of orpan blocks and then sync continued very slowly from a remote peer. Perhaps while reindex is active we should ignore new blocks from the network? "	Clarify
1943	9680007	@jgarzik split the commit in two 	whQuestion
1943	9720210	"@gmaxwell That's exactly what happens, by the way. While reindexing, fImporting is true, and the ""block"" message gets ignored entirely, and no IBD is initiated. "	Clarify
1943	9848841	Rebased on top of #1962 	Statement
1943	9848874	"By the way, this also swaps the order of -loadblock's and bootstrap.dat. Bootstrap.dat should be first. "	Statement
1943	9916148	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/a31ed6aeece0b0201eb52fc566001f3f15dd1b98 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1943	9922124	Rebased and tests fixed 	Continuer
1943	9954445	"'Works' for me, though I'm still seeing it get disrupted by blocks on the network and end up taking forever. "	nAnswer
1943	9960492	"Added support for continuing reindex across restarts, and improved output. "	Reject
1943	10001882	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d515540a18935cd8c9a1901bf1c3dcf559fcf568 for binaries and test log. "	nAnswer
1943	10049594	Improved GUI feedback during reindex.  @laanwj Can you also have a look? 	Clarify
1943	10049775	GUI changes look good 	Statement
1943	10093629	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/70b6ec491f6589dc66ee1ef11089527d9f3e75f9 for binaries and test log. "	nAnswer
1943	10200786	"ACK code changes (haven't had time to test thoroughly, but that shouldn't hold up the pull).  "	Clarify
1941	10069871	"You found a pretty bad bug there, good catch. "	Clarify
1941	10071294	Thanks mate :). 	Statement
1940	9645026	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/46936f343c5f9740e1ad8e0defeced7861c1a35a for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1940	9922935	"It would be nice if the one, who did the Windows port could comment. Problem is I dunno, who it was... "	Statement
1940	10266253	"It would be even nicer, if that Boost stuff could be auto-detected, but I dunno how that could be achieved here. At least the uses version stuff here should match that from bitcoin-qt.pro, so I propose ``-mgw44-mt-s-1_50``!  https://github.com/bitcoin/bitcoin/blob/master/bitcoin-qt.pro#L320  That pa"	Clarify
1940	10267450	Or even nicer if the Windows port didn't depend on boost... 	Clarify
1940	10268626	"Diapolo, i tried to make it like the https://github.com/bitcoin/bitcoin/blob/master/src/makefile.mingw#L18 "	Statement
1940	11298655	"Merging on the assumption ""better behavior than we had before"" "	Clarify
1939	9646089	Fixes it for me. 	Statement
1938	9641313	ah. Yea. Good call. We don't want current git bugreports confused with 0.7.1. 	Reject
1936	9626006	ACK  	Clarify
1936	9631832	"ACK (but I'm being lazy, I didn't run it against unit tests-- I assume you did?) "	Clarify
1936	9631935	"@gavinandresen Yes - I even tried changing it to return faulty results, to check whether the current unit tests catch it (they do). "	Clarify
1935	9589625	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/de91ea0c0c2fead60bfe9a531558cbe1c562346e for binaries and test log. "	nAnswer
1934	9448925	I don't see why this is a bugfix. The result of c_str is guaranteed to remain accessible as long as the backing string isn't modified. 	nAnswer
1934	9449548	"Hmm, didn't know that. Okay. "	Reject
1934	9450768	"I agree that in general it's bad form to store the result of c_str(), as it makes for fragile code, but in this case it's a constant parameter so it's ok.  "	Clarify
1933	9449571	See #1932 	System
1932	9595428	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ba43db93dd08141176ca50aff361bbecea5b17b8 for binaries and test log. "	nAnswer
1932	9928049	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/847593228de8634bf6ef5933a474c7e63be59146 for binaries and test log. "	nAnswer
1931	9418514	"I had tested with the ""inactive"" bars but I wasn't sure what was better. Thanks for the removing of the commit. "	Statement
1931	9418771	"ACK, just wondering if the icon looks a little sharper, when you supply a higher resolution and let Bitcoin-Qt resize it? "	Clarify
1931	9420183	"@Diapolo Depends on what rescaling algorithm @xanatos used, but usually manually controlling the scaling result gives a better result than qt does ""realtime"". Anyway, I don't think it gets any sharper than this. "	Clarify
1931	9420297	If you want I have the 32x32 source. It is multilayer. It is in Paint.NET format. 	Statement
1931	9421300	"Why was this merged, considering it makes Bitcoin-Qt non-free? At least GPL is free. "	Statement
1931	9424388	"Sorry, this has been reverted. We can only accept public domain and MIT (BSD/expat/...) licensed icons from now on. "	Statement
1931	9424701	"I think it's rather good that we have some ""eagle eye""-dev for such special thinks who watches and warns. What sometimes feels like nit-picking is wanting only the best for the client. So I would say @luke-jr is the guardian of licenses :-D. "	Clarify
1931	9434717	"On the other hand I wasted my sunday morning on these icons. And @xanatos probably more time, so I wouldn't exactly call this a win.  And if that wasn't enough, I spent part of the evening on IRC trying to dispell Luke-Jr's bullshit that I'm some kind of dictator threatening to make Bitcoin non-free"	Clarify
1931	9437407	"I have to tell the truth, the position of Like-Jr feels a little Stallmanian, but in the end, this isn't a problem of mine. My part of work was done. Now someone else can redraw the icons.  Can someone reopen my Issue and/or open a similar issue? The problem that those icons make the bitcoin-qt GPL "	Clarify
1931	9441634	@xanatos Bitcoin-Qt is fully in compliance with the terms imposed by the GPL'd icons. 	Statement
1931	9442271	"@luke-jr I hate hate hate myself. I just lost 30 minutes of my life, just to write this.   NO NO NO Just to be sure I have just installed the bitcoin-0.7.0-win32-setup.exe from SourceForge. Now.... There isn't any GPL.txt file (or similar file with the license) (this makes bitcoin incompatible with "	Clarify
1931	9442488	"@xanatos I suppose technically speaking we need to include a copy of the licenses, but that is hardly a big deal. Since the MIT license allows anyone to relicense the work under more restrictive terms, the rest of the code *can be licensed by anyone* under the terms of the GPL *in addition to* the M"	Clarify
1929	9463567	"Not a bug in the client.  pwd loses it context as well under the same conditions.    However the block chain does get corrupted and cannot be rescanned after a remount.  Not sure what, if anything, could be done to handle the situation where the filesystem gets kicked out from under the client.  I'l"	Clarify
1929	9554618	Everything reloaded and running smoothly off the encrypted file system for 48 hours or so.  	Clarify
1927	10485528	The bug is still in 0.7.1 swedish translation on windows 8 64-bit. 	Statement
1927	10489906	@burger2 Can you check https://www.transifex.com/projects/p/bitcoin/ and correct it if still a problem there? 	Emphasis
1927	10492100	"@burger2 is right, the tab and the button to execute the sign / verify have the same shortcuts. I think it's a great mess to need to re-translate such strings for all used languages when we need to change them because of a dup shortcut :-/. "	Clarify
1927	10492183	I was gonna try compiling the latest sources from git and with the latest translations from transifex in my ubuntu install but after my ubuntu got upgraded to 12.10 I got the new database engine that gives me errors when compiling so I haven't done any testing =(  I'll check transifex soon... 	Clarify
1927	10493754	"@Diapolo We don't, I can easily copy the old translations - and fixes like this to the English strings shouldn't affect others, though of course in this case the translation happens to have the same bug :) "	Clarify
1927	10495034	Now I got it compiled finally in ubuntu and I still got the same bug. I think I have an easy fix for it.  Just change the shortcut key to M (Verify &Message) & (Sign &Message) of the button and leave the tabs shortcuts as they are. I tried this in QT creator design mode and just changed it and recom	Clarify
1927	10496670	"Now I just need to learn how to use git to submit this =)  ```cpp  diff --git a/src/qt/forms/signverifymessagedialog.ui b/src/qt/forms/signverifymessagedialog.ui index 8128bdf..4887110 100644 --- a/src/qt/forms/signverifymessagedialog.ui +++ b/src/qt/forms/signverifymessagedialog.ui @@ -148,7 +148,7"	Clarify
1927	10496847	I'm confused. Are we talking about English or Swedish? :/ 	Clarify
1927	10497126	The bug is in both... the diff is for the English string so that translators notice the bug. 	Clarify
1927	10617695	Gah... I'm not compatible with git... just doing all wrong again =( 	Clarify
1927	15664045	I forgot to close this... it's was fixed a long time ago =) 	Clarify
1926	9394306	"Actually, I don't think it's this simple. With the new height-in-coinbase requirement, I expect either this can be left alone/null, or we need to put a height in there. I would have expected the latter, but it's obviously working right now for some (unknown to me) reason... "	Clarify
1926	9394729	"It certainly cannot be left alone. Right now the dummy script is four bytes on 32 bit systems and eight bytes on 64 bit systems, and may contain undefined data (possible information leak or crash), which is obviously wrong.  If two bytes is not the right size, what is? (If eight bytes is working, sa"	Clarify
1926	9395771	RE: Luke-Jr's comment:  Should be  scriptSig = CScript() << (pindexPrev->nHeight + 1)  I suppose...   	Other
1926	9396676	"This solution breaks the autotester:      pblock->vtx[0].vin[0].scriptSig = CScript((short)0);  With the following error:      Running 70 test cases...     unknown location(0): fatal error in ""CreateNewBlock_validity"": std::runtime_error: CreateNewBlock() : ConnectBlock failed     test/miner_tests.c"	Other
1926	9605046	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a0ef4e1ee9807b9b553606778ba0884f3e602520 for binaries and test log. "	nAnswer
1926	9617483	"It's scary that only @BitcoinPullTester is active in the project, what's up? Did I miss something? "	whQuestion
1926	9628533	Everything (at least core changes) are in hibernation waiting for ultraprune (#1677) to be merged :smile_cat:   	Clarify
1926	9629237	That patch scares me even more ^^... 	Statement
1926	9629392	"It is scary, but it is a necessity. It helps against some long-running performance issues and will allow for new features. We can make it somewhat less scary by testing and reviewing it extensively, that's why other things are on hold. "	Other
1926	9729145	"Rebased, can be merged again "	Statement
1926	9732861	ACK 	Clarify
1926	9740991	ACK 	Clarify
1925	9402073	"Updated to remove the ""--param ssp-buffer-size=1"" flag from the project file, no changes to makefile.unix. "	nAnswer
1925	9618767	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/493940038f44412ece135e1a625499ea89a93e56 for binaries and test log. "	nAnswer
1925	9769119	@laanwj Any reason to not merge this now? 	ynQuestion
1924	9386930	"I think you're right - but it shouldn't have any real effect. The dummy is just used to get past the ""coinbase must be at least 2 bytes long"" check, and is replaced before anything really uses it anyway. "	Clarify
1924	9392577	"Good catch!  It's supposed to be simply a two-byte sized zero buffer. There's no need for it to be a zero-terminated string. So let's use      const char pszDummy[] = {0,0};  "	Clarify
1923	9401740	"To be more precise you removed ""all tooltips from QActions""?  "	whQuestion
1923	9402086	"No, not from all, just from the ones, which were only used for tray menus and in our main menu. The tooltips on toolbar buttons (e.g. QAction *overviewAction;) are still there. I verified which were safe to remove. "	nAnswer
1923	9402281	"ok.. ""except from the tab buttons"". I agree they are pointless at the moment.  But it's a bit sad to throw these messages away, which have been translated into many languages. I wonder if there is another way to show a short help message for menu items?  It appears that on the Qt documentation they "	Clarify
1923	9402995	"You are absolutely right, it even looks nice to use tooltips for these :). I'll change this pull.  Edit: Well it doesn't look nice, when hovering a menu item which has a tooltip during block-sync as the statusbar text get's garbelled pretty ugly (2 different texts displayed at the same place -> unre"	Clarify
1923	9403069	"Hm, indeed, as we use the status bar for different purposes, we'd need to find a solution for that. I think most straightforward would be to hide status tips when something else occupies the status bar? "	Clarify
1923	9403131	I've currently no idea how to do this ... but I'll try via an event filter :). 	nAnswer
1923	9403366	"I got it working, will update this pull later. I installed a global event filter on qApp and use this code to prevent the garbelled text:  <pre> bool BitcoinGUI::eventFilter(QObject *object, QEvent *event) {     // Catch status tip events     if (event->type() == QEvent::StatusTip)     {         // "	Clarify
1923	9404188	I think it's a good solution! 	Emphasis
1923	9417754	"Updated with event filter, would be nice if @laanwj could test it, too. "	Clarify
1923	9626047	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/da1962e2fd6c27a3a34d1f6108042b0c35c94c93 for binaries and test log. "	nAnswer
1923	9628594	"I can't get status tips to appear at all on Ubuntu. This is likely an Ubuntu problem :cry: (as it exports the menu), not a bug in the code.  Edit: It works when disabling the ""Native menubar"":      QT_X11_NO_NATIVE_MENUBAR=1 ./bitcoin-qt -testnet  This proves that the problem is in https://launchpad"	Clarify
1923	9628637	It works in windows! That means it will also work in other Linux distributions that don't hijack everything.   ACK  	Emphasis
1923	9629230	"I think another pull should be made after this, to get a tooltip for every single item used in the main menu, which is currently not the case. It feels incomplete when we leave it that way IMO. "	Clarify
1923	9629359	"I recommend setting the status tip equal to the tooltip for all QActions by default. This keeps the amount of messages relatively small, and they're never visible at once anyway (ie, tooltips show when the QAction is used for buttons and statustips when the same action is used for menu item).   "	Clarify
1923	9654159	@laanwj I updated this pull to now use statustips in addition to tooltips where it makes sense and added new descriptive texts for some elements that were missing these. 	Clarify
1923	9654558	"Instead of repeating the message, why not do:      widget->setStatusTip(widget->getToolTip())  (or other way around) Otherwise they're bound to diverge over time. "	Clarify
1923	9654664	Sure that is way better :). 	Statement
1923	9655035	Updated to reflect your suggestion. 	Statement
1923	9769376	"@laanwj I guess this needs a rebase after your warning bar pull is in, but are you ok with it now?  I have a question on our used eventFilter() functions. The Digia doc says: <pre> If all the event filters allow further processing of an event (by each returning false), the event is sent to the targe"	Clarify
1923	9769455	"QObject is not the target object. It is the superclass, it's customary to call the superclass method when overriding a method in Qt. It might well be implemented as ""return false"", but that's an internal implementation detail.  Edit: yes this is ok with me now "	Statement
1923	9769554	"Alright, but we also have some that use ``QWidget`` or ``QDialog`` and one that uses just false. I just want to understand, if we should harmonize that and what are the resons we did it like it's now. "	Reject
1923	9769759	"Yes, if your superclass is QFoo you should use QFoo. QObject is used for classes that derive from QObject. Etc.  Using just false could cause bugs in event propagation in some cases, at least theoretically.  "	Clarify
1923	9935281	Can I get an ACK? 	ynQuestion
1923	9935447	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3c4bac3c2f3eb4ff9b60d6f64b5e035dee7e5fd4 for binaries and test log. "	nAnswer
1923	9936051	ACK 	Clarify
1922	9394183	I just tried importing from transifex myself and get the same result. So you did nothing wrong. I still can't explain it though.  Edit: seems that the message was in the translations and one of the duplicates is now removed. OK. 	Statement
1922	9397993	Good work guys! 	Emphasis
1920	9356408	"This does not happen with my local build, which has #1901 included! "	Other
1920	9363728	@diapolo you're right. This is a classical use-after-free:      const char* pszDataDir = GetDataDir().string().c_str();  * string() creates a temporary string * c_str takes a pointer (which is a non-owning reference) to the buffer of that temporary string  * the temporary string is freed after leavi	Clarify
1920	9363879	#1921 	System
1920	9366960	"@laanwj You can hit me, but I had a bad feeling when Gavin started using this ``const char *`` with the BDB excpetion hardening patch and was thinking about asking him to use a std::string, but as I nit-picked too often over the past weeks I keept quiet ... seems that was wrong.  Thanks for fixing t"	Clarify
1920	9367283	"Closing, as a patch was merged! "	Emphasis
1919	9310584	"I tested this with official 0.7.0 release and on Windows 7 x64 the ""X"" button, is greyed out and not usable for me. The button text is untranslated, so that is an issue (see #1137 for more details as I've observed this before). You can see this, when clicking Settings > Encrypt Wallet..., the Cancel"	Clarify
1919	9313067	"This dialog is a quick hack to get around the limitation of stdout/stderr in windows programs, and never meant as more than that. It uses the default QMessageBox, as doing anything else would be bloat (we really don't want a custom view for this).  I'm thinking of removing the button from the Debug "	Clarify
1919	9329416	"@laanwj It is rather clear what the button is intended for, I see no need to remove it, as it should be helpful at first for all Windows users, which are not that familiar with command-line fiddling ;). "	Clarify
1919	9329835	"Yes it is clear what the button is for, however, making it part of the ""main"" UI seems to confuse people into thinking it should be all-polished.   Maybe we should make it windows-only at least. For Linux, the way to get command line options is the good old 'bitcoin --help' (or the man page, if some"	Clarify
1919	9356241	"> I tested this with official 0.7.0 release and on Windows 7 x64 the ""X"" button, is greyed out and not usable for me.  Probably a glitch with Qt on Unix-like systems side then. I was using GNOME 2.30.2 on Lucid and MATE 1.4 on Precise on which the screen shot was taken. Anyway, it's just window cosm"	Clarify
1918	9626315	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/6c4ef621c8e1b65454cc90a9d7877c81813e2263 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1918	9637258	@jgarzik Any idea why BitcoinPullTester complains? 	Other
1918	10434666	"Closing, for now.  Need to think more about @gmaxwell 's comments (see #1833, the previous version of this pull req) with regards to the proposed expiration of old, unconfirmed transactions in the memory pool.  "	Clarify
1918	10697960	Also note this broke Bitcoin-Qt builds. Looks like we need that startup time variable @Diapolo suggested a while back... 	Clarify
1917	9237362	"Seems sane, but incomplete:  turning off exceptions implies you must run through the code, and replace all existing exception checks with return value checks.  EnvShutDown is one obvious example, but there may be more that require converting, before exceptions are simply disabled.   "	Clarify
1917	9238001	EnvShutDown was the only place where exception error checking was expected. Everyplace else returns-error-code error handling was used.  	Clarify
1917	9238267	ACK  	Clarify
1916	9627663	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bd2e1405711f6ba81adadb6ea6206e916c29453b for binaries and test log. "	nAnswer
1916	9637253	ACK 	Clarify
1914	9423773	"I agree that it could be useful to show that it's still doing something while shutting down, to prevent the user from shutting down his computer while it's busy.  However, I'm not sure a notification is the right thing to do here. After all, we can't reliably control how long it is shown. "	Clarify
1914	9424652	"Well it is shown as long as it takes to shutdown the client, which is a behaviour I like. When there is some DB work to do before we can shutdown, you clearly see the client is still working in the background. A quick shutdown means you just see this flash up and disappear.  Did you try / test the p"	Clarify
1914	9628565	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5805b5a8447ea40ac30e92c895fd21ddace1e020 for binaries and test log. "	nAnswer
1914	9852808	"I tried to test this, but shutdown is too quick to see anything. What should happen? "	Clarify
1914	9857453	"It should show a tray-notification (dunno how such a thing is called with Linux) as long as the client is shuting-down I found out, that after your Ultraprune-patch, the client is shuting down much more quickly than before, so perhaps this patch doesn't make sense anymore. "	Clarify
1914	9934442	"The problem is that notification behavior is OS dependent. On some OSes it might show until the program terminates, on others it may be gone before that, and on still others it could linger after the program died.  "	Clarify
1914	9934931	"I'll close this one, you are right. "	Statement
1913	9209417	This is the right thing to do and if it causes no compilation problems it should get into 0.7.1 IMO. We don't need unused / incpomplete stuff in the code. 	Reject
1913	9241750	ACK  	Clarify
1913	9249414	"ACK, no need to keep half-finished stuff in "	nAnswer
1911	9184357	ACK.  Will this break translations?  So should it wait until after 0.7.1 ?  	Other
1911	9185000	"Yes, this will break translations.   BTW how do you get signed/unsigned warnings for printf? Normally it only barks on data type width mismatches.  "	Clarify
1911	9187359	" Yes the wording of the pull is misleading, it should read ""fix wrong (signed/unsigned) printf format specifier in bitcoinrpc.cpp"", sorry. Should be merged after 0.7.1.  Edit: Updated to clarify commit message! "	Clarify
1911	9241928	ACK  	Clarify
1910	9207528	Well I suppose we do want consistency in exposed terminology... 	Statement
1910	9208556	"All these minimal changes to the translated messages over time cause lots of translations to be lost. See also #1796. And my replies in #1830.  My opinion is still that we need a script to update all translations on Transifex when the English source message for a message changes only syntactically, "	Clarify
1910	9209263	"@laanwj I agree, it would be nice to have such a command, on the other hand we have not such a thing (currently) and I'm always going to point people at strings like these, which are not correct in the end ;). Have you got an idea for such a script? "	Clarify
1910	9241939	-ENOISE  Surely there are better bike sheds to paint. 	Statement
1910	9629609	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/09e8e4ee8e6cb157bd216b4a5f2be953fae5f0ed for binaries and test log. "	nAnswer
1910	9646557	This is now a NON translation changing patch. 	Statement
1909	9173452	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cac6b389d101999d98c3137b17812cce062f924d for binaries and test log. "	nAnswer
1909	9242045	"Yeah, it just seems terribly odd and possibly error-prone to allocate a lock... in a racy fashion.  Just make the lock global and put it early in main, to make sure it is instantiated/initialized before anything else in the program.  As it stands now, either this your change or without, the first-us"	Clarify
1909	9243705	"@jgarzik making it global and putting it early in main won't fix the problem; the order of global destructors is undefined in C++.  As long as there is a printf/OutputDebugStringF before we start creating threads (and there is, early in AppInit2()) there is no race.  Reworking logging should be done"	Clarify
1909	9244380	"gcc has long followed the now defined C++0x order described here: http://cpp0x.centaur.ath.cx/basic.start.term.html  _""If the completion of the constructor or dynamic initialization of an object with static storage duration is sequenced before that of another, the completion of the destructor of the"	Emphasis
1909	9249891	"I already acked this for 0.7.1 (assuming we want this out of the door soon), but it does need more thinking.  If you make the pointer global (i.s.o static) and explicitly initialize it in an InitLogging() (called directly at the beginning of AppInit2) function you avoid the destructor trouble, plus "	Clarify
1909	9267676	Ok.  I pinky-swear promise I'll rewrite this The Right Way for 0.8.  	Reject
1909	9309099	Maybe The Right Way means using http://www.boost.org/doc/libs/1_32_0/doc/html/call_once.html ? 	Clarify
1908	9136210	"I love it as it makes the code so much more readable, great pull IMO. "	Statement
1908	9157330	ACK. 	Clarify
1908	9157469	ACK  	Clarify
1908	9158204	ACK 	Clarify
1907	9133099	"ACK of course, the earlier the better :). "	Clarify
1906	9133176	"ACK, seems the right thing to do! "	Reject
1906	9183856	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bb353618f16d1faf29de2f1fe4ad191122c90c27 for binaries and test log. "	nAnswer
1906	9184315	ACK 	Clarify
1905	9133204	"Also a good idea, but the strings could be translatable? "	Statement
1905	9135274	"They can't. This check is done far before the translation system is initialized, as to support lang= in bitcoin.conf (which is in the data directory). The old message was also not translated, I've just put it in useful form for windows users.  "	Clarify
1905	9135497	"Right, didn't have that in my mind! ACK then. "	Reject
1905	9136160	"We could eventually decide that `bitcoin.conf` contains core options and not GUI options (as we store GUI settings in QSettings now it's kind of pointless), but all changes in ordering have to be considered really carefully to not break anything. "	Clarify
1905	9136423	I've added a comment to make this clear.  	Clarify
1905	9193797	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/61fd72695f291a7a083cdc8ba96bda971c19eb53 for binaries and test log. "	nAnswer
1904	9115192	"Good but incomplete.  You should also remove: 1) ""reply"" message handling 2) mapRequests 3) PushRequest*() functions  "	Clarify
1904	9116237	"Ok, even better, I think I got them all now.  "	Statement
1904	9116539	ACK  	Clarify
1904	9195730	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/529a4d4824136a00e63cd69831023b9c4dd6936b for binaries and test log. "	nAnswer
1904	9207537	ACK 	Clarify
1904	9209425	"Same here, I think such removal pulls should get into 0.7.1. "	Statement
1904	9788702	ACK. 	Clarify
1904	9788729	ACK 	Clarify
1903	9103832	"The intended behavior is (we've discussed this before):  - command line options temporarily override QSettings for that run (ie, command line takes precedence for effective settings, but do *not* permanently set the qsetting) - options GUI shows currently effective settings, no matter where it came "	Clarify
1903	9114516	"I know we had talked about that ;), but I had some problems left, let me explain.  What if I pass a proxy via -proxy, which is then displayed in favor of a possibly stored proxy value from QSettings and press ``OK`` (save), it will certainly overwrite the stored QSettings, is this behaviour okay for"	Clarify
1903	9117000	"I think the ideal solution would be to implement a ""dirty"" bit per setting so that only settings that are actually touched are written when ""OK"" is clicked. But in the meantime, the current behavior (clicking OK saves the currently viewed values to QSettings) is fine...  **The next heavy thing is wh"	Clarify
1901	9095714	"They're str* now  (interesting bit of oversight here, those psz* prefixes are to me like funny variable names, didn't even think for one second that they had meaning about the type. A possible relation between types and variable names just doesn't fit into my head :-) )  "	Clarify
1901	9196636	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/416279c3a82f2ef13d3c7dab368e1f139ec950b9 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1901	9196802	"Seems that the windows build needed some boost headers headers in util.cpp:      util.cpp: In function 'void ParseParameters(int, const char* const*)':     util.cpp:510: error: 'to_lower' is not a member of 'boost'     util.cpp:511: error: 'starts_with' is not a member of 'boost::algorithm'  Fixed, "	Clarify
1901	9207550	Can you also remove strlcpy.h from doc/assets-attribution.txt? 	ynQuestion
1901	9207586	Done 	Statement
1901	9207693	ACK 	Clarify
1901	9242084	ACK  	Clarify
1900	9068559	"OK to the changes, except the one that requires an ""extern"" global variable in the header file.  The idea is to keep the communication with the bitcoin core limited to the *model.cpp implementation files. "	nAnswer
1900	9069080	"That one is easy to revert, I wasn't aware of the reason you mentioned above. Edit: Updated! "	Emphasis
1900	9069263	"It's violated in a few places, for example signmessage.cpp directly uses core calls and data structures. That's very low-priority, and it's not worth adding too much code for, but when I can I try to prevent it. "	Reject
1900	9077983	"@laanwj Thanks for explaining the idea to limit core access to *model.cpp, but I have to ask what makes the difference between having them in a .cpp or a .h only in the end? "	Clarify
1900	9079114	"Compilation time, and it makes it easier to separate out the UI code, for example if we make the UI a separate process. "	Statement
1900	9198741	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7bc65ff1083c726391923fddac86e5abc4b0f2db for binaries and test log. "	nAnswer
1900	9204024	Any reason why having the getters in .h is preferrable? 	ynQuestion
1900	9205784	"I'm neutral on this. This change is balancing on the ugly edges of C++, on one side this cuts down on the amount of boilerplate lines to compensate for the lack of properties, on the other hand this moves implementation details to the interface description which is also undesirable (but in many case"	Clarify
1900	9207517	"@laanwj Ok, good to know. There has been a general trend towards moving code to .cpp files, but I wasn't sure to what extent we want to pursue this. I don't care about having such oneliners in .h files. "	Clarify
1900	9207555	"Right, in the case of non-type-parametrized and non-trivial code, the implementation should certainly be in the implementation file. "	Statement
1900	9209356	"I found it rather hard to follow your discussion as I'm missing some tech-english here. In the end is such a change wanted or should it be avoided (ACK / NACK)?  Edit: And as a remainder, the getLanguage() function was already in the header :). "	Clarify
1900	9209379	"Yes, ACK. "	yAnswer
1900	9209483	ACK 	Clarify
1899	9082868	See-also: https://github.com/TheBlueMatt/bitcoin/commit/22e96a1aee5196fe2f33c2faa35320d00c6499f4 which was the first commit in #1453 	nAnswer
1899	9084506	@TheBlueMatt why is that part of the windows upgrader pull? :)  	whQuestion
1899	9084602	"Because there was discussion of the proxy stuff in that pull, so I coded it while I was on that branch...probably should have been separate, but...meh "	Statement
1899	9085223	"@TheBlueMatt I didn't know that you had worked on that part, sorry. Apart from that I think my pull is smoother in the end, as we don't need a GetProxySocksVersion() function, which is the result from a discussion with @sipa and @laanwj.  I'm currently trying to overhaul the whole proxy stuff in the"	Clarify
1899	9085677	"No big deal, I just found it funny since IIRC that proxy stuff that I wrote was a result of a discussion with you on the auto-update thread. "	nAnswer
1899	9086155	"I have to admit I did not have that in my mind anymore :-/, sorry. But I want to support you, to get that Windows update stuff in before 0.8. I hope this proxy stuff get's in soon (unsure about 0.7.1 though), so you don't need to rebase too often as some other code parts that are touched by your pul"	Clarify
1899	9117324	"@Diapolo yes we really need your help as windows dev to get that windows auto-updating stuff in :) Personally, I think that's more urgent than perfecting the settings dialog. "	Clarify
1899	9137992	"@laanwj The current proxy related pulls are not there, only because I have some GUI ideas in my mind, they make proxy usage better and extend it with nice new stuff + fix the missing lock.  @TheBlueMatt As you opened the proxy lock issue, can you perhaps take a look at the code and ACK or give a sho"	Clarify
1899	9157655	"Didn't test, but ACK on changes to core. "	nAnswer
1899	9164958	"@Diapolo Ill look at this in the next few days, and...not sure when Ill get around to updating the auto-update stuff... re: pull-tester, dont think so, but it seems like the jenkins server has mysteriously slowed down even more recently...not sure whats up with that (I chose to blame dnsseed, but I "	Clarify
1899	9201789	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/63275485658818fa52ae5245e9a5dfd7f87ee84c for binaries and test log. "	nAnswer
1899	9630960	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5e5c102f2f901a19fda6ff877ab4195a88e4b703 for binaries and test log. "	nAnswer
1897	9062314	"This is one of the goals that I had in mind with the ""uiInterface"" design. It is possible to install listeners for signals such as ""new transaction"" or ""transaction status changed"" in a decoupled way.  This is currently used to send updates to the GUI, but handlers could be added to trigger JSON pus"	Clarify
1897	9072192	"New block / block being replaced is already there, see the -blocknotify command-line/bitcoin.conf option. It is trivial to combine it with curl to get a ""send block information to a URL when there is a new block.""  With some programming you can keep track of 1/6-confirm transactions using it.  For m"	Clarify
1897	9072290	"PS: we need some good example of using -blocknotify to keep track of 1/6/double-spent transactions, a little 'watchconfirmed.py' in contrib/ would be nifty. "	Clarify
1897	9076434	"Agreed, I think putting outbound JSON notification itself in the core is overkill. If we had something lightweight, like a socket that you could connect to where you get a packet when an event happens, that'd be just as useful (and more versatile than launching a command). A simple Python script cou"	Clarify
1897	9076555	"JSON-RPC 1.0 was bidirectional, so would have fit well. Unfortunately, that functionality was removed in 2.0. I have a pullrequest for GBT longpolling open, but I don't know how well it would work for events in general (seems too easy to miss an event). Chunked encoding could be used to simply strea"	Clarify
1897	9076648	"We're not going to invent _another_ protocol for this.  If HTTP JSON-RPC longpolling does not provide a solution, then the stratum protocol would be the next natural community-adopted candidate.  Line-based JSON-RPC, whether client or server may send asynchronously, seems a fair match. "	Clarify
1897	9077114	"Who is inventing a protocol here?  @luke-jr I don't like longpolling. IMO it's kind of a hack, as you have to re-establish the connection every time.   I'm not sure about ""most clients"", but streaming JSON data over a HTTP connection works fine at least in Python. If you can receive streaming video "	Clarify
1897	9077608	"stratum has nothing to do with protocol buffers.  It is a protocol that is _less complex_ than HTTP, even:      C: JSON-RPC \n     S: JSON-RPC \n     C: JSON-RPC \n     S: JSON-RPC \n     S: JSON-RPC \n  No HTTP headers, no HTTP chunking, etc.  Very simple and easy: just text lines of JSON.  Client "	Clarify
1897	18816079	So is there any progress on this? It would be a huge improvement to make automated payment systems with bitcoin since that'd reduce amount of polling required to process transactions. 	Statement
1897	18822441	"Likely this will never be implemented, as there are other ways to do notifications.  1) You can make your own push notifications by using the -*notify commands with a little Python (or shell) script:       -blocknotify=<cmd>     Execute command when the best block changes (%s in cmd is replaced by b"	Other
1896	9125218	Yeah! It's nice with updated translations! 	Emphasis
1896	9131694	See #1907  	System
1895	9114236	"I know you will for sure dislike the following comment, but I'll try for the last time (you won't get any further comments on strings in your pulls, if you want) as the brave knight for unified string usage ^^. Can you change your Warning messages to the following format:  ""Warning: First sentence! "	Clarify
1895	9143425	"@Diapolo : good idea on the Verifying message.  And ok, I'll change the first period to an exclamation mark.  I'm finding serious bugs doing more testing; writing here so I don't lose track of them:  1) Getting a crash on my main wallet, bdb complaining about out of memory (out of mutexes).  2) Gett"	Clarify
1895	9154474	"Updated to not ""pre-verify"" blkindex.dat which fixes the 'out of mutexes' problem (looks like bdb does not clean up after a ->verify() ?), pick up some changes from @jgarzik version of DBEnv::RemoveDB (kept RemoveDB as the name, though, since it removes a database not a dbenv), and tweaked Warning! "	Clarify
1895	9207890	@gavinandresen Do you consider this pull ready now?  	Emphasis
1895	9209597	"Yes, this is pull-ready now.  I'd like some help with more thorough testing. "	yAnswer
1895	9210115	"So, this can just cause your balance to go to zero with no notice if you're not watching the logs/console output carefully. Perhaps get getinfo error field should get something?  Here is what I tested:   Using gavin's testnet-in-a-box wallet. zzuf -I 'wallet\.dat' -s 0:1000 ./bitcoind -daemon=0  See"	Clarify
1895	9210153	How does this handle encrypted wallets? 	whQuestion
1895	9240885	"@luke-jr it handles encrypted wallets as well as might be expected. It works on the bdb level, salvaging as many key/value pairs as it can from the backed-up wallet.dat.  If it encounters a database-level error reading keys (private keys, encrypted or not, or master keys) it tells the user to try to"	Clarify
1895	9244733	Rebased on top of #1917; changed error handling from bdb methods from exceptions to returned error codes. 	Clarify
1893	9027177	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/31a8b70ee3ad243a7d2a3401ced79f5ece6b4a00 for binaries and test log. "	nAnswer
1892	9040758	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4f8d9108b4d9a102aa1e1fd6fd916e339d6febc7 for binaries and test log. "	nAnswer
1892	9042595	"Thanks, seems that we also need a separate format for ""ptrdiff_t"". Should be fixed now. "	Other
1891	9012466	"ACK.   These macros are currently unused (intended for #1885), so this pull is harmless.   "	Statement
1890	9012320	"Idea is a good one, what I would love to see is avoid HTML-format tags in strings we use in translations. This is not always possible, but I would split that mega string into smaller pieces and use e.g. ``+ QString(""<br>"")  +`` or `` + ""<br>"" + `` in between.  Edit: What does the ``<qt>`` tag do or "	Other
1890	9012496	"No comment on the message, though I'd indeed suggest splitting it over multiple lines in the source code for readability.  The `<qt>` tag marks the text as rich text (for Qt::AutoText). It is not always necessary, but it's safe.  "	nAnswer
1890	9013037	"Good point about HTML in translation strings. I've removed the tags from the strings in tr(). And also made it somewhat more readable.  I'm wondering if we should include a more detailed description in the message, as previous backups don't exactly become useless as soon as the wallet is encrypted. "	Clarify
1890	9013616	"ACK, please squash into one commit "	Other
1890	9042783	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/1bf66fcc0aaf0bd12bbb1d1026d52b6388033d38 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1890	9048259	Cool that we have an automatic build and test bot!  I don't quite get the error though:      + cp bitcoind test_bitcoin out/     + git apply /mnt/test-scripts/bitcoind-comparison.patch     error: patch failed: src/main.cpp:2368     error: src/main.cpp: patch does not apply  since this patch doesn't 	Clarify
1889	9046636	"Eh. The functionality is desirable, but the ability to filesystem split the wallet and data dir is a surefire way to end up with a corrupted wallet.  This is subtle and I suspect hard to warn people out of doing, esp since it would mostly work. (until it eats your keys for lunch).  "	Clarify
1889	9056625	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/38ff7ee0239d1609a9bafd764f53fb45bbf3ac33 for binaries and test log. "	nAnswer
1889	9207904	"I agree with @gmaxwell. Can we add a check so only wallet names without / (or other filesystem separation character) are accepted? Maybe even limit to just alphanumeric names, and add "".dat"" implicitly? "	Clarify
1889	9638381	"Now that ultraprune has taken everything else out of the BDB environment, we can now have pluggable wallet locations, but it needs to move the _whole_ db environment too, not just the wallet.dat location. "	nAnswer
1889	9638427	This patch was never meant to be used to access wallets outside $DATADIR. I've written it to use multiple wallets within the same datadir. 	Clarify
1889	9638466	"Maybe not, but then it should either enforce that requirement. Alternatively, it could allow accessing a wallet file anyway, as long as the BDB dir (not the entire datadir) is moved along. "	Clarify
1889	9948345	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9ccd2da8ad5a1c38db4d3bb73a8638fa6457533a for binaries and test log. "	nAnswer
1889	10316604	@tcatm Any update and/or rebase? 	ynQuestion
1889	11786817	"I guess in the light of real multiple wallet support coming along, this is not needed anymore? "	nAnswer
1889	18122993	"Agree with the other posts. This is very useful functionality, but this should either   1) Enforce the wallet.dat to be inside the data directory or 2) Open the database environment in the alternative path if a wallet in another path is specified. As the wallet database is the only thing that uses b"	Clarify
1889	18889691	"As for (2) we really need a way to set another wallet directory (ie, walletdir=...). There is no reason anymore why the wallet directory and block chain directory would need to be the same. "	Clarify
1889	18890033	"Having been using this for a few months, I have to say I prefer (1). "	Clarify
1889	18890045	Why? Are you against setting the wallet directory?  	whQuestion
1889	18890079	"It's easier and less disk-bloating to just use simple files, IMO. "	Reject
1889	18890137	"How do you mean ""just use simple files""? I don't understand you, we aren't changing the wallet format here. BDB will still create a database environment, and it needs to be on the same disk as the .dat file (for reasons gmaxwell mentions). So if the user wants to store the wallet on say, a removable"	Clarify
1889	18890312	"Different use cases / user preferences, I guess. Maybe if there's a ""/"" on the end, interpret it as a directory, and if there isn't, make sure there's no ""/""s at all? "	Clarify
1889	18890365	"Or maybe two separate options, instead of trying to parse it from one value:      -walletdir=/dir/etc/   directory of wallet and db env (defaults to datadir)     -wallet=bla.dat         name of wallet (defaults to wallet.dat). Within walletdir, cannot contain '/'.   "	nAnswer
1889	18890664	"Too much shed painting; let's just merge it as long as the main concern is solved :)  (prefer to append the file extension in code, to ease changing wallet formats later) "	Clarify
1889	18893002	"I don't see the problem. Just allow specifying any filename, and use database/ in the directory that file is in as a database dir? If filename doesn't contain any /, use the datadir. "	Statement
1889	18909640	Agree with @sipa 	Accept
1889	20245468	I've updated this request:  1. strWalletFile is now used for salvage/recover (previously those features were still using wallet.dat) 2. The supplied wallet file can not contain paths anymore so only plain filenames are allowed now. Even relative paths inside the data directory will be rejected. 	Clarify
1889	20249269	"ACK on the semantics, but can you move strWalletFile from main.cpp to init.cpp? (the validation logic has no business knowing where the wallet file is located). "	nAnswer
1889	20437874	Any objections or ACKs? 	ynQuestion
1889	20438486	"ACK, if you squeeze the commits. "	Statement
1889	20482456	ACK 	Clarify
1889	21292391	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/674cb304b376358fdcb17b4a0b16ae7b00cdbedc for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
1888	9009090	Very nice! 	Emphasis
1888	9010375	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a249abd9721363af6516011ee2834cbe4ab33054 for binaries and test log. "	nAnswer
1888	9035665	"ACK, nice! "	Emphasis
1888	9066147	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d6b13283d19b3229ec1aee62bf7b4747c581ddab for binaries and test log. "	nAnswer
1887	9003611	"Shortened debug.log: https://gist.github.com/3803884 For clarification, it's now at block 194379 and the flushing continues. "	Statement
1887	18312829	I'm seeing the same issue in 0.8.1 after block 225431.  	Clarify
1887	18313278	Should be fixed in git head / 0.8.2rc2 	Other
1886	9003796	ACK Thanks for figuring this out!  	Emphasis
1886	9009309	"As 0.8.0 is probably not going to be ready anytime soon, maybe this warrants a 0.7.1? "	Other
1886	9010816	"I could do a 0.7.1 if wanted, but I haven't branched 0.7.x yet so let me know... "	Statement
1886	9011760	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c8bf3151880f0bed19938a7c572b24347e689175 for binaries and test log. "	nAnswer
1886	9011812	"I think it's worth doing a 0.7.1 after merging this.  AFAIK there have been no major or risky changes since the 0.7.0 release, so it could simply be spun off from master.  But it's @gavinandresen his call...   "	Clarify
1886	9011887	"When we decide to do a 0.7.1 or similar, I vote for a small RC phase or at least I need an official Gitian installation package to test the new installer sets the key correctly and there is no escaping-stuff missing for ``""%1""``, before we release a new version. "	Clarify
1886	9018124	"ACK on this pull.  RE: I'd like the goal for 0.7.1 to be this fix and much more robust recovery of a corrupt blkindex.dat/wallet.dat.  I've been working on the wallet.dat problem (randomly corrupting wallets and then making sure as much of the wallet as possible is automatically recovered), the -rei"	Clarify
1885	9012292	"Can another dev comment, if there are open warnings left that need fixing. My compiler is not giving me anymore warnings. "	Clarify
1885	9012609	I think you get this few warnings because you're building on 32 bit?  	Clarify
1885	9013068	I'm going to have a shot at fixing the others 	Statement
1885	9013379	See #1892  	System
1885	9014325	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0635602a1bb977d53210cad17c2af6121f0a054c for binaries and test log. "	nAnswer
1884	8995845	I have lost 4.5 BTC this way. The keypool was flushed when I encrypted my wallet and lost the privkey to the adress with those btc. 	Statement
1884	8996293	"@vladgiurgiubv  Just to clarify what Sipa wrote: It still remembers the old keypool keys, but it makes new ones.. so if you don't back up right after encrypting you are exposed.  "	Clarify
1884	8996652	@gmaxwell I did back up after encrypting and I still lost them. I made 100 new adresses and that still didn't show up. Should I do more? 	Clarify
1884	8996954	@vladgiurgiubv  making addresses isn't how you see if there there.. just startup with the restored wallet put in the app data directory and see if if the transactions show up after the blockchain is finished synchronizing.  	Clarify
1884	8996991	@gmaxwell I did this and didn't get the 4.5 BTC 	Statement
1884	8997081	How many times transactions do you think you made after the backup? how many times did you hit get new address?  did you see any of your transactions show up? 	Clarify
1884	8997284	"@gmaxwell I didn't make many transactions after the backup, after the backup i hit 2 times new adress...some of the transactions are showing up "	Clarify
1884	8999499	"@vladgiurgiubv  I'd be willing to take a look at it, if it's encrypted with wallet encryption and a strong passphrase, encrypt it up with gpg and send it to me (email address and key on the bitcoin.org site).  What you're describing doesn't sound possible... by looking at it I might be able to figur"	Clarify
1884	9001319	@gmaxwell I've sent you an email. :) Thank you very much for trying! 	Emphasis
1884	9012208	A simple fix is in this pull request: https://github.com/bitcoin/bitcoin/pull/1890 	nAnswer
1884	9012450	"@runeksvendsen So what can I do now?... The fix you sent is just for the warning, isn't it? "	Emphasis
1884	9012948	Yes. It will only prevent future issues with people not backing up their new encrypted wallet. I can't help you with your issue. 	Clarify
1884	9211470	@sipa You can close this as we now have warnings in the GUI and when using the RPC-command. 	Clarify
1884	9211586	Fixed by #1890. 	System
1883	8990637	ACK  	Clarify
1883	8990675	ACK 	Clarify
1883	8995936	ACK 	Clarify
1883	8998231	ACK 	Clarify
1883	8998696	ACK 	Clarify
1882	8981178	"Or maybe ""donate to bitcoin foundation""  "	Statement
1882	8981219	That works better as a button somewhere other than settings. This is for transaction fees. 	Clarify
1882	26982362	"This is not how fees are going to be computed (see Smarter Transaction Fees here https://bitcoinfoundation.org/blog/?p=290), closing this issue. "	Statement
1881	8981864	"ACK, I suppose this is a good start.  Ideally, toHTML should take a `const CWalletTx &wtx` to prevent it from making any change. The current state is lazyness from my side, I just copied toHTML from Satoshi's UI code.  "	Clarify
1881	8998700	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/50e01ee620458a7204c234697efeab1c137018b9 for binaries and test log. "	nAnswer
1880	8978702	"Seems to be a valuable addition, but as we have ``IMPLEMENT_RANDOMIZE_STACK()`` I would like to see that used or want to question if we need it anyway. "	Statement
1880	8978807	"@Diapolo I haven't checked lately, but if I recall correctly, IMPLEMENT_RANDOMIZE_STACK was effectively compiled away in recent GCCs. I've already argued for removing it, and still think we should - we have -fstack-protector to accomplish this now. I certainly won't implement it myself for new threa"	Clarify
1880	8979637	"@sipa I'm not an in depth security guru, so if we are safe and the macro doesn't add anything to our security hull I'm also fine with removing it entirely. Perhaps the person who introduced it can comment?  Edit: When GCC optimises it away, that would be also a fact pro removal IMO.  Edit 2: Other t"	Clarify
1880	8982060	"I remember we had this discussion before in #bitcoin-dev and decided we're keeping the macro, but not adding it to newly introduced threads. "	nAnswer
1880	8983752	@laanwj Some decissions I don't understand ... the code could be a little easier to read without it and would be shorter. Did no one want to remove it (do the work)?  Edit: I like that we now remove that thing :). 	Clarify
1880	9001414	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8f302d9a105919b7ff2ca90b52014fd628ccb25f for binaries and test log. "	nAnswer
1880	9208019	@laanwj Updated; moved the management of fImporting to a RAII object. 	Clarify
1880	9402413	ACK  	Clarify
1880	9632869	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a1902ea46f06b7fe7d57356fa9fe8bbd3d5aae02 for binaries and test log. "	nAnswer
1880	9634156	ACK  	Clarify
1880	9635696	ACK 	Clarify
1879	8975943	ACK (after @diapolo's comment fixed) 	Clarify
1879	8976102	"@laanwj Sorry, I don't get it. "	Statement
1879	8976362	"Huh I thought you commented something about maxosx vs macosx. Never mind, must have been another issue. "	Clarify
1879	9122630	ACK  	Clarify
1878	8974906	"The patch makes absolutely sense and why not create a patch for your second suggestions, too :)? "	Clarify
1878	8976164	Can you squash the 2 commits into one please. 	Reject
1878	8976683	@Diapolo Aaaah... I hate github... I hate git... I was trying to rebase everything in local and I closed the pull...  	nAnswer
1878	8978165	``git fetch upstream`` ``git rebase upstream`` ``git rebase origin -i`` use ``squash`` before your 2nd commit ``git push origin patch-20 -f`` 	Other
1877	8965233	@diapolo can you please check?  	Emphasis
1877	8965784	"Yeah, I'm going to do some tests!  Tests were run with v0.7.0-beta (last official release): Running instance and clicking an invalid Bitcoin-URI: passed (tray-notification is shown) Running instance and clicking a valid Bitcoin-URI: passed (client is shown / address and amount is entered) Starting i"	Clarify
1877	8971644	"It could be we have a problem with: https://github.com/bitcoin/bitcoin/blob/master/share/setup.nsi#L104  A user on the forum reports this as his entry in the registry: ``""C:\Program Files (x86)\Bitcoin\bitcoin-qt.exe"" ""$1""``, wheras I have ``""C:\Program Files (x86)\Bitcoin\bitcoin-qt.exe"" ""%1""`` (wh"	Clarify
1877	9002700	"I'm now sure that we use a wrong character in the setup.nsi file, it needs to write ``""%1""`` into the registry. But I'm not sure if this is also valid for Windows XP... "	Clarify
1876	8974677	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/60833778d4b8b6136e9e9b4d4916e27b85d08199 for binaries and test log. "	nAnswer
1876	8977048	"As far as I know, getheaders can be used like getblocks, and will only report blocks that are in the (sender's) best chain already, so though that does technically not permit reverse-headers, it seems enough to get a fast header-only syncup.  Nothing in particular against this command, but I don't l"	Clarify
1876	9002293	"Please make a BIP and discuss it on the mailing list. I think that should be procedure for adding P2P commands.  Granted, these commands are pretty trivial, but we should aim to keep protocol documentation, so that the developers of other clients can keep up. "	Statement
1876	9122664	"@laanwj See OP, ""Will BIP-ify if people like this.""  No big use case outside of diagnostics (probing network to see how many are stuck), so closing  "	Other
1875	8965254	ACK 	Clarify
1875	9006232	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fee10d800e2599962f2960ddf27963c2f3768bd0 for binaries and test log. "	nAnswer
1872	8958161	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/41906a3ea8322716d6391e5afde90dc81f017651 for binaries and test log. "	nAnswer
1872	8977126	"Haven't tested, but code changes look ok. "	Statement
1872	9049957	"Sanity testing on a testnet-in-a-box ""hell wallet"", I get an extra empty array:  Old: ``` gavin$ head /tmp/f2 [     [         [             ""mmU33ZKwUkSoVSx8bHUnf2PmNosDMWvxsU"",             17.93950000         ],         [             ""mzGzLeJA2up3VL4gW32x5hT5YvEaA7SnBh"",             0.00000000     "	Other
1872	9069867	@gavinandresen  Ah. Thanks.  I'm pretty sure thats just from adding an empty group after encountering a transaction where it can't add any linked ins or outs.   Pushing a revised patch that I expect will fix that (though I don't have a reproduction setup right now).    It might be helpful to encrypt	Clarify
1872	9070910	"It is a testnet-in-a-box wallet, so it is not sensitive.  Wallet and blockchain are at:   http://www.skypaint.com/bitcoin/gavin_testnetbox_wallet.tar.gz  "	Statement
1872	9144172	"Indeed, the empty group is gone with the latest update. "	nAnswer
1872	9269294	ACK  	Clarify
1872	9635001	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f00b335d53380e10b528d3a4e3bf663624eeb61f for binaries and test log. "	nAnswer
1872	11299097	ACK if you remove the CWalletTx tx = .... dead line of code that sipa pointed out. 	Clarify
1872	11374904	"Yea, dunno how that made it into there.. cruft from an earlier version. Sorry about that. Fixed and tested. "	nAnswer
1872	11413820	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a3fad2119bcf4638ed137fc5cddc2f34a3bd1dc2 for binaries and test log. "	nAnswer
1872	12138293	"This one is lingering around for quite some time, I count 2 ACKs, any reason not to merge it or does it need a rebase? "	ynQuestion
1871	8927415	"I'm all for removing dead code. It will only bitrot if it is unused and untested.  Maybe add a comment, that the Read* variants have been removed but can be found in git history. It is possible that eventually we don't want to read everything into memory anymore at startup.  Edit: though on the othe"	Clarify
1871	8932228	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/189eb6a989674e384d65397befb6b1050789df97 for binaries and test log. "	nAnswer
1871	8977206	"ACK.  @laanwj even with an append-only wallet format, I suspect (at least initially) we'll load the entire wallet into memory anyway. Either we do that at the application level (have an iterator process all entries in the wallet at startup, like now), or at a thin layer beneath it that stores the ke"	Clarify
1871	8995964	ACK 	Clarify
1871	8998732	ACK. Yay less code! 	Emphasis
1870	8919945	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/68e760d2656716cc9d538567c0735c77d8e5749e for binaries and test log. "	nAnswer
1870	8977378	"Surprising how little code changes are necessary for this. Ultraprune already has a CDiskBlockPos however, which is also used inside CTxBlockPos, so maybe you can use that instead? I think you can just copy it, and remove the IMPLEMENT_SERIALIZE. "	Clarify
1870	9051844	"I also wonder about this: what if the current best chain happens to be known in the new/repained blockchain? There should be no need to rebuild the entire index in that case, only the block positions.  EDIT: right, you can't, as in the current database structure, transactions also contain disk posit"	Clarify
1870	9119322	Updated with the following changes: * uses CDiskBlockPos from sipa's ultraprune branch * calls our CDBEnv to perform database removal  	Clarify
1870	9208147	Have you tested this?      $ ./bitcoind -reindex     DB_ENV->dbremove: method not permitted before handle's open method  	Other
1870	9209689	I wrote up a 4-step test plan that I've been working through.  I also have a branch (not published) to reconcile this with my corrupt wallet handling pull; @jgarzik see https://github.com/gavinandresen/bitcoin-git/commits/BDB_RECOVER  The testplan I was working through:  1. Run new testnet3-in-a-box	Clarify
1870	9249056	"Doing the database remove in the environment definitely creates a super-large removal transactions, yet does not actually remove blkindex.dat.  blk0002.dat is growing here, which should not be the case.  Further debugging is needed.  "	Clarify
1870	9265164	"Instead of: ```dbenv.dbremove(NULL, strFile.c_str(), ""main"", DB_AUTO_COMMIT);``` you might try ```dbenv.dbremove(NULL, strFile.c_str(), NULL, DB_AUTO_COMMIT);``` ... then re-create blkindex.dat using TxDb(""cr"")  I think passing NULL as the third argument removes the file. "	Clarify
1870	9289231	"Fixed a few bugs, and rebased on top of @gavinandresen 's ::RemoveDb().  blkindex.dat is now properly removed, and reindex proceeds as expected.  Things appear to be working now.  Caveat: a genesis block is newly stored to blkNNNN.dat, for each -reindex invocation.  LoadBlockIndex() adds a new one t"	Clarify
1870	9637278	Needs rebase. 	System
1870	9637578	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f49f2631856a4a233a957ce8361ffab3b08561cc for binaries and test log. "	nAnswer
1870	9648465	"Superceded by #1943, closing "	System
1869	8902234	"NACK.  Changing the behavior of VerifyScript in any detectable way is unacceptable, because of the risk of a blockchain fork.  "	nAnswer
1869	8906463	"This can't lead to a blockchain fork. These opcodes aren't on mainnet, and wouldn't be accepted on mainnet anyway by any existing client. They would be illegal before the change, and they would be illegal after the change. It only changes the behavior of a hypothetical client that relaxes IsStandard"	Clarify
1869	8906613	"IsStandard() is not relevant to this discussion.  Transactions may appear in the blockchain, even if they fail IsStandard().  The set of acceptable behaviors is much larger than the set of relay-able IsStandard() behaviors. "	Clarify
1869	8907998	Ok understood. 	Statement
1868	8881483	Good catch 	Statement
1868	8887353	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/95d7f002957a7bb30a2d5d8b07fe8fe3c1f37ec0 for binaries and test log. "	nAnswer
1868	8891932	"I don't like keeping dead code in source files, so I think the right thing to do is to remove MakeSameSize and the code for all of the disabled opcodes from the big switch() statement.  If we ever resurrect them git will have the history, and, I assume, we'll write thorough unit tests to make sure t"	Clarify
1868	8893268	That's what I said on IRC:  delete 'em.  It is dead code that requires a hard fork to re-enable.  	Statement
1868	8897047	"Agree with Gavin, let's pull this as a warning to people if they'll ever resurrect this code, and then in a later pull remove all the code related to disabled opcodes. At the moment, they are only confusing. "	Clarify
1868	8897486	@laanwj  sounds like a plan. 	Clarify
1868	8897855	I will create a new pull-request that surgically removes the disabled opcodes (they will now be caught by the ```default: return false``` catch-all).  EDIT: Sorry for the messy commit references surrounding this comment. Github refuses to forget about amended/removed commits :\ 	Clarify
1868	17057011	"Just a question... Isn't the proposed patch ""wrong""? Negative numbers should be padded with 0xFF, not with 0. For example, in Little Endian, a 16 bit -1 is 0xFFFF, at 24 bits it's 0xFFFFFF, at 32 bits it's 0xFFFFFF. -2 at 16 bits is 0xFEFF, at 24 bits it's 0xFEFFFF... "	Clarify
1868	17086029	"Bitcoin uses its own big-endian, explicit-bit semantics for BigNums. "	Statement
1867	8866614	"NAK, this breaks existing setups (it's in released 0.7), and further it forces anybody wanting the raw form to perform extra parsing.  Decomposition into readable form is an extra step, see e.g. ""decoderawtransaction"" RPC  "	nAnswer
1867	8866980	Agreed about breaking existing setups.. maybe we can just add an address property instead 	Other
1867	8867012	"just use decoderawtransaction, that is why it's there ;p  "	Statement
1867	8867442	meaning to find the addresses of the output it we need to do a getrawtransaction and then a decoderawtransaction for each output ..  so why are the amounts and confirmations displayed.. you can also get them from decoderawtransaction ;p 	Clarify
1867	8868411	"You don't need to getrawtransaction then decoderawtransaction, you can do both of those in one step by passing '1' as the second argument to getrawtransaction.  And if you have a bunch of transaction ids you can use the new 'batch' JSON-RPC support to do it all in one round-trip.  Closing. "	Reject
1867	8876478	Awesome thanks!...  guess i'll ask in the forum next time.. sorry :/ 	Clarify
1865	8840119	"Agree, ran into this with lockunspent...  "	nAnswer
1865	8845077	"Yes, good idea "	yAnswer
1865	8846418	What benefit has the space after ( and before )? Is it needed for correct parsing? 	whQuestion
1865	8846469	Looks good. 	Statement
1865	8846773	"@diapolo no, it's not strictly needed for parsing, but it's human friendly to have some whitespace.  "	Reject
1865	8847734	I consider this a form of plenking (https://en.wikipedia.org/wiki/Plenk) and dislike that style. 	Statement
1865	8849100	"Well, the `( ... )` can span multiple arguments, and they don't make part of the underlying syntax, so they are ""special"" compared to other grouping characters such as `[`, `""`, `{`. IMO it makes sense to distinguish them from those characters, by adding extra space. Normally you'd maybe use color o"	Clarify
1865	28409012	This was implemented and has been merged (#3246) 	Statement
1864	8845123	The version used for Linux builds is determined by the version shipped with Ubuntu Lucid. This is very unlikely to change.  Edit: I don't think we're using static linking for Qt at all on Linux. So it likely will just use the Qt version that is on the system. 	Clarify
1864	8847137	"Okay, so did I miss a part I needed to update or does the pull look correct? "	Clarify
1864	8847264	"I think this is correct and that you didn't miss anything, but ofc it needs to be tested.  "	Reject
1864	8849175	Do you need to change line 38 of release-process.txt from      mv build/out/qt-win32-4.7.4-gitian.zip inputs/  to       mv build/out/qt-win32-4.8.2-gitian.zip inputs/    ? 	ynQuestion
1864	8850625	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f331ce162f27fbd18c5257a211b4bd120fc28645 for binaries and test log. "	nAnswer
1864	8862971	"@fanquake Thanks for noticing, I'll fix that. "	Statement
1864	8897164	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/26809acbf9d62480375dd8c1875e8bd7faa1d75e for binaries and test log. "	nAnswer
1864	8998462	"The compiled bitcoin-qt.exe works, I tried it with a mainnet wallet. No errors were observed during startup and chain-sync. "	nAnswer
1863	8845010	"I certainly think this is useful data to keep around.   But, as precise time is a rare thing, for the wallet scan optimization to be exact (the ""7200 seconds leeway"" makes me a bit uneasy), would it maybe make sense to store a block chain height of first use? Now that we have key metadata anyway... "	Clarify
1863	8856026	"7200 seconds is two hours, which matches the blockchain rules (new blocks must have timestamps no more than 2 hours in the future, if I recall correctly).  And I think keys are properly thought of as independent of any one particular blockchain, so absolute time of creation is the right notion.  "	Clarify
1863	8856578	"Yes, but you are using the local time of the machine that creates the key, at the time the key is generated. I don't think this should be ultimately trusted information (ie, reliable enough to base important optimizations on).  "	Clarify
1863	8908142	"&lt;shrug&gt;  The rescan optimization can do ""X - 24 hours"" and still be quite effective.  One secondary goal along with storing key time is running in client-mode may be optimized to ignore all blocks older than the wallet birthday.  "	Clarify
1863	8977457	"Sounds like a good idea. I prefer keeping a timestamp + lee way, rather than storing blockchain height, as the latter is context that can change during reorganisations.  For deterministic wallet, the meta data object could be extended.  I haven't tested this. "	Clarify
1863	9638847	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fefb9e12b1be676ffff49fccb8be52ae1c65e779 for binaries and test log. "	nAnswer
1863	9878750	"This is a very important feature for multisig.  While you can do everything with the raw TX API, just importing the keys and spending from the wallet as usual is much easier, and will remain so for probably quite a while.  For me, this patch would have saved a couple of hours worth of rescan time wh"	Clarify
1863	9886248	"RE: ""just importing the keys and spending from the wallet...""  :  I think we should strongly encourage people to keep private keys private, and not get into the habit of exporting/importing them.  If you are sending private keys around for anything other than backup then you're probably Doing It Wro"	Clarify
1863	9904369	"I suspect that for a while to come, the most common usage of multisig will be one time cold storage wallets.  You generate some keys, send coins to them, and then later, you redeem whatever is in them.  Importing the privkey is the simplest way to do that, and however wrong it may be, I'll bet you a"	Clarify
1863	9904960	"I think we need a standard way of encoding a private key + a txid for such purposes, as that is enough for instant spending without rescanning history at all (however long it is ago). "	Clarify
1863	9905436	"Bitcoin Wallet and MultiBit can already exchange private keys against each other by using a text based export format. It's basically one base58-encoded key per line, optionally with a key creation time in ISO8601 format. The whole file can be AES encrypted in a way that also openssl can be used to d"	Clarify
1863	9914307	I am happy to write up the existing key exchange format Andreas and I are using as a BIP if someone gives me a number. It gives a concrete format to critique and improve upon as required.  	Clarify
1863	16020156	"Hmm, mind rebasing this @jgarzik? I think we forgot about this somehow. "	Clarify
1863	16024615	Did this get derailed due to not having a serialization for it? 	ynQuestion
1863	16025014	"I'm planning to rebase my wallet JSON dump/import RPC patch from 2 years ago, given that there's apparently many people who feel the need to toy with wallets, but shoot themself in the foot by working with individual keys instead of whole wallets. Key birthdates could nice be serialized in that. "	Clarify
1863	16033425	@sipa will put it on the todo list.  @gmaxwell No real blocker other than it seemed like @gavinandresen grumped over this pull request in general.  :)  	nAnswer
1863	16050682	"Yeah, but I grump over everything, it is my Prime Directive.  "	yAnswer
1863	16084954	"It looks like a rebase is not trivial, due to some wallet changes in the interim.  Not difficult, but not trivial either. "	Statement
1863	18424965	Rebased. 	System
1863	18660207	"Apart from those static counter variables, ACK on the code changes. A more efficient wallet serialization format (where metadata is stored together with the keys) would be nice, but I guess that can easily be done together with a wallet format overhaul. "	Clarify
1863	18660363	@sipa agree that the static counters are ugly  	whQuestion
1863	18750250	"@sipa Added commit to encapsulate the static variables, and some existing variables held across invocations from multiple callers, into CWalletScanState.  "	nAnswer
1863	18750394	"Also note that this pull request introduces an extensible key-metadata object in the wallet, fully versioned.  It is now easier to add other metadata to each key. "	nAnswer
1863	18764376	Merged with upstream 	Statement
1863	18785787	ACK code changes; didn't test yet. Can you rebase instead of doing merges? 	Clarify
1863	18806305	ACK on code changes 	Emphasis
1863	19182448	"I'd like to merge this, can you squash the merge commit? "	Statement
1863	19200529	Rebased 	Statement
1862	8826655	ACK 	Clarify
1862	8833010	Looking good now :). 	Statement
1862	8833268	Squash them into one commit and it is perfect.  	Statement
1862	8833368	Done. 	Statement
1862	8839253	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/29e6b573cad01877c15ec8755c7a573250a700c3 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1862	8866727	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b202d430762c1b5c9925e948f357c66040f95f10 for binaries and test log. "	nAnswer
1862	8868151	ACK 	Clarify
1862	8881968	ACK 	Clarify
1861	8809641	"lockunspent does the minimum necessary to accomplish the use case at hand (protecting smartcoins from being spent), but I'm open to other opinions, if people see other uses.  "	Clarify
1861	8829423	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6c5b4dc30d2b9538cc154750d96efa1849eb42eb for binaries and test log. "	nAnswer
1861	8833698	"I like the simplicity; I vote for a listlockunspent to get the current list of locked inputs, which should at the very least be handy when debugging. "	Clarify
1861	8866380	I would rather prefer that listunspent to have an option to filter which one we want ( locked || unlocked || locked && unlocked )  .. and both would be the default   instead of having adding new rpc calls 	Clarify
1861	8866655	"More, simple RPC calls are preferred over making existing RPC calls ever more complicated.  ""listunspent"" displays the coins available for spending... let's not make it more complicated than that.  "	Clarify
1861	8915161	"Updated to add RPC ""listlockunspent"", and to use RPCTypeCheck()  "	Statement
1861	8935332	"would it be more proper for the command to be called ""listlockedunspent"" ? "	Clarify
1861	8939923	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/67e7021f3183bfeee047f5879cbd04ff974c3f3c for binaries and test log. "	nAnswer
1861	8963992	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/029e4952f6351b91efdd8dfef1d2335860575e9d for binaries and test log. "	nAnswer
1861	9638093	Needs rebase 	Statement
1861	9639854	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ab76dd1a08f2fa524db9c0cdc02a51f0ad77ead8 for binaries and test log. "	nAnswer
1861	10434604	rebased 	Statement
1861	10670299	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fdbb537d263497529c8f9deb0bb98371530839c3 for binaries and test log. "	nAnswer
1861	10909457	ACK 	Clarify
1860	8811401	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cf3b20c0496d99c80973b86c8f8bec11de7c2b3c for binaries and test log. "	nAnswer
1860	8816527	"Hmm, why set it by default? Presumably this new flag would indicate a disk-pruned node? I think it only makes sense to set this if the behaviour is non-default in some way, and this commit doesn't change behaviour. "	nAnswer
1860	8818898	"The roll out happens like  1) Set this by default 2) If you need validation but not block download, seek out NODE_VALIDATION nodes, otherwise seek out NODE_NETWORK 3) Later, non-archive nodes drop NODE_NETWORK  "	Clarify
1860	8820719	ACKACKACK. 	System
1860	8820887	"So if we do this now, we lose the ability to make NODE_VALIDATION signify an ability to serve UTXO SPV tree fragments but not blocks. (Because we currently can't serve them). Otherwise, sounds good to me. "	Clarify
1860	8977769	"@gmaxwell I think a merkle-UTXO tree is further ahead than the need for separation between archive nodes and full nodes. I think the use case for those is separate from this issue, so I'd leave that for another network service bit.  @mikehearn: service bits have to indicate (positive) support for a "	Clarify
1860	9122778	"@sipa:  If archive nodes will always be validating (which seems logical), one additional ```NODE_VALIDATION``` bit is sufficient.  If archive nodes will sometimes _not_ validate, then yes, we need two bits.  "	Other
1860	9161778	"@jgarzik Yes, that's my point. I don't think it makes sense to have that distinction now, but I'm not sure we should make it impossible to make that distinction in the future. "	Clarify
1860	9163970	"@gmaxwell meh, I find that more protocol update than node service update...but I suppose leaving that up to the version king works best... @sipa Can always add a NODE_ARCHIVE later if we really need it to mean non-verified old block provider? "	Clarify
1860	9166007	"Closing, no consensus  "	nAnswer
1860	9169273	"@TheBlueMatt Right, but at that point, an old client that needs to IBD and doesn't know yet about the new service bit will not be able to find the archive-only nodes. "	Clarify
1860	9179862	"@jgarzik No consensus? I think every comment has been generally positive, and this is something we really need in the near future (I'd argue before ultraprune is merged). "	Clarify
1859	8818475	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bd5f5de6b8ab13ec34c96fa7376da329a07c1105 for binaries and test log. "	nAnswer
1859	8825088	ACK 	Clarify
1859	8965975	I'm going to update this until early next week :). 	Clarify
1859	8974222	"Updated to include 2 new functions to use local copies of the proxyInfo and nameproxyInfo objects in the time-critical functions, which removes the bad practise of holding the lock all through ConnectSocket and it's subroutines, as Gavin suggested.  I chose to add these 2 function (currently not exp"	Clarify
1859	9002422	"@sipa I updated GetProxy() to fill a proxyType object and make that usable outsite of netbase.cpp (moved the typedef to netbase.h). @laanwj Can you have a in depth look at the changes to optionsmodel.cpp, I included the use of GetProxy() for the SOCKS version, too, which was not in before (was read "	Clarify
1859	9013504	ACK on changes to core. 	Statement
1859	9018021	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fd31870d2820d7e1d0f8f3253f081aa71c0b2dca for binaries and test log. "	nAnswer
1859	9018066	@laanwj Anything left for the Qt changes? I trie to not include feature-changes and will do that after this got merged. 	Reject
1859	9059652	ACK  	Clarify
1859	9089160	"No code changes, only updated some code-layout in optionsmodel.cpp. "	nAnswer
1859	9167912	Can we get this fix into 0.7.1? 	ynQuestion
1859	9168694	"Yes as I said on the mailing list, that's the goal.  Avoiding corner-case random crashes is always good. "	Statement
1857	8787747	Is someone testing all these mac changes on an actual mac?  	whQuestion
1857	8787921	Yes. 	Accept
1857	8790936	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/a9957ce3d012fa3d9a0c8a3a9213b3ca9e0b6304 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1857	8793753	"Failed because of ``Error: An error occurred while setting up the RPC port 8332 for listening on IPv4: Address already in use``, which is unrelated to this patch. Seems to be a problem with BitcoinPullTester. "	Clarify
1857	8877895	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6ca5ee6211490f1d67931b49a5a31213d4d477ff for binaries and test log. "	nAnswer
1856	8794488	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/807f3e83ba1c5299587c1c94555cd02f47dc2738 for binaries and test log. "	nAnswer
1854	8795611	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bb86cffa56792949bdd57779eea083e79c469477 for binaries and test log. "	nAnswer
1853	8787777	Fixed the other include and merged into one commit. 	Clarify
1853	8796802	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ea9eaf9dec203e40d8a88914ca04ae1a8b705128 for binaries and test log. "	nAnswer
1852	8786815	ACK except for Qt version change  	Clarify
1852	8787012	Please squash into one commit  	Reject
1852	8787366	@laanwj merged into one :) 	Statement
1851	8798842	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0eaaa83ba521af8453c11ad688bdbb6bd4e33870 for binaries and test log. "	nAnswer
1851	8799239	ACK 	Clarify
1851	8828196	ACK 	Clarify
1850	8785152	"Needs to be addressed: when the address is unavailable, should the ""address"" key be absent, null, or something else? Current code here does the ""absent"" option. "	Clarify
1850	8803505	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1a5eb4636d038fdf623924c0d236c915ddcb9bdb for binaries and test log. "	nAnswer
1850	9050198	"This is high risk for breaking existing applications; in addition to careful code review I would really like there to be a test plan, or, even better, until tests that fully exercise all of the code paths in CWalletTx::GetAmounts. "	Clarify
1850	9637288	"I hope no application depends on the random data being produced, so I think this should be treated as a bugfix.  "	Statement
1850	10392884	"Fixed the bug @sipa found, and commented CWalletTx::GetAmounts better so the flow is more understandable.  I'll get to tests later. "	Clarify
1850	10672201	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d2233dbcf4bf520370ffbd59b1a42718e4f68d27 for binaries and test log. "	nAnswer
1850	10777133	"Looks like just code movement to me (except the address = CNoDestination()), ACK. I haven't tested though. "	nAnswer
1850	12599701	Needs a test plan; see https://github.com/bitcoin/QA  for a test plan skeleton.  	Clarify
1850	21089385	"Fixed @gavinandresen 's nit and a bug I thought @jgarzik reported with it (though it seems to have vanished here...), and rebased.  I am not sure how to create a test plan for these particular fixes. I believe the conditions to trigger the bug can only occur when some other (eg, newer) client has ac"	Clarify
1850	21292635	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cc6cfab38fcdd4ec3e4784e01c4407a129289f77 for binaries and test log. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please "	Clarify
1850	24722633	Is this the last version and rebased to current master? If yes I'm going to try if this fixes my problem in #3006. 	yAnswer
1850	25802763	@luke-jr Can you please rebase this or is it mergable? 	ynQuestion
1850	26050466	@luke-jr Are you still around here or don't you participate anymore? 	ynQuestion
1850	26771559	"This is on my list of old pulls to get resolved.  After reviewing the code again, I'm planning on:  1) Tweaking my handy-dandy payment request generator code so I have an easy way of generating transactions that pay to standard-but-not-expressible-as-an-address transactions (I'll teach it to take he"	Clarify
1850	26778360	Pulled (after testing using https://bitcoincore.org/~gavin/createpaymentrequest.php and fixing the trivial merge conflict).  	Statement
1849	8786085	"Indeed, it makes no sense to add that text. The delete button isn't even visible on the receive coins tab.  Fixed, see commit 38682648c2ce8b4035750ce50a53c1ce52110e34  "	nAnswer
1847	8782895	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/d6c4400d57c6d6eaba7ef23ba24371069ec037e5 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1847	8786130	"ACK  I don't understand the pull tester output ""Error: An error occurred while setting up the RPC port 8332 for listening on IPv4: Address already in use"". Seems that a previous test run was still running? @TheBlueMatt  "	Clarify
1847	8792570	"@laanwj sorry, should be fixed now "	Other
1847	8807004	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d6c4400d57c6d6eaba7ef23ba24371069ec037e5 for binaries and test log. "	nAnswer
1846	8775174	I found that one: http://www.mingw.org/wiki/MS_resource_compiler 	Clarify
1846	8778560	"Yes, it would work exactly the same as with bitcoin-qt, with a res file that gets compiled and linked into the exe file.  You'd need to add it to the mingw/mingw-linux makefiles.  "	Clarify
1846	24643427	@theuni Could you help with adding meta-information to bitcoind.exe with autotools? The .rc file we use for bitcoin-qt.exe could be used I guess. 	Clarify
1846	24643649	"as @laanwj said, windres is already detected and used for qt. Just need to create a similar .rc and add a rule for it. "	Statement
1846	24663117	"@theuni I have no clue, how to do that. I could create a .rc file but that's it. I looked at makefile.am in src and src\qt and don't know how to make it working. Help please ;-). "	nAnswer
1846	25684050	"Thanks @theuni for creating the patch, closing! "	Emphasis
1844	8785494	There is another simple QT5 change that you could include in this pull.  Line 5 of macdockiconhandler.mm can be changed from      #include <QtGui/QWidget>  to       #include <QWidget>  	Other
1844	8786262	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/81605d90f53e5ab500f56927f4337bbc7f2d24f8 for binaries and test log. "	nAnswer
1844	8786463	"@fanquake Pretty neat catch, I will update this pull :). "	Clarify
1844	8786856	ACK  BTW @fanquake you can get around the problem of displaying `<` and `>` on github by indenting code with four spaces :-) I've edited your post to show this.  	Clarify
1844	8786990	"@laanwj ah, cheers for that. I couldn't figure out how to make it work. "	Clarify
1844	8787017	"Oops @diapolo seems I merged this without the include change, I think you'll need a new pull for that "	Clarify
1844	8787064	@Diapolo I can do it if you want. 	Statement
1844	8787347	@fanquake Yeah that's fine with me! 	Emphasis
1843	8774644	"IMO it is rather hard to avoid such things in the future and I find them rather ""hard"" to fix, as you sometimes not see in the code, which other GUI elements share that shortcut.  I'll create a fix in a few minutes. "	Clarify
1843	8778724	"It's hard to avoid in general, but it's good that users are paying attention :)  "	Statement
1843	8784858	"Note the 'receive coins' tab has ""_Sign Message"" which clashes with the ""_Settings"" menu too.  I don't know if your fix addresses that one too. "	Clarify
1843	8786458	"No, the fix only was for the send coins dialog, as I did not look through every combination and just fixed what you mentioned at first.  Edit: Another small fix is on the way. "	nAnswer
1842	8746672	"I don't have a 10.7 machine to test on, but I upgraded the version of qt4, and recompiled with slightly different flags. Can you download:   http://www.skypaint.com/bitcoin/Bitcoin-0.7.0.dmg  ... and let me know if it is more stable?  "	ynQuestion
1842	8746938	Downloaded and running. Will report back in a day or three.   Thanks. 	Statement
1842	8920559	"Reporting back, sorry for lateness.  The build you gave me has been running for many, many hours with no issues at all that I can perceive.   Do the Bitcoin developers have a beer fund I can contribute to? :) "	Clarify
1841	8725689	Solution: just remove the old build.h file  	Clarify
1841	8727033	"The qt builds use build/build.h, the bitcoind builds use obj/build.h. Nothing uses src/build.h anymore, so you can just remove that. "	Clarify
1841	8727944	"Yes, that is a workaround. It doesn't fix the problem, however, which still lurks quietly for anyone who doesn't know to delete it... "	Clarify
1841	8728187	I'm not sure we should prevent all possible effects of unclean build directories. 	yAnswer
1841	8729061	"It's not as if ""make clean"" deals with this either. OTOH, maybe it makes sense to prefer a src/build.h for other reasons, history aside. "	Clarify
1841	8729776	"I see two bugs:  make clean should remove obj/build.h  .gitignore should not ignore src/build.h, so 'git status' shows the obsolete src/version.h.  I'll push a fix for those.  I agree with @sipa, time moves forward and we don't want to muddy our source or Makefiles for stuff we changed in the past. "	Clarify
1841	8730197	"Fixes to .gitignore and make clean pushed, I'm going to close this. "	nAnswer
1841	8743191	@gavinandresen Sounds reasonable. 	Accept
1840	8721922	"Left side will look bad for more reasonable amounts (ie: 1, 10, 100, etc). I suggest what is needed is alignment of the ones column. "	Clarify
1840	8722141	luke-jr's comment makes sense to me. I agree. 	Clarify
1840	8722539	"I've tried both, but right align ended up looking slightly better. Then again, I've mostly been testing with larger amounts.  Aligning on '.' would be best, but Qt has no built-in option for that, so that'd need a custom delegate which renders the text so that the point is at a fixed position.    "	Clarify
1840	8722633	"Something to consider for this: do we want a bunch of blank space to the right of every ""normal"" amount just because of one non-zero-Satoshi amount? Almost seems like at that point we might as well just use invisible/blank digits to pad it off on the right...  I don't suppose Qt works with text-alig"	Clarify
1840	8723105	"Alas, Qt doesn't work with text-align: ""."". Html/css is not supported in table cells, so greying out or hiding digits would require a custom delegate just as well.  The problem with bitcoin is the precision. In most cases in financial software you only want to show two digits to the right in these k"	Clarify
1840	8723171	Nbsp? 	ynQuestion
1840	8723201	"We don't use a monospace font for the amounts, so you could pad with nbsps alright, but that wouldn't line them up properly.  "	Reject
1840	8723308	Maybe we should. Are non-monospace fonts guaranteed to line up using numbers in the first place? 	whQuestion
1840	8725581	"That depends on how you do the alignment... if you use font extents properly, it doesn't matter what kind of font you use.  NAK on switching to monospace fonts on the amounts. I don't like how it looks, and it would make the ""extra space"" problem even worse. After all, monospace fonts are, by defini"	Clarify
1840	11997727	"Can we close this, as after reading the discussion I think it's a no-issue. "	nAnswer
1840	12035217	"Ok.,As it seems devs do not agree with my proposal, I guess I can close it, indeed. "	nAnswer
1839	8716018	Can you paste the relevant part of the debug.log?   Especially stuff such as:      NotifyAddressBookChanged ...  And warnings like:      Warning: AddressTablePriv::updateEntry 	Clarify
1839	8717014	Sure (I renamed 'satoshidice lessthan 48000' by adding an 'x' to the end of its label):      FIXME: handle dialog start.      NotifyAddressBookChanged 1dice9wcMu5hLF4g81u8nioL5mmSHTApw satoshidice lessthan 48000x isMine=0 status=1     NotifyAddressBookChanged 1dice9wcMu5hLF4g81u8nioL5mmSHTApw  isMin	nAnswer
1839	10053334	"I also have this problem. It happens on both receive coins and address book lists. In the receive coins list case, a new address is generated  for the duplicate. That is a serious problem.  My log looks the same as the one above.  Bitcoin version v0.7.0-beta (2012-09-12 14:07:22 -0400)  "	Clarify
1839	10920763	"I can confirm that this problem is still occurring with bitcoin-qt version v0.7.1.0-geb49457-beta, at least for the ""Receive coins"" list. I also noticed that the list does not get updated when the labels are changed via an RPC command. "	Clarify
1839	12043680	@dooglus @jambolo Can you test the fix from #2157? You find a Windows binary for that pull over here: http://jenkins.bluematt.me/pull-tester/e6d230056202b05a27f187dff2648eb5c76fcfee/bitcoin/bitcoin-qt.exe  Others are also encouraged to test the fix!  @nybble41 ``I also noticed that the list does not	Clarify
1839	12134061	"I don't use Windows, but I built a Linux binary from #2157 and it does indeed appear to fix this issue.  As for @nybble41's comment, I've tried using the RPC command setaccount on the same address with various different account names using the #2157 build, and it updates correctly in the 'receive co"	Clarify
1839	12134100	"@dooglus Thanks for testing, that are some good news :). "	Statement
1839	12785601	@laanwj Can be closed! 	Emphasis
1838	8679793	"It's always just a wild estimate.   I agree that it shouldn't show the estimate of the total anymore if it already has more blocks than that. That makes no sense, as the estimate of the total number of blocks should include how many blocks you have yourself.   "	Clarify
1838	8715974	"Hmm this is correct after all. The value shown is ""Estimated total blocks of peers"". I agree this was abbreviated somewhat awkwardly, but this is only the debug window after all. Normal users shouldn't even be looking there.  "	Clarify
1837	8680714	I've been using 1.0.1c for my own Windows builds for months and have not found any problems with it. 	Clarify
1837	8684638	"Thanks :), looks good. "	Statement
1837	8705440	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/b7a8802c2acd61394b63856d7ff7ca942df81a00 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1837	8722669	"Please increase the deps version number, ie to bitcoin-deps-0.0.5.zip (both in deps-win32.yml and gitian-win32.yml) "	nAnswer
1837	8749785	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/05c1c08e295f067a5fbd32fb7ad80fe01d2aa49d for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1837	8755568	"Ok great,  Looks like @TheBlueMatt's has to install openssl1.0.1c in /mnt/mingw/openssl-1.0.1c, before the pull tester can test this.  "	Clarify
1837	8778125	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/9cde889992e16527c99c262831292b944a2faabe for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1837	8786150	Closing this.  Will merge all into a single commit in a new pull. 	Clarify
1837	8786167	"You don't need to close your pull for that. You can just ""rebase -i"", squash the commits and push -f to the current branch. "	Reject
1837	8786216	"I would have. But those commits were in the master branch, instead of a separate one. I've been meaning to start using branches for pulls for a while now, so thought I might just sort myself out and do that instead. "	Clarify
1837	8792987	"1.0.0c build for pull-tester, should test properly now. "	Other
1836	8678111	"Prefer ""setdetach"" to match the existing get/set naming scheme of RPC methods.  "	Statement
1836	8678388	"I thought about adding calls to get and set the state of the detach flag.  In the end, it seemed a bit pointless.  You really don't care about that flag except as your default (in the config file or start script) and when you are doing the actual stopping.  (It occurs to me that it might not be clea"	Clarify
1836	8678472	"Since it combines the stop action, that's fair... "	Reject
1836	8680787	"What about adding an optional parameter to stop? I'd really like to have only one termination command.  Edit: and as I understand, this will be temporary at most, because when we switch to leveldb there will be no detach flag anymore. I guess it is easier to ignore an argument than deprecate a comma"	Clarify
1836	8714222	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c5daebeb753cdd0fe25db5bc9789ddb9ae442cff for binaries and test log. "	nAnswer
1836	8736271	"I like @laanwj 's suggestion, add an optional boolean param to stop.  "	Statement
1836	8763046	Agree with @laanwj; in LevelDB we won't need this anymore. 	Clarify
1836	8775888	"Changed to an optional parameter to the stop RPC command.  I also tested all 6 combinations of detachdb=0/1 and stop true/false/blank, and all worked as expected. "	Clarify
1836	8778844	ACK 	Clarify
1836	8789724	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6f8b9e8a6305018d0886584665d72de516d77025 for binaries and test log. "	nAnswer
1836	8793805	"Updated the help message, cleaned up spurious inserts/deletes "	Statement
1835	8698830	"It is a fair criticism that this change did not accurately capture the 'stuck' condition.  The ""stuck"" condition is defined as:  new blocks arrive, but our hashBestChain does not change.  Updated commit to record when the chain last advanced, and use that timestamp to trigger a ""getblocks"" for newly"	nAnswer
1835	8717905	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b23e79938b6aa5bd22389f393abf2d6905df770a for binaries and test log. "	nAnswer
1835	8763148	"Have you actually observed this helps? If anything, I'd do the re-requests for blocks outside of the ""version"" message handler, as frequently the connections are quite stable when this happens. "	Clarify
1835	8826754	"Closing, hopefully can look at implementing @sipa's suggestion "	Other
1834	8679441	"NAK. This potentially breaks the bitcoin distributed algorithm.  (Ignore checkpoints for a moment.)  I mine a long fork with 300,000 diff1 blocks. I feed it to you.  You'll now never fetch the much longer real chain from honest nodes.   Same problem exists later in the chain too, it's just not trivi"	Clarify
1834	8679752	"That case is nigh impossible given checkpoints.  You ask to ignore this, to present a theoretical case that does not therefore apply to real world client releases.  One case _obviously_ can lead to stuck downloads today.  The client sends getblocks to a remote peer that we know in advance does not h"	Clarify
1834	8679910	"It does seem a bit dangerous to rely on pfrom->nStartingHeight so completely. It's very hard to see what effect this will have in edge cases.  Couldn't we address the ""stuck downloads"" problem in another place, ie by detecting stuck downloads actively and requesting from different nodes. After all, "	Clarify
1834	8679990	@jgarzik the download happily continues when we get another block from the network in an average of 10 minutes.  I presented the toy example ignoring checkpoints because its easier to understand.  The same exposure exists at retargets where a forks can be created that differ in difficulty by a facto	Clarify
1834	8681098	"Gah, sorry, I read the title without actually reading the patch. My above concerns aren't an issue here: even in those cases when the real network finds a block again it'll still pull from them, which is adequate and fine. "	Clarify
1834	8728904	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d5d19c74a5f5cbcaad6869dc7d89bd7077b7d175 for binaries and test log. "	nAnswer
1834	8763202	"Something like this is useful, but it will fail to fetch the new chain in some edge cases (I know, those will be fetched when a successor block is broadcast, but still). Maybe some flexibility, like (nStartingHeight > nBestHeight - 144) is more safe, and will still prevent against the majority of si"	Statement
1834	8826997	Updated commit to offset height count by 144.  	Statement
1834	8843020	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/93dd68e924c7cf24b75bfb5b83b1be1cdc27dbdc for binaries and test log. "	nAnswer
1834	8860632	ACK with the 144 offset 	ynQuestion
1834	9208267	ACK 	Clarify
1833	8674807	Good idea. I'd disable such behavior during IBD. 	Clarify
1833	8677003	"Updated to avoid sending ""mempool"" while in IBD. "	Clarify
1833	8679472	"Each seems a little excessive. Perhaps only do it on outbound ones and/or only if the node's uptime is low? It's potentially a lot of extra data when you've got a hundred peers, and most of the data is redundant.  "	Clarify
1833	8685102	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1fa4c04b1db831283157c54ef4e100f3420a219a for binaries and test log. "	nAnswer
1833	8687555	I had approx. 3200 transactions in pool when I updated my bitcoind to the new git version.  I decided to include this in the build...  got back up to ~3100 transactions in pool immediately.  The only ones I lost were the ones with the large orphans (I'll probably modify that and make it 20k or 30k).	Clarify
1833	8702044	"Restricting ""mempool"" queries to outbound connections seems like a reasonable compromise ... change updated.  I imagine hardcore miners would want to remove this condition, to guarantee they do not miss anything.  But it seems like outbound-only should get 99%, while saving bandwidth. "	Clarify
1833	8728976	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/2533a62f6dc69d26b1e17b1240d17f3a26382106 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1833	8755280	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e3183085f33877e06cc04ff310ab6db3c59c8464 for binaries and test log. "	nAnswer
1833	8763218	ACK 	Clarify
1833	8816591	Cool. Restricting to outbound connections also means you won't send this command to SPV clients that don't track the entire mempool. It may be worth a comment that makes this explicit rather than a side-effect of checking for outbound-ness. 	Clarify
1833	8816713	Hm. How do we prevent this from violating the (probably soon to be implemented) expectation that transactions will live in the mempools of the network for a particular amount of time?  Esp once peer rotation is implemented? 	Statement
1833	8827980	"Two more added conditions:  1) Should have checked NODE_NETWORK (pfrom->fClient), which the BIP states, and @mikehearn unintentionally hinted at. 2) Only do this for the first two hours after node startup.  "	Other
1833	8843472	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/22f9b069035c9ba0416a62714db167eea5ba762f for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1833	8964010	"I'm guessing this might be related,  Not sure what else it could be, as outside of testing this I haven't modified the transaction code at all (I was planning on it, but...)..    I've changed the misbehaving threshold to 102 to avoid situations like this, which is why I didn't disconnect those two p"	Clarify
1833	9208279	@jgarzik PullTester gives a compile error; can you look into that? 	Clarify
1832	8719529	"Hm, this could be solved by making CDBEnv bitdb an explicitly constructed/destructed singleton instead of a static global. Explicitly created in Init() and destroyed in Shutdown().  It would be more clear, too.  "	Other
1832	8730560	"But then we'll run into the same issue again if we ever have other global or static objects that want to printf() during shutdown (and it is a nasty issue because it can work just fine for some people and not for others).  Making the mutex a pointer initialized to NULL, creating it using 'new' and t"	Clarify
1832	8730902	"Yes that would fix the instances of printf() in shutdown, but there could always be other dependencies between static objects' destructors.  I think it'd be better to not have non-trivial objects that rely on static construction / destruction, and do our own object lifetime management in a well-defi"	Clarify
1832	12133430	@gavinandresen Wasn't this also fixed? 	Other
1832	12150928	"@Diapolo : yes, thanks for looking through the issues list, that's a huge help!  Closing. "	Clarify
1832	12152295	"I'll keep an eye on the issues list, because it's getting quite long recently ;). "	Clarify
1831	8663094	"#1 sounds like a bug, #2 is not a bug though: the console emulates a 'bash' console with bitcoind, which also needs JSON arrays/objects quoted.  I'm sure it's possible to switch to ""JSON objects separated by spaces"", or even full javascript syntax (Qt has a js interpreter, QtScript), but that would "	Clarify
1831	8663860	"I'm not able to reproduce #1. To check space handling, I've temporarily added a command `test` that simply prints the first argument:    19:53:45 test "" 1234 ""   19:53:45 "" 1234 ""   19:53:49 test ' 1234 '   19:53:49 "" 1234 ""  Spaces inside both single and double quotes seem to be handled as expected"	Clarify
1831	8671257	"Weird... I cannot reproduce #1 now with a fresh build, I'll verify on a 0.7.0 release binary.  Input that was causing my trouble before:  createrawtransaction '[{ ""txid"" : ""f28346bb47465584cfe65c1bf72b5a2f66ac40a4565a45d33b6e0b87ffd57637"", ""vout"" : 0}]' '{""19DtwBKG7YHYTVraX6QWTv4Lb6nBxfWWSf"":0.925}'"	Clarify
1831	8680228	"That leaves ""JSON objects directly on the command line"".   - I think it could be done unambiguously by detecting unquoted arguments that start with '[' or '{'  as the beginning of a JSON object, and then attempting to read a full JSON object using json_spirit, and continuing at the position where it"	Clarify
1830	8698850	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/397a527c1e9c334564668e18e48d875d29eca787 for binaries and test log. "	nAnswer
1830	9208291	ACK for 0.8 	Clarify
1830	9639963	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/b38fd5d5a4e4babec207dda033a5c95ada29047b for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1830	9960389	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6b3783a9c9cc47afcf72aa0a86ea26122392efdb for binaries and test log. "	nAnswer
1830	10062211	"IMHO the time to do such a pull is NOW, as we have much time left for translators catching up. If this pull is considered useless (which at least sipa doesn't think ^^) just close it. "	Clarify
1829	8659492	"Common autotools convention is 'make check'.  I don't know that it matters much, but might increase the likelihood of it being run. (But perhaps make test is more popular elsewhere?) "	Clarify
1829	8659786	"I'll make both ""check"" and ""test"" work... "	Clarify
1829	8660275	"ACK either (or both) ways.  autotools does ""make check"", therefore that is widely spread.  ""make test"" is also quite common in hand-rolled makefiles. "	Clarify
1829	8674980	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3c29fd5dd6c2b34205d5c556797ca3ee37328a6d for binaries and test log. "	nAnswer
1828	8628118	"My primary interest is neither simple code nor faster code. It is secure, backwards-compatible code.  Given the level of scrutiny the existing bitcoin codebase has had so far, I am very reluctant to commit changes to core code unless the benefits of the changes clearly outweigh the risks that the ch"	Clarify
1828	8636113	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/80173de16776c468b187348f74cd16245c3e0416 for binaries and test log. "	nAnswer
1828	8642819	"I'm divided on this one. Some changes do make the code shorter and easier to read / more maintainable, others are somewhat more doubtful shortcuts made for speed.  But for example reducing the borderline-crazy loop in DecodeBase58 to:      while ((v = pszRBase58[*p]) >= 0)      {         bn *= 58;  "	Clarify
1828	8683878	Thanks for the reviews!  Based on them I've pushed some improvements. * added a comment explaining base58-encoding and how leading 0-bytes are encoded to preserve them. (btw. should it be `base-58` or `base58` in comments?) * corrected Hungarian notation of `pszRBase58` to `rgi8RBase58` and declared	Clarify
1828	8685694	"Wladimir J. van der Laan <notifications@github.com> writes: > Is there a usecase for fast base58?  Not directly in bitcoind, unless the RPC-interface gets used heavily. However, https://bitcointalk.org/index.php?topic=88584.msg975993#msg975993 mentions that it is a CPU hog and uses code, which due"	Other
1828	8744986	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8a4bff050503b75c35ad3acd08d78be18c6b3da6 for binaries and test log. "	nAnswer
1828	10316636	Needs rebase. 	System
1828	10341556	Rebased on `master` as of a few minutes ago. 	Statement
1828	10360827	"I do appreciate the readability of the code, and to a lesser extent the possibility for optimization. But it seems you're trying to bypass CBigNum wherever possible, directly calling OpenSSL routines. I agree CBigNum is only a thin wrapper, though, so perhaps we should see it as ""C++ interface for O"	Clarify
1828	10434714	agree w/ @sipa  	Accept
1828	10684861	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/eb7000f6e5be6cbc9b238bdd781ecb25496152ca for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1828	12236808	"Closing this as ""risks outweigh benefits""  "	Statement
1828	21326514	Might be good to dig the tests out of this at least. 	Statement
1826	8594293	"Please try version 0.7.0, it has many translation fixes: http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/test/  "	Other
1826	8594334	"Oh, it's already been fixed. Thank you. "	Statement
1826	8596341	"@KrzaQ You may wish to visit https://www.transifex.com/projects/p/bitcoin/ and check if your language has 100% coverage; if not, it would be helpful if you can help update/maintain it :) "	Clarify
1826	8597561	"I'll do that, but I still prefer homogeneous environment (which pretty much means English) and that's why I was outraged by the lack of choice in 0.6.3 "	Clarify
1825	8589807	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/34b6e1c052024a0c80069ef1a7ce63764a496007 for binaries and test log. "	nAnswer
1825	8607208	"I haven't benchmarked it, but just to be sure, would it be possible to make a one-shot program to compare all the 4 billion possible compact value SetCompactOld() == SetCompactNew() and from the SetCompact() result GetCompactOld() == GetCompactNew()? (with possible I mean that I don't know how much "	Clarify
1825	8609011	"And if you want to document the compact format (something very useful I think), please write in the ""big comment"" the endianness of the mantissa and if ABCD are the 4 bytes of the compact number, which one is the exponent (A?) and which one is the mantissa (BCD in ?endian). As it is I think the form"	Clarify
1825	8626864	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/48a10a37804a01b2533aea920567867deedc6b9e for binaries and test log. "	nAnswer
1825	8768541	"I really like that this defines the number formats without relying on OpenSSL internals.  I've checked all 32 bit numbers for SetCompact, comparing old and new implementations, with the following mismatches:  * 0180xxxx  returns -0 (old) versus  0 (new) * 80800000 returns -0 (old) versus  0 (new) * "	Clarify
1825	8856180	"OpenSSL's `BN_set_negative()` can not be used to create a -0: `void BN_set_negative(BIGNUM *a, int b)         {         if (b && !BN_is_zero(a))                 a->neg = 1;         else                 a->neg = 0;         } ` In fact, all of the OpenSSL basic arithmetic routines are careful not to c"	Clarify
1825	9635727	"As another interesting sidenote, contrary to what it's written in the documentation, bn_get_word ignores the sign. So -255 returns 255 (the documentation says ""BN_get_word() returns the value a, and 0xffffffffL if a cannot be represented as an unsigned long."" http://linux.die.net/man/3/bn_get_word ,"	Clarify
1825	10359490	ACK 	Clarify
1824	9194862	So i have upgraded to 0.7.0 i have a transfer that is 15mins old and it got 3 comfirms already because the client wasn't synced so it got confirms from older blocks.   I did close the issue by mistake.  	nAnswer
1824	9194912	Can you tell us (or me privately) the transaction ID of one of these transactions and give us the debug.log from your client? 	Clarify
1824	10473679	Any news on that issue? 	ynQuestion
1824	10686106	I can not recreate the bug so i will now close it. 	nAnswer
1822	8497726	ACK 	Clarify
1822	8502052	Forum reports working test: https://bitcointalk.org/index.php?topic=106236.msg1185168#msg1185168  	Other
1822	8503965	ACK 	Clarify
1822	8512463	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c1d79812f428860e6f624835851d6f3ecd86bbb3 for binaries and test log. "	nAnswer
1821	8495109	"ACK, it can always be brought back when it is better tested  "	Other
1821	8495274	Has this been tested by someone who was experiencing the problem?  	whQuestion
1821	8495705	"No, but it is basically the same fix suggested by one of the people who ran into the problem; see   https://bitcointalk.org/index.php?topic=106236.msg1175793#msg1175793  "	nAnswer
1821	8497786	Prefer @sipa's #1822 fix 	System
1821	8503957	"Closing, sipa's fix is reported to work. "	Statement
1821	8512530	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/7cfce5689cb5504cd3ddf17e707c8f209b4f5105 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1820	8483030	13e100dd08b6da0a7426ea520b0bb3ae54cef79dd045e2e4f7116023df3a5c95  is an example of a violating transaction in the chain. 	Statement
1820	8491812	"How do you mean IsFinal() can never return false? If you want a non-final transaction, at least one transaction input should have a non-maximum nSequence number. "	Clarify
1820	8492239	Doh. Missed that it was calling the ctxin IsFinal not itself. 	nAnswer
1819	8552273	"This has been fixed, closing "	Emphasis
1818	8467833	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b8ae01437d2e40a2851c17566203bf35dda0cd1c for binaries and test log. "	nAnswer
1818	9861820	"Code changes look good to me, but needs rebasing, and I understand there is some problems still reported in https://bitcointalk.org/index.php?topic=105505.0 "	nAnswer
1818	9878059	"Rebased, and fixed a crashing bug in signrawtransaction that I think was introduced with ultraprune (assigning coins.vout[nOut].scriptPubKey = scriptPubKey could crash if coins wasnot already in mempool/wallet).  Testing TODO:  + Make sure the right thing happens when signing a transaction with two "	Clarify
1818	9879148	"The problem I had reported in that thread was totally on my end, the result of a failed (manual) merge left a line missing in my local repo, and it was the line that adds stuff to the tempkeystore, so it was kinda important.  I'll pull the rebased version and do more testing, but I won't have time t"	Clarify
1818	9882659	"Testing successful, I'm going to pull. "	Statement
1817	8417943	Can you please try 0.7.0rc2?  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/test/ 	ynQuestion
1817	8424401	"Yes, try deleting the files (but be sure to keep/backup wallet.dat!) "	yAnswer
1817	15634788	"I'm not sure if this is still an issue. If so, can you retry with the most recent version? There is automatic wallet recovery/salvage in.  "	Statement
1815	8427543	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f518b2c39868eeacae871dc79a7f270736b984e8 for binaries and test log. "	nAnswer
1815	8447633	I think it's best to a OPENBSD=1 option to the makefile for the OpenBSD-specific changes (unless there's a way to detect that automagically...). 	Statement
1815	8447674	"They're not openbsd specific, they apply to both (and probably netbsd) platforms. The db thing is weird and can occur on other platforms from what I can tell.  I moved the AI_ADDRCONFIG def into compat.h where it should be. Nice catch. "	Clarify
1815	8447692	BSD=1 then...   	Statement
1815	8447702	"BSD is already a reserved define since BSD4.3. (It's a version number, i forget details of parsing it.) "	Clarify
1815	8447760	"The pthread_np.h header stands for ""non portable,"" I know that function exists on those two platforms in the expected form, I don't know if there's something better to key off of for it. "	Reject
1815	8448067	Cleaned up and clarified some comments. 	Reject
1815	8448162	"I don't really care *what* specific flag you use, but you should put the OBSD specific changes (especially the -ldl) behind some flag so that build on Linux is unaffected. "	Clarify
1815	8448266	"The stuff in the makefile doesn't have access to the things that define things like _____FreeBSD_____, etc since they're in included headers is the bigger problem. I'm trying to hack it in as cleanly as possible without resorting to autotools because that's a big change. (and last time that got left"	Clarify
1815	8481308	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e56b181ffc35c6eaf488fd09fc0948c2ea722158 for binaries and test log. "	nAnswer
1815	10434754	"ACK, seems sane, needs rebase.  Maybe HAVE_CXX_STDHEADERS should be conditionalized for the platforms that need it.  "	Clarify
1815	16033246	Needs rebase. 	System
1815	18694319	"Closing due to inattention.  If you want to rebase, feel free to re-open.  "	Statement
1814	8411050	I tested by doing initial block downloads on Bitcoin and testnet.  Also tested on bitcoin with each of the hashes broken to make sure it rejected the violators. 	Clarify
1814	8426047	ACK 	Clarify
1814	8435391	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ab91bf39b7c11e9c86bb2043c24f0f377f1cf514 for binaries and test log. "	nAnswer
1814	8437321	"What happend to that 2 blocks, which forces you to special-case them? Perhaps an easy answer is possible ;). "	whQuestion
1814	8437541	"@Diapolo The miner used an identical pubkey and extranonce, resulting in a duplicate coinbase transaction. (which replaced the prior one, making the earlier one effectively unspendable). This has happened twice... an expensive mistake. "	Clarify
1814	8463986	"Great idea, it minimizes the window in which exceptions to the rules are possible.  ACK  "	Clarify
1814	8495078	ACK 	Clarify
1813	8426153	"I agree with @gmaxwell, the goto looks like spaghetti code to me.  "	Statement
1813	8441734	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/947309a82fe0400e984a56653219c4676416559e for binaries and test log. "	nAnswer
1813	8667882	Looks like the consensus of wussy C++ programmers is to NAK the beautiful goto... closing 	Statement
1813	8721164	Please don't close pullreqs just because they need a minor change. The goto has been replaced here. 	Reject
1812	8426218	ACK for after 0.7.0 final 	Clarify
1812	8445440	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/17f8d6e4001afa81a3e481d24c869cd14301f964 for binaries and test log. "	nAnswer
1812	8464074	ACK 	Clarify
1811	8409245	"As much as I prefer using historically-standard KB/MB units in general, this client has always used SI-standard kB/MB units consistently. So ACK changing it (ideally everywhere), and ACK leaving it alone too ;)  On the new commandline option, I feel we are getting a bit too much code to configure a "	Clarify
1811	8412065	Removing debug logs is one of these actions that can easily be done in the script that launches bitcoin(d). It's not worth adding yet another command-line flag for.   Let's keep command line options for bitcoin/network-related settings.  	Clarify
1811	8426243	NACK. I agree with @laanwj 	Accept
1811	8434574	Closing for getting too much NACKs ^^. 	Statement
1811	8445449	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/0de15d3f386852d8afb30be85c0f53a3274897f6 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1810	8426271	ACK for after 0.7.0 final 	Clarify
1810	8448360	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/62904b33f367a1febaa68a180a96529d7f50b1bc for binaries and test log. "	nAnswer
1810	8739089	"ACK, works great (love it)! "	Emphasis
1809	8408233	"NIT: you'd save a byte by using OP_2DROP instead of DROP DROP  I'm torn on whether or not it is time to implement a standard OP_DROP transaction type. If we do, it feels to me like it should be:      ..64-or-fewer bytes.. OP_DROP ..n.. ..pubkeys.. ..m.. OP_CHECKMULTISIG  64 bytes because 64-byte SHA"	Clarify
1809	8408353	"As I enumerated on Jeff's call out for mob support ( :P ) ,  the actually likely applications of this are instant messaging, txn source deanonymization, and timestamping. The first two should be correctly addressed by a payment protocol (optionally via a p2p network), the latter should be accomplish"	Clarify
1809	8408858	"Updated commit with the following changes: 1) Ditch previous made-standard transaction types 2) Make OP_DROP + multisig a standard transaction type 3) Permit up to 80 bytes of OP_DROP data.  80 bytes was chosen because OP_DROP + OP_DROP was intended to enable ""hash + tiny bit of metadata"" as shown i"	Clarify
1809	8408900	"RE fees:  great suggestion.  I am now endeavoring to figure out how to disable free transactions for TX_MULTISIG_DATA, and will do so in a separate commit.  RE use cases:  as I stated in IRC, I am working on a basic version of TD's distributed bond proposal right now.  I also feel quite strongly tha"	Clarify
1809	8409045	"@jgarzik Sure the use case for attaching metadata to payments comes up, but in my opinion that is just because no infrastructure for negotiating a payment exists. I still haven't seen a need for that metadata to be attached to the actual bitcoin transaction that is used to perform that payment. My o"	Clarify
1809	8409081	@jgarzik You actually think that people have a fundamental right to force third parties to perpetually store information unrelated to securing and inflation proofing Bitcoin as a price of being able to contribute their participation to the decentralized trust the Bitcoin is secure and inflation proo	Clarify
1809	8409341	I agree this shouldn't be standard or encouraged until there is a strong use case for it. Is there a good reason this metadata can't be stored in a merged-mined block? 	Clarify
1809	8409619	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8b5974ceb1542bb04c65d8a664019de3053ca1cf for binaries and test log. "	nAnswer
1809	8409642	Revising my comment with IRC input: probably ACK as soon as testnet-proven. 	Clarify
1809	8411017	"Dropped data can be left out of the working set as it can't affect spendability, I think? That means the only cost is disk storage, not disk seeks or memory, and rarely accessed disk storage is cheap. You can buy a terabyte hard disk for almost nothing these days.  This does remind me a lot of the D"	Clarify
1809	8412481	I agree with @sipa. Only data that is strictly necessary for the world to validate a transaction has a place in the block chain. That's the whole point of it. Everything that is only significant to the sender and receiver (or miner) should be between the sender and receiver (or miner) and doesn't ne	Clarify
1809	8420449	"Actually I remembered just after I posted my last message that you do need the entire script in the uxto set because of how the signature hash is calculated.  OTOH I thought of something else - setting aside the uxto set, in terms of long term storage, this kind of thing is fairly neutral. <20 bytes"	Other
1809	8454956	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5a62d80f715f06e42d178c437a33809a6d258a8d for binaries and test log. "	nAnswer
1809	9640838	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7d68f17333d15c3d1af6c87bf56f45b4546eb219 for binaries and test log. "	nAnswer
1809	10434759	rebased  	Statement
1809	10771376	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8afa3ce75f6f49f68e6310d2fffabfffcfbd7770 for binaries and test log. "	nAnswer
1809	16084769	"Closing.  It sounds like current consensus favors a slightly different approach, if small-data is ever accepted:  a single TxOut per transaction may be obviously prunable, e.g. OP_RETURN. "	Clarify
1809	16104399	They're orthogonal - some use cases require spendable outputs that contain a hash as well. 	Statement
1809	18937181	"Renewed interested in this at the conference and elsewhere.  We need to figure out a nice way to attach a hash to a transaction, given that people are already doing this in a not-nice way (unspendable addresses). "	Clarify
1809	18937708	"IMO, this kind of thing really should have @gmaxwell 's hash preimage required-to-relay as a prerequisite... "	Other
1809	19537664	"There's a lot of interest in oracles coming down the line, it seems, and that's a use case for this kind of transaction.  If someone popped up with an actual working server that did this, I feel we'd be able to justify the <hash> OP_DROP <keys> OP_CHECKMULTISIG form.  "	Other
1808	8404739	ACK 	Clarify
1808	8411489	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b019ea17ec7cc37d098982b4f0f4636e424ab4b8 for binaries and test log. "	nAnswer
1807	8404732	ACK 	Clarify
1807	8404768	"Can we get rid of the PRI64x macros by just not supporting older compilers?  If I recall correctly, latest MSVC supports the standard %foo way of doing things. "	Clarify
1807	8405417	"You'd hope so... But   VC2010 size prefixes: http://msdn.microsoft.com/en-us/library/tcxf1dw6%28v=vs.100%29.aspx VC2012: http://msdn.microsoft.com/en-us/library/tcxf1dw6%28v=vs.110%29.aspx  Seems that they still have no support for ""ll"" and ""z"", but only ""I64"" and ""I"". I don't think there is really "	Clarify
1807	8405525	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/76a57705eae7ebb1b47267f38c1bad0ccaf9d6e6 for binaries and test log. "	nAnswer
1807	8405548	"%zu is AFAIK standard C++, so is it confirmed to not work with MingW?  @gavinandresen PRI64x *is* the standard way of printing int64 types. %x, %lx, %llx all target implementation-dependent sizes for int, long, and long long. "	Reject
1807	8405681	"@luke-jr Well as I said, I can't find it in the list in the official documentation on the MS site, so if it works at all I don't think it is safe to use.  Also I'm pretty sure that C++ standard says nothing about printf, that's from the (Ansi/C89/C99) C standard. C++ has the funny `std::cout <<` for"	Clarify
1807	8405880	"@laanwj Meh, it's part of C99 (page 289), so if it works then I don't see any reason to avoid it. "	Clarify
1807	8416152	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7506e2fa2020193e65621581835c08f62419a689 for binaries and test log. "	nAnswer
1807	8460226	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3b3d9996181d9c93c81667f610e31212997fd184 for binaries and test log. "	nAnswer
1807	8738433	I would love to see this one getting in as afterwards we can start fixing all left signed/unsigned stuff. 	Clarify
1807	8757684	"AFAIK this does not help with signed/unsigned, just the width of data types to prevent segfaults and such.  "	nAnswer
1807	8868778	ACK 	Clarify
1807	8903759	Gah!  This adds well over 100 warnings to the build.  Please clean up.   	Clarify
1807	8915959	"Yeah it sucks to be messenger of bad news, however it adds warnings for problems that were hidden before, not new problems. Having them visible is better IMO. "	Clarify
1807	8916073	"A few, sure.  Over a hundred, including several repeated each time main.h etc. was included?  It is noise that obscures real warnings, and gets in the way of actual work.  I am basing my current work off 1381ad2b21733071acb2a43c251dbecef524f110 as that is the last usable commit here. "	Clarify
1807	8916278	Just remove -Wformat then for your build. 	Reject
1807	8916483	"That's not usually how software development works.  If you cause problems in the build, you fix it, or revert it.  It is not the responsibility of each individual developer to work around the build noise added here.  If you are not volunteering to fix it, let's revert the change until it is ready fo"	Clarify
1807	8916565	"You will recall, with the previous swath of warnings, that the warnings were fixed _before_ we adjusted the makefiles.  "	Reject
1807	8916703	"I have already volunteered to fix it, but I also have many other things to do.  I actually *made -Wformat work*. Before, it was enabled but not doing anything in the bitcoin build (because of our custom printf redefine). If we don't like the warnings it creates, it should not be enabled in the first"	Clarify
1807	8917312	Voila 14ac0ad  	Statement
1806	8402164	"I still don't see the point. Changes like removing spaces are fine when you're editing a part of the source, but I really dislike automated ""beautification"" passes over the code.  This one isn't so bad, but I've seen it going from bad to worse in projects, with a large part of changes consisting of "	Clarify
1806	8404702	"There are really only a few left, so such criticisms are very overblown. "	Statement
1806	8405304	"Ok, maybe I exaggerated a bit (color me traumatized :) ), let's try it out and see. "	Statement
1806	8449343	"I'm going to remove such stuff with future pulls, when I observe such occurrences and they fit in then. But AFAIK the script changes won't be that invasive. "	Reject
1806	8757787	"this was already done, closing  "	Statement
1805	8401212	https://www.transifex.com/projects/p/bitcoin/language/de/ 	Statement
1805	8401220	"Thanks, but it show, that all work is done. "	Statement
1805	8401288	"Great, then maybe there's nothing to do. If there's incomplete/wrong string translations, you can still edit them. Perhaps review it to be sure. :) "	Statement
1805	8401339	I suppose this is fixed with 0.7.0?  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/test/  	ynQuestion
1805	8401522	"Ok, I have checked the the test version. The gui is complete different at at the settings part. But here are no translation error. "	nAnswer
1805	8401890	"Ok, that's great! Closing this issue "	Emphasis
1805	8401906	"The < 0.7 releases were not that good in terms of translation quality, but as I did great parts of the German translation, I can say the official release will be one of the best for non English users :-)! "	Clarify
1804	8401211	"IMO, this should be optional, as no reasonable miner would want to have it on mainnet. "	Statement
1804	8401843	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/19b1145968a83ab379985eac540e8ee52a09f322 for binaries and test log. "	nAnswer
1804	8405206	"If miners want a knob to disable, that's easy to add...  or, it is similarly easy to patch the source at the callsite.  I'll wait and see what the other devs prefer...  can add a command line argument to disable, if that's what people prefer. "	Statement
1804	8405600	"Maybe it would make sense to hard-fail on testnet, and set ""errors"" (getinfo etc) on mainnet (while still posting the block)? "	Emphasis
1804	8407789	"Funny, I was just about to suggest ""errors"" too.  In addition, it could submit the block like normal, but then refuse all further getblocktemplate calls until the process is restarted. dunno, perhaps over complexifying it.  The current behavior is a bit dangerous,  a widely used miner program could "	Clarify
1804	8409196	I like that idea about accepting the block internally yet giving the submitter a rejection anyway. Seems the ideal of both worlds and gets the message across clearly. 	Clarify
1804	8827112	"Closing, not worth the effort of revision to suit the crowd  "	nAnswer
1803	8400554	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/23a44a7ad6e69027ff95a19165dda1cb8a4c2f9d for binaries and test log. "	nAnswer
1802	8399211	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/85eb1e7e5619567fb1a191afc6aea34b7f769e6f for binaries and test log. "	nAnswer
1800	8386923	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/da7b8c1260d91e3306eb18dd65633567cb31332f for binaries and test log. "	nAnswer
1800	8394157	What is the severity of this bug? Does it prevent bitcoin from working at all when starting with an empty wallet?  	Other
1800	8395297	"The position counter is uninitialized. So far I've never been able able to get it to a case where it happened to have any value other than zero, which is the correct and expected value for a new wallet.  No matter what value it takes it should not be able to prevent bitcoin from working.   The worst"	Clarify
1800	8397685	"In theory, a new wallet might put items out of order across restarts since they won't run the ""process old data"" function :/ "	Other
1800	8447399	"bump, rc3? "	whQuestion
1797	8359101	"*sigh* it's an boost:interprocess issue again.  Looks like a permission issue for the shared memory.  Boost:ipc is only used for URL handling, so errors like this should not terminate the application. I'll investigate this.  Can you try the 0.7.0rc just in case? "	Clarify
1797	8359722	"@laanwj I'm sure URI-handling is not active on Windows with 0.6.3, so I'm surprised then... "	nAnswer
1797	8359773	"I'm new here, I can't find where to get the 0.7.0rc. Thanks. "	Statement
1797	8359820	@Sladien Here you go http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/test/ 	Emphasis
1797	8359925	"Installed 0.7.0rc and it executes without error, currently synchronizing with network.  "	Statement
1797	8360080	"Sounds good :), I'm still not sure what would cause that boost exception with 0.6.3 though... "	nAnswer
1797	8360331	"IIRC, 0.6.x used boost::interprocess for *everything* "	Statement
1797	8365075	I'm surprised that 0.7.x fixed this. But it could indeed be due to 0.6.x using boost::interprocess in places it should not. Closing this issue. 	Clarify
1796	8357149	As the process is fully automated; is it possible to send the restored translations to transifex directly?  Great work btw  	Emphasis
1796	8357261	"It's not *fully* automated, it does need the supervision or it will make bogus changes occasionally ;)  I don't know anything about Transifex other than it being a website <.< "	Clarify
1796	8357358	"It's a website with an API. But apart from that I don't know much about it ether.  Merging between git and transifex is hard, this is why we usually encourage the one-directional workflow.  The problem of directly uploading these .ts files to transifex could be that translations that have been made "	Clarify
1796	8359386	"I'm not sure what would be invalid with such code: ``<translation type=""unfinished""/>``? "	Other
1796	8359425	"Nothing, I'm sure. But my lupdate does the longer way "	nAnswer
1796	8359465	"What Qt version are you using  In the end I dislike fixing stuff that way as our default process is to only update english-master and everything else happens via Transifex. It is indeed a time-consuming work you've started here, but I'm not sure we should do it that way. "	Clarify
1796	8359487	4.8.2 	Statement
1796	8359642	"I have to clarify I guess, I don't want to stop evolution on the translation process, but at least we never uploaded so many changed translation files.  IMHO before doing your work, the current Transifex state should be merged to current master, to not lose new translations and then disable TX trans"	Clarify
1796	8373611	I've sync'd my local copy of this branch with Transifex and updated the first 2 commits there. Will be working with @tcatm to finish the rest. 	Clarify
1796	8378353	"Can you give a status update? It seems you upped a new english master file to Transifex, but we have not the corresponding bitcoinstrings.cpp update here on Github, which sucks IMO.  Edit: I somehow also missed the vote to declare you as a maintainer on Transifex. "	Clarify
1796	8379327	The updated bitcoinstrings.cpp will be in this pullreq when I finish updating it. It's trivial to update locally anyway... 	Clarify
1796	8380076	"I read that Gavin wants RC2 to become final, in the Bitcointalk thread. The new translations should be in there... which means we need a bitcoinstrings.cpp update here and another TX update merged into current master. I really dislike the timing of this pull... "	Clarify
1796	8380430	"RC2 is already done, so if it becomes final this is all too late anyway. "	Statement
1796	8383275	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7f7a4fc3394552c9cf3a97c76232390d7956a9a7 for binaries and test log. "	nAnswer
1796	8384193	"Finished via Transifax for all but 4 with under 10% coverage: ca_ES et eu_ES fr_CA (since less coverage means more work for me, these didn't seem worth it)  Also did the necessary git<->transifax syncing, so the latest translations are in this too. Should be good to go! "	Other
1796	8384222	"Side note: I did NOT pull the new Japanese translation, since it has 0% coverage (what Transifax sees is from the translation I copied to make it). Eliel (who recently updated the Finnish translation) plans to also fill in this Japanese one in the coming days. "	Clarify
1796	8384501	ACK after rebasing into one commit  	Clarify
1796	8384630	Squashed into a single commit. 	Statement
1795	8384474	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bd93f61c2abe5b19e77030fa5859bc370c789a3a for binaries and test log. "	nAnswer
1795	8674203	Very exciting.  Did you see this:   http://matthias.vallentin.net/blog/2011/06/a-garden-variety-of-bloom-filters/  He has a really interesting looking C++11 headers-only implementation here at github that might give you inspiration (e.g. I think he uses boost to do the hashing; he seems to get a ton	Clarify
1795	8915356	"implementation ACK, I like it a lot.  This seems to match the initial sketch from @mikehearn and myself on IRC.  "	nAnswer
1795	9122833	"Poke, let's get some additional review on this. "	Statement
1795	9738630	"Hey Matt, could you rebase this on top of ultraprune? I'm ready to start merging the bitcoinj side but want to test this with the latest code. Will do a review now-ish. "	Clarify
1795	9739753	ACK on this. Most of my comments are purely cosmetic except for the unit test commit being in the wrong place (it wouldn't compile in the order given).  I guess we'll need a BIP? I'll start on one that documents what we've come up with. 	Clarify
1795	10029681	"Thanks mike for the good review (as usual).  I updated the code to addresses most of the issues you mentioned. Changes: * many additional comments * filteradd is now limited to 1MB, any larger and the node gets a Misbehaving(100). * fRelayTxn now defaults to false - this means we will no longer rela"	Clarify
1795	10030079	"@mikehearn there are a few comments which note what the protocol defines as spec (these are obviously up for discussion): * there is no formal definition for filter parameters for a filteradd command if no filter is loaded - it is up to the serving node (if the client doest care, why should the spec"	Clarify
1795	10030478	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/1860b72e356f0d4279b25bf1ca562ac00511eded for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1795	10030614	"@BitcoinPullTester hey, I wasnt done yet! "	Clarify
1795	10038439	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5be9d251b5901399c6f70b99f1c2bddc4e14e7ec for binaries and test log. "	nAnswer
1795	10274345	Added the requested nTweak value and merged sipa's work on partial merkle tree representations.  The BIP now needs rewritten and this is ready for second (third?) round reviews. 	Clarify
1795	10490567	"Mostly ACK; * I'd prefer to have the Murmurhash3 implementation separate from CBloomFilter * The 0xFFFFFFFF/(n-1)*i seed value seems intended to result in large bit differences between the different hash function's seeds. Together with the tweak, however, the first and the last now get seeds tweak a"	Clarify
1795	10771393	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/21e780e05c7b18ab318e57bd9e24961a34378e2d for test log.  This pull does not merge cleanly onto current master "	nAnswer
1795	11478680	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a5a72aa691296af6de92658ff998da120c4b34d8 for binaries and test log. "	nAnswer
1795	12046488	"Can you add a new feature that lets clients opt out of auto-adding? Sipa points out that it's only necessary for wallets that contain outputs which don't require predictable data in the corresponding inputs, which (for now) is most of them. This should resolve the excessive expansion issues. "	Statement
1795	12047118	"@mikehearn  Kind of an an unfortunate privacy loss for ones who do set it, and it still leaves the feature potentially useless for any who set it.  (But I agree on having the option, if for nothing else because it makes the load-balancing lark I suggested viable) "	Clarify
1795	12048198	"Well not really, you can still set the FP rate to whatever you want. If all your outputs are pay-to-address then it's a no-op functionality-wise, the auto-adding didn't buy you anything. For the case where you have pay-to-pubkey or other scripts, the client has to refresh the filter every so often ."	Clarify
1795	12058432	"Setting that bit or not is still another anonymity set reduction, but I'm splitting hairs there ignore it.  I guess I don't have a good feel for how fast the filter fails and needs to be reset. If it's too fast periodic refreshes won't be sufficient (E.g. will the size of the refresh plus the unwant"	Clarify
1795	12130821	Added a nFlags to let the peer pick how/when it wants the filter updated...also added a second two commits to make it possible to match an arbitrary script template as a discussion point (that second part is not yet tested). Would like comments. 	Clarify
1795	12326080	"Code review notes:  I don't like the entire implementation of CPartialMerkleTree being stuffed into main.h, it should be its own .cpp/.h  Message handling looks good from a potential vulnerability point of view.  NACK on the script.cpp / script.h changes -- they are unused (yes? I don't see where Ma"	Clarify
1795	12328294	"@gavinandresen Yes, after discussion I believe we are currently targeting skipping the 2 MatchesTemplate commits for 0.8 and maybe skipping those entirely depending on what we may need in the future. "	Clarify
1795	12336347	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e1a4f3778cb90ba9f0d4e736752f78dad1703caa for binaries and test log. "	nAnswer
1795	12336539	"@gavinandresen moved it to main.cpp, is that ok for you? "	whQuestion
1795	12339708	"ACK, looks good.  "	Accept
1795	15513639	So.. what was the BIP for these protocol changes? It would be nice if it could be referenced in the pull requests. 	Clarify
1795	15515778	"https://en.bitcoin.it/wiki/BIP_0037 as was discussed on the mailing list.  Regardless, this code was already merged and shipped months ago, it's a bit late to be commenting on it now. You can always open up new pull reqs if you want to change how the protocol works. "	Clarify
1794	8349406	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/65786afb0571eb197526f8ada8c8372fbc09b451 for binaries and test log. "	nAnswer
1794	8389902	ACK 	Clarify
1793	8352995	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/af910fed59f9230c751ffb8441d045b6883d7e01 for binaries and test log. "	nAnswer
1793	8449228	RC3 fix? 	ynQuestion
1793	8507062	Rebased fixing merge conflict. 	System
1793	8518214	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/463a1cab43fda24f89f71fffc876756dc1bc155a for binaries and test log. "	nAnswer
1793	8738277	"@sipa As this touches a part of your networking code, can you take a look here, too? "	Emphasis
1793	8763708	ACK 	Clarify
1790	8757257	"Supposedly it was added in case CNodes ever need a ""cleanup"" step before they are put in the disconnected nodes list and eventually deleted.   It's an event handler that is currently empty, but I don't think this is an issue. So I'm closing this... (man, we have 230 issues at the moment, please help"	Clarify
1787	8288760	Note _not_ intended for 0.7.  	Statement
1787	8322854	"Investigating boost.asio sounds like a good idea, before we build it entirely from scratch. "	Statement
1787	8355559	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5cb618146cedc7630513afb016ef386e6bd4f172 for binaries and test log. "	nAnswer
1787	8978902	Looks like a lot of code for a feature that should be standard. I assume it will be easier using boost::asio? 	Clarify
1787	8981310	"Most likely we can use boost.asio deadline_timer...  but that requires moving the ""io_service"" from RPC into the core code, so that non-RPC code may take advantage of the async I/O engine (and the timers that lie within).  "	Clarify
1787	10316628	Needs rebase. 	System
1787	10434777	"closing, self-meh.  should consider boost deadline timer, rather than creating threads for same. "	Statement
1786	8288072	"Yes, adding an extra flag should solve the problem too. ACK  "	yAnswer
1786	8288796	"This does not fix 10022 spam on Windows, as ``WSAEINVAL (10022) is caused by: The time-out value is not valid, or all three descriptor parameters were null.``.  But I think it is another fix worth to merge in addition to #1772, so ACK. "	Clarify
1786	8288946	"@Diapolo so you actually tested this on Windows, for the net and !net cases?  I'm not sure the Windows expected behavior matches what you describe... "	Emphasis
1786	8289022	"Indeed, that `WSAEINVAL: the time-out value is not valid, or all three descriptor parameters were null` comes from the MS documentation http://msdn.microsoft.com/en-us/library/windows/desktop/ms740141(v=vs.85).aspx   So yes on Windows you still need the check to prevent error spam. It appears that w"	Clarify
1786	8289079	"Yes, I understand it comes from the documentation, but is it actually _seen_ after applying this patch?  "	nAnswer
1786	8289180	"The error 10022 is still logged with this and without my patch, as select() returns WSAEINVAL. I tried it :).  @laanwj Yes, a check for ``have_fds`` is working, I can update my pull after this one is in. "	Clarify
1786	8289642	It makes sense that it still occurs because windows ignores the nfds argument. So this change is a no-op from the viewpoint of winsock.   We could spare ourselves worrying about all these kinds of low-level OS details if we used an abstraction such as boost::asio (which will also use more efficient 	Clarify
1786	8289850	"That is what I tried to say @jgarzik, his patch does not prevent the 10022 spam, I read the select() documentation on MSDN more than once to understand what is happening ^^.  I rather sure most part of that network code are still from Satoshi (at least he was the one who merged them to Github at fir"	Clarify
1786	8312039	"1) Updated to always pass fd sets to select(), even when zero fd's are set. 2) Use precise have_fds test before squawking on socket error.  "	Clarify
1786	8312341	"Verified to work and fix the 10022 spam on Windows, tried it and closed #1772 in favor of your patch. "	Statement
1786	8322696	ACK 	Clarify
1786	8358019	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2387944782fa61a3137afda91e9e8105d8cc5ddf for binaries and test log. "	nAnswer
1785	8285424	Reading your comments out-of-order....  ACK on dropping the change. Closing.  	Clarify
1784	8263004	"NACK.  I am against this type of nit-pick. There is a fixed cost to ANY change proposed, and if the benefit of the change is not greater than that fixed cost then the change is nothing but a denial-of-service attack on our collective attention.  "	nAnswer
1784	8266288	"In general, nitpick pull requests means that people are looking closely at the code and reporting issues and strange things, which is very good.  This, of course, doesn't all proposed changes have to be accepted. In this case I agree with @gavinandresen. This makes the code longer, not shorter :p  "	Clarify
1784	8266509	"Agreed, closing "	Statement
1783	8254009	We need more info like used OS and bitcoind version. What happened before the crash occurred for the first time? 	whQuestion
1783	8281190	Well I was running an older version of bitcoind and it was downloading the blockchain.  I stopped that version and then tried to start this new one and it gave me this error.    Distro is Debian 6.  uname -a: debsrv 3.2.13-grsec-xxxx-grs-ipv6-64 #1 SMP Thu Mar 29 09:48:59 UTC 2012 x86_64 GNU/Linux  	Clarify
1783	8281460	"You can't upgrade a BDB database that was not cleanly shutdown. Any chance you could go back to the original version you were running, start it with -detachdb=1  then stop it cleanly... then try upgrading?  "	Reject
1783	8281481	"yeah absolutely, i'm running the old version now. i'll give it a try, thanks "	nAnswer
1783	8281546	how do I stop it cleanly from the commandline?  ctrl-c? 	whQuestion
1783	8281584	"ctrl-c worked, and the new version started up fine.  thanks for your help gmaxwell!! "	Emphasis
1782	8249695	"real is just short for ""real number"" in this context. I don't see any reason to make it less clear. "	nAnswer
1782	8253967	@luke-jr ACK this patch is unneeded. 	System
1782	8263044	"NACK.  Please don't submit tiny, nit-picking pull requests like this, unless part of a larger change that actually has some positive benefit. "	nAnswer
1781	8246691	"Based upon this changes I'm planning to extend the Bitcoin-Qt GUI with the same proxy network options, but I want the core to get those first. "	Statement
1781	8284968	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c57082dc8c69934939ef7c7129d6dd9e46ee4fa1 for binaries and test log. "	nAnswer
1781	8313604	"Updated and re-simplified the helptext for -proxy6 and -tor + disabled the usage of -proxy for Tor and IPv6, when SOCKS4 is used. "	Statement
1781	8358035	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/988841c75fdf5f3844a3f99149c156d371883bd0 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1781	8385406	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/45ae329eb105f3412174ec080bd88edb390db643 for binaries and test log. "	nAnswer
1781	9642039	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/58bae3491657cd288a682bb21616e00f9be0d4e5 for binaries and test log. "	nAnswer
1781	9852993	"This looks like a lot of code for something that will be rarely used. Can't you combine the tor/ipv6/ipv4 specific code into one loop over NET_TOR, NET_IPV6, NET_IPV4, with maybe a small bit of specific code for each? "	Clarify
1781	9857498	"@sipa Did you look if the code-flow is valid? It took me quite some time, so it would be nice if feature-wise this could get an ACK and I try to compress the code, to shorten it :).  Btw. I'm using a client with this codebase since a few weeks with Tor hs enabled, looking good. "	Clarify
1781	9968205	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d2874a4b999a18ddb6dd9fc09d1c5b8f4ed10c8c for binaries and test log. "	nAnswer
1781	10052253	"@sipa I have re-worked this pull to be a little shorter, it contains no loop though. Can you have a look at the functionality now? "	nAnswer
1781	10053824	"I still don't really like this - it seems overly complex for functionality only a fraction of users will need.  I wonder whether it's not easier to have some way to overload -proxy if you really want network-specific rules. Something like -proxy ipv6:ip:port, maybe? "	Clarify
1781	10094222	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/d513e73239b03774cf81c32a329f2464824057f7 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1781	10316623	"What @sipa said. Also, this needs a rebase. "	nAnswer
1781	10317785	"I have changes for this in the pipe, which greatly reduce the code complexity and special casing. "	Statement
1781	10434818	"Would rather wait for a use case, than preemptively add this now   "	Other
1781	10438407	I'm going to re-work and re-open when finished :). 	Statement
1779	8245667	ACK 	Clarify
1778	8289140	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0f5cc2e93ab83df1963ceacd999c416554f17e28 for binaries and test log. "	nAnswer
1778	8291252	Updated to reflect @laanwj suggestion to not pass multiple bools to Bind(). 	Clarify
1778	8361683	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/02038f265abf535742cb33043cb2edc2905b9f11 for binaries and test log. "	nAnswer
1778	8401926	ACK for 0.8  	Clarify
1778	8738247	@sipa Any reason left to not merge from your point of view? 	ynQuestion
1778	8915385	"ACK, if others see a need  "	nAnswer
1778	8965990	"I'm a little sad that @sipa does not comment, as we had the initial discussion. I still think this patch is valuable. "	Clarify
1778	8969624	"@Diapolo sorry, I've been very busy the past few days - I'll have a look soon. "	Clarify
1778	9020574	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/71e1ea9fcde90fefac4ee131eaa3c522589cee5c for binaries and test log. "	nAnswer
1778	9643665	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b1b1323ca11e5214a3d4c6f26b4344e1177ca77b for binaries and test log. "	nAnswer
1778	9853005	ACK 	Clarify
1778	10049235	Anything left to do here then? 	ynQuestion
1778	10248489	Rebased to fix merge-conflict. 	Continuer
1777	8239752	"Is it possible to remove the use of sprintf here, too? https://github.com/bitcoin/bitcoin/blob/master/src/uint256.h#L291 "	Statement
1777	8240146	"I thought I removed that sprintf months ago. At least I rewrote a similar function in util.cpp.  That function should use the existing HexStr function.  Edit: I see the reason now. uint256.h cannot include util.h, as util.h includes uint256.h, So uint256 cannot simply use HexStr unless we move that "	Clarify
1776	8229960	"I find it really hard to interpret these.  - There is no direct call to setVisible from main(). It's likely inlined somewhere. hide and show are called various times, but I don't see any place where it could conditionally depend on an uninitialized value. Main is a pretty large function so it'd help"	Clarify
1776	8384677	Unable to reproduce any of these on linux.  	Statement
1776	8800045	"Perhaps @gavinandresen could re-run his tests with current master. And I'm asking myself if setVisible() could contain bugs because of the ""old"" Qt version we use for compiling Bitcoin-Qt? "	Clarify
1776	10473694	"@gavinandresen Can you comment again please, such orphans need more love ;). "	Clarify
1776	10474087	"Closing this, we can always run valgrind again. "	Statement
1775	8220896	It's good that you mentioned it and we keep it as remainder :). Did you try to build Qt5 and use it with Bitcoin-Qt yet? 	Statement
1775	8221097	"Nope, I haven't ever tried Qt5 yet. Most of the 5.0 changes are concerning QML, Qt Quick and such, which I haven't really used. I guess I prefer the C++ QWidget API to mucking around with JS and XML.  "	nAnswer
1775	11997805	"AFAIK Qt 5.0 is now released, but I didn't have time to try Bitcoin-Qt with it. Just wanted to mention :). http://blog.qt.digia.com/blog/2012/12/19/qt-5-0/?utm_source=rss&utm_medium=rss&utm_campaign=qt-5-0 "	nAnswer
1775	12307181	@laanwj  I did successfully build Qt5 and a Qt5 based Qt Creator version (2.6.1). I'm now in the process in looking at needed source code changes because of Qt API changes (see https://qt-project.org/doc/qt-5.0/qtdoc/sourcebreaks.html).  So far there were only a few things like changed function name	Clarify
1775	12307561	Cool! Do you have screenshots? Does it look any different in Qt5?  For example can you try how it looks with the new Fusion style: http://blog.qt.digia.com/blog/2012/10/30/cleaning-up-styles-in-qt5-and-adding-fusion/ 	Emphasis
1775	12308032	"I'm in the process of converting removed / deprecated stuff to Qt5 still. I'll report back, when I have done that. "	Statement
1775	12310224	"Got it to compile, the changes are really not that invasive. The default Windows theme looks nearly identical. Is there a quick way to switch styles, I can google, but perhaps you have a short and easy answer ^^. "	nAnswer
1775	12310365	Qt accepts -style <style> on the command line 	Other
1775	12310518	"I didn't know that, so ``-style fusion`` should work. I'll try that later, currently my PC is re-building the Qt libs, as I'm missing the default translations and need sqlite for the qrc-editor in Qt Creator. "	Statement
1775	15889189	See #2457 	System
1775	18741134	See #2721 	System
1774	8217135	ACK. makes valgrind happy again.  	Clarify
1774	8219467	"I agree that this would solve the immediate problem. std::list (unlike std::vector) does not invalidate iterators when items are added, so it is safe to keep pointers to items in it.  I do think the solution is a bit strange, but maybe it's just me. Why not return a type from OrderedTxItems that has"	Clarify
1774	8219723	"@laanwj It does feel strange to me, but I failed to think up a better way short of trying to rewrite it in some other paradigm. Maybe boost::variant would work better (most of the CAccountingEntry pointers are NULL), but I'm not comfortable with adding that into the mix myself this late in the relea"	Clarify
1774	8219756	"Yes, this is the simplest solution for now, that's for sure. Maybe add a (doxygen) comment to CWallet::OrderedTxItems that warns of the dangers, instead of only at the callsite in wallet.h.  "	Statement
1774	8219849	Like that? 	ynQuestion
1774	8220626	Yes. ACK 	Clarify
1774	8224051	ACK. (oops. clicked the wrong button)  	Clarify
1773	12017874	"Also for 0.7, @gavinandresen any news on this? "	Other
1773	16893040	Solved by the thread rewrite? 	ynQuestion
1773	17567318	Valgrind happy now.  	Statement
1772	8219507	"Maybe we should not call select at all when there is no work to do? (ie, hSocketMax == 0). Or am I overlooking something?  Edit: I think I am. Select without fds should effectively be a sleep() of the specified duration. So why is it returning errors at all?   "	Clarify
1772	8220433	"select returns 10022, when the 3 fds parameters are 0, which is the case when we have no net or a faulty proxy was supplied. "	nAnswer
1772	8220639	"But does it still pause for the ""timeout"" duration in that case? Or is it a busy loop, erroring out immediately and causing 100% CPU usage? "	Reject
1772	8220879	"``int nSelect = select(hSocketMax + 1, &fdsetRecv, &fdsetSend, &fdsetError, &timeout);``  The timeout parameter defines the maximum time for ``select()`` to wait, but when we have a failed net all fdsetX variables have their .fd_count set to 0 and so I assume select fails imediately.  But we have a "	Clarify
1772	8220967	Perhaps @sipa can comment here and ACK or suggest a better solution? 	Clarify
1772	8221027	"Ok, the timeout is already OK. Hadn't seen that.  "	Statement
1772	8268668	@gmaxwell @sipa and others... Can another core dev please take a look and ACK this one? As a fix I would like to see it in the next RC. 	Clarify
1772	8286351	"hSocketMax+1 is not valid, when zero FDs are in the fd set. hSocketMax+1 is valid when fds are set.  We should not be passing ""nfds == 1"" to select, when that is clearly not the case.  That is the bug that must be fixed here.  We always pass a timeout, therefore select always has ""work"" even if zero"	Clarify
1772	8286681	Can you test and verify that #1786 addresses your problem (or at least changes the behavior a bit)? 	Clarify
1772	8295696	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8207857f401bc1a48f863be646c5a508a7cdfe9c for binaries and test log. "	nAnswer
1772	8312313	Closing in favor of #1786! 	Emphasis
1769	8246620	That looks like a mess ... will create new :-/ sorry! 	Emphasis
1768	8201658	Valgrind is complaining:      ==56158== Thread 8:     ==56158== Conditional jump or move depends on uninitialised value(s)     ==56158==    at 0x2267CB: CService::SetSockAddr(sockaddr const*) (netbase.cpp:1029)     ==56158==    by 0x201FB9: ThreadSocketHandler2(void*) (net.cpp:814)  USE_IPV6 versus 	Clarify
1768	8206732	Saving my place in the debugging stack:  Problem seems to be with call:   listtransactions '' n  valgrind complains:      ==56158== Thread 3:     ==56158== Invalid read of size 4     ==56158==    at 0x1504336: std::string::compare(std::string const&) const (in /usr/lib/libstdc++.6.0.9.dylib)     ==5	Other
1768	8208593	"As an aside, I am interested in suggestions for testing the RPC calls, so that we may add them to the test suite.  Be more rigorous about problems like this.  My initial idea is that we can skip all the HTTP stuffs, and just internally generate / receive JSON calls.  Of course, RPC calls tend to be "	Clarify
1768	8216805	"git bisect tells me:   c3f95ef13f48d21db53992984976eac93e7a08fc is the first bad commit commit c3f95ef13f48d21db53992984976eac93e7a08fc Author: Luke Dashjr <luke-jr+git@utopios.org> Date:   Mon May 28 18:45:12 2012 +0000      Choose reasonable ""smart"" times to display for transactions  "	Other
1768	8216949	"CWallet::OrderedTxItems declares a local list<CAccountingEntry> acentries  Pointers into the items in that list are then added to the txOrdered map.  Unfortunately, acentries is deleted before returning from that routine, leaving txOrdered pointing to freed memory.  "	Other
1768	8217087	"Sorry about that, I really should have known better :( "	Statement
1768	8246191	"Is this one fixed? If yes, we have a blocker less ^^. "	whQuestion
1768	8303376	Fixed. 	System
1767	8210941	"I'm not entirely sure about clearing history. When clearing screen in a terminal (ctrl-L), the history is not cleared.  Then again I suppose clearing history in this case can help a bit with privacy, so it may be wise to do so.  "	Clarify
1767	8211336	"BTW the CONSOLE_SCROLLBACK is there to remind that there is currently no scrollback limit. If you use the console very long without clearing, you can theoretically exhaust resources. Maybe this can be solved using `QTextDocument::setMaximumBlockCount` (but I somehow remember there was a counter-intu"	Clarify
1767	8212391	"I found it annoying to not be able to clear the history, but in the end it is your decission :). I could add a comment in ToDo to remind there is currently no scrollback limit? "	nAnswer
1767	8289902	@laanwj Do you consider this a 0.7 patch? I updated it to reflect in a comment that we currently don't have a scrollback limit. 	Reject
1767	8306378	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/af7b88f29fba5d1db109a03dd6e5282fd9da825d for binaries and test log. "	nAnswer
1767	8306493	A little bit of a layering violation; but one possibility here would be to replace private keys and passphrases in the history with /*SECRET OMITTED*/ or hashmarks or whatever. 	Clarify
1767	8312068	"@gmaxwell I really had no privacy concern at first when opening this, I was just annoyed that the Up-/Down-Key history could not be deleted ^^. I'm not sure about your idea, it is for sure some work and I also would like to be able to still do copy and paste (when not using the clear button). "	Clarify
1767	8384765	"@gmaxwell good idea, I guess this could be best done with a list of commands and parameter positions that contain secrets that should be ""censored"". Secrets nested deep in JSON data structures are too much bother IMO. "	Clarify
1767	8386575	"I'm not sure if I understand that discussion in the light of my small pull ;). When giving bitcoind commands they appear in the shell history, too, no? "	Clarify
1767	8386699	"*I'm not sure if I understand that discussion in the light of my small pull*  It'd be even better if the user would not have to think about manually clearing the history after handling secrets. That doesn't exclude being able to manually clear it, of course.  *When giving bitcoind commands they appe"	Clarify
1767	8449276	If this one is of no interest just close it. But perhaps we can merge it for RC3 otherwise? 	nAnswer
1767	8449510	I'm fine with merging this but it will be after 0.7.0 final. 	Statement
1767	9367270	@laanwj Can you still merge this for 0.7.1? 	ynQuestion
1767	10434832	ping @laanwj  	System
1765	8183506	"Some defaults need to be translated, and some languages might not place them at the end. To work with this, such a change should use a %1 placeholder for the default, and make the default independently translatable when it is not a simple integer. The hard part will be doing this in a way that remai"	Clarify
1765	8183979	"Default is **always** the literal value that will be used as default. For that reason it does not need to be translated, integer or otherwise.  Using substitutions is an okay idea although I personally don't see the problem with putting the default at the end in every language. And thus not introduc"	Clarify
1765	8184169	Counter-examples: ```   -tor=<ip:port>         Use proxy to reach tor hidden services (default: same as -proxy)   -port=<port>           Listen for connections on <port> (default: 8333 or testnet: 18333)   -discover              Discover own IP address (default: 1 when listening and no -externalip) 	Other
1765	8184205	"Ok, you're right. It does not describe only default values but also conditional default behavior. Better to close this issue, it was a bad idea. "	nAnswer
1765	8184421	"Well, I think it's a good idea - just a lot of work >_< "	Other
1765	8184459	Seems like the idea is not consistently convertible (with little effort) and it makes no sense to special case such a thing -> closing this one. 	Clarify
1765	8184862	"Yeah exactly, it could have been a good idea if we had structured options help more consistently  from the beginning, but retrofitting it is just not worth the work. "	nAnswer
1764	8183155	"Code change looks OK to my 1am brain.  Commit description seems lame.  I would say something like:  ""Using a byte-for-byte comparison excludes valid nHeight encodings.  Replace with standard script method for decoding integer values on the script stack."" "	Clarify
1764	8183176	"Comment updated, also fixed a bug in the error message "	nAnswer
1764	8183200	ACK... assuming it tests OK  	Accept
1764	8190386	"NACK. The format should be strict/canonical. Changing the BIP to make that clear is the right fix, in my humble opinion.  "	yAnswer
1764	8193218	Encoding 24-bit heights instead of 32-bit isn't exactly cheap everywhere. :( 	Other
1764	8195023	&lt;shrug&gt;  Satoshi created CastToBigNum() precisely for reasons like this...  	Clarify
1764	8198420	"I was under the impression we were gearing up to put a lot of effort into forcing scripts to be canonical, I dont see why we would not do that here, too. "	Reject
1764	8198785	Right. This should be forced to be canonical and the BIP should be fixed to make it clear that it's specifying that. (Gavin pointed out that it already does; but it only does so in a fairly vague manner).  I'm glad that Luke caught the lack of clarity though.    	Clarify
1764	8198819	"Well-formed scripts in the coinbase means it is parseable -- which is not the issue here in this thread.  These scripts are parseable in both luke-jr's and gavin's cases.  BigNums may have multiple encodings, which is perfectly normal and accepted and supported in script for script stack values.  Th"	Other
1764	8203051	"I ask that everyone reconsider their position based on a new reason: Bitcoin script number format is rather complicated, and could easily be vulnerable to subtle implementation bugs.  My attempt to explain the format in the shortest possible terms: - Zero is special-cased to serialize to 00 regardle"	Clarify
1764	8203127	@luke-jr  that is a major reason to impose a strict canonicality requirement. If there is only one way to encode/decode each value then it is relatively simple and reliable to write tests cases that that show two implementations agree.  If there are multiple ways then an attacker can exploit them to	Clarify
1764	8203288	"Guess I didn't look at it from that perspective :)  Fair enough, closing this. "	nAnswer
1764	8203353	"Just to correct it if anyone else reads this thread and implements based on it: zero is not special-cased to 00, its a zero-length vector. See: the script test-cases which include a number of specific number tests. "	nAnswer
1764	8203423	"Right, by 00 I meant as a serialized script; ie, OP_0 "	Clarify
1762	8178133	"NACK, shouldn't endorse any specific service like this, and there's no reason we couldn't display the details in the client itself. "	nAnswer
1762	8178784	"Also, NAK, but I wanted to also thank @clopez  for taking the time to actually implement something and write a pull request, even if this particular change isn't one we want.  Generally prefer to keep functionality 'internal' rather than direct people to centralized services, and we already have a p"	Clarify
1762	8181072	"It's a bit ironic, as we have all the information on every client. We could display it much faster and more secure locally, shouldn't need to link to a service such as block explorer.   But thanks for actually implementing a solution instead of complaining!  "	Clarify
1762	8182100	I see. I also think is better to keep the functionality internal.  It would be awesome if someone writes a nice GUI to show the info that btcexplorer.com or blockchain.info actually shows.  I am closing this pull request. Thanks for the comments.  	Clarify
1761	8180688	"Change is OK,  Ideally, we should put the default values outside the translation message, so that we can change those without triggering retranslation.  "	nAnswer
1761	8183057	"I would like us to do your suggestion for the >0.7 release, as it makes senes, but would be bad translation wise in the current phase. That one is just a quick fix, while I was browsing that part of the code :).  Edit: As we found out the idea to separate the default values from the translations tak"	Clarify
1760	8181285	"Good idea, some comments though if we're going to add this:  - We should loop over *all* configured proxies (IPV4, IPV6 and .onion) and try to connect to them - *It should still set the proxy even though it doesn't manage to connect to it*. Keep it at a warning, assume the user knows what they're do"	Clarify
1760	8183206	"@laanwj Thanks for your feedback.  - You are right, we should test every supplied proxy, but tell me how would I pass (command-line wise) more than 1 proxy as in current init code there is no loop for more than 1 proxy. - Yes it should leave the option active and just warn the user, to don't breach "	Clarify
1760	8186944	"Updated to not disable the proxy, even if it is not reachable, which could be a temporary problem and to not leak information a user does not want to get leaked :).  I'm still asking myself, how I could supply a normal IPv4 proxy and one for IPv6 peers via -proxy? Take a look at init.cpp there is no"	Clarify
1760	8189188	@Diapolo A separate proxy server for IPv6 was never implemented :) 	Statement
1760	8207266	"@sipa Not yet, but as you know #1769 just does that. Are you fine with the ``ConnectionTest()`` function? "	Clarify
1760	8208133	"Is there a need to explicitly test?  Why not just observe where the failure happens when an outgoing connection happens?  (e.g. did we fail connecting to the proxy, or did it return an error?). Also, simply opening up a tcp connection to the proxy isn't enough to know that it's actually working. E.g"	Clarify
1760	8211234	"@gmaxwell Currently, when using or supplying a non working proxy, the client simply does not connect and tells the user nothing about it (which is worst case IMO). This one at least checks if a connection to the supplied IP:port combination can be made on startup.  You are right the connection is no"	Clarify
1760	8211281	"I like @gmaxwell's test-as-we-go approach. When the proxy is used, and it fails to connect to the proxy, show and log a warning (only once!).   For this to work you'd need to isolate cannot-connect-to-proxy problems from the-proxy-cannot-connect-to-target errors.  "	Clarify
1760	8214082	"I'll close this for now and perhaps re-open in the future, when a better approach is ready :). "	nAnswer
1759	8175512	"@bondbeau 0.6.3 doesn't like it, when the process just get's killed, 0.7 should be more sane as we did some shutdown-code-tweaking there. Could be, that your database was damaged and if you never used the client and have no funds in your wallet it would be easiest to just empty your whole Bitcoin da"	Clarify
1759	8178272	"@Diapolo Thanks for your reply, but I have to say I'm quite shocked that Bitcoin is being proffered as a refined money replacement for world-wide use if something as simple as an unplanned shutdown brings it to its knees.  Since I really don't want to be a tester and therefore only want to run 'rele"	Clarify
1759	8178344	"If you want, [you could try 0.6.4rc1](http://luke.dashjr.org/programs/bitcoin/files/bitcoin-qt/0.6.4/test/rc1/), which only has bugfixes. I don't know if that will help with this particular issue, however.  Most unplanned shutdowns don't cause problems for me... "	Clarify
1759	8178497	"@luke-jr I doubt that'd make any difference  @bondbeau  I assume the shutdown caused Bitcoin to be terminated prematurely, and the database got corrupted. Little we can do about that while using BDB (the database engine) I'm afraid, but it is embarrassing to be frank. BDB should deal with such event"	Clarify
1759	8178853	"@luke-jr Thanks, but the the file for the .exe didn't want to download after I reloaded the page...(I hesitated and cancelled it the first time because Avast said something like ""hey...do you really want to download this file that almost nobody around the world has ever downloaded""). Hope you unders"	Clarify
1759	8179061	"@bondbeau np, like @sipa said, it probably isn't fixed anyway. On a side note, you might consider another antivirus suite: Avast seems fairly hostile to Bitcoin so far.  Keep in mind that neither this client, nor any other today, is considered production-ready. For better or worse, the market is ahe"	Clarify
1759	8183046	"@bondbeau These problems are why we still call our Bitcoin client experimental software. The people who are participating here do this mostyl in their freetime and they do a pretty good job. A switch to a ""better"" or more stable database system is in the works and every day brings fixes to the clien"	Clarify
1759	8674455	"We need to do a much better job of recovering from bdb errors.  I created a little tool that randomly changes bytes in files, and am working on auto-recovery (as much as possible) for corrupt wallet.dats.  When I'm happy with that, I plan on moving on to peers.dat and maybe blkindex.dat (although we"	Clarify
1759	8678299	@gavinandresen  that just means you get to do it to leveldb too. :P 	Statement
1759	8681064	"To be fair, if we set up good exception handling for broken databases that will come in just as handy with leveldb.   At least in bitcoin-qt there should really be a pop-up ""The block chain database is corrupted. Exit, or try to recover/redownload?"". Instead of some vague ""runaway exception"" error a"	Clarify
1759	8690778	"The next chapter in this story after @sipa's suggestion helped me get Bitcoin running again:   1. After running it for a number of days (with only ordinary laptop sleep along the way) and letting it finish downloading the blockchain, I did a PLANNED shutdown. As in, I selected File > Exit and quit t"	Clarify
1758	8172803	ACK. Works great for me. (tried a number of raw transactions on testnet with it)  	Other
1758	8174892	I'll take a look at this tomorrow and see if the Windows weirdness is solved by this. 	Clarify
1758	8183753	"2 suggestions:  1. I would like to see a general comment in the code, which explains what is covered by parseCommandLine(). 2. I tried the code with the example from the issue thread.  Works: ``addmultisigaddress 2 '[""02404c0b780b0d3f70a57bccb0cac31c77e980d899db00f04a61052cf6500bde23"",""02092eb733ce9"	Clarify
1758	8184121	"That is as expected. You must not escape ' within "" and ' within "". The reason for having two types of quotes in the first place is that you can avoid escaping.  Shells have the same behavior. Try in bash echo ""\'"". It will print literally \'.  If there is a help message that makes you do differentl"	Clarify
1758	8184310	"@laanwj I was not quite sure, if the code was platform independent, that is why I mentioned Windows.  Just enter ``addmultisigaddress`` for example and take a look at the message. It clearly mentions ``<'[\""key\"",\""key\""]'>``, which makes users think they need to specify ``\""`` instead of just ``""``"	Clarify
1758	8191017	"ACK.  Help should be fixed (and we need a new syntax for specifying optional arguments), but that's a separate issue. "	Statement
1758	8196136	"Help (as in the help X command) was already working. It seems that what @diapolo was seeing is that error messages are dumped as raw JSON object, instead of formatted (and that you get help for free as error if you issue an command without the needed # of arguments).  I've added basic formatting for"	Clarify
1758	8196232	ACK.  Perhaps we should do the error formating for bitcoind output too?  	whQuestion
1758	8210265	"Indeed, the error reporting there ( https://github.com/bitcoin/bitcoin/blob/master/src/bitcoinrpc.cpp#L1184  ) could be changed in the same way, to prevent similar confusion.  "	Statement
1757	8168704	DelAddressBookName is used from the UI  	whQuestion
1757	8170565	ok 	Statement
1757	8171628	EraseName isn't though... 	Statement
1757	8171878	DelAddressBookName calls EraseName.  One is required for the other. 	Statement
1757	8172119	"Oops, right, I see. "	Statement
1757	8180352	BTW this reminds me of issue #1213 -- RPC offers no way to fully delete a label / account.  	nAnswer
1755	8149781	Is this only for the bitcoind build? Or also bitcoin-qt? Because it includes libqrencode et al which are only used by the GUI. In that case you also need to add `qt4-qmake libqt4-dev` 	Clarify
1755	8150362	"thats a good point. Yes, strangely bitcoind does require libqrencode...unless the disable flag is specified.  I havent built bitcoin-qt. "	yAnswer
1755	8150431	You must be wrong. I cannot find any mention of even the word 'qr' in `makefile.unix`.   	Clarify
1755	8150433	"scratch that... I meant libminiupnpc-dev.  No, libqrencode is not required. Ill go ahead and add the qt libs to the list. "	nAnswer
1755	8159863	Hm. Is it wise to add instructions that will have people building binaries which will write wallets the project builds can't read? 	Clarify
1755	8160335	"Afaik there is no other way on ubuntu 12.04. It doesn't have the 4.8 bdb / dbcxx package anymore.  Edit: well, it still has libdb4.8-dev, but not libdb4.8++-dev  "	nAnswer
1755	8176169	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9386e61695cab47d8cd7037489c2cc86ce5ff864 for binaries and test log. "	nAnswer
1755	8176628	"I agree, there is no other supported way to build on ubuntu 12.04.  For 'wallets the project builds can't read', do we fail sanely?  "	nAnswer
1755	8384747	"This change seems to be accepted apart from the dbc++ version change. If you remove that change for now (and squash into one commit), we can at least merge this.  "	Statement
1755	8451189	added info for PPA and db compatibility. squashed changes to single commit. should be good to go. 	Statement
1755	8468518	ACK 	Clarify
1755	8481326	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/224222746698db200d4c47e1611219f25fc5aa71 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1753	8130480	"This is non-standard build behavior for a package.  Most packages require an additional ""make test"" or ""make check"" step.  On a slower laptop or VM, this adds significantly to build time.  Not so sure about this one. "	Clarify
1753	8130892	"@jgarzik   Perhaps, but most packages aren't currencies where a mis-compilation can make tens of thousands of dollars worth of data go irrecoverably poof.   Giving it the standard 'check' name and having the build process yell at you to run it would be not horrible half-step perhaps. "	Clarify
1753	8131210	Not even OpenSSL runs tests by default :)  ACK the half-step...  	Clarify
1753	8135274	"I'm ok with building tests by default. But running any code by default sounds a bit fishy to me. Currently the tests are really fast, but it is a certainty that it will become slower when tests are added.    Also when building in an IDE such as qt creator, I'm not sure what the behavior will be.  Ad"	Clarify
1753	8674353	Implemented make test/check; closing (no consensus on building/running unit tests by default).  	Statement
1752	8119783	Looks fine. Let's wait for the pulltester to see whether the linker args are really passed. 	Clarify
1752	8137618	"This will not work yet: LDFLAGS is not passed when linking. You need to add $(LDFLAGS) to the lines that build bitcoind.exe and test_bitcoin.exe, i.e. in makefile.mingw-linux these are          i586-mingw32msvc-g++ $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)  and          i586-mingw32msvc-g++ $(CFLAGS) -"	Clarify
1752	8139958	@laanwj Can you verify tha I did what you suggested ;)? 	Clarify
1752	8149791	"Yes, looks OK now.  "	yAnswer
1751	8116236	ACK 	Clarify
1750	8117292	"What is the exact string, that is working with bitcoind? The help message for addmultisigaddress shows that "" need to be escaped as ``\""`` (which doesn't currently work with the console either). "	Clarify
1750	8117501	"What I gave above is an exact working commandline w/ bitcoind + bash.  Under windows you may need to change the outer single quotes to \"" or something like that. "	Clarify
1750	8117580	"Got it, seems like an escaping issue ^^.  I used this command on Windows: ``addmultisigaddress 2 \""[\\\""02404c0b780b0d3f70a57bccb0cac31c77e980d899db00f04a61052cf6500bde23\\\"",\\\""02092eb733ce9027fcddb9917e841057c747318ff973de7a7768da9b3f039d6892\\\""]\""``  I'm wondering, why the ``'`` is not working "	Clarify
1750	8118425	@laanwj Any good idea for the JSON arrays and the RPC console? 	ynQuestion
1750	8119845	Thanks for testing and examples @diapolo. This is something with boost:escaped string not emulating bash well enough. I'll try to fix this before rc2. 	Clarify
1750	8120062	"@laanwj Yeah that would be nice! It seems a little weird to see the help output, which contains ``'`` and as Windows user I have to replace that by ``\""`` is there any chance to internally fix this or at least let the RPC help string contain the correct format for each OS? "	Clarify
1750	8120149	The rpc console should ideally be the same for every OS as all the parsing is using platform independent code.  If there is also a difference between platforms this is even more messed up than I thought. 	Clarify
1750	8120216	"The thing I mentioned above is perhaps not even related to our GUI RPC console, but to the JSON code we use? "	Clarify
1749	8115606	"What are the advantages and disadvantages of this?  I'm ok with the changes although I don't like ""include three cpps in one cpp"", as it adds an almost-empty cpp in src/. I'd like it somewhat better if you moved the resulting jsonrpc.cpp to src/json instead.  Also, I might misunderstand what you're "	Clarify
1749	8115728	This eliminates duplicating the templates in each *rpc*.o file.  src/json/json_spirit_*.cpp are never built or linked.  	Clarify
1749	8115768	"OK I guess that will save some compilation time. I still don't like the almost-empty cpp though.  They are linked individually in bitcoin-qt.pro... probably, that is a the mistake then.  "	Reject
1749	8115783	"Sadly, bitcoinrpc.cpp's requirement of templates kills this optimization.  We can see that it makes a positive impact on compiled code size in several cases: ``` [jgarzik@localhost src]$ ls -l obj.vanilla/*rpc*.o  -rw-rw-r-- 1 jgarzik jgarzik 9235016 Aug 29 00:52 obj.vanilla/bitcoinrpc.o -rw-rw-r-- "	Clarify
1748	8111953	I was troubleshooting the totally wrong end of this...  You owe me a wig or something to replace all this lost hair. ;)  ACK.  And I think this will justify a new RC spin. This needs to go in 0.7.0.  	Clarify
1747	8115877	"Yes, the client should just use 18332 for testnet RPC IMHO. "	Statement
1747	8171719	Agreed. It should automatically change RPC ports in case of testnet if the port is not explicitly set. 	nAnswer
1747	27141586	"No longer the case, closing "	nAnswer
1745	8109423	"I completely forgot about the case where you'd want IRC to find peers, instead of just advertizing yourself... ACK "	Clarify
1745	8109523	ACK technical changes.  ... but the comment style is wildly inconsistent. 	Clarify
1745	8113352	"De-psychoed comments, added an additional small fix. "	nAnswer
1744	8136394	ACK for 0.8 	Clarify
1744	8268457	Why not ACK for 0.7?  	whQuestion
1744	8269576	Because it's a huge change between two rcs.  	Clarify
1744	8269732	"Seems like a two-one-liners change to me, which will eliminate the rebroadcast problem.  Zero-change refactors during -rc do not seem like a big deal. "	nAnswer
1744	8270019	I'd somewhat prefer to pull this in 0.7; but being that its an alert I'm not able to test beyond just starting up a node with it. ACK in any case. 	Clarify
1744	8270709	I'll send the testnet alert key to all the core devs.  And will go with consensus on pulling / not pulling for 0.7rc2.  	Clarify
1744	8270829	"Ok @jgarzik I hadn't done a line-by-line comparison yet. If it's just code movement, apart from the added key, it's fine for me to merge it into rc2. "	Reject
1744	8286836	"ACK for 0.7, here  "	Reject
1744	8303247	Seems like a good thing for 0.7 IMO. 	Statement
1744	8316430	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/286dbba2d238f523b45f5649345ae89b64cbba2f for binaries and test log. "	nAnswer
1743	8145447	ACK 	Clarify
1743	8240139	"IMO such small fixes / patches, should get merged faster, even during RC-phase. "	Clarify
1742	8102942	"I reviewed the IsCanonicalSignature code with Pieter before he posted the pull request, so ACK on that much.  Generally, with test cases we should be striving for tests that hit every path through the code where it's reasonably possible to do so. For IsCanonicalSignature this would just require addi"	Clarify
1742	8103968	"As a general comment about why not using the OpenSSL-based IsCanonical that is present in test/canonical_tests.cpp, I prefer to have a very clear set of rules to assess canonicality (is that a word?) with, as that is easier to port to other clients.  One thing I haven't tested yet, but we probably s"	Clarify
1742	8105324	"Can (in short term) one of you explain to me, what the term canonical means in that context here? "	ynQuestion
1742	8105762	"Bitcoin uses OpenSSL to encode public keys and signature. For public keys, one of encodings defined in the SEC specification is used, for signatures, DER encoding is used.  The problem is that in both cases, OpenSSL supports several encodings for the same data. In particular, for public keys it supp"	Clarify
1742	8106520	"Thanks for both explanations, very informative! So this is a new enforced key / signature checking policy in the end ... would that require a new BIP? "	Emphasis
1742	8106606	"The plan is to initially just enable it for mempool transactions, which is technically not yet a protocol change. If we'd ever enable it (after some point) for blockchain transactions, it would mean a protocol change, and certainly need a BIP. "	Clarify
1742	8114134	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0e8b6b83cb310fce4371daf1a88650ef2275c15c for binaries and test log. "	nAnswer
1742	8145470	Added more test cases. All reasons for non-canonicality should occur now. 	Clarify
1742	8321775	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c24e931733c24c0c5e5848b99cfa5c25514f6e78 for binaries and test log. "	nAnswer
1742	8749180	"Rebased, and updated test cases. 100% coverage in the signature tests now. "	nAnswer
1742	8755293	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/04c094401efe0ae267a5888be0911f6331387dc0 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1742	8765041	"     I prefer to have a very clear set of rules to assess       canonicality (is that a word?) with, as that is easier to port to other clients.  100% agree. It should be fully possible to write (or specify) a bitcoin client without relying on OpenSSL.  "	Clarify
1742	8767638	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/58bc86e37fda1aec270bccb3df6c20fbd2a6591c for binaries and test log. "	nAnswer
1742	8978659	"@gavinandresen @jgarzik Can I get some ACKs on this? This pull request has no semantic effect, it just brings a test function into scope.  I suppose the question is whether the code here reflects the actual standard for public keys and signatures we want. The test case does have a function to verify"	nAnswer
1742	8981552	"As-good-as-you're-gonna-get ACK :)  I cannot claim that I understand the problem enough to verify the correctness of IsCanonical{pubkey,signature}...  however assuming they are correct, the rest of the code appears correct.  As the earlier discussion indicated, this should not be applied strictly fo"	Clarify
1742	9633016	"This needs checks for flipped values. (Still ACK, though) "	Other
1742	9633166	"@gmaxwell I think we need code that enforces creation of strictly-even-s-value-signatures, and have some discussion with authors of other clients before we can even think about code to test for that... "	Clarify
1742	9634007	ACK 	Clarify
1740	8100363	past tense is more accurate 	yAnswer
1738	8098448	"Good stuff.  One nit:  if we are touching this code, rename our CreateThread() to something not found in Windows or Linux standard libraries. "	Statement
1738	8098535	"Yes, good point. Any suggestions? StartThread? SpawnThread?  "	ynQuestion
1738	8098739	"You are my hero :-D, what about just ``NewThread()``? Well your ideas are also fine and I'm pro rename. "	Clarify
1738	8099615	I'll let others choose the color of the bike shed ;p  Just want to avoid clashing with existing symbols.  It certainly caused confusion in the past. 	Clarify
1738	8120691	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bd6db5608cd4e6a2ee77d6e409c8c3488d028cce for binaries and test log. "	nAnswer
1738	8121093	"I tried that patch with my local build, no compilation problems and the resulting exe starts just fine. "	nAnswer
1738	8135920	Rebased and renamed the function to NewThread 	Statement
1738	8135980	ACK 	Clarify
1738	8145777	ACK 	Clarify
1737	8115891	@CoDCoyote If it's working again please just close the ticket :). 	Clarify
1736	8092588	"Please separate into two separate commits.  We do not put different logical changes (grammar changes + onlynet docs) in the same commit.  In this case, your grammar changes are NAK'd and your other changes are ACK'd.  "	Clarify
1736	8093287	"Please don't add I2P to the documentation. There is only support for it at the level of parsing them, and mapping the garlicat IPv6 range to it. For all other purposes, it is not functional.  Furthermore, I've recently learned that this way of implementation is not viable at all, as I2P needs longer"	nAnswer
1736	8098886	@sipa Any reson to not remove a (currently) non working feature during RC-phase? Less code should contain less bugs ^^. 	Clarify
1736	8100349	"closing, superceded "	Statement
1735	8090850	LGTM but you should rebase so there isnt 5 commits 	Clarify
1735	8100893	"Indeed, this doesn't need three commits and two merges.  Does this actually result in different code? The loops have no real side effects, I don't know how terribly the boost foreach is, but it's not inconceivable to me that the compiler could already do this with these loops because they're simple "	nAnswer
1735	8131685	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bbcb74effad812ebf418627133341ba05e373b95 for binaries and test log. "	nAnswer
1735	8134497	Would be ok with me if rebased into one commit 	Statement
1735	8134916	"I don't like these kind of obsessive-compulsive source code changes, I think they're a waste of time.  If you're rewriting old code for some reason, then feel free to clean it up. Otherwise I think it is better left alone.  "	Clarify
1735	8135138	"Agree that it does smell like premature optimization, with zero proof of actual need or benefit "	ynQuestion
1735	8136431	"The objective isn't only a (probably null) optimization. I see it as ""let's make it clear what is the meaning of the code"". Is it ""looking for at least one element with a condition"" or is it ""using an hidden side-effect of enumerating the collection/checking the condition""? The first time I watched "	Clarify
1735	8138309	"Rebased (I hope... In the end after fighting with the rebase -interactive I installed the TortoiseHg and, after fighting against its rebase I used the reset command) "	nAnswer
1735	8268372	"It's still adding source code and binary code size without much benefit.  We definitely appreciate people reading the source codebase this closely, though!  It is this kind of attention to detail that benefits all bitcoin users. "	Clarify
1732	8144395	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e445c084030dbe4ccee9b1291a7eb743a42fd89f for binaries and test log. "	nAnswer
1731	8149114	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0eeb54cb89e5de3525c218ba84cf9f41a35c268c for binaries and test log. "	nAnswer
1730	8064937	ACK 	Clarify
1730	8065132	ACK 	Clarify
1730	8068240	"AFAIK we now need Chrono as lib starting with Boost 1.50, no? "	nAnswer
1730	8068273	"@Diapolo Yep, we're dealing with the fallout from that missing on IRC now ;) "	Clarify
1730	8072379	@TheBlueMatt As that is sorted out and already merged you can close this. 	Statement
1729	8060138	ACK 	Clarify
1729	8060366	ACK 	Clarify
1728	8054024	ACK. 	Clarify
1728	8136455	ACK 	Clarify
1728	8152680	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/028ec224b8acb9273e79c1c10c5278a102e3f305 for binaries and test log. "	nAnswer
1728	8240166	"Same here, this fix should be RC-mergable? "	Other
1727	8047153	This is a qt issue. I guess it's better to file it upstream if it hasn't been fixed in 4.8.x yet. We don't use any mouse apis directly. 	nAnswer
1727	8047172	"Yeah I figured it was a QT issue. Wasn't sure if they fixed it yet or not, and Bitcoin QT was just using an older copy. That's why I include the QT version. Not sure where QT is.. I guess I could Google it. "	Clarify
1727	8182348	@keverw  http://qt.nokia.com/products/ 	System
1727	8757611	"Closing this -> not an immediate problem, and results from upstream library behavior  "	Other
1727	8757651	"Okay. cool it be closed. The upstream library already knows about it I hope. Just was maybe in the next few years, it may break if it didn't get fixed. So just wanted to make a note of it. "	Clarify
1727	8757700	"Yes, thanks for reporting it anyway!  "	Emphasis
1726	8035554	"Should bump the version number too (eg, qt-win32-4.7.4-gitian.zip => qt-win32-4.7.4-gitian-r1.zip). "	Other
1726	8035664	Done 	Statement
1726	8035798	Nice small find :). 	Clarify
1726	8046451	"Are you sure?  `-no-style-XXX` didn't work here, even causes an option parse error in configure, though it is mentioned in the online documentation: http://doc.qt.nokia.com/4.7-snapshot/configure-options.html . `no-style-XXX` options are no longer mentioned in the configure documentation (configure "	Clarify
1726	8047544	"Can for sure be a difference between configure and configure.exe and if it works everything is fine :). But at least the -no-opengl seems correct, when you use configure --help you should be able to verify that. "	Clarify
1726	8057581	"Yep, I've verified, -no-opengl seems to be interchangable with -opengl no.   "	nAnswer
1726	8057739	Good to know :). 	Statement
1726	8157780	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e598b5b5c2343bcb08bcf804249bdb67180baa41 for binaries and test log. "	nAnswer
1726	8303243	ACK.  Should we pull this for 0.7rc2 ? 	whQuestion
1726	8303856	"The pull makes sense and I also used the switches in my own builds and they work (and do not harm bitcoin-qt.exe for me), so I'll vote ACK for 0.7rc2. "	Clarify
1726	8307577	I think it's safe to pull this for rc2. Though it means we all have to rebuild qt for the next release. 	Clarify
1726	8307674	missed it by THAT MUCH ||   	Statement
1723	8005275	"Roger that ... currently building.  Edit: No change in Win7, which is what you wanted! "	Emphasis
1723	8020858	"Yep windows 7 should use the Vista rendering engine, which does not have the above-mentioned problem. Thanks for testing!  "	Reject
1723	8021028	@sipa can you test that this also solves the problem in xubuntu?  	whQuestion
1723	8022195	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/382b75f528fd3d2d3ac76076e8b3325d9d471f96 for binaries and test log. "	nAnswer
1723	8022493	"It looks fine here now, thanks. "	Statement
1722	8016457	"I think we should have an economic incentive to reduce the coin set, i.e. make the priority calculation take the effect on the coin set into account. "	Statement
1722	8016800	"@sipa  I don't think anyone is opposed to that idea; but I could write a script that produces an infinite number of possible ones, and I don't think we know how to agree on one. "	Clarify
1722	8024492	"I intend to implement code that will estimate how high a priority a transaction needs to have to get into one of the next few blocks, based on watching the memory pool and the blockchain.  (aside: it will also independently estimate how high a fee it needs to have)  I imagine the main dust-sweeping "	Clarify
1722	8024561	"Further random thought:  My personal preference would be a ""Don't bother me if the fee is less than 0.5% of the transaction value, I'm willing to pay 0.5%"" setting.  That would imply a policy of ""sweep up dust into large-bitcoin-value transactions, if doing so keeps the fee less than 0.5% but costs "	Clarify
1722	8024592	"I'm not sure that ""use rounded-up part of fee to pay for sweeping dust"" is the right approach. In my opinion, sweeping dust should be encouraged (i.e. it shouldn't cause punishment of the transaction). "	Clarify
1722	24782208	"In my opinion the tx fees involved with eventual spending of a txout should be associated with the creation of the txout.  IOW, I recommend ignoring txins when measuring the size of a transaction for fee purposes, and doubling the fee on txouts.  "	Clarify
1722	24782496	You level similar comments on issue #1675 and I responded to them there. 	Clarify
1721	8506884	Closing this until the core changes are in (#1781)! 	Emphasis
1720	7999055	ACK for 0.7.0rc2 (no more message changes for rc1)  	Clarify
1720	8023867	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9fd537965dd3d1d7fd5815c18af35470964f1400 for binaries and test log. "	nAnswer
1720	8117767	@laanwj Can we get this in for RC2? 	Emphasis
1720	8119732	Yes 	yAnswer
1719	7998346	How do other applications (Armory? Electrum? MultiBit?) solve this? 	whQuestion
1719	7998814	Is Wine 1.4 current? When most of my smaller pulls are in I'll perhaps take a look at QLocalSocket ;). 	Clarify
1719	7998865	"Well at least Firefox does remoting through X11/win32 messages, which would be most appropriate for an UI.   But Qt has no support for such IPC mechanisms (except DBus, but that's linux-only) so that would be another compatibility layer... so I think a named pipe is second best, and in contrary to s"	Clarify
1719	8758070	Another reason for moving away from boost::interprocess_queue: it is not supported on Mac (see 4060d64fc9de6f11ae69f3961d4f1f0450dd8286) 	Clarify
1719	18680455	"Closing this, no longer an issue as we don't use boost::interprocess anymore. Joy!  "	Emphasis
1718	7998373	"Just verified: this does not make spending 0-outputs non-standard, as it should be IMHO. "	nAnswer
1718	7999641	ACK. 	Clarify
1718	8004494	ACK 	Clarify
1718	8007019	ACK 	Clarify
1718	8013907	ACK 	Clarify
1718	8014166	There are contract protocols that use zero value outputs. Of course they can also be of 1 satoshi in value. I don't think the difference of 1 satoshi affects how likely they are to be reclaimed nor the real-world scalability of Bitcoin given the tiny values involved. It's sort of an academic argumen	Clarify
1718	8014330	"ACK, though @mikehearn 's point deserves some consideration. "	Clarify
1718	8014341	"That said, I'm not against this change. I have no opinion one way or the other. Making these outputs non-standard might lead to weird hacks in future applications, but we can always make these outputs standard again once real apps have been implemented and the utility is proven. As Gavin already sig"	Clarify
1718	8014381	"I'm certainly not going to argue for making 0-value amounts illegal, the protocol allows them, and I suspect for a reason.  IsStandard() rules are still relatively simple to change, it's ultimately not more than a proposed/default policy for miners. "	Clarify
1718	8014456	"@mikehearn  Well the reasoning on 1711 doesn't slippery slope like that; or at least I didn't intend it to.  Let me retry: The number of txouts in the txset with 1e-8 minimum txout is 2100000000000000 outputs, or about 51 bits of index. Without a limit the maximum is infinite. Perhaps its a bit acad"	Clarify
1718	8014504	"Alright then, fair enough. ACK. "	Clarify
1718	8026081	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/65ce215641a213cd085671a32c62cb35a9d1de62 for binaries and test log. "	nAnswer
1717	7997808	Hopefully people won't start crying that their transaction disappeared and such when their branch is orphaned... 	Clarify
1717	7997927	@laanwj IMHO we can't protect people from everything and should not special case too much (and that I learned from you ^^). 	Clarify
1717	8021358	"Yes, I was just playing devil's advocate. We don't have the 'immature' balance for nothing, it means that the mined transaction is not yet set in stone.  ACK  "	nAnswer
1717	8028325	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f09e8fcd33f7f1b1f4e20f2148bbf919b97db0c4 for binaries and test log. "	nAnswer
1716	7993551	IMHO it would be nice to only need the monkey-patch code in one place. 	Statement
1716	8000776	"And if you move all message queue related code to qtipcserver.cpp, this workaround could be limited to one file, which'd be nice.  "	Statement
1716	8008411	How's that? 	whQuestion
1716	8013895	Id highly prefer we just simply upgrade to boost 1.50 or later instead of continuing to use this patch. 	Clarify
1716	8014263	"@TheBlueMatt No reason the Gitian build can't be updated to use 1.50 too, but it sounds non-trivial, and I think @gavinandresen wants to do 0.7rc1 today. "	Reject
1716	8020881	"I do like the de-duplication of code, even if we're going to remove the workaround.  Also, note that at least boost 1.51 has a new issue (#1719) which surfaces in Wine but may possibly trigger in other cases when NtQuerySemaphore fails. Be careful. "	Clarify
1716	8029574	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ec6493e12c1c695cccfb69f31e2f5aaca6f95154 for binaries and test log. "	nAnswer
1716	8044806	"Can this be merged, or are there still issues? I'd be nice to do Windows gitian builds again... "	Clarify
1716	8044982	"Adjusted for @Diapolo's comment. Whether we switch to boost 1.50 or not is another issue IMO, and the 1.49 build should still be fixed either way... "	Clarify
1716	8045745	"I think this should be merged nevertheless. If anything, it is harmless when 1.50+ is used because of the version check.  Edit: btw @luke-jr, now that you're changing the boost build, - can you add `runtime-link=static` to build only the mt-s variant that we use, instead of mt-s and mt? this just sa"	Clarify
1716	8046075	"My point isnt that this shouldn't be merged (it should), but that I'd rather see 1.50 in 0.7 than use any of these patches or odd headers in 0.7, ie dont merge this and do 0.7rc1 right away. "	Clarify
1716	8046185	BTW I just verified: boost 1.50 does **not** suffer from #1719.   	nAnswer
1716	8047323	"I have to admit, I really like the idea of directly switching to Boost 1.50 and use that.  @laanwj Did you yet report that Boost 1.51 bug to the Boost devs? Would be nice to notify them. Just for comparison, my Boost command-line to build contains ``--build-type=minimal stage link=static runtime-lin"	Clarify
1716	8061694	"Well ``ipcThread2()`` is currently unused on Mac, perhaps we should put the declaration into an else-branch here: https://github.com/bitcoin/bitcoin/pull/1716/files#L3R37? "	Other
1715	14806487	"If this is a trojan horse of some kind, malware, or any kind of malicious EXE, What is the problem for the torjan to replace all the Bitcoin-QT software altogether, maybe even leaking out private keys...   "	Clarify
1715	17387796	Should we display the txfee in the transcation-confirm-promt in bitcoin-qt? Display the txfee only when it's higher than the tx amount?  Protection (some security mechanism) of the config/registry value would make no sense in my eyes. 	Clarify
1715	17391171	"Not sure, it would be nice to do so, but I don't think the actual fee is known yet at the time the confirmation dialog is shown (that's also why there is an separate askFee prompt). "	Clarify
1715	17398341	"@laanwj could we not just show the ""nTransactionFee"" from walletmodel in the dialog according to mockups in #1714? Because we also do the exceeds calculations based on nTransactionFee,... so i would say it's also okay to place them there. The real txfee will might be different. Maybe we show "" and ~"	Clarify
1715	17403057	"Nah, showing an approximate value could confuse people even more. I'm for either showing nothing or the actual fee that will be paid.  "	Clarify
1715	17469463	"@laanwj okay,... let me check if i can somehow calculate (use the current txfee calc code) the fee before the confirmation dialogue pops up. "	Clarify
1715	27957613	"This is fixed by #2651, closing "	yAnswer
1714	7995934	Good catch! 	Emphasis
1714	7995979	Yes that would be useful 	Statement
1714	7997197	"It's pretty trivial to make it show the preferred fee (as set in Options). Maybe that's good enough.  However, showing the computed fee, which is only available after building the transaction, would require quite some re-ordering and re-thinking.  Currently the order of operating when the send butto"	Other
1714	7997997	"A re-ordering would be nice, as that perhaps also solves the issue with not knowing how high the fee will be (#1570)! But a 2-stage fix is fine with me :). "	Clarify
1714	8021670	"Yes I think that'd also be best. The user knows what fee he has configured, so the first proposal is kind of pointless.  Showing the computed fee could even give the user the chance to to pay more or less. Of course, paying less could mean that miners don't include the fee, but that's the user's own"	Clarify
1714	8621421	I want to get involved with bitcoin development. Think this would be a decent thing for me to work on? 	ynQuestion
1714	8622952	"I don't think this is an good issue to start with. This cross-cuts into both the UI and core code, and touches code that is pretty risky to alter.   Of course, you can always try...  "	Clarify
1714	8644994	"Improving the transaction details dialog would be a nice one. It could be user friendlier, looks like abracadabra currently to normal users, and also has some problems such as #1725 and #752. "	Clarify
1714	9704854	"It seems impossible to lock down the voluntary tx fee, a trojan simply writing a new paytxfee to the user's conf file could cause some unnoticed higgledy-piggledy. It would be wise to deprecate the config file setting and move tx fee inside the encrypted wallet. In addition the voluntary fee should "	Clarify
1714	13478408	Please make the wording in the dialog more clear so that the user understands that the fee is paid additionally to the amount he sends and not included. I frequently get people sending a fee-amount too much on my website because they seem to think that the fee will be deducted at the recipients end.	Clarify
1714	16106413	Just going to drop this here from #2403: This needs to get coded as optional fees become normal and users need to know what they are sending (especially so they can rethink if their fee is OptionalFee x kB of spam). Optional fees give no warning currently.  ![transfeesimple](https://f.cloud.github.c	Clarify
1714	16109945	"@qubez So you don't have a patch, but just did some graphics mod how you would like it to look ;)? "	Statement
1714	16127928	Funny how two semesters of writing bubble sorts in Java doesn't prepare you to grok Bitcoin written in a language and framework you've never used... ;) 	Clarify
1714	24580619	"@laanwj Can be closed, as the great patch from @jonasschnelli was merged recently. "	Statement
1714	25684370	"Can still be closed... dear devs, please help ^^. "	Statement
1712	7970583	"I was using https://download.visucore.com/bitcoin/bitcoin-qt-20120823.zip, which @laanwj created for a stack-protector test-setup.  Interesting find now is, that my own builds, which include #1479, are working and display the immature balance directly after client startup ... forget that I re-tested"	Clarify
1712	7982144	"It would have shown up after ""confirmations: 2"" AFAIK this is on purpose, see `TransactionRecord::showTransaction`.    "	Statement
1712	7983534	"Now it's clear, why my own build containing #1479 showed up the balance (left side on the overview window) imediately, as I use ``bool IsInMainChain() const { return GetDepthInMainChain() > 0; }`` instead of ``GetDepthInMainChain() < 2``.  I'm just asking, what is the right approach here. I see the "	Other
1712	7993060	"@luke-jr also wants to change that, to show mined transactions at depth 1 instead of depth 2.   I tend to agree this time. Especially as no one clueless is solo-mining anymore, the current threshold is probably overprotective.  "	Clarify
1712	7993149	"Sounds good to me, I'll create a small patch to change that. "	nAnswer
1712	8719080	"#1717 is merged, closing this  "	Statement
1711	7970569	concept ACK  	Clarify
1711	16893056	Solved by #1718  	Other
1710	7971314	"I don't disagree with doing this, but we should keep in mind that a slightly unfortunate result of this is that an attacker could network isolate old pre-bip16 nodes by constantly flooding invalid transactions. If there are any pre-bip16 miners remaining, the attacker will be able to force the creat"	Clarify
1710	7975698	"I was about to say: if there are any non-BIP16 miners left, I pity them. However, http://blockchain.info/p2sh says 37% doesn't include the marker string? "	Clarify
1710	7975760	http://blockchain.info/tx-index/3618498/4005d6bea3a93fb72f006d23e2685b85069d270cb57d15f0c057ef2d5e3f78d2   doesn't suggest that it's anywhere near that many miners.  I think those are mostly just ones not including it. It's probably only a very small amount without it.  	Clarify
1710	7977868	[19% don't enforce BIP16](http://luke.dashjr.org/programs/bitcoin/files/charts/security.html?16) 	Other
1710	7978009	Probably should defer to 0.8. 	Statement
1710	7978087	"Agree, in that case. "	Reject
1710	7989702	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/59ddfe1caecc827aa76ee5bb2c783c92d049301a for binaries and test log. "	nAnswer
1710	8402014	"I saw another P2SH code part which could perhaps be removed, just want to mention, it's in init.cpp:  <pre>     // Continue to put ""/P2SH/"" in the coinbase to monitor     // BIP16 support.     // This can be removed eventually...     const char* pszP2SH = ""/P2SH/"";     COINBASE_FLAGS << std::vector<"	Other
1710	8868801	ACK 	Clarify
1710	8868883	ACK  	Clarify
1710	9210237	ACK for 0.7.1 or 0.8? 	ynQuestion
1710	9210991	Luke's version tracker (http://luke.dashjr.org/programs/bitcoin/files/charts/BIP-0016.html) says 13.4% are non-P2SH.  Thats now comparable to non-BIP30 (13%) so it's probably not going to get much better count-wise by waiting.  	Clarify
1710	9853034	Rebased. 	System
1710	9857574	"As the discussion is over I would suggest to merge such a code-wise small pull. We have quite some pulls open so let's reduce their numbers, if they are non-controversial? "	Clarify
1708	7967726	Have you tested bitcoin with more than 2^31 keys in the keypool? 	ynQuestion
1708	7975542	"NACK.  Better would be (pseudocode):      int64 nUnchecked = max(GetArg(...));     // Make sure it's not too big:     nUnchecked = min(nUnchecked, setKeyPool.max_size());     size_type nKeys = (size_type)nUnchecked;  Or maybe even better, a type-safe numeric version of GetArg.  Something like      t"	Other
1708	7994361	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/af4fe3a16cbe4258929ff172303f0c19a7fd3b70 for binaries and test log. "	nAnswer
1708	8268521	NAK also.  No demonstrated need for more than 4 billion keys etc. 	nAnswer
1705	7973795	"Can we just remove all of FIRST_CLASS_MESSAGING? Last I checked it was just a luke-jr thing to move where the message signing stuff is in the gui, does anyone actually run builds with it for regular use? "	Clarify
1705	7974204	"Agree @TheBlueMatt it's only a lukejr thing, it's fine with me to remove it.  I remember some time ago there was a redesign that moved the tabs to the side; when there is a lot of space for tabs it makes sense to make even message signing, which is a rarely used feature, a tab in itself. But with so"	Clarify
1705	7975017	"I'm also fine with removing it entirely from the client, but I guess luke doesn't like that idea. This patch at least cleans up some stuff related to it. "	nAnswer
1705	7975564	No problem with removing it. 	nAnswer
1705	7975849	"Alright, I'll update this pull to remove it then. "	nAnswer
1705	7976713	Updated to remove it entirely. 	Statement
1705	7977281	NACK. Don't remove it. 	Reject
1705	7977654	"To expound a bit: Recall that first-class messaging was the *default* in the original implementation, and was only made optional as a temporary compromise while sign/verify message was still an uncommon function. Nowadays it is used by various services, including Bitcoin OTC, so if anything it shoul"	Clarify
1705	7978027	"Please Luke, that's like claiming browsers need a proxy server bar as prominent as the search or URL bar. I'm sure various services use this, but making it so prominent just confuses people. I already see people assuming that they need to use that to manually confirm transactions.  In my opinion, me"	Clarify
1705	7978171	"IIRC, it was added not as a compromise not until it becomes a common feature, but to discourage it from becoming a common feature (which, IMHO, we should do more for, but probably first there is to create a good payment protocol) "	Clarify
1705	7978205	"@sipa I like the idea of a Tools / Utilities menu option, but that should go to another pull then :). "	Clarify
1705	7978220	"@sipa If there is still disagreement over this, then it should remain an option. "	Other
1705	7978278	"No offence, but I see no reason for maintaining this if you're the only proponent. "	nAnswer
1705	7982014	[Early poll results](https://bitcointalk.org/?topic=102761) suggest first-class messaging should be default. 	Other
1705	7983311	"I had that feeling ... and I was right. Everytime a decision is made that differs from what you would like it to be, some arguments are constructed even if you would be the only person in the world as proponent. Shall I open a poll everytime I argue with @laanwj over something... seems a little unco"	Clarify
1705	7983662	@Diapolo What is unconstructive is this removing of functionality people want for no reason. 	nAnswer
1705	7985426	"ACK, including removing FIRST_CLASS_MESSAGING (GUIs should not be designed via forum polls).  "	Clarify
1705	7987944	"If FIRST_CLASS_MESSAGING is to be removed against consensus, could @Diapolo at least do it in a separate commit after the ""re-order GUI code"" so those of us who want it can revert in our own branches? "	Other
1705	7993639	"As I have overwritten my former version of that pull, I can't seperate to fullfill your whish, sorry... most of the re-order is cosmetic, so if you want your own version with FIRST_CLASS_MESSAGING just don't merge that one. "	Reject
1705	7993699	Check out .git/logs/refs/heads/cleanup_bitcoingui ;) 	Clarify
1705	8001890	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/e3eb634e44f677d02a08ed5bbc0d7d3acc0db6c7 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1705	8004534	"@BitcoinPullTester The last error was ``fatal: 'e3eb634e44f677d02a08ed5bbc0d7d3acc0db6c7' does not point to a commit`` and that should not relate to the contents of this pull, as current commit-ID is ``0b35903d75803eb983e6a4f4c3c888da5ae4e3d7``. "	nAnswer
1705	8009314	"That probably means between the time pull tester got the list of pulls and the time it checked this pull, the commit that was this pull's head was removed from the git repo in question, it should give an update when it runs the new version. (also, please dont tag @BitcoinPullTester, I wont see it, p"	Clarify
1705	8028858	"@luke-jr Sorry, I don't know what you mean by ``Check out .git/logs/refs/heads/cleanup_bitcoingui`` and I don't want to spend too much time with this. I thought the change was ACKed and as I said you could just skip that pull? "	Clarify
1705	8029157	"You can't just ""skip"" pulls. If you split it up, you can revert the commit removing it. I can walk you through it on IRC... "	Reject
1705	8030603	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0b35903d75803eb983e6a4f4c3c888da5ae4e3d7 for binaries and test log. "	nAnswer
1705	8118347	"To do @luke-jr a small favor, I split up that pull into 2 commits, one removes the 1stclass stuff and the other does the GUI re-ordering. I hope everyone is happy now and this get's in soon to not have the need to further discuss it... "	nAnswer
1705	8326647	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/382e9e25ffb12d26fe6f28442466376107aca9d7 for binaries and test log. "	nAnswer
1705	8738346	"As this didn't make it into 0.7, can please a dev merge this now? I find it rather hard to keep track of that many small pulls, which leads to a slow down on my side ^^. "	Clarify
1703	7961381	"Feel free, to participate and update the Polish language file, which is missing some recent translations anyway: https://www.transifex.com/projects/p/bitcoin/resource/tx/l/pl/ "	nAnswer
1702	7934652	"Never mind, I was doing something stupid. Boost is nested inside the other dir.  "	nAnswer
1700	7931774	"ACK and not directly related question, version.h is not in the pro-file, what's the reason to hide it or is there one? "	whQuestion
1700	7932229	Seems version.h is indeed missing from the .pro file? 	whQuestion
1700	7932243	"Yeah, let's add that one too, good catch. "	Accept
1700	7933833	ACK 	Clarify
1700	7942055	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1598e127cc0232a7203e123bb9eafd377cdd08e3 for binaries and test log. "	nAnswer
1698	7914993	"This is way too close to current right now. How long are we planning on staying in RC?  (Not that I'm aware of a fork this would conflict with, of course, but I like keeping the high ground of saying we've never released a checkpoint _remotely_ near the tip) "	Clarify
1698	7915231	"It's been a while (and quite a lot of code changes) since 0.6.3, so I assume we'll be in RC for at least two weeks.  How far back is ""long enough"" for a checkpoint? "	Clarify
1698	7915301	3 months? 	ynQuestion
1698	7915712	"Meh, I'd say 1 or 2 difficulty-adjust-cycles (2 or 4 weeks)? "	Clarify
1698	7916159	"I think I'd claimed ""8000 blocks"" in some discussion before, I'm not seriously married to any specific value. I think it should be at least 1 difficulty cycle.  2 difficulty cycles sounds good. Sort of a bummer that we don't lock in the new difficulty when it's increasing like now, but it doesn't re"	Clarify
1698	7920568	"ok.  I'll go ~2000 blocks (~2 weeks) back, and assuming we're in RC for 2 more weeks that'll be ~2 difficulty cycles at release.  So block 193,000 or thereabouts...  "	Statement
1698	7928770	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/80cfc3a48551513d6133a2433b257c25727f8874 for binaries and test log. "	nAnswer
1698	8022629	ACK 	Clarify
1697	8176380	#1752 includes ASLR and DEP support for bitcoind.exe. 	System
1695	7909733	Does this cleanup orphan blocks stored in our block-files when re-importing them as new block-files? 	Other
1695	7909826	ACK 	Clarify
1695	7910355	"@Diapolo Normally, block files do not contain orphan blocks (by which i mean blocks that have no known parent), they do have chains of stale chains that got reorganised away (which is what I assume you're talking about). This only prevents real orphan blocks from being imported.  "	Clarify
1695	7914429	ACK 	Clarify
1695	7920790	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5c88e3c108f8bbe0edbcd88b3f48e3eaf611cd7c for binaries and test log. "	nAnswer
1694	7905543	ACK 	Clarify
1694	7923466	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/506e17ceb9d09b3914dc3814afe0915a191d0bf4 for binaries and test log. "	nAnswer
1694	7924649	"What happens with your ``if (nTries > 100)``, when after that a node occurs in addrman, to which we can connect. Is there a retry timeout or a user feedback somehow? "	Other
1694	7931495	"@Diapolo You're not the first to miss it, so I added a comment to clarify: that break does not stop trying new addresses, it just returns to the outer loop, which sleeps, recalculates allowed address ranges, adds seed nodes, ... before continuing. "	Clarify
1694	7935455	ACK. Tests out okay to me.  	Statement
1694	7955486	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f161a2c2114cd7d950248ce75a91ba1923e9abb1 for binaries and test log. "	nAnswer
1693	7904142	ACK 	Clarify
1692	7925448	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e060928d322dd7d0425a53b65f7dce681684771d for binaries and test log. "	nAnswer
1692	8268630	"Why is this cache needed?  Is it showing up on profiles?  Remember, every static variable creates complications related to multi-threading.  I think the change is a nice small cleanup... without the static variable-cache stuff. "	Clarify
1692	8269147	"@jgarzik I can remove the cache, as I did not profile :). Will update, just a few minutes... "	nAnswer
1692	8269422	"I don't see the point of creating an extra function here. Instead of the fairly simple expression `(GetDataDir() / strprintf(""blk%04d.dat"", nFile)).string()`, used in one place, you add a 20 line function that is only used in one place.  Also, please don't introduce any snprintf and fixed buffers. `"	Clarify
1692	8269609	"Guys that pull was open for 2 weeks now, I got no feedback, then used @jgarzik feedback to update and now you tell me that thing is useless... "	Clarify
1692	8269659	"I'm fine with it if you have a reason to expose the functionality outside main.cpp (ie, because of the sipa pull you mention) or plan to use it in multiple places, but you can reduce the function to 1 line.  "	Clarify
1692	8269863	"@laanwj Sorry for my over-reacting, had a little trouble at work today. You are right, it can be even shorter and if you want I can use strprintf (although snprintf() has a buffer-length check afaik). "	Clarify
1692	8270131	"No hard feelings. We all have that kind of trouble sometimes.  snprintf checks the buffer length, that's right, but has some problems that can catch the unwary. Ie, the resulting buffer is not necessarily zero-terminated. And what if someone changes the filename and forgets to change the hardcoded '"	Clarify
1692	8270815	"@laanwj You are absolutely right then, ``strprintf()`` is the function to take ... I'm just interested, was it deeply inspected for any faults / security flaws in it's implementation, as I find it rather strange to trust a hand-made function that much :) or even more than standard functions. "	Clarify
1692	8271253	"We use strprintf all over the codebase, so it is fairly well-tested. Personally I've looked at it many times and wasn't able to find issues with it. Internally it ofcourse simply calls (_v)snprintf, but handles all the edge cases as well. It is also the only place where we call the ""evil"" *snprintf "	Clarify
1692	8271354	"It's good to have an eagle eye who catches usage of unsafe functions and I can benefit from your comments nearly all the time, so thanks. I updated that pull to use ``strprintf()`` now. "	Clarify
1692	8285147	"superceded in HEAD, closing "	Statement
1692	8326682	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/a236bd621e0e478f6817708271ecccf4e8a7e311 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1691	7893039	ACK 	Clarify
1690	7884533	ACK. This does exactly what I was looking for. Thanks.  	Clarify
1690	7900965	ACK 	Clarify
1690	7912346	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cc6dfd1f4b7709447c6e2b73ebf44946d0b926c5 for binaries and test log. "	nAnswer
1689	7878318	ACK 	Clarify
1689	7879071	ACK 	Clarify
1689	7879472	ACK 	Clarify
1689	7880142	ACK 	Clarify
1687	7878322	ACK 	Clarify
1687	7890175	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4d51be1cf36fee33df57c9c4500b221d355cf636 for binaries and test log. "	nAnswer
1687	7901613	ACK 	Clarify
1687	7901975	ACK 	Clarify
1685	7846468	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3ba81511f1d9409c85ec00a67fa7d5ac3d21a806 for binaries and test log. "	nAnswer
1685	8757101	"@Diapolo my time is pretty limited, and I haven't found time to test and look at this in further detail yet. It will be  a while before 0.8.0 is released, I guess, so there's no need to hurry. "	nAnswer
1685	9209901	"@laanwj I found a method to achieve what I wanted, without the need to change the detachDB stuff in OptionsModel::data(). "	Clarify
1685	9972102	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/35ff85be9d53d082c4748472dd87fd98572f8798 for binaries and test log. "	nAnswer
1685	10247230	Updated and removed special casing for detachDB as that was removed entirely. 	Statement
1685	10316005	"Does this correctly handle the Cancel case? That is, if I Reset and Cancel, no changes should be made (and making changes should require OK/Apply). "	nAnswer
1685	10317478	"No, when you use reset button, this is a non-reversible action. It's IMO not worth the trouble (perhaps not even possible the way this is working), but I could add a warning message where you need to confirm the process, would this be sufficient then?  Making changes DOES already require OK/Apply. "	Clarify
1685	10771957	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/92ffc1b5a9dbebc281da38782d99fb357ba77f15 for binaries and test log. "	nAnswer
1685	11906497	What is the status on this? 	whQuestion
1685	11906764	"Neither @luke-jr nor @laanwj added further comments, but from my point of view this would be a nice little addition for 0.8.  Edit: I tried it and still seems to work, but would of course need a little testing an feedback ;). "	Clarify
1685	11907634	"I still think it's a usability bug for it to conflict with the Cancel action, but I don't really care enough to argue over it. "	Reject
1685	11913627	Updated to include a confirmation dialog before executing the reset. 	Statement
1685	11915340	"Much better with confirmation dialog, ACK "	Other
1684	7841151	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/e1a36eefea413f83f91da3f4ffdbb0182f45587e for test log.  This pull does not merge cleanly onto current master "	nAnswer
1684	7842544	"Is this functionality currently safe enough to trigger automatically? What will happen in these cases:  1) Client stops before full import completes  2) User exits (after succesful import), then re-starts bitcoin  Also, we probably want some kind of progress widget, as the process can take a few hou"	Other
1684	7842599	"Right now, Bitcoin-Qt is fully interactive during IBD... "	yAnswer
1684	7842609	"@luke-jr So to decode that, you mean run this importing in a thread (after the Init succeeds), pretend that the blocks come in from the network, and use the current progress mechanism? I suppose that could work, if you block the real network for the duration that the file is being read.  Also it doe"	Clarify
1684	7843040	"I recently added an info message when doing a -loadblock, so this needs a rebase + the shorter the message the better, because of the small splashscreen.  @luke-jr When doing a -loadblock nothing is interactive, the client is just displaying the splashscreen and a message for ~1 hour or more. "	Clarify
1684	7844448	"@laanwj I guess that would keep the current IBD behaviour during a loadblocks. However, it seems like it has potential to slow things down, so should probably be tested. "	Clarify
1684	7844969	"It should not be used for the specific -loadblocks, which is also a benchmark.   But for the automatic loadblocks for bootstrapping users (that jgarzik is proposing) it'd be fine. It's fine if it is a bit slower as long as the user gets feedback and doesn't have the idea that his client crashed at t"	Clarify
1684	7845009	So perhaps rebase and change the second InitMessage to ``Auto-Importing blocks...``? 	whQuestion
1684	7847942	"I'm planning on writing a ""reindexer"" that takes an existing blk*.dat file (in the normal location for those), and rebuilds/updates the index with the found blocks, and afterwards reorg to a new best chain if one is found there. That's maybe even preferable? "	Clarify
1684	7848017	"Yes, a reindexer would absolutely be preferred.  Should be faster, with less disk traffic, and no files left over at the end.  "	nAnswer
1684	7852991	"A better way to reindex would be great, I already did some code for this (loading a blk?.dat files with a progress gui) in the leveldb branch but it's not very good because I wanted the change as small as possible. "	Clarify
1684	7868811	Am I misunderstanding this patch?  It looks like it will reimport at every startup because it doesn't remove/move/flag the file when done. That seems pretty surprising. 	Clarify
1684	7870056	"Yes, I thought so. That's why I asked what would happen in those cases.   "	yAnswer
1684	8266459	"Rebased, and corrected the FMB (frequently mentioned bug):  it now renames bootstrap.dat, after import, to prevent re-import.  That should address all outstanding objections. "	Statement
1684	8333833	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/25b5d5da7daf046c974bb32785bb58f877d46795 for binaries and test log. "	nAnswer
1684	8827353	"Updated strings, addressing @Diapolo's comments.  "	Accept
1684	8833440	"@jgarzik Thanks, one last nitpick, we use ellipsis for every stage of the init and you make me happy, when you convert the ``.`` into ``...`` for both strings :-D. You are free to hate me a little afterwards ^^, but get my ACK then. "	Clarify
1684	8869164	ACK.  (and  I think Diapolo's nit-picking is excessive)  	Statement
1684	8869431	@gavinandresen I sometimes hate that character trait and so I'm fine with other devs ignoring some of the nit-picks if they feel bugged. 	Statement
1683	7841868	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/78e748f5feea9a3fcd83ba1a8451c96e67dc4d76 for binaries and test log. "	nAnswer
1683	7843050	"NACK until the version is determined automatically from version.h, we don't want to have to manually change the version number in another place for every release.  "	nAnswer
1683	7843064	"@laanwj I know that you don't want this like it is now, but for reference and discussion it needs to be here, as I'm unable to do Linux scripts or stuff like that :). That's why I mentioned ``build.h``. "	Statement
1683	7965011	"A good new point was raised, which makes valid version information even more valuable. Security-Scanners like Secunia PSI rely on version information to determine if an application is secure or has known and reported security flaws. "	Clarify
1683	7965283	"How about using git's export-substitution mechanism, which is also used in version.h, when build.h is unavailable? You could get the commit id, date, and in case of releases, tag name of the latest commit that way.   "	Clarify
1683	7965741	"I ""only"" need our version information in this format:  <pre> #define VER_PRODUCTVERSION     0,6,99,0 #define VER_PRODUCTVERSION_STR ""0.6.99.0"" </pre>  @sipa Tell me, do you think this is achievable via your suggestion? "	Other
1683	7966050	"Do you think it's possible to just #include ""version.h"" in that .rc file? If so, it isn't hard. "	Statement
1683	7966158	"I tried that, but the windres resource-file compiler doesn't like code other than a #define, which sucks in that case. If we could seperate out the pure version number stuff, which consists of only #define, into anoter small header, which we then include in version.h and the resource-file ... that c"	Clarify
1683	7966520	"So what we can do, using export-subst, is have the unix timestamp as VER_PRODUCTVERSION, and the formatted data as VER_PRODUCTVERSION_STR, with the tag name after it.  So VER_PRODUCTVERSION would be 1345657778, and VER_PRODUCTVERSION_STR would be ""2012-08-22 10:49:38 -0700"". When 0.7 is released, "" "	Clarify
1683	7966781	"I guess I have found a solution, just need to verify it doesn't break version.cpp now :). Just a few minutes... "	nAnswer
1683	7967300	Does it build/work now? 	ynQuestion
1683	7967392	"It builds without errors (and that's the most important thing), but one of the version parts seems not working, I observed this after I updated the pull ... currently looking into that :-/. "	Clarify
1683	7969083	"Updated, I needed to add the ``#define TOSTRING(s) STRINGIFY(s)`` macro for it to work (see http://www.decompile.com/cpp/faq/file_and_line_error_string.htm for more information) and now it's working like it should :). "	Clarify
1683	7970330	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/07693fb5f7e8f7eed8355832b07414ff5f06e527 for binaries and test log. "	nAnswer
1683	7975685	Great to see that this is solved.  	Statement
1683	7975803	"Updated to include a comment for the macros, looks good to me. I just don't know how many messages @BitcoinPullTester will create now ;). I would like to take a look at it, after this last update, to be sure. "	Clarify
1683	7996496	"Come on dear @BitcoinPullTester, I want a build to get this in 0.7 :). Well there is no folder for commit-ID a5266398d88c6e596b91208eca0ce3aee5b5e3cb, so I guess I won't get one ^^.  Well as I said on Windows everything is looking good, so it should be safe to give it a try before 0.7 RC? "	Clarify
1683	7999632	"Well, I downloaded bitcoin-qt.exe from http://jenkins.bluematt.me/pull-tester/07693fb5f7e8f7eed8355832b07414ff5f06e527 (last build mentioned above) and looked at the version information ... it's in and looks like the screenshot in the first posting :).  Edit: Yeah I remember, the last change was jus"	Clarify
1683	8003915	"BTW, a bit off-topic but what is VERSION in bitcoin-qt.pro used for? I don't see it being passed to anything, and I think it can be removed without hurt now that we have version.h.  I see it was added by Gavin in 0.5.0: https://github.com/bitcoin/bitcoin/commit/94eaab77109dd4fa568a855a375adb2c2a3207"	Clarify
1683	8004569	"@laanwj I never understood, where the Qt version variable was used. I can do a diff of the makefiles WITH and WITHOUT ``VERSION`` and report back. "	Statement
1683	8005145	"I checked the makefiles, VERSION is nowhere used in it. "	Statement
1683	8007574	I think (but I'm not sure) that the OSX create-a-dmg-package uses it.  	Statement
1683	8031224	"Ok, good reason to keep it around. "	Statement
1683	8031567	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/a5266398d88c6e596b91208eca0ce3aee5b5e3cb for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1683	8031805	"It seems the relative path I used in Windows format (in the .rc file) is incompatible with the cross-compilation. I'll update later with Linux style format.  Edit: I changed ``#include ""..\..\clientversion.h""`` into ``#include ""../../clientversion.h""``, which still compiles just fine on Windows. Wai"	Clarify
1683	8150316	@thebluematt we could use another pulltester run here :-)  	Other
1683	8157809	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/016649d8b83d0f64a0c1ccfe28719913c18a5e4c for test log.  This pull does not merge cleanly onto current master "	nAnswer
1683	8158605	"Once more it tried to use an old commit-ID, which isn't there anymore: ``fatal: '016649d8b83d0f64a0c1ccfe28719913c18a5e4c' does not point to a commit``  So we need to wait a little longer for the most current one I guess ;). "	Clarify
1683	8175021	"I had to rebase, as another small fix created a merge-conflict... "	nAnswer
1683	8212421	"@TheBlueMatt Any idea, why @BitcoinPullTester refused to build anything for us? I would love to see this in 0.7 final. "	Clarify
1683	8215093	"Sorry, @Diapolo, pull tester is currently paused pending an upgrade to the block tester.  I should have time to get it back up today. "	Statement
1683	8288676	"It's started testing again, but not here.  "	Reject
1683	8289144	"@laanwj I rebased to current master to create a new commit-ID, hope that helps. "	Statement
1683	8305508	Rebased to match the 0.7rc2 version information. Still no sign from @BitcoinPullTester :-(.  @TheBlueMatt Can you check why this pull seems to be ignored by it? 	Clarify
1683	8305924	"@Diapolo calm down, this pull is pretty far down the list, there is quite a backlog, and each test takes a number of hours, it may be a few days... "	Clarify
1683	8333887	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/1d605035f7c7d8b312e4df836acbda958e32f417 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1683	8339307	@TheBlueMatt It seems once more a no more existing commit ID was chosen. Any idea for this? 	nAnswer
1683	8339477	"@Diapolo again, the backlog is pretty long, you'll have to wait for it to finish its current run and start the next before it picks up the latest commit id. "	Clarify
1683	8365495	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7f7a738814ea67499c415c5a132670b3573aa3dd for binaries and test log. "	nAnswer
1683	8366336	"@laanwj YES, it finally works, I downloaded bitcoin-qt.exe and can verify it works! The last rebase was needed to update to 0.7.0.2 for RC2.  @TheBlueMatt Sorry that I was so impatient ^^. "	Emphasis
1682	7834805	"Can you post a copy of your debug.log someplace we can get to it?  It is in the bitcoin appdata directory.  Also, what version of bitcoin are you running, what OS version?  "	whQuestion
1682	15634886	"Closing this issue, you should re-try with a newer version.  BTW the log that you posted was not the debug log of bitcoin, but that of your OS (looks like a crash report).  "	nAnswer
1681	7828155	ACKACKACK  	Statement
1680	7816445	ACK 	Clarify
1680	7827713	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2d914f89fee789defe1a1c692485b06105ff0ab3 for binaries and test log. "	nAnswer
1679	7815276	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/1e7027b41ebf31fe53a2c92ef4f5d30c9f681735 for binaries and test log. "	nAnswer
1678	7804208	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/746f502a79e6797574099e94df1b63a6844917a9 for binaries and test log. "	nAnswer
1678	7809275	ACK 	Clarify
1678	7816492	ACK 	Clarify
1677	7794418	"(EDITED)  List of implementation changes:  * new database layout:     * 2 leveldb's (coins/ and blktree/ subdirs), replacing blkindex.dat    * separate directory (blocks/) with block data (in the usual format, but smaller files) and undo data  * database keys are of the form (char,key) instead of (s"	Other
1677	7899172	"@sipa One question, our current AppendBlockFile() function takes MAX_SIZE into account and generates a new block-file if the space left in the block file (max allowed filesize) is < MAX_SIZE. So 128 MiB files would have a maximum of 96 MiB usage-data, right? "	Other
1677	7899296	@Diapolo: not sure what you mean; I don't use AppendBlockFile anymore. 	Clarify
1677	7899334	"@sipa I saw that and wanted to understand the change here, which condition is used to determine, if a new block-file needs to be created, where is the check in your new code for that and what's the space limit? "	Clarify
1677	7899397	The check is in FindBlockPos in main.cpp. And a new file is created if (old_used_size + new_block_size >= MAX_BLOCKFILE_SIZE). 	Statement
1677	7991614	"Does this break the ability to downgrade at all? (I expect it just means wasted ""padding"" space in the blk*.dat files?) "	Clarify
1677	8044737	"Updated. Batch block connection now keeps a permanent cache, and modifies that (instead of delaying block connection until several blocks were available, which interfered with normal network-based downloading). Also added a commit that changes the block database format, in preparation of things like"	Clarify
1677	8047427	@sipa With block database format you mean stored blocks in blk0000x.dat? 	ynQuestion
1677	8052173	"@luke-jr how do you mean breaking the ability to downgrade? The blk000*.dat files remain exactly the same format, but the other databases are incompatible.  @Diapolo No, it uses coins.dat (the unspent txout set) and chain.dat (the block index), in addition to the blk*.dat (and rev*.dat) files. It's "	Clarify
1677	8062078	"@sipa If it interacts with downgrades in ugly ways, I'd probably not want to put it into next-test. "	nAnswer
1677	8062727	"@luke-jr Shouldn't be a problem - the filenames are all different, so you can (almost) run ultraprune and non-ultraprune together in the same datadir independently.  That said, it's likely to conflict with a lot of other stuff, so decide for yourself. "	Clarify
1677	8157817	"Could you provide a squashed version of the patch somewhere, for review? It's really hard to review as is because it's  just a record of how you implemented it over time. "	Statement
1677	8158190	@mikehearn https://github.com/bitcoin/bitcoin/pull/1677.diff ? 	System
1677	8188081	"Thanks, that looks useful. "	Statement
1677	8189169	"@mikehearn  Seems that through rebasing I lost some comments you made earlier on the commits?  Regarding the encodings, I plan to write some text about the final format for all datastructures, but I may change a few things still.    "	Clarify
1677	8282968	Rebased/combined with @mikehearn's LevelDB patch 	System
1677	8730563	"Rebased on 0.7, and moved the more experimental block caching and parallel signature checking to a separate branch. The code in here should be stable and can be tested.  The only things that remain to be done are automatic import of old data, and more elaborate consistency checks at startup. I think"	Clarify
1677	8735305	I closed the LevelDB pull req. Let's merge it as part of this.  Note that my LevelDB branch has code that does replay the blocks with some GUI progress. It's not great because it actually re-writes the block files in order to track the block offsets ... I didn't do any deep refactorings to fix that 	Clarify
1677	8762537	"@TheBlueMatt any way to disable the build tester here, as it seems to be incompatible with this anyway? "	nAnswer
1677	8763731	"I've tested this a bit on the testnet. No problems found, and synchronization is super-fast.  One small comment: in your bitcoin-qt.pro, please use $(MAKE) instead of `make`. This prevents an annoying warning about a job server in Qt Creator. "	Clarify
1677	8764081	@laanwj: updated to use $(MAKE) 	Clarify
1677	8792615	"@sipa Id rather not, the patch is really quite simple (http://jenkins.bluematt.me/pull-tester/files/bitcoind-comparison.patch) , afaict, its only failing because setBlockIndexValid was added directly above hashGenesisBlock in main.cpp.  Can you just move that line and see if it works? "	Clarify
1677	8851318	"Changed the database/serialization format one more time: coins and undo data now contains the transaction version number. This may be necessary when new versions of transaction are defined that have an influence on their ability to be spent.  @TheBlueMatt ok, moved the setBlockIndexValid line in mai"	Clarify
1677	8938946	This does not build on MacOS X because there is no fdatasync on that platform. 	nAnswer
1677	8978928	"@TheBlueMatt I wonder why it still complains?  EDIT: Oh, just out of date with master. Let's wait for the next cycle. "	Clarify
1677	9002668	I just tried to start my client based on this branch and got:  Loading block index... Opening LevelDB in /Users/hearn/Library/Application Support/Bitcoin/blktree Opened LevelDB successfully Opening LevelDB in /Users/hearn/Library/Application Support/Bitcoin/coins Opened LevelDB successfully LoadBloc	Clarify
1677	9003047	"On investigation this failure can happen with both ultralevelprune and old bdb code, it happens when the block is not written but the db updates are. Typically if power is yanked at just the wrong time.  As it is not a new failure mode, I guess it should not delay review/merge of this code. "	nAnswer
1677	9356748	Did anyone build this directly on Windows with MinGW? I saw there was a cross-compile Windows flag in the pro file. Perhaps I should just fetch that branch and try in the next days. 	nAnswer
1677	9502063	"@gavinandresen Why does it build the BDB version? Did you explicitly disable USE_LEVELDB, or is there a problem with the makefile that causes this? "	whQuestion
1677	9631656	"Some additional changes: reorganized the commits a bit, fixed a bug that caused unit tests to fail, removed some dead code, and added a lot of comments (mostly in main.h).  Also see the list of implementation changes in the first comment here. "	Clarify
1677	9631794	"Design ACK; I reviewed all of the changes to main.h and about half of main.cpp, and had just a handful of tiny nits that aren't worth picking.  I feel comfortable pulling this as long as @sipa can commit to working through the remaining TODOs and help fix any bugs that crop up over the next month or"	Clarify
1677	9631861	"By the way: this pull request is rebased on top of 'threadimport' (#1880) and 'canonical' (#1742). I suppose that means those require ACKs first. If there is a problem, I'll remove them from under this pull. "	Clarify
1677	9637115	ACK. This appears ready for integration. 	Clarify
1676	7786985	"*Also, I don't know if that's already being done but the less important database files could just be wiped automatically when this happens so the software can at least start.*  I proposed that before, but no one agrees.   Then again, if the new database formats that are going to be added (leveldb fo"	Clarify
1676	15634356	"Error messages have been improved in 0.8.x, and BDB is only used for wallet anymore. Closing. "	Statement
1673	7729383	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/021d2759489b14c09a98ad4f807ac22540e8fe93 for binaries and test log. "	nAnswer
1673	7737505	"I tried the version from @BitcoinPullTester and it starts just fine, but Process Explorer shows ASLR as Disabled, which it does not for my local build with the linker flags from this patch. "	nAnswer
1673	7778072	Maybe the cross-compiler ignores the arguments? 	whQuestion
1673	7778851	"Does @BitcoinPullTester use an official Gitian build setup? I observed, that it seems to use Qt 4.8.2 (which is nice), but I'm not sure what causes ASLR not to work or how this can be fixed.  I used the qmake ``*=`` operator, which only adds the options, if they are not present, perhaps I should try"	Clarify
1673	7816608	"using += won't hurt, but *= should work fine as well. "	Other
1673	7816668	"By the way, I'm not sure whether the ""win32:"" qualifier means ""building for win32"" or ""building on win32"", the latter not being true for the jenkins build. "	Clarify
1673	7816931	"@sipa The official qmake docs only mention win32:, while we seem to use windows: quite a lot in the project-file, but that is not what you observed, it looks like you could be right, see this.  <pre>  win32 {      SOURCES += paintwidget_win.cpp  }  The above code will add the paintwidget_win.cpp fil"	Other
1673	7817082	"Could be that we explicitly need to tell qmake that we're cross building for windows.  I think it would be pretty incredible though, if it had ignored the windows specific options all this time in gitian and we wouldn't have noticed it. What about the exceptions+threading fix, for example? "	Clarify
1673	7817179	I just checked; all windows-specific stuff enabled in bitcoin-qt.pro ends up being passed as command-line options in jenkin's build log. @Diapolo Can you try changing the win32: qualifier to windows: ? 	Clarify
1673	7817268	@sipa Updated to ``windows:`` I'll also check my makefiles and will try ``windows:`` and ``win32:``. 	Clarify
1673	7817309	"On Windows it doesn't matter, if I use ``win32:`` or ``windows:``, all expected arguments are in the makefile after running qmake. "	Reject
1673	7817926	"I also checked http://jenkins.bluematt.me/pull-tester/021d2759489b14c09a98ad4f807ac22540e8fe93/test.log and did not find ``-Wl,--dynamicbase -Wl,--nxcompat``. "	nAnswer
1673	7828349	"@Diapolo I thought I grabbed the same versions of deps that the gitian file uses, but I might have just grabbed the latest Qt...However, I did use exactly the gitian script (minus a few faketimes, etc things that are only there to make it deterministic), so if you find the version it uses, running t"	Clarify
1673	7828460	"@TheBlueMatt Thanks for that information, btw. I think we should use latest Qt for official builds, but that's not the matter here :). How does @BitcoinPullTester check if a pull changed or how long does it take after a new build is started after a rebase. Just asking, as I want to get this issue so"	Clarify
1673	7828575	"It just constantly loops and checks if the tip commit on a pull is in its list of already-checked commits.  If you push an update (wait a few minutes, and its not already busy on another pull), you can see the test.log before the build is done by going to http://jenkins.bluematt.me/pull-tester/ and "	Clarify
1673	7836036	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f5ab15b1bf82210c4d71e517730bc6806cbcfd48 for binaries and test log. "	nAnswer
1673	7837097	"The useage of ``windows:`` doesn't change anything, still ``-Wl,--dynamicbase -Wl,--nxcompat`` is missing from Makefile.Release and the test.log. I'll now try with += instead of *= ... any other ideas are welcome. I just saw that the cross-compilation seems unsupported / unofficial, could this be th"	Clarify
1673	7837306	"@TheBlueMatt It seems to me that ``RELEASE=1`` is missing in the test.log's qmake-calls, could this be true? "	Statement
1673	7837817	"Latest rebase moves the linker-flags out of the RELEASE=1 scope (for testing only, so DON'T MERGE THIS YET). If the flags then occur in the makefile or test.log we know the missing ``RELEASE=1`` qmake-flag is the cause. "	Clarify
1673	7839902	"No, RELEASE=1 is not in the qmake spec that pull-tester calls...why do we need to only apply ASLR and DEP to RELEASE=1 binaries?  Also, afaik, the only two options are RELEASE=1 or DEBUG=1, and RELEASE is the default (though not set if you check for it as a var) maybe there is a different way to che"	Clarify
1673	7841046	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/683860efbff033d63a52cf6dbf8322450fd49711 for binaries and test log. "	nAnswer
1673	7842062	"I think it's fine to enable the flags for both release and debug builds. Good to keep debug and release as close as possible to prevent surprises.  Unlike some kinds of optimizations, debuggers don't choke on DEP and ASLR do they? "	Clarify
1673	7842611	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bcfdeb63b74bb899c6b78add6e47a5eb4c33bc02 for binaries and test log. "	nAnswer
1673	7842648	bitcoin-qt.exe:     DllCharacteristics      00000140  It worked!   	Emphasis
1673	7842981	"Verified to be active now, as the flags occur in the test.log and the running exe shows ASLR as Enabled now.  ![ASLR working](http://i45.tinypic.com/23w08ko.png)  The last rebase just removed the indention and updated the commit message and comment. "	Clarify
1673	7843262	"@sipa If we want this for bitcoind.exe on Windows, where do we need to add the linker flags? "	whQuestion
1672	7708407	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b74d05db372feb8d03ef6b59d22292896544ad7a for binaries and test log. "	nAnswer
1672	7816868	"I'd like to keep the Base58 dependency (CBitcoinAddress, storing destinations as strings) out of the core wallet code, and use the internal representation there (CTxDestination); that should be more efficient as well. Can you make the CWallet:: methods work with CTxDestination, and have the RPC code"	Statement
1672	7828295	Sounds totally reasonable. 	Accept
1672	7877261	"Rebased, switched to CTxDestination, added some help text.  I have some code here from a fork that adds some filter argument to listaddressgroupings (e.g. to filter groups by available value), any opinions on it?   (I'd have to go cut it out, as the fork was a failed effort to generalize the groupin"	Clarify
1672	7878859	Denitted. 	System
1672	7891969	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3e67c12e0965d0cae7995e9698eea4a0f91b4253 for binaries and test log. "	nAnswer
1672	7902621	"Apart from that, ACK. "	Statement
1672	7931733	"I don't really have a suggestion for making it less ambiguous, and it's a problem that doesn't occur only here. "	Reject
1672	7945829	"Perhaps  [[optional_array_member,...]]  ? "	Other
1672	7948554	Rebased for the RPC reorg. 	Statement
1672	7960461	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5dfb800b034b6a61eb1da0ef2f5b6d2a4eb5aa0b for binaries and test log. "	nAnswer
1672	7994042	"Besides comment (on excluding unconfirmed stuff from algo), I didn't find any obvious issues. However, I'm not familiar enough with the rawtx stuff that I place any significant meaning on my review. "	nAnswer
1671	7691543	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4a57037c0b19f3aa95444a90795d27e6d9592038 for binaries and test log. "	nAnswer
1671	7708107	What is the sense of this all-in-one pull? 	whQuestion
1671	7711107	@gmaxwell requested it (or at least a build; not sure if he meant for a pullreq) 	Clarify
1671	7712290	I just wanted it built. :) But the pull request is actually mildly helpful for documentation / tracking purposes. 	nAnswer
1671	7715538	"It's funny for this time, but I'm not looking forward to everyone submitting their code as pull request just to get it built for free by BlueMatt :p  "	nAnswer
1671	7715560	@laanwj +1 	System
1671	7716235	I built the real binaries with gitian anyway ;) 	Clarify
1671	7816972	@gmaxwell You can request a view of changes from github without there being a pull request for it. The URL for this one would be: https://github.com/luke-jr/bitcoin/compare/63046fcf6...next  (where 63046fcf6 is the current master). 	Clarify
1670	7695014	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/0e6b9c809b4941d3062f092743df8d8e5588e7c9 for binaries and test log. "	nAnswer
1670	7817221	"I believe @gmaxwell argued in an earlier request for just using the full string. I wouldn't mind, and it enables using getblock directly, for example, without extra lookup. It's still a debug log file, right? "	Emphasis
1670	7879762	"How long is the full string? 64? I suppose so. This patch makes it print 48 characters, so I guess you could just as well go all the way print the full string. "	Clarify
1670	7880061	"No, this patch *skips* 48 characters, so prints 16. I don't care either way, and it seems there's support for the full hash, so might as well do that anyway... "	Reject
1670	7896204	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/508c455bc337c3a56d1499c5cd691114427c8f46 for binaries and test log. "	nAnswer
1670	8213729	So.. this patch now makes the lines in debug.log longer instead of shorter? 	Clarify
1670	8268711	"ACK save for bikeshedding:  ""BlockSubstr"" is a misleading name, because the end result of this changeset is not a substring, but rather the full hash string.  Maybe ""BlockHashStr"". "	Clarify
1670	8277961	Renamed. 	System
1670	8295829	How long will the line in the debug.log file now be with this change? What width of window is needed for it to look sufficiently neat? Is it worth adding a command line option to specify the length or format of the block string perhaps? 	Clarify
1670	8297552	It's a debug log; it doesn't have to look neat. NACK on a command line option... 	Clarify
1670	8300753	Agree with @luke-jr here. The point of the log is simply to give as much as possible info for debugging issues. 	Clarify
1670	8372209	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c97992845777f0625552153b5644f556fa15c8f4 for binaries and test log. "	nAnswer
1670	8762323	ACK 	Clarify
1670	9853043	Needs rebase. 	System
1670	10344191	Rebased 	Statement
1670	10345287	Hmm just realized that this is only for blocks. Any reason not to print full hashes for transactions? 	ynQuestion
1669	7684122	"No, I didn't express dislike. I don't want to rename anything. Bitcoin-qt is a great executable and internal name. I just don't want it to be shown in the interface (except About and Debug windows) because users have no idea what a `Qt` is. It is our *internal* name.   It has always been that way. D"	nAnswer
1669	7684154	"Well, it needs a user-visible name. It's not Bitcoin. It's *a* Bitcoin client, but you don't see Firefox going around calling itself ""Web Browser"". "	Reject
1669	7684286	"That's kind of a bogus concern. We're not calling it ""Funds transfer"" either. Bitcoin is still obscure enough for it not to be a generic name.  Bitcoind has the same ""problem"". It calls itself the ""Bitcoin reference implementation"". This is in no way limited to the UI, just the setup of the project."	Clarify
1669	7684420	"Bitcoin is the name of the blockchain/protocol/rules, not the name of this software. Your analogy seems fundamentally flawed. A better one would be if Google Checkout were calling itself ""US Dollar"".  bitcoind isn't user-visible, so it's not a concern. The ""Satoshi"" core of bitcoind and Bitcoin-Qt i"	Clarify
1669	7691755	We have far more important things to worry about 	Clarify
1669	7695715	Not confusing users is pretty important. But I agree we should just pick something reasonable and be done with this... 	nAnswer
1669	7708054	"@laanwj Who is Diablo :-P?  But yes, I proposed ``Bitcoin-Qt`` a few times and still think the child needs a better name (proper noun) than just ``Bitcoin``. I also think luke is right when saying ""Not confusing users is pretty important."" as between all that tech-stuff Gavins grandma should be able"	Clarify
1669	7715274	"@Diapolo, Diablo is someone on IRC but I meant you, sorry for the confusion  I also think not confusing users is pretty important, however of the many things I've heard users complain about, the name is not one of them. I'm also pretty sure that the wx UI simply called itself ""Bitcoin"" everywhere (b"	Clarify
1669	7715407	"I see users confuse Bitcoin-Qt as ""Bitcoin"" all the time, and that was with 0.5/0.6 calling itself Bitcoin-Qt reasonably. wxBitcoin's lack of a proper name no doubt was part of the cause of this confusion that already exists, but that was from a time when Satoshi was opposed to breaking the centrali"	Clarify
1668	7679091	Fixed 	System
1667	7842866	"This is a duplicate of issue #7, closing.  "	nAnswer
1665	7606700	"As long as you don't use that first address it makes, you're safe. "	Reject
1665	7606707	I thought it made 100 at first run. 	Clarify
1665	7606711	"Yes it makes sense. I know it was discussed when encrypted wallets were implemented.  @luke-jr: It still may use that for change, right? "	Clarify
1665	7606761	"When you encrypt for the first time, it flags any unallocated addresses so they don't get used. Change never goes to used addresses, either these or user-visible ones. "	Clarify
1665	7606989	"If it is desirable to harden default user configuration against theft, making the proposed change would help. In the meantime, the documentation should be updated with a recommendation to encrypt before doing anything else. "	Clarify
1665	7607133	Rather than a live cd you can also work from an encrypted volume using lvm or truecrypt. 	Clarify
1665	7616715	Something like #1666 would have to be implemented first. Currently there are not enough recovery options to encourage encryption by default.  	Statement
1664	7603086	I don't think -noconnect was ever supported as a valid option. 	Statement
1664	7603214	"As Luke says, that wasn't an intended option as far as I know. But it sounds like a reasonable thing to support, though we should probably also audit the other cases were a no wasn't really anticipated. "	nAnswer
1664	7843758	"This also appears to happen when it simply has no nodes to connect to, even without -noconnect.  In my case I have a testnet node that has no addresses to connect to, so it keeps cycling through them and the ""bitcoin-opencon"" thread takes a lot of CPU time.  In my case, it keeps selecting the same p"	Clarify
1664	8680801	Is this fixed in 0.7.0?  	whQuestion
1664	8700825	"It doesn't use 100% CPU, but it doesn't work either - it still tries to connect:      (gdb) run -server -nolisten -noconnect     [...]     Bitcoin version v0.7.0rc3-dirty-beta (2012-09-12 14:07:22 -0400)     [...]     trying connection 92.240.248.99:8333 lastseen=2.7hrs     connected 92.240.248.99:8"	Other
1664	8700945	"I see Pieter's commit fixing the 100% CPU bug in the 0.7.0 code:      commit f161a2c2114cd7d950248ce75a91ba1923e9abb1     Author: Pieter Wuille <pieter.wuille@gmail.com>     Date:   Tue Aug 21 17:32:04 2012 +0200              Fix infinite loops in connection logic  but nothing implementing ""-noconne"	Clarify
1664	8710056	"Since -connect=X means ""connect only to X"", -noconnect would mean ""don't just connect to one peer"", which is exactly what it does :)  Ok, I admit, it wasn't ever considered. "	Clarify
1664	8762276	"`-noconnect` makes no sense. But aren't there other ways already to say ""don't connect to any peers"", or limit the number of outgoing connections?     "	nAnswer
1664	8769408	"I've used ""-connect=127.0.0.1"" in the past to get no connections.  I'm wondering whether ""-maxconnections=0"" would work too:      Starting program: /home/chris/Bin/bitcoin -maxconnections=0     [...]     Bitcoin version v0.7.0rc3-dirty-beta (2012-09-12 14:07:22 -0400)     [...]     send version mess"	Clarify
1664	8770053	"In particular, my client somehow received notification of a payment to one of my addresses (not a payment to self) while I was running with ""-maxconnections=0"".  How can that happen?      CTxMemPool::accept() : accepted 058cdc9c4d (poolsz 1)  When I try sending a payment it doesn't send, as expected"	Clarify
1664	27141654	"The CPU issue was solved, and `mapMultiArgs[""-connect""].size() > 0` was added, so closing  "	Other
1661	7563762	There's string changes already queued for 0.7 still... at least if you include JSON-RPC help (not sure if that's translated) 	Clarify
1661	7563824	"JSON-RPC stuff is not translated, so that should be no problem. My statement was primarily about the UI, and also command-line options, though those are less important to have translated so if one's added it doesn't matter... "	Reject
1661	7574519	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull passed automatic sanity-tests! This means it merges cleanly onto current master, builds and unit-tests pass You can find the test log and build output at h"	Clarify
1658	7552956	"Please don't merge this yet, I'm gonna use to it test Jenkins' new pull-testing capabilities :) (this will fail because it makes bitcoin-qt_test compatible with Jenkins' build script, and bitcoin-qt_test currently fails) "	Clarify
1658	7561006	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull failed automatic sanity-tests! This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build script"	Clarify
1658	7562948	"Cool, it works "	Accept
1658	7563270	"Well it identifies everything as invalid so far, but it should be good for the positive now...just have to keep running the several hour test each time... "	Clarify
1658	7565930	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull failed automatic sanity-tests! This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build script"	Clarify
1658	7568156	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull failed automatic sanity-tests! This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build script"	Clarify
1658	7571448	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull passed automatic sanity-tests! This means it merges cleanly onto current master, builds and unit-tests pass You can find the test log and build output at h"	Clarify
1658	7571854	Now it works :) 	Statement
1658	7575476	Woohoo! 	Emphasis
1657	7572500	Fixed in 2bc15836bead1d5bdb8eca2db2525a9643cc4d0f 	Statement
1656	7530305	"This is intended, as there is no current data available. Not a bug or issue IMHO. "	nAnswer
1656	7530633	"my point is that it should not display the number ""0"" but keep the field blank until a value is available. "	Clarify
1656	7530645	"To be honest, I've never experienced a delay before the numbers are filled in. The main window is only shown when the complete client is started up and the balance is available.  Or do you mean during the initial block chain sync after removing the block files? In that case, it is intended, as block"	Clarify
1656	7530928	"not, this is not the initial blockchain download. apparently sometimes the UI is displayed also when the data is not fully loaded. this might be a seperate issue. when trying to reproduce (three times) it it never occured, the UI correctly displayed itself with the correct data.  "	Clarify
1656	7708341	"@apetersson I don't think this is worth to be open as issue, as we have the mentioned ""out of sync"" display in 0.7 and the 0 display are the UI default values. Are you fine with closing this? "	Reject
1656	7842963	"yes, i'll have a look at 0.7 as soon as first builds come out "	Clarify
1656	7843041	Just grab one of BlueMatt's auto-builds... for example http://jenkins.bluematt.me/pull-tester/bcfdeb63b74bb899c6b78add6e47a5eb4c33bc02 	Statement
1656	8651311	"tried to reproduce it with 0.7 and at least there is now a glowing red warning when it is not synched. i consider this issue closed, because it should be clear for a user that this is not the final balance.. "	Clarify
1656	8651330	http://i.imgur.com/0b1fP.png 	System
1655	7575750	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull passed automatic sanity-tests! This means it merges cleanly onto current master, builds and unit-tests pass You can find the test log and build output at h"	Clarify
1655	7591663	"It looks reasonable, but what happens later if some inputs are missing? "	whQuestion
1655	7591974	Just skips signing them:      // Sign what we can:     for (unsigned int i = 0; i < mergedTx.vin.size(); i++)     {         CTxIn& txin = mergedTx.vin[i];         if (mapPrevOut.count(txin.prevout) == 0)         {             fComplete = false;  	Other
1655	7592158	ACK 	Clarify
1652	7474485	Is this useful?  IIRC a number of pools mine their own payouts. I expect it to mostly measure that. 	Clarify
1652	7487968	Would be useful to measure the potential impact of forwarding blocks as header + vector\<tx hash> instead of header + vector\<tx> 	Other
1652	7577470	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull passed automatic sanity-tests! This means it merges cleanly onto current master, builds and unit-tests pass You can find the test log and build output at h"	Clarify
1652	7833483	"no ACKs gathered, closing "	nAnswer
1651	7460118	"quick ACK (== I scrolled through them for a sanity check, but did not stare hard at each one)  "	Clarify
1651	7579636	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull passed automatic sanity-tests! This means it merges cleanly onto current master, builds and unit-tests pass You can find the test log and build output at h"	Clarify
1651	7692100	Temporarily closing to add more tests which are waiting to push. 	Clarify
1651	7900618	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/da9e86c3b6cfdd13ed71744a082df94de1f3f41f for binaries and test log. "	nAnswer
1651	7910346	ACK (compiles and runs nicely on my Mac) 	Clarify
1649	7581550	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull passed automatic sanity-tests! This means it merges cleanly onto current master, builds and unit-tests pass You can find the test log and build output at h"	Clarify
1648	7468988	Accepting non-standard transactions has already been NAK'd.  Putting this into a new pull req doesn't change that. 	Clarify
1648	7472787	"This has not already been NAK'd. Please reopen so I don't need to keep resubmitting, and consider reading the change to review (this doesn't accept any old non-standard transactions, only ones you make yourself). "	Clarify
1648	7584062	"The following is an automatic comment from the Bitcoin Pull Tester. If you believe it is in error, please contact jenkins@bluematt.me  This pull passed automatic sanity-tests! This means it merges cleanly onto current master, builds and unit-tests pass You can find the test log and build output at h"	Clarify
1648	7697975	"This change is partially, if not totally, flawed.  This change gives a tool for an attacker to increase considerably the attack surface!  Any user can send a peer a transaction that returns IsMine() == true or IsFromMe() == true if he knows who the peer is (the peer's public key).  Creating transact"	Clarify
1648	7698436	"An attacker can't create transactions that return IsFromMe()==true unless they have already compromised your wallet.  No anti-DoS rule should ever be made based on relaying valid transactions, though perhaps concern should be given to potentially filling the victim's memory/wallet with spam. "	nAnswer
1648	7700479	"Why the attacker can't create transactions that return IsFromMe()==true ?  The code IsFromMe(Tx) calls (GetDebit(tx) > 0) that calls GetDebit() from each txin, that finds the previous transaction and calls IsMine(prevout) which only checks that the recipient address is a specific key (only works for"	Other
1648	7700723	Some time ago there was a discussion on https://bitcointalk.org/index.php?topic=91915.0 about the purpose of IsStandard() check and its benefits  	Statement
1648	7700979	"If the signatures don't match, the transaction is invalid and won't even get this far. "	Reject
1648	7702822	"TRUE but you can create a VALID tx that sends 0 BTC to the victim and use the REMAINING previns/txouts to do nasty things. I can't find any way to attack now, but I don't like the idea of allowing the attacker to skip a check only by adding a few bytes to the transaction that sends 0 BTC to an speci"	Clarify
1648	7702928	"I think @luke-jr is right here, though I haven't looked closely enough to be sure, so thanks for raising the point.  Anyway, this does raise another point: maybe IsFromMe() transactions should not be retransmitted unless they are really created by this instance (and not received from the network). "	Clarify
1648	7702939	"If that really works, it's a bug (in the existing code). "	Statement
1648	7702959	Nevertheless IsFromMe()=true is just enough of a problem.  	Statement
1648	7703030	"If you want your client to allow a ""fast track"" for your transactions, then you can add some hidden message to the script of the transaction. The hidden message must be a MAC (Message Authentication Code) of your transaction using a secret key. Then you can check very fast that you're the sender of "	Clarify
1648	7703497	"No need for something that complex. Wallet transactions already have a fFromMe field which can easily be used to track whether it is not only ""from me"", but also ""created by this instance"". "	nAnswer
1648	7703714	@sipa That sounds like a good idea. How does it work with raw transactions (which are likely the common use case for this)? 	Clarify
1648	7703811	"Great!  (but maybe the luke-jr runs multiple instances in different computers, so fFromMe is not available) "	nAnswer
1648	7705570	"If sendrawtransaction can be made to cause fFromMe to be set then it even covers the multiple instance case, so long as you do the work to trigger it from each instance. (Arguably better than the wallet duplication required to make input sniffing work) "	Clarify
1648	7725993	"I found two new attacks that breaks pseudonimity and allows a node to discover the peer's public address. With this information in hand (IP and Bitcoin pub address), a hacker may get the real identity and track the users payments.  a) Wait to see if the peer relays a non-standard transaction, it it "	Clarify
1648	7732345	"@SergioDemianLerner ""A"" is not a real risk, since relaying the non-standard transaction is the only way to actually use it (so the only way to avoid this risk is to not use non-standard transactions at all). ""B"" seems like it could have some serious privacy implications, though - do you think it wou"	Clarify
1648	7733493	A could be achieved by sending the transaction directly to the miners (I don't know how to achieve that) . Then only the miners will know who send it.  Your idea to hide the transaction is interesting...The node should act exactly as if the transaction had been rejected. Also there should be no ti	Clarify
1648	7990631	"After thinking about it more, this gains from this seem not worth the risks at this time. "	nAnswer
1646	7442279	ACK 	Clarify
1645	7469092	"Closing, 1) requires nak'd commit that accepts non-standard transactions 2) ""status: deferred"" could be for a long time 3) this is an active area of Gavin work too, and so I think it is fair to require some discussion (on bitcoin-devel?) before proposing fee calculation or fee RPC changes.  You will"	Clarify
1645	7472804	"1) It was not NAK'd. 2) So? 3) It was not at the time it was implemented, and still isn't really. Low-level tools are no substitute for the high-level ones.  "	nAnswer
1642	7432876	"This is currently the unmodified listaddressgroupings RPC from the coincontrol patch. It's been tested for basic functionality.  I observe that it misbehaves a little when you have transaction with some inputs which aren't yours e.g.:         [             ""mgrxrEzVVvf5TDt4PVc3EpiJrJGt52RXfZ"",      "	Clarify
1642	7433232	ACK  	Clarify
1642	7433441	Perhaps when it can't decode an address it should return the txout?  And the mismatch with listunspent should be fixed by allowing listunspent to take a list of addresses to filter with? 	Clarify
1642	7594083	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/396878ff5fd76905156d442106ef1ae973748d00 for binaries and test log. "	nAnswer
1642	7871206	duplicated in another pull request (#1672) now. 	Clarify
1641	7436355	"@gmaxwell was asking about testing.  This was tested successfully with a one-line pynode patch (pynode HEAD deb07f51435cd0d18596bddfee28e337a5a6454e).  pynode issues 'mempool' at startup, and fills its own mempool with the returned results.  ``` --- a/node.py +++ b/node.py @@ -238,6 +238,7 @@ class "	Other
1641	7463024	"Random thought:  miners may want this, to ""prime the pump"" after restarting their bitcoind.  There is the incentive to capture every fee-paying transactions, after all. "	Clarify
1641	7597554	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/05a85b2b38d516a8701f684fcd2ab99f3e5b462d for binaries and test log. "	nAnswer
1641	7695802	"ACK on the changes, but maybe there must at least be some discussion about adding this, and the protocol version change involved. An alternative would be using a service bit (I don't personally think that is preferable), but people may have other opinions.  I would expect the startup sequence to als"	Clarify
1641	7796148	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/05f891636199c36e1639fb95f5e92445eea9e97f for binaries and test log. "	nAnswer
1641	7833558	Specification: https://en.bitcoin.it/wiki/BIP_0035  	Statement
1641	7870408	ACK 	Clarify
1641	7870565	ACK 	Clarify
1640	7377080	The issue went away from me after trying several times. There may be a problem somewhere however. 	Clarify
1639	7363988	"That's great, but an option? Seriously? These are the kinds of options that don't really make any sense. Why not just make this the default? Does *anyone* find the current behavior useful? "	nAnswer
1639	7364111	"That whole progress bar think is very controversial and it''s hard to do it right as a change that some like other seem to hate. That's why I chose the option way, set it like you want it to be.  I'm fine with some final decision to just change the default though. "	Clarify
1639	7364387	"Yeah, I understand the appeal of an option in this case, but if we add an option every time developers can't get consensus on something trivial it just results in a nonsense UI. How many people will ever change that setting?  The current setup means that for anyone who isn't a brand new user, the pr"	Clarify
1639	7375759	"It's not about ""developer consensus"" it's about real observed behavior: The relative indicator was frequently causing  users to freak out, corrupt their chains by screwing around trying to 'fix' things that aren't broken, or uninstall the software and send angry email.  It's a non-starter.  (An exam"	Clarify
1639	7378116	"You could just provide an estimated time remaining indicator alongside the progress bar. Non-paranoid users would wait and see that it advanced faster than last time anyway though, I don't know that we should optimize for the case of users who try and download chain files from websites. That seems o"	Clarify
1639	7398847	"After all discussion about this apparent non-issue, I'm starting to think that a progressbar is just not the right way to show the progress here. The bitcoin wallet on Android just tells you how far (months/weeks/days/hours) it is behind. I'm starting to think that is enough... "	Clarify
1639	7418662	"I was trying to get a time-left display implemented, I'll add that as seperate commit later, so perhaps that is better with a relative display. "	nAnswer
1639	7420821	"Yeah, but I asked Andreas to put a progress bar into the Android app too. Time by itself turns out to be less useful when you're far behind.  I don't think progress bar+estimated time is a big deal. The code for it is quite straightforward. On 31 Jul 2012 15:54, ""Pieter Wuille"" < reply@reply.github."	Clarify
1639	7425918	"Yes, it is straightforward. But implementation is not the problem. We've had both progress bars (one absolute, and one relative to the sync part since startup). As far as I remember, both were confusing and people complained in both cases to change it to the other. My conclusion is that a progressba"	Clarify
1639	7425982	"@sipa That is, why I made it an option here ... some like this better, others like that better and now they can chose. I really like the progress bar. Give this patch a try and tell what you think afterwards? "	Clarify
1639	7426117	"@Diapolo I don't really use the GUI myself, so I'll let others judge it. It just seems to me that after not having reached an acceptable solutions after so much discussion, we should try something else :) "	Clarify
1639	7432337	"Well I have said before, I don't want an option, we just have to pick something and stick with it. And we did.  Last time, most of the developers were for an absolute progress bar. But this has flip-flopped too many times I don't even want to discuss about it.  Edit: of course, if you have an altern"	Clarify
1639	7434146	"Closed for now, problem with the timer was it only got updated when block count changes (void ClientModel::updateTimer()), so the timer stuck, when the block download was stuck ;). "	Clarify
1638	7354145	"Nevermind.  CBigNum::getvch() reverses the string (big -> little endian), so the sign bit would indeed be at the end. "	Other
1636	7331520	ACK  	Clarify
1636	7398864	ACK 	Clarify
1636	7432720	"Needs rebase, though "	nAnswer
1636	7433514	"weak ACK, mostly don't care, needs rebase "	Reject
1636	7434039	Rebased and ready to merge. 	Statement
1634	7291569	"ACK, with one quibble:  could you explicitly say what previously-using-testnet3-users have to do to start fresh?  e.g. ""remove everything but wallet.dat from your .bitcoin/testnet3 folder."" "	whQuestion
1634	7291683	Updated the commit message. 	Statement
1634	7291808	ACK 	Clarify
1633	7289282	Hm. Doesn't this break tools just as much as changing the magic would?  	Emphasis
1633	7289694	"Depends on the tool; tools that read blk*.dat will not break with this change, but do break changing the magic bytes.  Network-speaking tools will have to be up-to-date with PROTOCOL_VERSION.  "	Reject
1633	7289745	"PS: I don't want to spend a whole lot of time on this, because out-of-version testnet nodes is a problem that should eventually solve itself (people will eventually upgrade).  "	Clarify
1633	7289787	"Frankly, I like changing the protocol magic more than adding a minimum-version.  Changing the protocol magic (a) guarantees only compatible test clients communicate, while (b) leaving open the possibility that testnet3 may appear in a private backport or luke-jr's public backports.  Setting a minimu"	Clarify
1633	7290402	okey dokey.  So.... we all have testnet3-with-existing-magic-bytes blk*.dat's on our hard disks.  What's the migration plan if we change the magic bytes? 	Clarify
1633	7292267	changing magic bytes it is. 	Statement
1632	7269291	Much better indeed 	Statement
1632	7271703	Of course ACK to such a thing. 	Clarify
1632	7331525	"Oops, seems this needs rebase now, it conflicts with #1571.  "	yAnswer
1632	7432712	"sigh, weak ACK, needs rebase.  a few quibbles, nothing NAK worthy: - I prefer ""nId's"" construction, as it separates the variable's precise spelling.  addrinfo's etc. - ""ciphertext"" is valid and common - ditto ""filename"" - ""cleanup"" and ""whitespace"" are common even if invalid  "	Clarify
1632	7434590	"Rebased and fixed @jgarzik 's spelling qubbles. However, I left nIds and addrinfos, because: - ""nId's"" construction is invalid grammar - nIds is in fact used as a variable name already - addrinfo is not a variable name at all (CAddrInfo is a class) "	Clarify
1628	7202707	"Looks like a lot of work :) and looks good. String was changed in the source, in the english master and all translation files. We just need to remember to push the new master to Transifex, before merging new translations from there. "	Clarify
1628	7267663	A hint to save some work for next time: you only have to update the _en .ts file in the git repo. The rest comes from Transifex. 	Clarify
1628	7269734	I used sed. It was not that much work. 	Statement
1627	7194250	"Suggested easy fix: if testnet and peer version is < 0.7 : disconnect from peer.  More generally, maybe if peer version < GetArg(""-minpeerversion"", ...) then disconnect. I could imagine deciding on main net you don't want to talk to 0.3 nodes any more...  "	Clarify
1627	7473916	Solved by changing the protocol fingerprint.  	Clarify
1626	7192895	"I'd stick the checksum at the front, after a type octet (so we don't confuse transactions with signatures, etc). Maybe even some kind of could-replace-base58? "	Clarify
1626	7193150	"not that it matters for data this small, but checksum at the front means you can't emit any data until you have all of it.  "	Reject
1626	7193175	"How so? If you're checking the checksum, you need to wait until you have all the data no matter where the checksum is. If you're not checking it, you can emit the data as soon as you get it... "	Clarify
1626	7193368	"Because it requires buffering on the transmitter side as well as on the receiver, and buffering of the whole txn which may be hundreds of KB.  In either case the receiver only needs to buffer the crc state (e.g. if it could process the txn in a streaming fashion).  This does have some really vague a"	Clarify
1626	7193404	"Oh okay, that makes sense (and I agree justifies post-checksum). "	Accept
1626	7194303	"The JSON-RPC interface is meant for machines, not people. I think it would be a mistake to add error-detection at the raw transaction API, it will just make it harder for machines to interact with it.  Besides, the Bitcoin transaction serialization format is somewhat robust to random errors anyway, "	Clarify
1626	7194493	"It's really easy to have a subtle error that would be unnoticeable, a 3 for an E in the middle of an address, etc...  The fact that the first time I tried to do it for anything 'real' I ended up with corruption makes me a bit concerned.  I'm not too convinced with 'harder for machines', since just v"	Clarify
1626	7497509	Is it really easy to have a subtle error?  One-byte-changed errors seem extremely unlikely to me; what's the scenario where those creep into the JSON stream?  Much more likely are truncation/additional-character errors due to copy/paste. And those are extremely unlikely to produce valid transactions	Clarify
1623	7405392	"Won't hurt, but not sure what the effect is, if nothing observable happens... "	nAnswer
1623	7418647	The effect is we don't have an empty field there ;). 	Clarify
1623	7600624	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6fe375c3bd558cc257e72c04ac5d94dc86be4a19 for binaries and test log. "	nAnswer
1623	7684190	I'm not seeing much of an advantage here either. But I suppose it's good to be explicit (especially as the target name is overridden later for MACOSX). 	Clarify
1621	7166244	ACK 	Clarify
1621	7166453	ACK 	Clarify
1621	7166679	ACK 	Clarify
1620	7166502	"In general I like to put the name ``Bitcoin-Qt`` in place as official client name, I just think it needs a finer thinking about where it makes sense and how. "	Clarify
1620	7169342	"NACK. I've been clear on this before. End users have no idea what ""Qt"" is, so it shouldn't appear that prominently in the interface. It's just a technical detail. Like putting the programming language in the title.  The focus should be on ""Bitcoin"" itself, not that it is a UI or what library happens"	Clarify
1620	7170805	"@laanwj It's the client name. How are users to differentiate Bitcoin-Qt from other clients they may have installed? Specific clients shouldn't claim to be ""Bitcoin"" or it will confuse users into thinking Bitcoin *is* the software. "	Clarify
1620	7170880	"That's not the client name. I think that's where the confusion comes from. Bitcoin-qt is the name of the UI project before it got merged into here. And the focus should be on the underlying system, not the UI. If this client has any name beyond ""Bitcoin reference client"" it's ""Satoshi"".    "	Clarify
1620	7170918	"Anyway, I'm fine with any name but I think naming should be @gavinandresen 's call as project lead.  "	Clarify
1620	7171868	"I guess I see it as the same Bitcoin-Qt project mainly by @laanwj (ie, same maintainer = same project), and @gavinandresen the project lead of bitcoin*d* (which happens to share the same git repository). I don't really care what you choose to name the client, but *some* distinction between Bitcoin a"	Clarify
1620	7174978	"Just for clarification, bitcoind is also a Bitcoin client, yes? When someone talks about bitcoind my association is hey that's the official / reference command-line Bitcoin client. If one talks about Bitcoin-Qt I associate the official / reference GUI Bitcoin client with it. That's no pro or con, I "	Clarify
1620	7180912	"As I see it: - Bitcoin as the concept / protocol / technique / blockchain - ""Satoshi"" as the reference protocol implementation began by Satoshi Nakamoto, maintained by @gavinandresen  - bitcoind as the JSON-RPC server began by Satoshi Nakamoto, maintained by @gavinandresen  - Bitcoin-Qt as GUI clien"	Clarify
1620	7186431	"I agree with laanwj, it's fine the way it is.  "	Reject
1619	7155521	"- LevelDB should not be forked unless absolutely necessary; try to get Win32 support upstream first - If it must be forked, the fork should have its own git repository, which can be embedded using git submodules (or just pulled in by gitian for Win32) - Dynamic linking to OS-provided LevelDB should "	Clarify
1619	7155550	"Also, does LevelDB support in-memory db environments for the test suite? "	whQuestion
1619	7157433	"> If it must be forked, the fork should have its own git repository, which can be embedded using git submodules (or just pulled in by gitian for Win32)  I'm maintaining the branch here, feel free to fork/clone: https://github.com/justmoon/leveldb-mingw  It should be pointed out that the ""fork"" doesn"	Clarify
1619	7157476	"I'll wait for Gavin to give his opinion on this before doing any work.  Honestly, I don't care about trying to get the Windows support into upstream. The authors/maintainers of LevelDB are some of the most senior engineers at Google. They are, to put it mildly, very busy. Nor do they particularly ca"	Clarify
1619	7157567	"So should this compile fine on Windows with MinGW and the default Qt SDK GCC (which is currently still 4.4) as it is? Just interested, how much longer takes a compilation with this patch? "	Other
1619	7157747	Try it and find out :-)  LevelDB is a small library. It should only take a minute or two more. 	Clarify
1619	7159646	"> So should this compile fine on Windows with MinGW and the default Qt SDK GCC (which is currently still 4.4) as it is?   LevelDB's build system uses a shell script (`build_detect_platform`) to create a `build_config.mk` file. To build natively on Windows, we would need some other way to generate th"	Clarify
1619	7160205	"make clean should work. If you look at the makefile diffs then I tried to ensure it'd be run at the right times, at least for the makefiles in src/. Is there a case where that doesn't work? "	Clarify
1619	7160437	``` moon@clymene:/home/ubuntu/bitcoin$ make clean [...] moon@clymene:/home/ubuntu/bitcoin$ ls src/leveldb-1.5.0/libleveldb.a  src/leveldb-1.5.0/libleveldb.a ``` 	Clarify
1619	7160509	"Oh I see what you mean - I think you added it to the makefiles, but not to `bitcoin-qt.pro`, so when using qmake if you do a make clean, LevelDB won't be included. "	Clarify
1619	7364545	"I've just seen the same issue as Stefan reported, where sometimes hashBestChain seems to go missing from the DB. I haven't had time to investigate yet. "	Clarify
1619	7364764	"For reference, this is the error Mike is talking about. After a clean shutdown, the next start goes like this:  ``` Bitcoin version v0.6.1-523-g2af483b-dirty-beta (2012-07-02 17:41:31 +0200) Startup time: 07/24/12 08:40:11 Default data directory C:\Users\moon\AppData\Roaming\Bitcoin Used data direct"	Clarify
1619	7399074	"I'd like to have all database-breaking changing merged at once, as I don't we'd like to either support many different combinations of database environments, or force users to regularly rebuild or at least reindex their database.  I'm specifically referring to Jeff's attempts to split the database in"	Clarify
1619	7420822	"My concern with that is we need better performance right now, because miners have been observed dropping transactions to ensure fast block propagation.  Pruning is a more complex change with unresolved questions like how to ensure we have a good enough collection of archival nodes, how they are foun"	Clarify
1619	7420932	"IMO, the solution to block propagation is to relay before doing any of the heavy per-transaction lifting anyway. Anything else just reduces the problem, but doesn't eliminate it. "	nAnswer
1619	7420943	"As I still had not the time to test it another question. This does not replace the blk000x.dat files, which are no ""database"", right? "	nAnswer
1619	7423774	"@mikehearn The reason I'm pushing ultraprune is exactly because of the performance improvements. If I disable signature checking, importing the entire blockchain (using -loadblock, a few weeks ago) took 7 minutes on my laptop (6 minutes when on tmpfs instead of disk, 5 minutes when I use an std::map"	Clarify
1619	7427531	"> As I still had not the time to test it another question. This does not replace the blk000x.dat files, which are no ""database"", right?  Thats correct. "	nAnswer
1619	7600773	"Automatic sanity-testing: FAILED, see http://jenkins.bluematt.me/pull-tester/1e195ded241c171cfae1353e21f13b412fffb3b5 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them inco"	Clarify
1619	7757667	"I rebased and fixed up the unit tests that no longer worked. It uses an in-memory leveldb for the tests now. Also made qmake clean work, but it relies on a horrible hack that assumes things about how qmake works internally. I didn't find a better way to do it, unfortunately.  AFAIK this now resolves"	Clarify
1619	7757902	"No benefit? I'd think improved maintainability and socially acceptable distribution of the client, not to mention the benefit of Win32 support for other projects if LevelDB accepts the patches upstream, are pretty obvious benefits. It shouldn't be much work, either. "	Reject
1619	7757945	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/9211106f282e05b345e77fee608e5c832e775923 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1619	7758638	I think Jenkins was building an earlier version. I did two forced pushes fairly close to each other. Hopefully it'll try again soon.  The main reason I don't see much benefit is I don't really expect leveldb to change from this point onwards. If upstream doesn't change then having it be a separate l	Clarify
1619	7759455	"Most of the @luke-jr requests are not reasonable, but I do agree about wanting to avoid forking Windows support.  Is there a technical reason why straight Win32 API cannot be used?  I looked through env_boost.cc and port_win.cc, and it seems like a doable task.  Several of the functions in env_boost"	Clarify
1619	7759541	"I think it's OK to maintain our own database within the bitcoin source base. This gives more control, and prevents unexpected data format changes and incompatibility (as we have seen with BerkelyDB...). "	Clarify
1619	7760115	"> Is there a technical reason why straight Win32 API cannot be used? I looked through env_boost.cc and port_win.cc, and it seems like a doable task.  Yes it is doable as evidenced by the fact that it has been done:  http://code.google.com/p/leveldbwin/source/browse/trunk/leveldb/util/env_win32.cc?r="	Clarify
1619	7760425	"I have no problem with keeping a fork in our codebase for now. The code is small, and as mentioned, it makes us safe(r) from incompatible database file changes.  If a Win32 support gets merged upstream, we can still consider switching back. "	nAnswer
1619	7760769	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/ad6ba92a3b5f86c2c11b282bb98aea85371feabd for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1619	7763606	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/39f12e99f7699f4ec0e3e26051dda1571de6cf84 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1619	7765978	"@jgarzik Why is it unreasonable to keep a separate git repository for a separate codebase? It's trivial (would take about 15 minutes to setup), harmless, and has much to gain (upstream *can* merge it, directly). If @mikehearn doesn't want to spend 15 minutes on it, I wouldn't object to doing it myse"	Clarify
1619	7766703	"A separate git tree is a messy headache... but hey, LLVM does it with clang. "	Statement
1619	7766954	"Oh I was just commenting on whether or not to maintain our own LevelDB branch. I don't mind doing it in a separate git repository, though I don't have a preference. "	nAnswer
1619	7778004	"I'd prefer to keep everything that is needed to build bitcoin together in one repository. I've worked with git submodules before, and it's a pain. I'm sure if it's a pain for me it's especially for new contributors that don't know the system. Splitting up the repository is useful for really large an"	Clarify
1619	7778750	"Guess we better import libstdc++, G++, etc...  Upstream doesn't even have to merge anything for most builders. The LevelDB fork is *only* needed for Windows - which is already stupidly difficult without gitian, and gitian can easily pull in any repo it needs. "	Clarify
1619	7781069	"If it is decided to include leveldb:  - We should not hardcode the version number (1.5.0) inside the repository, and thus rename the directory to 'src/leveldb'  - I'm not sure building the .a separately is needed. It makes the qmake file (at least) pretty ugly. Is it possible to include the .cc file"	Clarify
1619	7788063	Building internal foo.a files is not ugly -- it is normal for large projects.  _And_ it usually helps improve link times.  I'm certain Qt can handle it somehow.  	Clarify
1619	7788172	This has nothing to do with qt; most bigger qt projects use cmake... qmake is pretty much a hack itself  	Clarify
1619	7900638	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/ae98492e87de56f5e6c1869b1a7bb80f7b79c579 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1619	8162593	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/9ab78efc90dc8ac7380e23f6f53d5a9b71666af9 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1619	8735245	Closing this as it should be merged as part of ultraprune. 	Statement
1618	7155122	"Your bitcoins should not be lost. You should, however, always make regular backups of your wallet.dat.  Before trying to perform any further repair you should go and make a wallet.dat backup on removable media.  You should also make a backup of the whole bitcoin directory for extra security.  After "	Clarify
1618	7155176	where is the wallet.dat file located? 	whQuestion
1618	7155258	"What platform are you on? Windows, GNU/Linux, Mac, other? "	whQuestion
1618	7155377	Windows 	Statement
1618	7155413	You should be able to plug %appdata%\Bitcoin  into explorer to find it. 	Clarify
1618	7156186	"Ok, Bitcoin is working again. Thanks a lot for your help! "	Emphasis
1618	7163425	"@postfan When everything is working now, please close the ticket :). "	Clarify
1617	7152305	"In that case, why not just ""Show/Hide""? ""Window"" doesn't tell the user anything, either. "	Reject
1617	7152412	"Window tells the user we are talking about the Client window, no? I'm fine with ""Show / Hide"" though :). "	Clarify
1617	7152445	"It tells the user that what gets hidden/shown is a ""window"". Which is always the case... it's just too generic so better to leave it out.  "	Clarify
1617	7272454	@laanwj Do you agree with this small pull after the last rebase? 	Clarify
1617	7602832	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ef5fc417f98c06c490ec47262eacbb5db2ffcf99 for binaries and test log. "	nAnswer
1617	7707262	@laanwj  Anything I can do to get this small thing merged after 24 days :-D? 	Clarify
1617	7715324	"Kind of lost track of this, github should really add a way to assign pull requests.   There is a string freeze for 0.7.0 now but it can be merged after that.  "	nAnswer
1617	7715493	"@laanwj Eh, GitHub *does* let you assign pull requests... you just need to do it from the Issues list "	nAnswer
1617	8115785	@laanwj Is that string freeze still persistent or does this make it into 0.7 final? Just wanted to know :). 	Clarify
1617	8120077	"Yes this can go into rc2, though we should merge it and push to transifex asap so people have a little time to translate it. Please remind me if I forget this today. "	Clarify
1617	8120126	"Will do that, btw. I always hope you don't feel set under pressure by my remainders :) but as GUI master I need you ^^. "	Clarify
1615	7132073	ACK 	Clarify
1614	7267616	"ACK, this is a proven way to improve security (or at least it should limit damage of exploited bugs in a lot of cases).  "	Clarify
1614	7302606	It's fine with me now. We need some of the other devs to take a look at this. 	Statement
1614	7303650	@laanwj I hope anyone is using Windows or at least appreciates DEP support ;). 	Clarify
1614	7405479	"Looks good, but I cannot test whether it works as intended. "	nAnswer
1614	7418632	"As I feared, no core dev is on Windows :). Can someone try if this compiles fine or how can we go on? "	Statement
1614	7448893	"You tested it yesterday with code on the stack, and it worked. Shall we be bold and merge this? It's the same code as used by Tor so we can't go much wrong.  "	Reject
1614	7449386	"I strongly encourage you / the core devs to merge this. IF (what I don't expect to happen) there are errors, we can easily fix / disable this patch during the coming RC phase.  It's a great security benefit with little code IMHO! "	Clarify
1614	7604215	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/3d88c9b4d3714daddd77ab72d0e44b61c0b9800a for binaries and test log. "	nAnswer
1614	7680458	Does this work on ReactOS? (I think it should be merged either way) 	Clarify
1614	7684227	"I'm fine with merging this as long as it does not crash on any platform.   It doesn't worry me if it doesn't manage to enable DEP on some more obscure platform. Until a developer steps up and cares about ReactOS, support for that is not a concern.  "	Reject
1614	7707304	"@luke-jr I'm not able or really willing to test this with ReactOS ^^, but as I just use the Windows-API here with no bad things happening, when the code fails, I think this is fine. "	nAnswer
1614	7715690	To go even further (for 0.8?) we should add the following MinGW linker flags on win32:      --dynamicbase  The image base address may be relocated using address space layout randomization ( ASLR ). This feature was introduced with MS Windows Vista for i386 PE targets.      --nxcompat The image is co	Clarify
1614	7720125	@laanwj I use these 2 linker flags since a few weeks now for my local build and they work fine. I just wanted to ensure at least basic DEP get's in before 0.7 and wanted to create another pull for ASLR and DEP linker-flags after this got in :). 	Clarify
1612	7359754	"Good idea, I've noticed this being slow in some of my tools.  Unfortunately, during a reorg I think your cache could end up pointing off into space. It's probably fine to just invalidate the cache every time the chain is updated. "	Clarify
1612	7433473	"or do what pynode does, and maintain a (height)->(list of block hashes) index... ;)  weak ACK, but sounds like it needs updating based on @gmaxwell 's comments "	Other
1612	7435511	Moved to main.cpp and added code to clear the cache whenever the best block changes. 	Clarify
1612	7436218	Tests out fine for me.  	Statement
1607	7057326	"Hm, nice to add some metadata, but it adds yet another place to update the version number. That sucks... Maybe only add the major versions?   "	Clarify
1607	7057398	"I guess this could be scripted in the Gitian process, but I'm no Linux-Script guy. I would love to see this added and I'm fine with major version numbers (e.g. 0.7.X.0), but could take a look here and update when needed :).  It's also possible to include a header with that version stuff, but it's on"	nAnswer
1607	7096050	makes bitcoin-qt.exe a bit more trust-worthy  that's an interesting claim :-)  	Other
1607	7096124	"@laanwj Why? When I use the tool ProcessExplorer, which is able to show some internal informations of running processes, handles and so on, I consider an application that provides no meta-data as suspicious on the first look. I think it's a good style to supply such meta-data. "	Clarify
1607	7096167	"Heh, you meant ""makes bitcoin-qt.exe *look* more trust-worthy"". Actually becoming more trust-worthy... would be interesting, that was the joke.  I'm for merging this of course. Can't we remove the version completely, for now, until someone sets up a script to insert it automatically?  "	Clarify
1607	7097222	"I meant *look* more trust-worthy, which is a personal thing, so yes ;).  Well I could simply comment out the version #defines but I fear no Linux dev who is able to write shell scripts is willing to put work into this ^^. I'm going to take another look at this issue now.  Edit: Btw. is version.h mis"	Clarify
1607	7106208	@Diapolo  >more trustworthy  wow really? that's about as effective as naming bitcoin-qt.exe to legit_bitcoin-qt.exe 	Emphasis
1607	7116052	"I split the needed version stuff into versionrc.h ... still a manual solution, but a small step perhaps to one who can help automating this :-D. "	nAnswer
1607	7272376	"Updated FileDescription string and I was able to change the language property to display neutral language, which is better, because we have quite many translations in. "	nAnswer
1607	7605529	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/368e127e53f7dfe517b96f7fb1b365b3ef1c77a3 for binaries and test log. "	nAnswer
1607	7715905	"Can we merge this without the version for now? Just add base metadata for this pull, and do the scripting stuff in a later pull.  "	Reject
1607	7720222	I can comment out the version stuff in the .rc file and remove the header for now. But to not forget about this I'll re-open a pull after the basic one is in okay? 	Clarify
1607	7720614	"Last update removed all version stuff (for now), see the screenshot in the first posting. "	Statement
1607	7722863	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4b94f4e0ed38a95a3e2c3e80258fe73b88c3826c for binaries and test log. "	nAnswer
1607	7824505	ACK 	Clarify
1606	7040439	ACK 	Clarify
1605	7032148	"Tried this with p2pool and P2pool as labels for an address, the new sort is p2pool -> P2pool and as such this seems to work and ACK! "	Other
1605	7053680	ACK 	Clarify
1603	8998304	"As @sipa has now a pull, which removes IMPLEMENT_RANDOMIZE_STACK(), I'll close this. "	Clarify
1602	7019556	Can you upload your debug.log somewhere? 	ynQuestion
1602	7020141	debug.log: http://mariosal.logimus.com/debug.log 	System
1602	7041769	If it helps: Sometimes I force quited it while it was starting. I also had erased all the passwords from Keychain Access. 	Clarify
1602	7056953	"Can't help in deep here, but in general it's a bad idea to simply kill processes if this is Bitcoin or any other application. "	nAnswer
1602	7059382	"For the time being I backuped ~/Library/Application Support/Bitcoin/, deleted the original and redownloaded Bitcoin. It seems to work fine now. "	Statement
1602	7070070	Closing; we already know we need to do a better job of recovering from sudden shutdowns. 	Clarify
1601	7018440	"I'm not sure, if I understand the problem, how would (no label), A, Z, a and z be sorted insensitive ^^? "	nAnswer
1601	7022757	"currently, upper case letters are given precedence over lower case letters, which makes no sense, because when sorting from a->z, a label such as ""Orange"" will come before label ""apple"", just because it's capitalized. It makes more sense to sort by incasesensitively first, then sort by caps. "	Other
1601	7027178	"I'm not sure if that is even possible, you can sort ascending and descending, which IMHO seems to always prefer uppercase letters.  <pre> Qt::AscendingOrder: The items are sorted ascending e.g. starts with 'AAA' ends with 'ZZZ' in Latin-1 locales Qt::DescendingOrder: The items are sorted descending "	Clarify
1601	7027779	"Agreed. Seems we're not the first to need this, there is a property sortCaseSensitivity on the QSortFilterProxyModel:  http://doc.qt.nokia.com/4.7-snapshot/qsortfilterproxymodel.html#sortCaseSensitivity-prop "	nAnswer
1601	7030836	Please help test #1605 	Other
1601	7057516	Merged 	Statement
1600	7013708	Which version? AFAIK this was fixed a while ago. 	Other
1600	7013748	i'm using 0.6.3 on windows and i can still replicate it. 	Statement
1600	7013852	"Ok, it will be fixed in 0.7.0 then. I've just tested with master and it works as expected.  "	Statement
1599	7070252	"See http://doc.gnu-darwin.org/am_misc/dbsizes.html  Short answer: blkindex.dat will eventually break if it gets bigger than the underlying filesystem supports.  I would vote for ""Don't run a full bitcoin node on a FAT32 filesystem"", along with a tiny bit of code to warn the user if they try to do th"	Clarify
1599	7399231	"BDB currently managed blkindex.dat, and I suppose it is as good as handling large files as the underlying OS and filesystem are. I wouldn't worry about this, especially since we're working on several things that will change this radically anyway. "	Clarify
1599	11930239	"Seems obsolete with the change over to LevelDB, so closing it. "	Statement
1598	6994174	"I actually uncommented that line yesterday while testing something, and I wasn't even aware we had a block.print() function until I saw it conveniently in the code I was looking at... "	Clarify
1598	6994405	"A dev is free to close this, when you want to keep it. At least such a pull can lead to think again over certain parts in the code and that's also positive IMHO :). "	Clarify
1598	7013827	"I don't care about removing this. Let's just keep it if it is useful sometimes.  BTW this is not the traditional meaning of ""dead code"". That term usually applies to code that is never executed, not comments. "	Reject
1598	7017394	Understood! 	Emphasis
1596	7027987	Shouldn't the absolute path not be hardcoded in the makefile in the first place?  	Statement
1596	7053719	Pulled. Fixing the hard-coding can be done is a separate pull if needed.  	Statement
1594	6981376	"I don't think we should be making this many changes just for the testnet.   The testnet is just for testing, and it is supposed to behave just like the mainnet (at a much lower level than the UI), so there should be as little special casing as possible.  "	Clarify
1594	6982196	"@laanwj Alright, but then testnet3 will not catch-up as long as testnet2 our node connects to them.  Anything else in here that you think is merge-worthy? I'm fine with removing the testnet3 check but think the other small things are nice to have. "	Clarify
1594	7028471	"Yes, apart from the nXXX and strXXX variable convention that you're trying to sneak in :p, the other changes are OK with me. "	nAnswer
1594	7028954	"I'll update this to be mergable ... you ""catched"" me again with that var names, heh ;)? But that's fine. "	Clarify
1594	7034292	"Updated to ""only"" be a small function update ;). I guess if we don't plan to push a fix for #1588 I'll just close it. "	Clarify
1594	7078898	It would be nice to fix the testnet3 bug. But it might be fixed automatically when everyone is running 0.7.x. 	Clarify
1594	7078946	"@burger2 Yes, when more nodes are running 0.7.x everything will be fine again. "	Other
1594	7080006	"If it ought to be fixed, it is on a deeper level than the ui, and not by special casing the testnet. Remember that the testnet is there to test how the client behaves in circumstances that are possible but unlikely on the main net. Special casing for testnet could effectively cover up problems. "	Clarify
1594	7115036	@laanwj I had a talk with sipa about the underlying issue a few days ago and you are right of course. That's why the testnet3 casing is gone from this pull ;). 	Clarify
1594	7272472	"As this pull is now unrelated to testnet3, anything more I can do here? "	Emphasis
1592	6956208	"Mind that normal users don't have a clue what ""Qt"" is. If you want to give it a name, it's the ""Satoshi"" client.  "	Reject
1592	6956274	"Well I have the impression Bitcoin-Qt is a widely accepted name: https://en.bitcoin.it/wiki/Bitcoin-Qt  We then should define how we want a CLIENT_NAME_QT to be and how we use this one definition all over the Qt version, right?  Edit: This should be used in the Window title, about and so on... curre"	Clarify
1592	6956364	"It's a well-accepted name in developer circles, and it's fine for things such as executable names and internal identifiers. But I'm doubtful about putting it in the interface.  I vote for keeping the title as it is, we're the reference client so we don't have to change the title to distinguish ourse"	Clarify
1592	6956436	"Perhaps it's easier to keep it, but it's inconsequent and we are more than a wallet IMHO. We have Help->About <b>Bitcoin-Qt</b> and the popping up dialogs title is <b>About Bitcoin</b>. I would love to see some better strings for all of this in our reference client. But no ACK or suggestions means i"	Clarify
1592	6957331	"@laanwj I have thought about it a little more and I have some suggestions:  1. Rename Window title to ``Bitcoin-Qt - Wallet`` -> Bitcoin-Qt is the GUI to Bitcoin and this keeps Wallet but separated by ""-"" to ensure users don't think the client is called ""Bitcoin Wallet"". 2. Rename ``About Bitcoin-Qt"	Clarify
1592	6957466	"Yes, good proposal, except for the Qt in the title.  Qt in the about box/menu is fine, people will look there to find detailed version information.  Also note that in the future we'll have the possibility of multiple wallet windows open, as multi-wallet support is introduced. So it's good to keep th"	Clarify
1591	6955482	ACK 	Clarify
1590	6943969	Does this include the improvements in #1240? 	ynQuestion
1590	6951407	"@luke-jr : no, it doesn't include anything from #1240.  The steps towards better fee handling, as I see them, are:  1) Get miners to prefer including higher fee-per-kb transactions in their blocks.  That's what this pull request does. 2) Once a significant number of miners are doing that, modify the"	Clarify
1590	6951459	"#1240 does both 1 and 3, and is well-tested... "	yAnswer
1590	7239641	Reworked a little bit after getting some feedback from the big mining pools (added options -maxblocksize and -maxfreesize).  @luke-jr : I spent most of today looking carefully at how your proposed priority mechanism (the age*weight1 + fee*weight2 formula) and this one actually behave with the transa	Clarify
1590	7239694	"How can I, with this version, prioritize by fee alone (only using age when fee is identical) and still include as many free transactions as possible? "	Clarify
1590	7240839	"@luke-jr : you can't. Prioritizing by fee alone is too easy to game (spammer includes a 1-satoshi fee with all their transactions and crowds out all the zero-fee transactions).  Sorting by significantly-greater-than-zero-fee first, and then filling up to -maxblocksize with free transactions would al"	Clarify
1590	7251081	"@luke-jr : I think we could safely get the behavior you want by introducing another parameter: lets call it -blockminsize.  The rules would then be: Up to -blockprioritysize, insert transactions based on priority. Then insert as many fee-paying transactions as will fit, to a max of -blockmaxsize. If"	Clarify
1590	7256552	"Better to have undocumented options, than not have them at all because they're too hard to document. IMO. "	Statement
1590	7260018	"Implemented -blockminsize, and cleaned up the implementation (use std::heap for the priority queue).  Behavior with default values on the network right now looks reasonable; blocks have a dozen or so high-priority transactions, then are filled with fee-paying transactions. Blocks created are between"	Clarify
1590	7285025	ACK 	Clarify
1589	6936301	"Shouldn't you lock all accesses of the proxy settings, not only in the UI code?  Also, where is `cs_proxysettings` defined? "	whQuestion
1589	6936502	"@laanwj The bug report made me think the problem needs fixing only in the optionsmodel ... I'm not sure here. The definition was missing in the pull, it's there now. "	nAnswer
1589	6936564	You need a LOCK around every place where the data structure you want to protect is accessed. Defining the critical section locally in a function makes no sense.  	nAnswer
1589	6936676	"I saw this in the code somewhere else, feeling a little dumb now. I don't want to fiddle around further!  Can we lock ``proxyInfo`` and ``nameproxyInfo`` in ``SetProxy()`` and ``SetNameProxy()``? Where should the CCriticalSection be placed? Or is there one we can re-use? "	Clarify
1589	6947364	"As this seems not matured, I'll close this for now. Any help here is greatly appreciated :). "	nAnswer
1589	6951398	"I recommend you read up a bit on parallel programming and synchronization primitives (especially mutexes, in this case), it really helps to know the theory here and it's pretty interesting in any case. "	Clarify
1589	6955390	"Indeed, I'll take a quick tour and try again afterwards ^^. "	nAnswer
1588	6936840	At the moment there are  8150 if you have that many or more you are fully synced.  The gui is telling you otherwise because its stupid. Fix it. :) 	Clarify
1588	6949888	"I will ^^ well it will be a workaround :), stay tuned. "	Statement
1588	7034301	No fix planned! 	Reject
1586	7433591	"@gmaxwell and I are definitely interested in this, at least.  Will keep this pull request open.  A rebase would be nice, if you have time. "	Clarify
1586	7683650	"Unfortunately, it seems p2p connections are handled synchronously, so everything this does to rush out the relaying is for naught. The only simple way I can see to refactor this to be asynchronous would be either to use coroutines (which Boost won't have until 2013) or one thread per command/connect"	Clarify
1586	7683967	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4e54ea804ccdd2223e622497f0d46cceb27b9d22 for binaries and test log. "	nAnswer
1586	21292656	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/4e54ea804ccdd2223e622497f0d46cceb27b9d22 for test log.  This pull does not merge cleanly onto current master This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test p"	Clarify
1586	23221223	"Closing - timeout.  Interesting proposal, needs more work and dev momentum. "	Other
1585	7028152	"This is really inconsequential. I think this list syntax was auto-generated by Qt creator, no need to change it.  "	nAnswer
1585	7028919	"I looked into some .pro files from the Qt examples, but you are free to close this (as always, when pulls are not needed / have no real value in the end). "	Clarify
1585	7030169	"Ok, closing this "	Statement
1582	6905125	ACK  Edit: I created a pull that's based on your changes here. 	Statement
1580	6904466	"Seems all location tags e.g. ``<location filename=""../forms/addressbookpage.ui"" line=""14""/>`` are removed, you seem to have changed the default lupdate options, was this intended?  I'm interested which full lupdate command-line was used? "	Other
1580	6904515	"I've used `lupdate -no-obsolete -locations none`. By removing the location information, this will result in smaller diffs in the future.  Hopefully it has no harmful side effects, I'm pretty sure that transifex doesn't use the source code location. "	nAnswer
1580	6904570	"That's a good thing in the end, can you also update the translation-process doc to reflect this change :)? "	nAnswer
1580	6904645	"Yeah, I guess that needs to be updated badly. There is no command line in there at all. Also not that we use -no-obsolete, and no mention of running `share/qt/extract_strings_qt.py`.  "	nAnswer
1579	6901983	"I recently took a look at Boost 1.50, which was released a few days ago ... it seems they took a different approach to fix this. See: http://www.boost.org/doc/libs/1_50_0/doc/html/interprocess/acknowledgements_notes.html#interprocess.acknowledgements_notes.release_notes.release_notes_boost_1_50_00  "	nAnswer
1579	6903202	"Yeah, getting rid of the monkey patch is even better.  "	yAnswer
1579	8757063	"Closing this, boost 1.50 is now used  "	Statement
1578	6895662	"CScript::GetSigOpCount doesn't count opcodes inside serialization, and bitcoind always serializes data in scriptSig, so this should be a non-issue in practice. "	Statement
1578	6895789	"Ah, yes, you are right, stock bitcoind will not generate invalid blocks. Still...its an interesting issue for any miners that don't serialize. "	Reject
1577	6962057	checkpoints_def.cpp needs some newlines-- see http://stackoverflow.com/questions/10519738/source-line-length-limit  And would it be better to NOT check in the full checkpoints_def.cpp to git?  gitian builders could generate it themselves or download a copy (using github 'download a file' feature may	Clarify
1577	6962966	"Oops, yea Ill add some \n, I had previously dropped them because of the increase in file size...  Gitian builders are required to have a checkpoints_def.cpp in their inputs, so they have to compile their own in anyway.  Its only checked into git so that people who git clone && cd src && make can con"	Clarify
1577	7023381	"New version: ""\n""s in checkpoints_def.cpp Default checkpoints_def.cpp is now empty with a #warning BIP30 checkpoints are now in checkpoints.cpp using full hashes. "	Other
1577	7030426	"So, when doing own builds on Windows I have to use ``-saveblockcheckpointfileto`` to generate a new ``checkpoints_def.cpp``? If this is the case wouldn't it be nicer if I don't need to specify that filename and even as default src\ is used :)? "	Clarify
1577	7036057	"If you are running bitcoin-qt, the output would be src/checkpoints_def.cpp, or if you are running it on windows, it would be ../src/checkpoints_def.cpp, or if you are running bitcoin it would be checkpoints_def.cpp...I dont really feel like doing some #ifdefs there... "	Clarify
1577	7053920	"Not loving this:  If I get rid of the compile #warnings, then I get a dirty tree, and I know sooner or later I'll accidentally commit checkpoints_def.cpp.  It will be considered a dirty git tree during gitian building, yes?  That will screw up the auto-version-determination code...  Also, with a gen"	Clarify
1576	7399278	"Since 0.6, you can either use - or -- versions.  That said, I'd like to see a centralized option handling be created that is able to detect unknown options and complain. "	Clarify
1576	7419745	@sipa ACK to that suggestion! 	Emphasis
1576	7420445	"+1.  Closing this issue, as I'm not sure it's relevant (if it is please reopen). "	Statement
1575	6880921	"If this works very cool, currently preparing a test!  One thing (unrelated to the problem), could you harmonize the order in ``checkBalanceChanged()`` and ``updateTransaction()`` when the emit is called. Either first update the vars and then emit or first emit the signal and then update the vars. I "	Clarify
1575	6899554	"Changed the order. It indeed makes sense to first update the variables and then emit the signal, so that calls to getXXX in the signal handler return the new value. "	nAnswer
1575	6901860	"I currently can't verify as my testnet coins are immature, so I can't empty my wallet -_-. "	Reject
1575	6960652	"I made a test on testnet, which was succesfull a day ago and a few seconds ago on a mainnet wallet, which also works like expected. Amounts get cleanly updated.  ACK "	Clarify
1574	6873368	"This is wrong. `:` means AND, not OR.  "	Statement
1574	6873562	"There is no OR afaik. Is there any use for the code, if the first check is false (means we are on Windows) but we set USE_BUILD_INFO=1? If not it still should be correct.  At least the current ``||`` is wrong either as it tries to run the code, when compiling on Windows ;). "	Clarify
1574	6873659	"It means ""Not on windows OR USE_BUILD_INFO=1"". We use USE_BUILD_INFO in the gitian build.  If you replace it with ""Not on windows AND USE_BUILD_INFO=1"" you change the meaning completely. For non-windows platforms you don't have to set USE_BUILD_INFO=1 but it's default.  "	Reject
1574	6873672	"`There is also the | operator to act like a logical OR operator, joining together a number of conditions, and requiring only one of them to be true.` http://doc.qt.nokia.com/4.7-snapshot/qmake-advanced-usage.html  "	Clarify
1574	6873908	"What am I doing ... I read the exact same document ^^. Will update to use the ``|`` operator, which is THE fix how it should be :).  Edit: Updated! "	Clarify
1574	6899049	@sipa Can you take a look at this and comment :)? 	ynQuestion
1574	6899642	"Have you tested all the cases? At least both windows ones, with and without USE_BUILD_INFO? "	Continuer
1574	6899770	tested on Windows 7: !windows with USE_BUILD_INFO=1 set -> Regenerating src/build.h !windows with USE_BUILD_INFO=0 set -> (no message) windows with USE_BUILD_INFO=1 set -> Regenerating src/build.h windows with USE_BUILD_INFO=0 set -> Regenerating src/build.h 	Other
1574	6899895	"Seems the wrong way around, it should be:      !windows with USE_BUILD_INFO=1 set -> Regenerating src/build.h     !windows with USE_BUILD_INFO=0 set (or no USE_BUILD_INFO)  -> Regenerating src/build.h     windows with USE_BUILD_INFO=1 set -> Regenerating src/build.h     windows with USE_BUILD_INFO=0"	nAnswer
1574	6901672	"I'll remove the message, just helps debugging currently :). -> removed  ``!windows`` on Windows 7 == false, so: <pre> false OR USE_BUILD_INFO=1 ->Regenerating src/build.h false OR USE_BUILD_INFO=0 (or no USE_BUILD_INFO) -> (no message) </pre> ``windows`` on Windows 7 == true, so: <pre> true  OR USE_"	Other
1574	6903562	"Ok, seems like a misunderstanding then, the logic is right. I've tested on Linux and both with USE_BUILD_INFO=0 and USE_BUILD_INFO=1 the build.h instructions are added. As expected.  ACK  "	Emphasis
1573	6867315	"It seems to work fine right now. Maybe WINDOWS is general windows, and WIN32 is 32 bit apecific? "	Other
1573	6874018	"http://stackoverflow.com/questions/356666/identifier-for-win64-configuration-in-qmake  Strange, so win64 is win32 too according to qmake.  "	Statement
1573	6874055	And I don't see windows mentioned over there in the posting. 	Statement
1573	8998337	"Alright, no more ``mac`` occurances are in the pro-file now. Next thing I'd like to do is switch all ``windows`` to ``win32`` and as we now have the pull tester this should be easy to verify it breaks nothing :). "	Clarify
1573	11930216	Should be fixed by #2109. 	Clarify
1573	12728333	"Resolved, so closing this. "	Statement
1572	6874217	ACK 	Clarify
1572	6935357	"Rebased without further code changes, because I based #1589 on this! "	Emphasis
1571	7030145	The last commits ensures we can easily handle an extended networking page (with additional QValidatedLineEdit fields) in ``eventFilter()`` without duplicating much UI element code. 	Clarify
1571	7153130	@laanwj I would like to merge that last commit after you took a look. 	Clarify
1570	6832914	"0.0128772 - 0.001 = 0.0118772  > 0.0113772.  By lowering it more than you needed to you left an input out, making the transaction smaller... thus needing less fee. I don't see any way of solving that directly.  What I think would help would be options to ""take any fee out of the amount being sent"" w"	Clarify
1570	6834082	"At least a ""send all and subtract the Tx fee""-option should be not that confusing in terms of UX as it's rather straight forward. I never looked at that part of the code, but perhaps that get's one of my next ""targets"". "	Clarify
1570	6834933	"@Diapolo Perhaps just a third option on the fee question?  ""yes, no, take it out of the amount being sent"" ?  "	nAnswer
1570	6839151	"Or add a checkbox/combobox, otherwise you'd end up with a lot of text on a button.  In banking software this is generally posed as ""who pays the fee"", you or the recipient.  Maybe show a warning when the sender wants to pay the fee but there isn't enough balance to add the fee.  BTW what if the fee "	Clarify
1570	6846600	@laanwj  It could certainly happen if the implementation was simplistic and if the payment was small (0.05 or less) or the user manually set a high BTC/KB.  Good catch.  I'm not quite sure how to avoid that without further complexifying the UI. 	Clarify
1569	6833572	ACK 	Clarify
1568	6829622	"Agreed, it'd make sense to delay the unlocking until private key access is really needed. "	Clarify
1568	6834800	"The ""substract fee from sent amount"" button is a nice idea.. They talked little about it in #1570 "	Clarify
1568	26982522	"See #2724 for the  ""substract fee from sent amount""  issue. The main problem here should now be solved as sending has been reworked to show the fee in the confirmation window.  "	Clarify
1567	6829907	"Nice! ACK on the code.  May need testcases, though there are currently no testcases for CDataStream with SER_GETHASH at all. "	Clarify
1567	6892394	"ACK, though Im interested to see what kind of improvement you see by simply removing duplicated Hash calls. "	Clarify
1567	6896503	ACK 	Clarify
1567	6961748	ACK 	Clarify
1564	6810117	"Updated and removed the global and another #define, which also did not need to be there. "	nAnswer
1564	6810474	"There are some useful changes in here, by there appears to be a lot of diff here that has no purpose aside from just providing more diff? "	ynQuestion
1564	6823514	"Rebased, fixing merge conflict. "	Statement
1564	6827159	"In terms of the actual code changes in this pull, ACK...the rest of it...dont care, not up to me. "	Reject
1564	6829699	ACK 	Clarify
1564	6872868	"Rebased fixing a merge conflict and included some changes to the Mac exclusion code (needed after https://github.com/bitcoin/bitcoin/commit/4060d64fc9de6f11ae69f3961d4f1f0450dd8286), that needed the changed functions in it. "	nAnswer
1564	7000093	@laanwj Further problems / hints for this one? 	Other
1564	7027616	ACK (but needs rebase)  	Clarify
1564	7028606	Rebased (was needed after the thread names patch) and removed ipcThread() and ipcThread2() from the OSX #ifdef. 	Clarify
1563	6808417	It seems like that wasnt being used previously? 	whQuestion
1563	6809963	"@TheBlueMatt: It IS used, when compiling Bitcoin-Qt on Windows directly via the project file. Even if this was not used by us, it is beneficial to users trying to build from source as a clear indication for static Boost 1.49 libs. I myself rely this btw. ;). "	Clarify
1563	6810015	"ah, sorry, cross compiling sets it manually. "	Accept
1563	6896958	Can we do anything about the boost patch we require? 	whQuestion
1563	6898143	@luke-jr Supply a working dependency package and add a small comment? 	Continuer
1559	6783666	"Thanks for starting the real fix :), before I test it, can you rebase this to be on top of #1478? #1778 has an ACK, so to not have any merge conflicts this would be better (the real changes are rather small). "	Clarify
1559	6784050	Code looks good. Haven't tested yet. 	Reject
1559	6784572	@Diapolo - I had already made those same changes :) 	Clarify
1559	6798536	Good idea to only start the timer when there is immature or unconfirmed balance!  	Clarify
1559	6822383	ACK 	Clarify
1558	7739469	Just saw this one ... where is the fix to this issue to be found ;)? 	Clarify
1558	7997481	Fixed in #1565. 	System
1557	6767291	"Unnecessary, possible with QMAKE_CXX/QMAKE_LFLAGS and friends. "	Statement
1556	7075590	"This is not a problem when using GCC 4.7, but it IS one with GCC 4.4 (the compiler shipping with the current Qt SDK on Windows). "	nAnswer
1556	8763019	"@sipa I'm not sure if this needs fixing, but I dunno how anyway. If you consider this to be a non-issue just close it! "	nAnswer
1556	12728387	This warning doesn't happen with recent MinGW version. @sipa Should this be fixed and if no you are free to close this! 	Reject
1556	17589800	@sipa Another ping... trying to get some things closed or looked at ^^. 	Clarify
1556	28303040	Closing as it doesn't happen with recent mingw. 	Reject
1554	6752753	"Added new commit, to eliminate a dup GetHash in mempool code "	Statement
1554	6768564	"While you are taking commits out of #1486 that apply cleanly to master, you can try: 3298e89b38a90c9bcdec32ac939c0e6ec5fcea14, 9ad2f5788e80bebad957e89bd7686706ba28dd53 and if you want to be a bit more adventurous, 80e3ac4168da89cf4a78d3974e00e314e9cb0883. "	Statement
1554	6783785	ACK 	Clarify
1551	6728608	"Interesting. I definitely want shared locks at some point in the future.  You seem to implement some own implementation for a recursive shared lock? That certainly needs a lot of testing, as it can easily have subtle bugs. Maybe it is easier to clean up the code so that we don't need recursive locki"	Clarify
1551	6735366	"Sadly, boost only provides recursive locking support in boost::recursive_mutex, not in boost::shared_mutex.  Thus I had to add recursive checking to CCriticalSection.  In terms of making bitcoin not need recursive locks...that would get very ugly.  Bitcoin is such a mess as it is, trying to track do"	Clarify
1551	7613114	"Automatic sanity-testing: FAILED, see http://jenkins.bluematt.me/pull-tester/d3d8bf6f924678961c5f8200757f1deaa8630981 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them inco"	Clarify
1551	8284685	"Recommend closing, for now.  No ACKs gathered, and it seems to me like a _valid_ tool for our toolbox, without an immediate demonstrated need.  Our locks do not seem highly contended, which seems to bump this quite down the priority scale down to ""theoretically useful."" "	nAnswer
1551	8284759	"@jgarzik Not contended? We have a cs_main that blocks anything useful being done in parallel. Since many tasks only need read-only access to data structures, shared locks could increase parallellism massively.  That said, I still disagree with an implementation that releases a lock when trying to go"	Clarify
1551	8285175	ACK on lack of ACKs 	Statement
1551	8748568	"FWIW, the new tests in this seem to fail occasionally. "	Statement
1551	8748698	"Yea, it didnt work 100%, but I never got around to debugging it, and it was never a high priority (no interest anyway...) "	nAnswer
1551	8762141	"This is a nice idea and will allow for some extra concurrency, but it makes reasoning in the current mess that is bitcoin locking even harder.  I agree with sipa that we first need to get rid of recursive locks (and in the meantime, get getter insight into the current mess), before introducing  more"	Clarify
1549	6718191	"addnode RPC: cool.  getaddednodeinfo : An Object with duplicated keys (""connectedto"") is going to cause problems in some languages. And I don't understand the multiple connectedto's-- if I addnode a node, I might get more than one connection to it?  "	Clarify
1549	6718551	"Changed to array.  Sure, there are a number of scenarios where you may get more than one connection to a given -addnode (when the -addnode is dns and maps to multiple addresses).  -addnode itself wont make more than one connection, but you may get an incoming connection, or happen to connect to anot"	Clarify
1549	6721252	"Hm. I wonder if it should work instead like this:  getaddednodeinfo  ->  ""addednode"": [ ""dnsseed.bluematt.me"", ""foobarbaz.onion"" ]  ^ what you actually have addnoded  getaddednodeinfo  dnsseed.bluematt.me ->  ""address"" : [ ""95.154.99.150:8333"", ""...""] ^ how they are currently being resolved by bitco"	Clarify
1549	6722763	"I wonder whether addnode is the right thing to expose - it is intended to be used for stable trusted nodes you know and is something more of a config setting. For an RPC, it may be more useful to have a one-shot command ""connect now to X, no matter what"".  Eventually, I think the entire network conf"	Clarify
1549	6722834	"@gmaxwell In terms of listing the full list of addresses the added node resolves to...yes, that would be better.  In terms of making the user make two/three calls to get at the info on whether or not a given added node is connected, I entirely disagree here.  I'll add a in/out/not connected flag.  @"	Clarify
1549	6723029	"@TheBlueMatt  Yea, I actually wrote the tristate first and then thought some people might disagree with the duplication.  I'm pretty sure we should have commands to edit addnode on running nodes. I'm tired of restarting my p2pool bitcoind's just to dork around with the addnode settings.  Perhaps the"	Clarify
1549	6751597	addnode ACK  	Clarify
1549	6898477	This needs rebasing. 	Statement
1549	12611079	Test Plan (can someone run through this to make the powers-that-be happy) : Replace <IP Address> with an IP of a bitcoin node which you can kill/restart at will. Replace <DNS Name> with a dns name which has a very low TTL which you can change to point to a different IP during testing without waiting	Other
1549	12634517	"The powers that be will kick in a BTC or two bounty for somebody to execute the test plan (and save their debug.logs somewhere, so we really know they ran the test).  Recruiting a tester from the #bitcoin IRC channel or from https://bitcointalk.org/index.php?board=12.0  seems to work. "	Clarify
1549	12751499	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f2bd6c28e6bddd75d56d580c28f45d2a8be065ab for binaries and test log. "	nAnswer
1549	12761157	Ran the test as BlueMatt suggested. Everything worked correctly. A full report and relevant debug.log files are at  http://download.wpsoftware.net/code/bitcoin-1549/  	Clarify
1549	12798305	"Thanks @apoelstra , 1 BTC ""thanks for testing"" tip sent.  ACK on code changes, pulling. "	Clarify
1548	6709740	ACK 	Clarify
1548	6714178	"Thanks for fixing this, I tried your patch and all related warnings are gone now and the client starts fine, so ACK. "	Clarify
1547	6699313	for (int nHost = 1; nHost <= 2; nHost++) if (nHost == 1) { pszGet= pszKeyword= } else if (nHost == 2) { pszGet =  pszKeyword =  }  Value analysis in your compiler is obviously deficient. Is that an old version of GCC (4.2?) or what?  	Other
1547	6699575	"> Value analysis in your compiler is obviously deficient. Is that an old version of GCC (4.2?) or what?  Instead of upgrading, FreeBSD seems to like to patch contributed source like gcc, ssh, ssl, bind, etc that is included in the base. So I've no idea what this one really contains. You'd have to se"	Clarify
1547	8757746	Investigation by gmaxwell shows these warnings are false positives -> closing this  	Other
1546	6700362	FindNode() ensures we don't outbound connect to the same address we have inbound even without the group limitation.  	Clarify
1546	6709239	ACK 	Clarify
1546	6709791	ACK 	Clarify
1546	6710193	ACK  	Clarify
1545	6690378	ACK 	Clarify
1545	6690427	Has someone tried syncing a node connect=ed to a peer running this?  	Other
1545	6693765	"Yes, works. "	yAnswer
1543	6693533	"ACK, I'm fine with that change, as long as the main client window is larger than the address selection window, which is the case. "	Clarify
1543	6933820	Seems the dialog was already enlarged to width 691 by someone else. Needs rebase if it needs to be still wider. 	Clarify
1543	6934543	"I know that @cardpuncher played around with the width and the one in this pull is the one that works, even for french ^^. But yea, this one needs a rebase then! "	Clarify
1543	7077309	@cardpuncher Can you please rebase this?  <pre> git fetch upstream git rebase upstream git push ... </pre> 	Other
1542	6685643	![new splash screen graphic V1](http://i50.tinypic.com/2i8zoli.jpg) ![new splash screen graphic V2](http://i50.tinypic.com/o6bev4.jpg) ![new splash screen graphic V3](http://i45.tinypic.com/20iza75.jpg) 	Other
1542	6829698	"As our aim is to get rid of it, I don't think we should change the splash image, it will only focus people more on it, probably resulting in useless bikeshedding discussing as to which one was better / worse.  "	Clarify
1542	6830205	"You are most likely right, so closed! "	Emphasis
1541	6685444	"There are more warnings in master than just that, but you can see the actual warnings at http://jenkins.bluematt.me/job/Bitcoin/378/console "	Emphasis
1541	6685512	"That are the only warnings left when compiling my local build, so these are the ones I could report :). Shouldn't be too hard to fix, but iterators and that stuff is not mine. "	Clarify
1540	6684077	"ACK, comment changes only "	nAnswer
1538	6707530	"I like sendbytes as the total queued for send instead of sent on wire, but I'd prefer recvbytes as the bytes received in total, instead of the bytes already processed, also, Id prefer to include bytes that don't fail things like missing the message start magic. "	Clarify
1538	7433404	"Didn't get much interest, but I might recreate it at a later date.  Closing for now. "	Statement
1536	6675490	"ACK -- the economics seem to make sense, but I am interested in comments from others  "	Clarify
1536	6676585	Here's a sample attack: http://abe.liteco.in/tx/48878749fa2bbad375cc5aa8332aabb262c0a98259e85bbdb20f42ab4fa38966  Only cost him 1 LTC to bloat the blockchain by 50kb 	Clarify
1536	6676821	"Yes, once you get a lot of dust spam, select coins can take forever. For Litecoin, I had to implement a workaround for people to ignore the dustspam and make them not count towards coins that they own. It was a huge pain. "	Clarify
1536	6709420	"On further consideration: This will break the faucet, it will also remove an incentive to use sendmany.   "	nAnswer
1536	6711949	"As Bitcoin's value increases, you will probably need to reduce the value in which a output is considered spam. For Litecoin, less than 0.01 LTC is pretty much worthless. Maybe for Bitcoin, we should change it so that we add a fee for any output less than 0.0001 BTC. "	Clarify
1536	6716066	"This doesn't feel like the right fix to me.  Fixing the coin selection algorithm so it works quickly with wallets containing gazillions of tiny transactions is part of the solution.  Something simple like ""If there are more than X unspent outputs, don't use the fancy knapsack-problem-solver, just us"	Clarify
1536	6716206	The coin selection fix does not fix the problem that someone can bloat the blockchain with only a small fee like this: http://abe.liteco.in/tx/48878749fa2bbad375cc5aa8332aabb262c0a98259e85bbdb20f42ab4fa38966 	nAnswer
1536	6716717	"Right, see the gist for the other part of what I think would be a better fix.  For a very-low-transaction-volume chain like LiteCoin, I think the right fix would involve miners specifying a small maximum block size (say 10K, enough space for 40 or so regular-sized transactions) and a high ""forgo thi"	Clarify
1536	7618328	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9b11e48d5a03662333c11c046017f9394b127cd5 for binaries and test log. "	nAnswer
1536	7695055	"Remember there is a previously reported attack involving one connection sending txs with tiny amounts to increase the GLOBAL limit, thus preventing the other connections from sending free transactions. It's necessary to review how this change may affect that attack, and if it can make it worse. I su"	nAnswer
1536	8268813	It sounds like consensus is against merging this specific fix at this time. 	Clarify
1534	6666192	"Reviewing/testing changes is our bottleneck.  There are two problems with ""I'll just encapsulate this..."" changes:  1. Core developers don't have time to review an avalanche of little changes. 2. You break other patches.  The last release was a ""code cleanup"" release, that would have been a good tim"	Clarify
1534	6666345	"Not wasting your time is why I only changed one thing in the commit to close off the problem before it gets any larger than it already is. I made it easy to review intentionally.  Present Value is the standard accepted term for the idea described by the variable ""nValue.""  http://en.wikipedia.org/wi"	Clarify
1534	6670831	"Accessor methods are generally named ""GetFoo/SetFoo"", although it's not universally agreed that accessor methods and making every variable private is always the right thing to do.  For a lightweight class like CTxOut, I don't see a lot of benefit to Get/Set methods.  RE: ""expressing motivation"" : I "	Clarify
1533	6659421	"Encapsulation seems correct, but typically we do not want to burden the bitcoin codebase with changes for a non-bitcoin experiment that has not happened yet, and may or may not be successful.  Typically you would want to fork the bitcoin code (very easy, with git), make your changes, perform your ex"	Clarify
1533	6665144	"agree with @jgarzik, for the same reasons.  "	Accept
1532	6658124	"Comment-only change, ACK "	nAnswer
1531	6649065	1) Shouldn't it be protocol_version and user_agent now? 2) What's with string times/bitfields? 	Other
1531	6649084	"As with #1510, the int64 fields are rendered as strings to avoid known big-int-handling bugs in the field. "	Reject
1531	6665165	"I don't like the int64 fields as strings; we already output time (int64) fields as Numbers in other parts of the RPC interface. If JSON libraries can't handle them, then the JSON libraries need to be fixed.  "	Clarify
1531	6675122	"Updated commit with new output: ``` [     {         ""addr"" : ""94.198.135.29:8333"",         ""services"" : ""1"",         ""last_send"" : 1340997595,         ""last_send_empty"" : 1340997598,         ""last_recv"" : 1340997584,         ""time_conn"" : 1340997577,         ""version"" : 60001,         ""subver"" : ""/S"	Other
1531	6676015	"All the other hex-encoded strings are fixed-width (zero padded).  For versions, it seems better to show: ```Javascript         ""protocol_version"" : 60001,         ""user_agent"" : [{""Satoshi"": ""0.6.2""}, ...], ``` "	Clarify
1531	6677135	"I think last_send_empty is not a very clear name. Maybe ""last attempted send"" ?  Not sure if it's a useful statistic in general, it's only useful to debug the network event loop code, imho. "	Clarify
1531	6677509	"Overall ACK, nit-picking:  ""01"" for services would make it more obviously hex-encoded (I agree hex-encoded is right for services).  naming convention for stuff output from RPC calls is wordsmushedtogether, not words_separated_by_underscores. And footime, not timefoo (I'm looking at the output of 'gr"	Clarify
1531	6678596	"Updated commit; new output:  ``` [     {         ""addr"" : ""46.147.8.78:8333"",         ""services"" : ""00000001"",         ""lastsend"" : 1341005008,         ""lastrecv"" : 1341005008,         ""conntime"" : 1341004942,         ""version"" : 40000,         ""subver"" : """",         ""inbound"" : false,         ""rele"	Other
1531	6681432	I like it.  	Statement
1529	6638932	ACK.  	Clarify
1528	6628138	Also posted this issue earlier - https://github.com/bitcoin/bitcoin/issues/1527 	Other
1528	6628323	"Sounds like a good idea, agreed. The current behavior is unreliable, if it is impossible to guarantee an unlocked wallet during a command. "	Clarify
1528	6628356	Closing as a dup of #1527. 	Statement
1527	22735885	Closing; in current git HEAD (and in 0.9) the last walletpassphrase called sets the deadline.  E.g.  walletpassphrase 10 seconds ... then 5 seconds later walletpassphrase 100 seconds : wallet will be locked after 100 seconds.  walletpassphrase 100 seconds ... then 5 seconds later  walletpassphrase 5	Clarify
1526	6618707	Does it stop being enforced if ver=2 falls below 75% majority later? 	Other
1526	6618762	"Does it stop being enforced:  yes, whether it is enforced or not depends on the previous 1,000 blocks.  If more than 250 of the past 1,000 (starting at the block before the block being considered) is nVersion=0 or 1, then the rule isn't enforced.  "	Clarify
1526	6620216	Is that intentional? Would there be any harm to having a point of no return? 	ynQuestion
1526	6639732	"RE: point of no return: I don't see a good reason to write code to do that, and it would be hard to test (would have to notice when we hit the point of no return and record that in the block database, I suppose, then read and pay attention to that database setting).  "	Clarify
1526	6708044	"If there isn't a point of no return the transition for this particular feature can never be removed. If there is, then once its hit after the next checkpoint has been set the code for counting the quorum for this could just be removed and replaced with a simple height comparison. "	nAnswer
1526	6713132	"As I read the code of commit 93fdc48, it does not do what I expect.  A version>1 block with invalid height is simply an invalid block, to be unconditionally rejected.  No need for supermajority check.  Nobody generates version>1 blocks right now (right?), so it should be fine to simply publish a BIP"	nAnswer
1526	6713232	"@jgarzik  Then I, Greifer Mc. Greifer,  mine a single invalid v2 block.  The super majority of nodes will happily extend it and continue the chain, the minority of upgraded nodes will reject it forever and ignore that chain. Nice split you've got there. "	Clarify
1526	6713309	"And perhaps half as importantly, that would be an abuse of the centralization in a single client to force a blockchain rule through like that. Besides, @sipa already was working on a proper ""block/transaction version rules"" BIP. "	Clarify
1526	6713757	"@gmaxwell highly unlikely, but no objection to doing it the current way  @luke-jr re-read, you missed the phrase ""publish a BIP"" "	nAnswer
1526	6713935	"@jgarzik Yes, I did. Sorry. "	Accept
1526	6715440	"RE: locking issues setting strMiscWarnings : before this pull, strMiscWarnings is set from exception handlers (a ""should never happen"" case) and AddTimeData(), which is called from ProcessMessage when a new node connects.  The new code is in ProcessBlock(), which is also called from ProcessMessage b"	Clarify
1526	6716937	What would be needed to create a split with the code as it currently is? 	Statement
1526	6717106	"@rebroad it can't make a split as it currently is, but because the v2 blocks are not _enforced_ as it is a malicious party who wants to create trouble by mining duplicate coinbases could do so by just choosing to mine v1 blocks. Basically the patch as is only protects against mistaken duplication by"	Clarify
1526	6717123	"As the pull request stands, the only way to get an orphan chain is:  + wait until 75% of the blocks created are nVersion=2 + some idiot creates/broadcasts a nVersion=2 block that does NOT have the height in the coinbase  25% of the network would build on idiot's block, the other 75% would reject tha"	Clarify
1526	6717194	@gavinandresen  but as soon as the 75% produces two blocks (or whatever is require to get ahead again) the 25% moves back.  (thus the distinction between a split and a orphan-stub: a split never heals)  	Clarify
1526	6717380	"@gavinandresen thanks, you answered the question I had intended to ask. "	Statement
1526	6717685	"@gmaxwell : I think of orphan-stubs as temporary splits, and use the term ""hard fork"" for permanent splits (but don't really care about vocabulary as long as we all understand each other).  Ok:  One issue remains with this:  should this pull include rules for eventually rejecting nVersion=1 blocks ?"	Clarify
1526	6717959	"Agree with what someone (@gmaxwell?) said on IRC, about stopping v1 acceptance:  don't make it a software rule that can ""flap"" (rule switches on and off and on and off).  Just pick a height, once you hit 5% or whatever threshold. "	Clarify
1526	6717967	ACK 	Clarify
1526	6718327	"I think we can add the ""reject v1 blocks"" rule later without bumping to version=3; since all the ""this generation"" nodes will enforce it so long as the majority remains over 75%, the only risk is someone making version=1 blocks having more than ""future v1-rejecting version"" *plus* this version combi"	Clarify
1526	6719888	"@jgarzik: once past 95% v2 blocks (assuming there's consensus on ""orphan the last 5% of miners who refuse to get with the program and upgrade"") there will be no flapping, because 95% of the network will reject v1 blocks past that point.  The release after that happens a checkpoint can be added and t"	Clarify
1526	6795288	"Added a commit with a ""reject nVersion=1 blocks when 95% of the last 1,000 blocks are nVersion=2"" -- the point of no return.  "	Clarify
1526	6795630	Code ACK  IMO this warrants a BIP  	Clarify
1526	6796145	"I ran my 'coinbase_integers.py' tool on the chain, and somebody is producing block.nVersion=1 blocks with blockheight-1 in their coinbases; see blocks 172036 or 174854 for example (coinbases start with PUSH 172035/174853). Interesting, but not a problem.  There are also some accidental ""looks like a"	Clarify
1526	6797307	"The most likely error scenario is probably a buggy miner creating a version=2, height=$ValidHeight+1 or height=$ValidHeight-1 block. "	nAnswer
1526	6797528	First draft of BIP text: https://gist.github.com/3058253 	Statement
1526	6801792	"This is a good rule change, and I only wish it was in all blocks already. It's such a pain to have different transactions with the same hash.  Does this mean sipa's rule change will be removed? This change seems to obselete that once network hashing majority is achieved.  About blocks that have a co"	Clarify
1526	6807375	"New URL for spec, with assigned BIP number: https://en.bitcoin.it/wiki/BIP_0034  "	nAnswer
1526	7437277	"Can this be amended to only pay attention to the last octet, just in case we end up using the first 3 for something else? "	Clarify
1526	7623925	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/fa174be9b58de7377b46416d3a040c979d27d7e2 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1526	7679161	"This should fix the test:  ```diff diff --git a/src/test/miner_tests.cpp b/src/test/miner_tests.cpp index c9981fb..8ffc9b4 100644 --- a/src/test/miner_tests.cpp +++ b/src/test/miner_tests.cpp @@ -62,6 +62,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)      std::vector<CTransaction*>txFirst;     "	Other
1526	7696680	"Note that this should be merged only after #936: there is software (p2pool?) which will create version==2 blocks without the height right now. #936 will workaround this problem by breaking compatibility with said application, and BIP22 explicitly requires clients understand and implement height-in-c"	Other
1526	7699453	@luke-jr forrestv does not agree 	Accept
1526	7880441	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d18f2fd9d6927b1a132c5e0094479cf44fc54aeb for binaries and test log. "	nAnswer
1525	6613760	"ACK changes  However, I think the gist link makes the hard fork process seem easier, more seamless and less damaging than it really is. "	Clarify
1524	6610813	Likely suspect:  https://github.com/bitcoin/bitcoin/pull/457#issuecomment-6385032  	System
1524	6621985	git bisect says the following commit is to blame:  fbf9df2ea32528c71b58160283b4eb2c52e30ccb is the first bad commit commit fbf9df2ea32528c71b58160283b4eb2c52e30ccb Author: Giel van Schijndel <me@mortis.eu> Date:   Sun May 20 20:27:53 2012 +0200      Use the QueueShutdown signal to stop accepting new	Other
1524	6645342	"Fixed, as of 5fa83965f22ae92f86de74104b621c2168d37698  "	Statement
1522	6569821	"Needs more information; Upgrading from what version to what version? Which OS? Do you have ""close to tray"" enabled? Isn't it simply shutting down?  "	Clarify
1522	6570013	"Yep, sorry about that. Didn't copy the top half of my issue.  OS X 10.7.4, upgrading from 0.6.2.2 to 0.6.3  Close to tray? "	nAnswer
1522	6570487	"Never mind, that option doesn't exist on MacOSX.   A problem with the dock icon on OSX has been solved something like a month ago:  https://github.com/bitcoin/bitcoin/commit/b06f9c1364ab70763ded9c0c7ba795c0da72aa7a  I'm not sure whether it is backported to 0.6.x, though.  "	nAnswer
1522	6968817	"I've had a look into this, and adding that code back in actually fixes the problem. "	nAnswer
1522	6981262	"But that brings back the problems in #1327 right? We really need someone to hack on bitcoin ui on the mac, currently it's mostly guess work. "	Clarify
1522	7151396	"Same problem here. i have to right-click at dock icon and select ""Show/Hide Bitcoin"" to bring the window back. "	Clarify
1522	7842817	Can anyone answer my question? Does re-adding that code bring back issue #1327?  	Other
1522	8182393	I have a feeling it does. Although that would probably be preferred over the gui dissapearing completely. Not all users would realise that they have to use show/hide to bring it back. Whereas they will more than likely click the dock icon more than once if the gui shows up and then dissapears. 	Clarify
1522	11577658	"I have this same problem on a linux box. Commenting out the ```#ifndef Q_OS_MAC``` in ```BitcoinGUI::createTrayIcon``` (and relative ```#endif```) fixes the issue for me, which suggests that macro is defined when it should _not_ be... "	Statement
1522	11577823	"Forget it, it still works after dropping the comments. There must be an issue with the dependency tracker which prevented my build to catch a recent fix "	Clarify
1522	11997845	"Any Mac dev, who can contribute here? "	ynQuestion
1522	12634187	Has this been fixed? 	whQuestion
1522	12634469	Works for me on OSX 10.8 using git HEAD.  Please open a new issue if it doesn't work for you when 0.8 is out.  	Clarify
1522	14684231	With the new version 0.8 the GUI disappears completely again. I have to restart bitcoin-qt to bring it back. OSX 10.8.2 on three different computers. Others on the forum reported the same issue: https://bitcointalk.org/index.php?topic=145184.msg1582293#msg1582293 	Clarify
1522	14702961	"I have observed this in OS X 10.7.5 as well, but to clarify:  the window is irretrievable only after I hit the window-close button. If I hit the window-minimize button, the window minimizes as expected and can be restored in the usual way. "	nAnswer
1522	14703336	Does this have to do with tray icon at all ? Do you have a tray icon ? 	ynQuestion
1522	14718151	"The closest equivalent to a system tray in Mac OS is the right-hand side of the menu bar. My Bitcoin-Qt does not put an icon in the menu bar.  I played with the window options ""Minimize to the tray instead of the taskbar"" and ""Minimize on close"" to see if they had any effect, but they do not.  Moreo"	Clarify
1522	14720495	"RE: working on doing builds:  yes, we need a Qt/OSX programmer.  My main machine is OSX, but I spend most of my time working on lower-level code, not GUI stuff.  "	nAnswer
1522	14762192	"Okay. I was just able to run one of my own builds, so you can consider me at least a rookie QA engineer for Mac. :smile_cat:   "	Emphasis
1522	14781115	Here would be one way to make a quickie fix.  In BitcoinGUI::closeEvent is this block:  ```c++      if(clientModel)      { #ifndef Q_OS_MAC // Ignored on Mac          if(!clientModel->getOptionsModel()->getMinimizeToTray() &&             !clientModel->getOptionsModel()->getMinimizeOnClose())        	Clarify
1522	15052723	"if I change       void BitcoinGUI::createTrayIcon()     {     #ifndef Q_OS_MAC     trayIcon = new QSystemTrayIcon(this);      trayIcon->setToolTip(tr(""Bitcoin client""));     trayIcon->setIcon(QIcon("":/icons/toolbar""));     trayIcon->show();     #endif  to      void BitcoinGUI::createTrayIcon()     {"	Clarify
1522	15068421	"For those watching at home, @Nerzahd moved `#ifndef Q_OS_MAC` down one line to keep `trayIcon = new QSystemTrayIcon(this);` from being excluded by the conditional.  (I had to diff the two to figure out what was going on.) :grin: "	Clarify
1522	15141663	I'm not sure why that patch helps on Mac really ^^. Can some Mac-capable dev enlighten me? 	nAnswer
1522	15143723	"You have a point. At least this way the call the call to `QSystemTrayIcon` will get compiled into the Mac version, but without the call to `trayIcon->show`, it may be useless. I have a Mac and can try this out (just not right this moment).  Wait, were you talking about @Nerzahd's patch or mine? "	Clarify
1522	15146968	"i'm not a developer but i think it has something to do with:      // Create system tray menu (or setup the dock menu) that late to prevent users from calling actions,     // while the client has not yet fully loaded     if(trayIcon)         createTrayIconMenu();  "	Clarify
1522	15147635	"createTrayIconMenu() on Mac should work without depending on trayIcon to be non-zero. Perhaps that is the problem why it works, when allowing ``trayIcon = new QSystemTrayIcon(this);`` on Mac.  Solution could be to call createTrayIconMenu() on Mac always. Can a Mac dev try this?  Edit: I created a pa"	Clarify
1521	6564057	"Maybe it was accidently manually closed, i'll try again.  "	Statement
1521	6570815	Anything in debug.log?  	ynQuestion
1519	6570868	"Great!  I see one mistake in the screenshot though: en (or generally, xx without xx_YY) should be simply English, not English - UnitedStates :)  "	Clarify
1519	6571931	"@laanwj I'm not sure how to fix your observation, as I pass ""en"" into QLocale and query ``.language()`` and ``.country()``. Perhaps UnitedStates is default here? As Germany is for de? "	Clarify
1519	6572147	"Yes, I know that's the behavior. But it's not correct. English is ""general"" English, without locale. You can see this problem with Persian - Iran, which is now duplicate in the list. I wonder if there is another way to take apart the xx_YY which doesn't have this problem (without reinventing the whe"	Clarify
1519	6572938	"We could check if there is a ""_"" in the source string and if not only use ``.language()``? Do you know the function to check for a certain char in a QString? "	Clarify
1519	6573504	QString::contains(str) -&gt; bool  	Emotion
1519	6576664	"@laanwj Thanks, it now does, what we want it to do. "	Statement
1519	6576777	ACK 	Clarify
1518	6684087	"There's another thing that might eventually be useful in the QR code dialog: showing the constructed bitcoin: URL (above the image?), so it can be copy/pasted into mails and such. "	Other
1518	6684357	"That is rather easy to achieve, are you ok with the code and changes thus far? I can integrate your suggestion here or create another pull on top ... just as you like. "	Reject
1518	6684542	"It was just a random idea, doesn't have to be in this pull.  Am I right that QRCodeDialog::setModel is never called? Did you test it? Looks like addressBookPage needs a setOptionsModel to pass on to QRCodeDialog. "	nAnswer
1518	6684656	"I'm working on your idea right now :). setModel() is unused, because I didn't know, how to get easy access to the options model :-/. Any hint / idea? "	Clarify
1518	6685247	"Updated: - add read-only QPlainTextEdit field to output generated URI  I chose an TextEdit to be able to use word-wrap and see the whole URI, drawback is, that I was unable to implement a working EventFilter to select all text without messing up other behaviour of the TextEdit field. A copy URI butt"	Clarify
1518	6693832	"Nice!   I'd add a setOptionsModel method (called from BitcoinGUI::setClientModel) to AddressBookPage, which stores the options model. Then when creating the QRCodeDialog you can pass it.  "	Clarify
1518	6694184	"@laanwj Thanks mate :). I'll update to integrate your suggestion and do this as seperate commit, so you can see easily what was changed. After your final ACK I can merge that commit, so we only have one if you want. "	Clarify
1518	6694843	Updated:  - add OptionsModel in AddressBookPage and use it in on_showQRCode_clicked() to pass it to QRCodeDialog  I verified this to work. 	Statement
1518	6799588	"@laanwj Same here, is it possible to get this into 0.7, before the RC phase? Any further things I need to fix, suggestions or such stuff? "	Clarify
1518	6800343	ACK 	Clarify
1518	6810430	"Rebased and merged both commits into one, no code changes. "	Reject
1516	6547584	The reason that the silent flag is there is because sometimes the .pro is run through multiple times (the system call is executed multiple times) so to prevent error spam. 	Clarify
1516	6548220	"I can revert it, but found it usefull to see all info displayed. I think you are the one that doesn't like silent errors :)? "	Statement
1516	6548732	"True, I don't like silent errors/warnings, but the problem is that everyone gets the warnings for all translations every time they build, even though they can't fix them (and if they can they need to do it in transifex anyway). So it was kind of noise.  "	Clarify
1516	6548904	Removed the noise again and only use it on my local build then :). 	Clarify
1516	6571147	ACK 	Clarify
1515	6533858	ACK 	Clarify
1515	6533968	Good idea. 	Statement
1515	6534067	Sounds good. 	Statement
1515	6547507	"Good idea.  I've only got a comment about the thread names: it makes sense to link them to thread names in in the enumeration in net.h (sockethandler, openconnections, messagehandler, miner, etc...) to be consistent and for easy debugging. Or add least add a comment in net.h by which name each of th"	Clarify
1515	6567343	"@laanwj I've tried to make the names look like those in the thread enumeration, unfortunately only 15 characters are available. So I've deviated from those names for some instances to improve readability. That being said I could add a copy of the thread names as comments to that enum. "	Clarify
1515	6636747	"Might add pthread_set_name_np for BSD.  I haven't checked, but it would be annoying if this erases the commandline parameters - I use a dummy -name=foo to discern between different bitcoinds in ps right now. "	Reject
1515	6685868	"@luke-jr If pthread_set_name_np is implemented similar to BSD's setprogname then it *will* modify the commandline parameters (that's how it does this: overwriting argv[0-n] memory).  It's manpage seems to suggest otherwise though. I can add the code easily enough, but I'm not even sure if my FreeBSD"	Clarify
1515	6685910	"@muggenhor I only use Linux, just came across the BSD variant looking at your pullreq. "	Clarify
1515	6685998	"@luke-jr Right, I've just confirmed that I can cross-compile an isolated call to pthread_set_name_np for FreeBSD 8.  I'll try dusting off my FreeBSD 8 box for a test run. "	Clarify
1515	6687122	"Right, my FreeBSD system doesn't even boot properly anymore. So I'll disable the FreeBSD code (but leave it in) so that it won't break on those systems but another developer (who *does* have FreeBSD/OpenBSD) can confirm that it *does* work and enable it. "	Clarify
1515	6834030	"In qtipcserver.cpp we have another thread afaik, any reason to not cover that one in this pull? "	nAnswer
1515	6835036	@Diapolo: that was just an oversight. Addressed in my last commit. 	Statement
1515	7023095	"Rebased again, still waiting to be merged... "	Statement
1514	6533218	why not use LDFLAGS? 	whQuestion
1514	6533583	"The reason was to prevent overriding LDFLAGS given on the command-line, but I've addressed this by using the same trick as for CXXFLAGS. "	Clarify
1514	6639001	ACK 	Clarify
1514	6765099	"Can you rebase and remove the merge commit? Also, ACK and can we get this merged so it doesn't sit around forever? Also, clang's lto is petty awesome with Bitcoin, I got these earlier today with bitcoin-qt: clang-lto: "" block index            6523ms"" gcc-lto: "" block index            8497ms"" For tha"	Clarify
1514	6829684	ACK 	Clarify
1514	7023085	"Rebased (again), and (still) ready for merge. "	Statement
1513	6787131	"Your blk0001.dat or blkindex.dat file got corrupted somehow (did you run out of disk space perhaps?).  To recover, backup your wallet.dat file, remove everything except for wallet.dat from the bitcoin data directory, and re-run.  Keeping this bug open, because it would be good to at least report a h"	Clarify
1513	6787470	Thanks Gavin.   This error has been happening to me every couple of months going back to maybe September 2011. I've always upgraded to the latest version hoping the bug would be gone (including clean re-installs) but for some reason I always comes back. It is a pain since the only way to recover is 	Clarify
1513	6788991	Speaking of the devil - the bitcoin client just unexpectedly crashed on me again. I have 5.54GB Free space on my SSD.   Debug.log:   http://dl.dropbox.com/u/1007482/debug.log  Error:  Problem signature:   Problem Event Name:    APPCRASH   Application Name:    bitcoin-qt.exe   Application Version:   	Clarify
1513	15664454	@nanpanman still got the problem? 	whQuestion
1512	6606099	"Trying the batch examples at http://www.jsonrpc.org/specification  ...  the implementation isn't matching the spec.  E.g.  curl --user abc:123 --data-binary '[1,2,3]' -H 'content-type: text/plain;' http://127.0.0.1:9000/  ... is returning error -32700, ""value is type int, expected obj"" instead of -3"	Clarify
1512	6610587	"Rebased, and fixed bug reported by @gavinandresen (note: turned out _not_ to be a policy decision, as I claimed on IRC)  "	Clarify
1511	6529772	"On a busy node (read: any node that accepts incoming connections), this reduces a *lot* of log spam. "	Statement
1511	6529851	<s>I can't seem to find evidence that we've fixed the issue where nodes will repeatedly re-get txn that they've rejected. Verbosity here is pretty good for troubleshooting that sort of stuff. </s> Edit:  I was apparently not paying attention here and thought it would silence most of the (sent) getda	Clarify
1511	6607187	ACK 	Clarify
1510	6529789	Sample output here: https://gist.github.com/2980975  	Statement
1510	6554488	"Design doesn't feel quite right to me.  How about something like:  getpeerinfo   : returns list of peers (ip address, inbound/outbound, etc)  getstat ""which_stat_to_get""  : generic RPC call for getting internal state of bitcoin...  "	Other
1510	6557131	"getstat ""which_stat_to_get"" would make it easier to wrap up in a snmp style poller, e.g. for graphing with an rrd tool frontend. "	Emphasis
1510	6607104	"@gmaxwell all the kernel interfaces that SNMP uses tend to return groups of statistics that the kernel finds easy to generate together (tx pkts, rx pkts, rx bytes, tx bytes, collisions, ...)  I see the same pattern elsewhere.  So perhaps 'getstat $STAT' can return complex objects, if it is natural t"	Clarify
1509	6548214	"Use `QLocale::countryToString`  / `QLocale::languageToString` (http://doc.qt.nokia.com/4.7-snapshot/qlocale.html#languageToString), it returns the full name for a country / language.  "	Clarify
1509	6555055	Tried it and should be rather easy to do ... perhaps I'll create a patch later. 	Clarify
1509	6600465	Can be closed now! 	Emphasis
1509	6608314	"IMO, this should be using [nativeLanguageName](http://qt-project.org/doc/qt-4.8/qlocale.html#nativeLanguageName) "	Other
1509	6608691	"Nice idea, but ``This function was introduced in Qt 4.8.`` and we are still compiling using an older 4.7.4 (4.8.2 is current).  Edit: We could aswell use ``nativeCountryName()`` then, which would be even better.  Edit 2: That's how it would look then: ![language selection](http://i48.tinypic.com/2mm"	Clarify
1509	6935482	@luke-jr Can you close this for now? @laanwj Any date / idea when or if we can switch to a newer Qt version? 	Clarify
1509	6936062	"We won't require a higher Qt version for the forseeable future, however you can use 4.8 features in a `#if QT_VERSION >= 0x040800` guard so that people that do compile with 4.8 get the better functionality. "	Reject
1509	6936295	"Good point, I'll consider this, but it would get pretty ugly, when there are many places in the code with such guards. "	nAnswer
1509	6936423	"I wouldn't consider that much of a problem in this case. It's simply how backward compatible programming works. It's much worse in web development, at least you don't have to support IE 6 :-)  "	Emphasis
1509	6936563	AFAIK we support / require IE 5.01 :-P!? ``#define _WIN32_IE 0x0501`` 	Emphasis
1509	7027640	"Fixed with #1591, closing issue "	Other
1508	6526116	Is the type-casting to int instead of short a problem here? I'm asking because I'm working on the proxy-options in the GUI currently.  ACK to the pull. 	Clarify
1507	6531983	"@jgarzik Can you please add this, or is the switch intended to be ""hidden""? "	whQuestion
1506	6523990	"Seems like a pretty good idea, will look into this :). "	Clarify
1506	6526129	"Working on this, I currently only have a small problem with updating the unit, as we don't have WalletModell or OptionsModell available in the qrcodedialog code. "	nAnswer
1506	6534291	@xanatos Can you try our my patch #1518 and give some feedback. 	Clarify
1506	6534313	"@Diapolo I don't have a C++ environment :-) In the last 5 years I have programmed only C#. And even when I was a C++ programmer, I was a Visual C++ programmer, not a QT/gcc/g++ programmer. "	Clarify
1506	6534324	@xanatos Too bad :). But I guess at least you could take a quick look at the code. 	Clarify
1506	6534618	"@Diapolo My only problem is with the BitcoinAmount::validate()... It does two different things... It checks for non-zero value and checks for ""textual"" correctness and number-of-digits validation (the last two checks in the parse() call). I do think the non-zero value test isn't correct to be put th"	Clarify
1506	6536613	"@xanatos Thanks for your feedback, I updated my patch to reflect your suggestions. The save button is now only enabled, when the QR Code was successfully generated. Perhaps you can take another look. "	Clarify
1506	6935535	"@xanatos As #1518 got merged, you can close this now. That's the new look of the QR Code dialog:  ![updated QRCodeDialog](http://i50.tinypic.com/2l8vggy.jpg) "	Clarify
1504	6519773	"rpcssl=1 was set in the bitcoin.conf, so bitcoind was expecting a https connection.  "	Statement
1503	6511491	I was able to loadblock up the existing testnet3 without issues with this change in plae. 	nAnswer
1503	6514529	ACK 	Clarify
1502	6511008	ACK 	Clarify
1502	6511309	"BIP22 intentionally supports this use-case with ""sizelimit"":false (not implemented in bitcoind); another option could be added to skip the priority sorting  But I don't care enough to debate how this is done, so meh. "	Clarify
1499	6787885	"Closing as ""works for us.""  If you have more details on exactly how it is failing for you, please re-open an issue with more information.  "	Clarify
1498	6497142	Can you add a doc/CJDNS.txt with the information on how to configure?  I'll let people who know a lot more about networking than me to ACK or NACK.  	Clarify
1498	6517992	"If I understand it correctly, CJDNS uses FC00::/8 as network range, which is half of RFC4193's unique local range?  I'm wonder whether this does risk clashing with anyone who wants to use RFC4193's range for other purposes. Inside the bitcoin P2P protocol this is not necessarily a problem (for now, "	Clarify
1498	7623941	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/6602ae8f878afa2036069fe278126162899e0c81 for binaries and test log.  This pull does not merge cleanly onto current master "	nAnswer
1498	8284643	"This does not seem to have gathered any ACKs, and open questions remained unanswered, so recommend closing. "	nAnswer
1498	13708066	"There was some renewed discussion of the issue and I wanted to record the current state of the situation.  1. All networks such as garlicat and onioncat are encoded by using reserved space in ipv6 addresses. 2. Bitcoin nodes relay addresses to everyone, ipv6 addresses are relayed to ipv4 nodes etc ("	Clarify
1496	6492407	ACK 	Clarify
1495	6510704	ACK. 	Clarify
1494	6473284	I like this one a lot better. 	Statement
1494	6510985	"This is the way we used to do it (each RPC command acquired the locks it needed), and we were constantly battling people adding new RPC commands that worked in testing and then blew up in production, because they didn't acquire the right locks, or they acquired the right locks in the wrong order.  I"	Clarify
1494	7064927	"The other pull is safer. It allows for a slow transition to finer-grained locking, optimizing where it matters. This is a big change at once, and it's easy to forget one or two locks. "	Clarify
1494	7623947	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/957f0899fc5ecefd2f63fdb0a65527b3252e2bed for binaries and test log.  This pull does not merge cleanly onto current master "	nAnswer
1494	7905664	Closing.  We're going with the table driven approach for now (#1493). 	Clarify
1493	7623955	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/691c3a9506ef801e9a98069c4d1fabac2bd748be for binaries and test log.  This pull does not merge cleanly onto current master "	nAnswer
1493	7906185	Pull rebased for latest RPC code movement changes. 	Statement
1492	6464732	Working around by commenting out: disk.update(registering_applications=False)  @p2k : any idea why this suddenly stopped working?  	Other
1492	7424812	"i have an issue since i upgraded to macosx 10.8.  Traceback (most recent call last):   File ""../bitcoin/contrib/macdeploy/macdeployqtplus"", line 708, in <module>     disk = finder.disks[disk_name]   File ""build/bdist.macosx-10.8-intel/egg/appscript/reference.py"", line 579, in __getattr__ AttributeEr"	Other
1492	12519463	Fixed by https://github.com/bitcoin/bitcoin/pull/2179  	Statement
1489	6494845	Neither getwork nor getmemorypool should be even trying to call CreateNewBlock in parallel... they cache its results.  (Not that there's anything wrong with this  optimization.) 	Clarify
1489	6496026	The former does not follow from the latter. 	nAnswer
1489	6496621	"@jgarzik There should be a mutex on the cache, so I'm not sure how you'd get into CreateNewBlock concurrently. Unless you're thinking of getwork and getmemorypool at the same time, but I can't think of any reason to support that... "	Clarify
1489	6497558	"This also conflicts with #1240 as-is: can copyFinal return map<uint256, CTransaction> instead? "	Other
1489	6497564	"The cache is only accessed when you think it would be accessed: quickly upon read, or after building a block.  The cache's lock need not be held while building a new block. "	Clarify
1489	6497691	"IMO, it's better to hold it while building a new block: instead of having 20 parallel CreateNewBlock running at potentially 1/20th the speed each for no benefit, you get a single one that finishes in 1/20th the time and the rest use the cached value from... "	nAnswer
1489	6607226	"Closing, not enough interest.  It remains a valid technique if we want to explore this avenue in the future. "	Reject
1487	6453225	"I don't believe we want to deal with the potential of CSRF issues in the JSON API, not to mention that exposing the RPC port to the internet is currently a reliable way to get yourself robbed. (And I assume it would be almost as bad with the users browser acting as a proxy) "	nAnswer
1487	6453474	The RPC port doesn't need to be exposed to the internet. There are a number of ways to circumvent the same origin policy this just makes it easier for those with legitimate uses. 	Clarify
1487	6454242	"Yeah, I think these sort of things are more appropriate via a proxy "	Clarify
1487	6460166	FYI this has been discussed at https://github.com/bitcoin/bitcoin/pull/23 and https://bitcointalk.org/index.php?topic=2672.0 before. 	Statement
1487	6460279	"Apologies, feel free to close the request. "	nAnswer
1484	6414033	"A very small number of people care about a precompiled bitcoind on the Mac; I don't think it is worth the extra build time or hassle of fetching/building dependencies.  So I think this should wait until there's a gitian-built OSX Bitcoin-Qt release working.  Nice work, though, I'm impressed you got "	Clarify
1484	6923249	"This no longer works with master (GCC 4.0 can't handle boost signals it seems), so closing for now. "	nAnswer
1483	6431318	ACK (except for the comment)  	Clarify
1482	6405025	This works for me after #1434 got in ... ah I see you have to close the optionsdialog before this get's active. This you mean? I guess the transaction list is simply not re-drawn when clickin apply ... will look into this later. 	Clarify
1482	6406424	The other tabs do now redraw properly before closing the options dialog. 	Statement
1482	6406931	"To verify, only glitch is the transactions tab now? But this updates when closing optionsdialog, right? "	Statement
1482	6407204	Correct 	Statement
1482	6466543	Can you verify this is fixed with #1438? If yes this can be closed. 	yAnswer
1482	6608335	Confirmed 	Statement
1481	6396685	"Not that I really care, but as far as I can tell the OS is called ""Mac OS X"" not ""Mac OSX"" "	Clarify
1481	6396796	"Yep, your probably right about that, changed it.  "	Reject
1479	6396180	How should this be tested? 	whQuestion
1479	6396448	"I suppose you could temporarily add an immature_amount to the gettransaction() RPC, and immature_balance to getinfo(), and mine a few blocks on testnet. "	Statement
1479	6453571	"I ""only"" verified this patch with Bitcoin-Qt on testnet, I'm not sure how to test this with bitcoind, as I can't compile it. Help would be appreciated, as this testing is blocking a merge. "	nAnswer
1479	7630368	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ed1afd67c1d3f485a9ba3850ba2751e50d897f53 for binaries and test log. "	nAnswer
1479	7678676	@Diapolo Those builds from @BitcoinPullTester should help you out 	Clarify
1479	7707366	@luke-jr How does this help? You mean using the Qt version from jenkins and using it on testnet? 	whQuestion
1479	7710496	@Diapolo I was thinking http://jenkins.bluematt.me/pull-tester/ed1afd67c1d3f485a9ba3850ba2751e50d897f53/bitcoin/src/bitcoind.exe 	Clarify
1479	8021383	"Guys, I setup bitcoind and can use it to pass RPC commands, but I simply don't know how you want me to test the function there, as ``GetImmatureBalance()`` seems to be only used by Qt?  I could for sure add ``obj.push_back(Pair(""walletversion"", pwalletMain->GetImmatureBalance()));`` to RPC ``getinfo"	Clarify
1479	8022491	"GetImmatureBalance looks correct from reading it, and it's only used within the Qt code. I'm sure we can use it in RPC code as well, but let's do that later. "	nAnswer
1479	8028840	"@sipa I didn't want to push or create a usage scenario for RPC, I just wanted to say I dunno how to further test this code :). As I said in Qt it does the job and asked if it will get accepted that way or what I can do now. "	Clarify
1479	8028844	ACK on the changes to core; I didn't test the UI changes. 	Clarify
1479	8032963	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dfdd4dac8291b55fd96feea3b4545a0a5389e86b for binaries and test log. "	nAnswer
1479	10317418	Rebased! 	Emphasis
1478	6389143	ACK 	Clarify
1478	6600670	@laanwj Just a reminder *merge me* :-). 	Clarify
1478	6823540	"Closing, as this change was integrated with #1559. "	nAnswer
1477	6382421	ACK and verified to work! 	Emphasis
1477	6384061	"Additional info, this patch fixes a serious issue with the testnet3, where all nodes currently get the same NICK on IRC and so the address exchange via IRC does not work / is faulty. "	Clarify
1477	6386145	ACK 	Clarify
1476	6383174	"These are both expected behavior:  1) In the transaction list, the client prints the difference in balance. In case of an transaction to yourself, your balance doesn't change so this is 0 (or -0.0x in case of fee). You can view the details such as size of the transaction in the transaction details ("	Clarify
1476	6383447	"1) I am aware that the tx details show the amount, but they don't display the sender or recipient address. You have to look up the tx-id on eg blockexplorer to figure out from where to where the transfer went. (I'm talking about weeks/months later obviously). Since I cannot add a comment to a tx, I "	Clarify
1476	6383581	"1) Adding comments to txes is on the TODO list. Recipient address could be shown for send-to-self, however this is a very obscure use case. I'm not against it but I don't have time for it. Feel free to submit a pull.  2) There is no way to distinguish between ""auto-change"" and deliberate change (oka"	nAnswer
1476	6384642	"1) I'm not good enough with C to do any serious with it unfortunately. I'll have to track those tx separately for now.  2) Seeing that the client displays ""to self"" transactions (when moving all coins from address A to B) I assumed that it would do the same when only a part of the coins is moved fro"	Clarify
1475	6383261	It's hard to test when testnet isn't working that good on my computer. 	Statement
1475	6383517	"I don't think this is the right solution. The view classes (Overviewpage, SendCoinsDialog, ...) should not be burdened with implementation details such as new blocks coming in. As I understand, there is a problem with WalletModel not sending the BalanceUpdated signal every time the Balance changes. "	Clarify
1475	6384053	"@burger2 To fix your testnet problems try out #1477. Current master has a bug, which gives all testnet nodes on IRC the same NICK, which causes the current testnet3 troubles.  @laanwj I think the immature balance, which then matures after 120 blocks is not taken correctly into account in terms of th"	Clarify
1475	6384124	"Yes, I'm going to implement this differently. This should really be restricted to WalletModel. It's indeed true that the balanceChanged signal in updateTransaction does not help here, but it could be emitted from different places as well. Having a non-functional balanceChanged signal and working aro"	Clarify
1475	6384590	"That's fine, if you are currently working on a patch I'm going to stop further progress here. What about the changes to wallet and walletmodel? I'll quote myself:  I'm sure the current call to GetCredit(pcoin) can't be correct, as it does:  <pre> if (IsCoinBase() && GetBlocksToMaturity() > 0)       "	Other
1475	6384732	"I'm not particularly known with that part of the code, but what do you think is wrong? To me, it reads like ""If this is a coin-base (mined), *and* there are more than 0 blocks left to maturity, the credit is 0"". Which makes sense to me.  "	Clarify
1475	6384806	It does a ``return 0;`` for the conditions we want to be true for adding immature coins together. Need to double check... 	Clarify
1475	6384909	"The current master code uses GetCredit() from CWallet, while I added GetImmatureCredit() into CWalletTx, which I think fit's better in there, as it's similar to CWallet::GetBalance() and CWallet::GetUnconfirmedBalance(). But you are probably right and the current code works. "	Clarify
1475	6385060	"@laanwj I showed sipa the code, who also thinks the new function (CWallet::GetUnconfirmedBalance()) is cleaner ... but as this is unrelated to fixing the base-issue, I will create another pull and close this one! "	Clarify
1475	6388283	The change in WalletModel also makes sense (makes it somewhat more readable). The only thing I don't agree with are the changes in the views.  	Clarify
1475	6388610	"That's fine, I'll open a new one and you patch the signal thing :). "	Statement
1475	6453511	"@laanwj Is your fix on track for 0.7, any branch you want me to test? "	ynQuestion
1474	6376016	Nice catch. 	Statement
1474	6466579	Seems no one created a patch yet ... 	nAnswer
1474	6466743	Knock yourself out. 	Reject
1474	6478742	I'm going to do this :). Currently preparing the pull. 	Statement
1472	6369617	I don't understand -- what did you do to cause the crash? 	Emphasis
1472	6369870	"He deleted database logfiles, without using -detachdb. "	Other
1472	6370042	"> I don't understand -- what did you do to cause the crash? > He deleted database logfiles, without using -detachdb.  github apparently snips stuff in carets. It should have said: 'rm -r <these files>'. Or more simply, nuke everything after shutdown except: blkindex.dat and blk0001.dat I used to do "	Clarify
1472	8759174	"This is the expected behavior when not using -detachdb. And in contrary to many cases, the error message is clear:      Commonly caused by moving a database from one database environment     to another without clearing the database LSNs, or by removing all of     the log files from a database enviro"	Clarify
1471	6371228	"What's up with adding all the P2P commands lately? Shouldn't this be discussed in a BIP?   Personally I still think it's better to have a clear standardized ""protocol version"", that implies what capabilities are supported, instead of a capability-based system that explicitly lists them.   Capability"	Clarify
1471	6371856	@laanwj ACK 	Clarify
1471	6372995	"No, you don't discuss things in a BIP.  You first implement the code, then discuss on the mailing list and forums. "	Reject
1471	6373257	Yes I meant describe in a BIP.  	Statement
1471	6410542	"@jgarzik Well, FWIW, @gavinandresen is always saying to discuss on the mailing list before making pull requests...  But this whole thread of discussion is IMO off-topic for here... "	Clarify
1471	6607251	"Closing, not sufficient consensus or interest, based on mailing list discussion "	Reject
1470	6362694	How should this be tested?  	whQuestion
1470	6366640	"@gavinandresen just a simple ""it works"" test using ArtForz' half-a-node satisfies me... "	Clarify
1470	6413251	"Shouldn't this do something to ensure the transactions inv'd can be fetched? bitcoind won't send just any transaction right now, only ones it thinks it's flood-relaying. "	Clarify
1470	6477379	"Yeah, Luke is right. The patch needs to update the getdata command as well.  After I'm finished with LevelDB I can throw together some bitcoinj support for using this command and make sure it works. "	Clarify
1470	7412196	Foo Dog 	Statement
1469	6364656	WARNING: Failure to find: src/qt/messagepage.cpp WARNING: Failure to find: src/qt/verifymessagedialog.cpp WARNING: Failure to find: src/qt/messagepage.h WARNING: Failure to find: src/qt/verifymessagedialog.h WARNING: Failure to find: src/qt/forms/messagepage.ui WARNING: Failure to find: src/qt/forms	nAnswer
1469	6364805	"I need to run ``mingw32-make.exe clean`` and re-run qmake for this to work, but it compiles fine afterwards. Damn, sorry I guess I forgot to attach the updated .pro file ... just a sec. "	nAnswer
1469	6364886	@luke-jr Can you re-test now :)? 	ynQuestion
1469	6369346	"@luke-jr Can you please try again and report back :), thanks. "	Statement
1469	6369535	"I found the Verify Message pane confusing because you set the focus when switching to it, which clears the placeholder text. Furthermore, some systems don't support the placeholder text. So it's just 3 unlabelled text entries.  I suggest adding an Address Book selector and Paste button to the addres"	Clarify
1469	6372043	"@luke-jr Good suggestions, I'm going to update this. "	Statement
1469	6372239	"@luke-jr Can you test it once more please.  I did not add a paste button for address field on verify message, as we have one there next to the signature field (which makes sense as we have a copy signature button on sign message).  The warning message thing I did not understand, can you explain for "	Clarify
1469	6374703	Updated to now include add a button / context menu entry in addressbook for verify message. 	Clarify
1469	6377772	"Btw. is there any protocol or RPC command limit for the message-length? It seems one can DoS it's client by inputting a very long message. Signing is quick, but Qt seems to be not that good in handling such long strings in an input field. "	Clarify
1469	6377887	"You typically assume that a user who can access the UI or RPC is trusted, as otherwise you're more likely to lose your savings than the uptime of your node :) "	Emphasis
1469	6383906	"Hehe, yes, we don't protect people against DDoSing themselves on purpose, especially not through the UI. No fatal crashes should happen, of course, but slowing down is fine. "	Reject
1469	6384074	"I just wanted to ask, as I DoSed my node yesterday (GUI freeze / slowdown ... no crash though). "	nAnswer
1469	6409510	"I think the Paste button for Verify/Address and also for Verify/Signature are both needed.  For a warning, perhaps something like ""Enter the signing address, message (ensure you copy line breaks, spaces, tabs, etc exactly) and signature below to verify the message. Be careful not to read more into t"	Clarify
1469	6416477	"@luke-jr I'm fine with such a warning message, will change that. As for the paste button. Even if I place them next to the input field, they are generic. This means copying a signatute from sign and click the paste button on verify - address input, will try to paste the signature. If you say the use"	Clarify
1469	6416625	Different clipboards?!? Please don't make this too complex. I think the UI on the sign and verify message as shown in the screenshot is fine. 	Emphasis
1469	6416795	"@laanwj Don't bother, I also would not like to have different clipboards ... just wanted to know what luke had in his mind for the buttons. "	Reject
1469	6477917	@laanwj I currently think it would be even nicer to remove the paste button from sign for the address input field instead of adding mor of that buttons to verify. Everyone should be able to use Ctrl + C / Ctrl + V (or whatever is default on your OS). 	Clarify
1469	6572064	Any more feedback here? Would be nice to see it in 0.7. 	Statement
1469	6600569	Rebased to fix a merge conflict. 	Continuer
1469	6609157	Functionality ACK. Still think it needs Paste buttons on the Verify tab - most PC users don't use keyboard shortcuts. 	Clarify
1469	6609264	"But they should at least be able to use a context menu, right? I'm still in between removing the paste button from sign-tab or adding more paste buttons ... the more I think about it the more I would like to streamline that UI part ;). Perhaps @laanwj should throw a coin so we can get this in before"	Clarify
1469	6614586	"There's a lot of code changes in this pull already. I still need to test it and read all the changes.  I think ""merging the windows"" is enough change in one go, further improvements can go into a later pull.  "	Clarify
1469	6658010	"@laanwj Alright, no further feature changes in this pull, just waiting for your report and fix stuff if needed, otherwise I consider this feature-complete. "	nAnswer
1469	6684470	Rebased and only changed the above mentioned strings. 	nAnswer
1469	6799573	@laanwj Can we get this in before the 0.7 RC Window please? I have a strong feeling that phase is coming soon and this still lingers around here ;).  Small changes can occur in another pull if required! 	Clarify
1468	6350201	"Huh, how can that have passed for so long?  "	whQuestion
1468	8886240	"Passes now, closing      ********* Start testing of URITests *********     Config: Using QTest library 4.8.1, Qt 4.8.1     PASS   : URITests::initTestCase()     PASS   : URITests::uriTests()     PASS   : URITests::cleanupTestCase()     Totals: 3 passed, 0 failed, 0 skipped     ********* Finished tes"	Other
1466	6505391	Who maintains the page? Seems rather easy to do. 	whQuestion
1466	7844911	"As no one seems to care, closing this. "	nAnswer
1466	7844981	"It's better to keep issues that don't get attention open, unless they're fixed. Someone will get to it someday.  "	Reject
1466	15664764	"@Diapolo it's @gavinandresen that maintains the site.  btw, the link http://www.bitcoin.org/smf/index.php?board=4.0 on http://sourceforge.net/projects/bitcoin/support needs to be updated. "	Clarify
1466	26982202	"Seems it's pretty up to date these days, closing this.  "	Clarify
1465	6609111	ACK 	Clarify
1465	7000117	"If this is not wanted just close it, if it's okay please don't forget to merge such small pulls :). "	nAnswer
1464	6350267	"ACK on the code, though I'm not entirely sure I see the point here.  "	nAnswer
1464	6350347	"I use a self compiled OpenSSL lib for my build and found that info usefull. Perhaps if there is an OpenSSL security flaw and we offer a vulnerable version, we ensure that attentive users have the chance to inform us. "	Clarify
1464	6376754	Works for me in Ubuntu 12.04 	Statement
1464	6377527	@burger2 Thanks for testing. 	Statement
1464	6500566	"IMO, this would be better under the Debug dialog... "	Statement
1464	6500619	"@luke-jr I considered that too, but was not sure abot the best place there. Below startup time? With an own header? A new tab (for just item ... not that good)? "	nAnswer
1464	6572048	@laanwj If you don't see any use here I can close this. But what about lukes idea to move it to the debug window? Where would you place it there? 	Clarify
1464	6572236	"I agree that the debug window is a better place if you need this. I don't think you should worry too much about the place in the debug window, if you think it's useful to have it there then put it somewhere, maybe along with the bitcoin version number. "	Clarify
1464	6610002	Moved to the debug window and use an indent to distinguish from the client version. 	nAnswer
1464	6628390	ACK 	Clarify
1463	6333897	Why not just (uint64)0 ? 	Other
1463	6333934	"Giving the parameter a name is more readable, imho, and I doubt it makes any difference performance-wise. "	nAnswer
1463	6334015	ACK 	Clarify
1463	6334112	"ACK, works for me.  "	Reject
1462	6329151	"Ouch. If this is true, it'd be safer to allocate a locked memory pool once and then distribute from that (and maybe increase the size as needed), instead of trying to lock/unlock on allocation/deallocation every time. That'd likely also improve performance.  Boost.Pool could probably help here.  "	Clarify
1462	6335158	/subscribe 	Statement
1462	6335289	Please don't do that (/subscribe). Only comment if you have something to add. Mind that everyone on the thread gets email when you post.  	Clarify
1462	6335339	"Sorry, as this is a Windows thing and I'm interested in further replies but couldn't add anything to it currently I did that. Would be nice to have an subscribe to this issue option. Won't do this again! "	nAnswer
1462	6335956	"I'll add that this problem isn't Windows only: http://man7.org/linux/man-pages/man2/mlock.2.html  > Memory locks do not stack, that is, pages which have been locked several times by calls to mlock() or mlockall() will be unlocked by a single call to munlock() "	Clarify
1462	8013141	This is solved in pull request #1699 	yAnswer
1461	6329385	ACK 	Clarify
1460	6321963	"Well it's not wrong, it handles the most common case of ""broken"" bitcoin URLs and does one final try to fix it (See https://en.bitcoin.it/wiki/BIP_0021 , bitcoin:// is wrong syntax). Sure, it could be extended, but it was never intended to be watertight. "	Clarify
1460	6321983	But if you submit this as a pull request I'll merge it.  	Statement
1460	6335229	"Tried this with Firefox, which converts an uppercase HTTP into a lowercase http while typing. "	Other
1459	6325797	"ACK, one unrelated thing can you explain what FIRST_CLASS_MESSAGING is or does for us UI wise? "	whQuestion
1459	6325858	"Basically, it makes that sign/verify message are tabs instead of separate windows. lukejr introduced it in one of his commits, because according to him signmessage is as important (and thus should be as prominent) as sending coins, but I don't think anyone apart from him agrees and/or uses the featu"	Clarify
1459	6329462	I have a pull in the pipe that merges sign / verify message to a tabbed UI just like with the options dialog. Will open it later today or tomorrow ... perhaps we can talk about removing that unused stuff? Are there any comparison screens how it looks with that messaging stuff? That many #ifdefs for 	Clarify
1459	6329561	"I don't think there is a need to do that, better to keep it like this, it will only result in endless bikeshedding discussions.  "	Statement
1458	6331823	"I don't mind having more granularity in choosing debug output, but if we're going that way, I think a -debug=all, -debug=none, -debug=net, ... is more consistent. "	Reject
1458	6364539	Agree with @sipa 	Accept
1458	6369382	"It could also be implemented as debug-level, e.g. -debug=0 (disabled) -debug=1 (all), -debug=2 (all, but no net) ... etc. "	Statement
1458	6369901	"-debug=NUMBER and -debug=TOKEN are not useful for masking individual trace behaviors.  -debug=TOKEN,TOKEN,... is acceptable, but requires a mini-parser for the -debug string, rather than relying on -trace* for the same effect. "	Reject
1458	6373068	"Even if it's easier implementation-wise to keep it as a separate option, I'd prefer -debugnet instead of -tracenet, just for consistency. "	Clarify
1458	6511097	ACK if s/tracenet/debugnet/   	Clarify
1458	6513163	updated to -debugnet  	Statement
1458	6520722	I'm missing `` -debugnet`` and a description what it does in ``std::string HelpMessage()`` in init.cpp.  Should be below that line: https://github.com/bitcoin/bitcoin/blob/master/src/init.cpp#L258 	Statement
1457	6380444	"No solution but FYI: 10.7.4 and 0.6.2.2 working fine on my machine, so at least not a general error. "	nAnswer
1457	6396498	"Fixed, I deleted the addr file and reinstall the 0.6.2.2, everything works well now, my a corrupted file. "	Statement
1456	6413077	"Breaks Bitcoin-Qt without this: ```diff diff --git a/bitcoin-qt.pro b/bitcoin-qt.pro index 9885e1e..b562560 100644 --- a/bitcoin-qt.pro +++ b/bitcoin-qt.pro @@ -217,6 +217,7 @@ SOURCES += src/qt/bitcoin.cpp src/qt/bitcoingui.cpp \      src/qt/walletmodel.cpp \      src/bitcoinrpc.cpp \      src/rpcd"	Other
1456	6413674	"Rebased to master and added rpcrawtx.cpp to bitcoin-qt.pro.  But I'm having second thoughts on how to specify previous outputs; especially with @sipa's compression work I think maybe specifying them as [txid,n,hex_scriptPubkey] might be better than just ""hex_serialized_complete_transaction""  "	Clarify
1456	6607351	ACK latest revision  	Clarify
1455	6334158	Fixed in #1463. 	System
1454	6321064	Fixed with commit 0f10b21719e1b0d9683a142f0a7105e65f095694 (see issue #1439)  	Other
1453	6314281	"I think this needs a command-line argument to enable/disable.  Apart from that, great!  "	Emphasis
1453	6315929	"In terms of a command-line argument to disable, Id really rather not. You can click no, and ignore the update until you next restart, but I really prefer to force people who refuse to upgrade to suffer the nagging. "	nAnswer
1453	6320583	"I agree in principle. However, there may be reasons why someone wouldn't want a cleartext http requrest to bitcoin.org going out every time they start bitcoin. Especially as the configured proxies are not used by Qt HTTP, so someone doing everything else through TOR would still ""leak"" this.  (of cou"	Clarify
1453	6321172	"Great idea, can't comment on the current implementation, as I didn't yet try this.  This only works for the installed version not the zipped one? What is gitian-downloader, does this need to be installed on the local machine (seems a little weird to me as Win user)? Is it possible to use HTTPS, as I"	Clarify
1453	6324320	"Qt supports https (you need to provide your own certificates though), however the problem is that bitcoin.org does not as it's hosted on sourceforge.  I don't think https is important here. It's not about the data going over the connection, which is pretty boring, just a bunch of version numbers (I "	Clarify
1453	6326826	"I dont think its worth encrypting as even if someone MITM-attacks, the worst they can do is make you download the latest gitian zip, which gitian will immediately realize either isnt properly signed (assuming MITM) or not a new version and will discard it. This will work for any bitcoin, as long as "	Clarify
1453	6327844	Updated. 	Statement
1453	6329916	"As Windows-User I really would hate to see an Auto-Update that I can't disable ... even worse if I had to kill that gitian-downloader to ""disable"" it. I'm fine with an info message that there is a new version available and an opt-in to always allow an auto-update. "	Clarify
1453	6330146	"You can disable it.  It only asks you if you want to upgrade, it doesnt force you to. "	nAnswer
1453	6330549	"If you implement proxy support it's ok with me, no need to also have a disable option. Polling and asking is harmless. My only objection was the 'leaking'.  "	Statement
1453	6330863	It has proxy support 	Statement
1453	6330948	"Right, cool. "	Accept
1453	6333091	"@TheBlueMatt Sorry, I really thought this would enforce updates :D. "	Statement
1453	6333478	"I'm asking myself, if your chosen layout will stay the way you intended it to be, when resizing the window. It would perhaps be a good idea to chose a verticalLayout with some horizontalLayout objects. Yes this is not coding related, but I'm always behing a clean and good UI :D. "	Clarify
1453	6333952	Fixed the translation stuff and now you cant resize the window :) 	Clarify
1453	6364492	- Binaries don't belong in git. Provide a link to the gitian build instructions and make them an input. - Moving Bitcoin-Qt to a new subdirectory under its own program directory is silly. Why can't it stay where it is? - Why remove the RSS thing? - Shouldn't link to SourceForge for Linux distros wit	Clarify
1453	6365558	"1) Meh, no they dont really, but building the cx_Freeze gitian-updater in gitian is a huge change...you would have to build the full list of binaries in that list in gitian, including python and gpg.  But feel free to do that. 2) because gitian requires a destination dir to install to. 3) Because it"	Clarify
1453	6365837	1) or just use the official Python and GPG binaries from their websites as inputs 2) $INSTDIR works fine for that...? 4) I don't see any #ifdefs...? 	Clarify
1453	6366122	"1) Admittedly haven't tried (because I dont have gitian), though I would doubt they are deterministic. 2) The current gitian files dont output a gitian-updater.  If they were changed to do so, we could use $INSTDIR for the target, as it stands, we cannot. 4) https://github.com/bitcoin/bitcoin/pull/1"	Clarify
1453	6366207	1) We already use non-deterministic official Ubuntu binaries. 2) IMO they should. 	Clarify
1453	6366487	"1) The launchpad ppa isnt official. 2) Fair enough, but, again, as I dont have gitian right now, there isnt much I can do there. "	Clarify
1453	6366514	1) I was referring to all the gitian builds.  	Clarify
1453	6366776	"I love the update-idea, but I dislike that whole dependencies ... wouldn't it be a nice start to receive a notification for new updates, with a changelog and a direct download link displayed? "	Statement
1453	6371140	I really think this is fine now. Things can be improved later.  	Clarify
1453	6371170	"IMO, the way this is right now completely defeats the point of gitian and permanently bloats the git repository... until that is fixed (at least by moving the non-deterministic dependencies to gitian inputs), it really seems not having it at all is an improvement. "	Clarify
1453	6371203	"Well yes big executables do not need to be in the git repository, and could be moved to some other place (just keep their hashes in the repository to check during build that you have the right files). Apart from that I think BlueMatt is on the right track and we need to go on with this.  Using gitia"	Clarify
1453	6692636	"I just wanted to say thanks for doing this. It's hugely important.  FWIW, we're starting to look at something similar for bitcoinj based apps and will likely just check the compiled dependencies into git. We're more concerned about somebody inserting a backdoor into an upstream compiled JAR though, "	Clarify
1453	6693623	"Are we somewhere telling the user that we are installing gitian-updater binaries? I think we should ensure the whole process is as transparent as possible.  What happens, when there is a security flaw in the gitian-updater itself, are we then shipping new versions of it automatically, too?  Edit: Wh"	Clarify
1453	6697457	"1) Im not so sure people a. really care what the underlying updater we are using is or b. care to research how we are installing it.  If anyone is looking into the inner workings of bitcoin-qt, its all very clearly documented in the source...  2) If bitcoin-qt finds a gitian-updater folder installed"	Clarify
1453	7630374	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/f1c27f90d5b7acf58645761b903d0539930ec78e for test log.  This pull does not merge cleanly onto current master "	nAnswer
1453	8285182	Closing for lack of interest. 	Statement
1453	8288118	"I don't agree with closing this. It's still nice to have once the issues get resolved.  To prevent binaries in the repo we could put the binaries in a specific repo, or eventually build them with gitian too...  "	Clarify
1453	8294839	I'm interested. Auto-update is still very important. 	Statement
1453	8301837	@laanwj afaik there were no remaining issues.  There are no binaries in this pull. s/lack of interest/lack of ACKs/ 	Statement
1453	8303160	Only one remaining issue AFAIK: it still hijacks bitcoin.org for client-specific stuff.  Doesn't SourceForge have a direct-download webspace? 	ynQuestion
1453	10261172	"Matt: can you put together a little whitepaper, written for somebody who won't read the code, explaining how this works?  Something like:  + Every startup (shutdown? day? week?), by default Bitcoin-Qt (?).... fetches something from somewhere ? + If that something says that there is a new version, th"	Clarify
1453	10609705	"Note first that this needs rebased quite a bit, if people are interested in merging, I can do it. Not sure where you want this, but here goes:  Every application launch (maybe it should be week...) Win32 versions of Bitcoin-Qt will download http://bitcoin.org/latestversion.txt and compare its conten"	Clarify
1453	10631143	It's really cool and important. My only comment - have the download and checking of the new version happen in the background before the user is notified. Then the user can simply be told there WILL be an upgrade and the node can restart very quickly. This is usually a better ux because otherwise use	Clarify
1453	10632892	@mikehearn I would vote for at least a one time informational message that the client will behave that way (for installed versions only) or even a possibility to opt-out of background-updates and make it an explicit check. I really dislike all that crappy update services that todays software uses / 	Clarify
1453	17561271	would this somehow also works for mac? 	Other
1453	17563668	"Could someone please review this PR, I think it's quite an important feature for the longevity of the bitcoin ecosystem, especially as we get more users. Being able to quickly upgrade the ecosystem to new protocol version in a timely fashion is essential. refs #2626 "	Clarify
1453	17566224	@drak Why so interested?  Someone give you an exploit against the sourceforge download site? :p 	Clarify
1453	17568872	"@gmaxwell - no idea what you are talking about, given bitcoin protocol lives by having a majority of a given version, it's imperative as the ecosystem grows that the network can upgrade. It makes sense to at least have the client inform users of a new download being available. I would not rely on so"	Clarify
1453	17569226	"@drak If you want to get this merged, I'm sure it needs tons of updates, so feel free to help out :) "	Statement
1453	17569470	"Sorry, C programmer I am not unfortunately, or I would do it. "	Reject
1453	17569670	"I need to ask, if we are aware of a certain version containing a security problem, do we issue an alert that all those clients receive and urge to update or are we just doing this ""sometimes"" (for a massive problem for example)? "	Clarify
1452	6308101	Was the transaction shown in the transaction list? Did it generate a notification? 	ynQuestion
1452	6313124	The transaction was shown imediately on overviewpage and in the transaction list and I received a notification-message. 	Statement
1452	6314055	"I don't understand what happened, then. The balances are recomputed and updated after every wallet update in WalletModel::updateTransaction. A spend immediately count towards the balance, so after the recompute the balance should have been 0. If the signal would have been lost, the transaction would"	Clarify
1452	6320396	I'm going to try this later and will report back. 	Statement
1452	6335830	"Strange tried it with the last official 0.6.2, which worked. Need to take another look at it with current master build. "	Clarify
1452	6363609	"@laanwj I was able to reproduce this again, had 0.955402 BTC in my wallet and sent them all to another address in a different wallet. The transaction was shown as tray-notification, is visible in the transaction-list and on the overviewpage. But the balance on overviewpage AND send coins still shows"	Clarify
1452	6363744	This is the part of the happening from the debug.log: <pre> 06/15/12 18:35:25 WalletUpdateSpent found spent coin 0.955402bc 8b842333c58e9a2320c49f585a3b08bc508ebf5e95ca07689e92c831bb994977 06/15/12 18:35:25 NotifyTransactionChanged 8b842333c58e9a2320c49f585a3b08bc508ebf5e95ca07689e92c831bb994977 sta	Other
1452	6363812	Can it be related to NotifyTransactionChanged() and the use of a Qt::QueuedConnection? 	Statement
1452	6365701	"No. The notification survives intact, otherwise you wouldn't get a notification at all and it wouldn't show up in the transaction list. The function you should watch is WalletModel::updateTransaction, the recomputation of the balance, and whether the balanceChanged(0,0,0) signal is emitted and proce"	Emphasis
1452	6536724	"@laanwj I think this is related to the problem with immature balances display. I tried your suggestion and placed an ``emit balanceChanged(0, 0, 0);`` on a timer, which when fired, correctly updates the balance.  Today I had the main problem again, sent all coins from the wallet (a Tx fee was includ"	Clarify
1452	6827029	"@laanwj Could this be resovled by #1559? I currently can't verify, because my build environment get's some updates (at least I'm trying to switch to GCC 4.7). "	Clarify
1452	6829565	"I hope so. As it updates the balance with a timer, it should eventually get it right. "	Statement
1452	6832692	"I can confirm this is fixed by #1559, so closing this! "	Emphasis
1452	6834438	"Sorry, I have to re-open, as on testnet, this was happening again. "	Statement
1452	6834751	Need to check: does a sent transaction count toward the balance immediately or only after it was sent to a peer node?  Seems like the only explanation I can think of that the new outgoing transaction is not taken into account in the balance computation afterwards. 	Clarify
1452	6834798	Did you try out the testnet3? It is rather weird as currently I can't seem to get it fully synced (too many old nodes I guess). Perhaps this is related?  Edit: Needs an outgoing Tx confirmations before it counts? I'm also not sure if the display was updated in the send-coins dialog (there is a small	Clarify
1452	6960659	"Fixed by #1575, closing this! "	Emphasis
1450	6306254	"As I've never used an alternate shell I can't suggest a thing here. Graphics drivers are up to date, as is the custom shell? You tried official 0.6.2 I guess? Can you verify the client works with the default Windows desktop. "	Clarify
1450	6307894	"I tried official 0.6.2, yes. I can confirm that it works with normal Explorer.  My graphics drivers and shell are updated, although the shell hasn't seen any updates for a long time. "	Clarify
1450	6313151	"Does it change anything, if you have an empty datadir? Is there anything in debug.log? "	ynQuestion
1450	6317352	"No change with an empty datadir.  The only error that seems likely to mean anything relevant is this: ERROR: FetchInputs() : ecd2af2deb mempool Tx prev not found ff6fe0fe69 ERROR: CTxMemPool::accept() : FetchInputs failed ecd2af2deb  Then again, that may just be network debug stuff.  "	nAnswer
1450	8719238	This is almost certainly an upstream Qt issue.   The only suggestion I'd have is to play a bit with Qt creator and the show/hide logic in bitcoingui.cpp. Building bitcoin itself on windows is currently a hell though.  	nAnswer
1450	15634034	"Closing this, it is too much of an edge case, likely an upstream issue, and almost impossible to reproduce. "	nAnswer
1448	6305445	Why was fr_FR removed from Transifex? 	whQuestion
1448	6305483	"Dunno, it's not there anymore ... but as we have fr as base language still included and at 100% that should be just fine. "	Clarify
1448	6305496	"Ah, as long as we still have french somewhere. "	Other
1448	6305808	"AFAIK it was renamed to just fr, to play more nicely with other locales when the fallback is used.  "	Statement
1447	6303391	"I understand that you don't want to publish a ""core dump"", but you can certainly provide more information. The current information doesn't help as it doesn't contain symbols / line numbers:  - Does it happen on any specific actions? At startup/shutdown? Or randomly? - Anything in the debug.log when "	Clarify
1447	6304050	Thanks Wladimir!   I certainly can.   * It happens randomly. I run application that keeps scanning for transactions using xmlrpc * Here is debug.log: https://docs.google.com/open?id=0BxBlvkNJOOeXRXFDN0tPU0V3ejA . I cannot pinpoint anything specific * I am not sure how to do this on windows. Is there	Clarify
1447	19310513	Is this still a problem? 	ynQuestion
1447	19320964	I would vote for closing this as we are now at 0.8.2. 	Statement
1447	19329686	"yes, close this "	yAnswer
1445	6293633	ACK 	Clarify
1444	6273085	"Tried it and works, ACK! "	Emphasis
1442	6264125	"Do you have a patch?   This is a lot more complicated than I think you think it is. Pieter has been working on non-BDB wallets, but a simple text file ""for the user to cut and paste the keys"" isn't really something that can be sanely and safely done without a lot of work (or potentially at all) beca"	Clarify
1442	6264167	"@sipa is already working on a append-only wallet format, to make it easier to have wallet 'files'. As there are some requirements with regard to robustness and error recovery, these will not be in an interoperable format such as XML or CSV, though.  We recommend interoperating with bitcoin through J"	Clarify
1442	6318332	"Closing as ""not going to happen.""  "	Reject
1440	6263221	ACK 	Clarify
1439	6236275	"I appreciate that you're trying to improve the naming, but be careful that this does change behaviour in the case of bitcoind.  Previously, QueueShutdown (in non-ui context) started Shutdown in a new thread, to make sure that execution returns immediately. This means that an RPC command such as ""qui"	Clarify
1439	6238254	"@laanwj Updated to reflect your suggestions. Can you explain, why noui.cpp is not added in bitcoin-qt.pro? I found it quite strange to not be able to edit that file directly somehow. "	Clarify
1439	6238317	"Looks good now.  Well, it used to be that noui.cpp conflicted with some functions in the UI. If this is no longer the case due to using boost::signals now, it could be added in bitcoin-qt.pro too... (or otherwise you could add it under ""other"" files)  "	Clarify
1439	6238420	"Fine and at least on my local build it compiles just fine with noui.cpp added to the .pro. Could you verify, if this would break the official Gitian build process before I update the pull? "	Clarify
1439	6238531	"I'm unable to test gitian right now.  Maybe it's better to leave that for another (more trivial) pull. Focus this one on shutdown functionality, this is quite a big fish to fry, and needs heavy testing.  "	Clarify
1439	6238713	"Okay, so let's see what other devs think. "	Statement
1439	6238888	"BTW, does this solve the original issue with exit() in Shutdown? I don't see it in the diff.  "	nAnswer
1439	6243873	"If the one non-compiling change is reverted, ACK "	nAnswer
1439	6244279	"I'm asking myself, if the change in net.cpp is correct, but as net.cpp is used by the Qt version and bitcoind it should be a StartShutdown() call.  @TheBlueMatt I reverted the changes that don't compile, they now use ``Shutdown(NULL);`` again, which should be fine for a non Qt version.  @laanwj The "	Clarify
1439	6244421	ACK 	Clarify
1439	6244659	"@TheBlueMatt One last thing that bothers me, should the 2 ``Shutdown(NULL);`` calls in init.cpp be converted to ``StartShutdown();``, which could be considered the default function to call, when a shutdown is needed. It would end up with Shutdown() via a thread, but fits better to the rest of the sh"	Clarify
1439	6244743	"No, in those two cases, shutdown needs to happen immediately, so launching a shutdown thread instead could cause errors. "	nAnswer
1439	6244813	"Understood, thanks :). "	Statement
1439	6244847	"@diapolo ok, that's also a possibility, as it appears that nothing else can ""fall through"" to there "	Emphasis
1439	6244923	"It does create another issue, though: the icon disappears *before* the shutdown starts, instead of after it ends. That's one of the things we were trying to prevent. It's useful to keep the icon until the program actually exits, to tell the user that something is running. "	Clarify
1439	6245559	@laanwj Seems rather hard to ensure a clean shutdown and wanting to keep the tray-icon till the very end. Leaving the Qt Shutdown(NULL) were it was before leads to killing Qt objects. this looks much more sane now. So any further idea (perhaps in another pull if this requires additional re-work on t	Clarify
1439	6245679	Perhaps move the Shutdown() back to where it was and re-add the #ifdef QT_GUI around the exit() in Shutdown(). This would make Bitcoin-Qt exit via the last return 0 in bitcoin.cpp. 	Clarify
1439	6245977	"Yeah - IMO, the idea to not call exit() at the end of the Shutdown() function in the case of the UI was good. This allows it to wind things down afterward instead of before. (which will eventually also allow it to show some ""Warning - do not shutdown computer while Bitcoin is shutting down"" warning)"	Clarify
1439	6254673	"@laanwj I see 2 problems with your last suggestion.  1. Shutdown() calls ``CreateThread(ExitTimeout, NULL);`` which seems to be a 5 second timer, before the process get's killed anyway, so the Shutdown() function still somehow exits / kills the client. 2. I think an #ifdef is easier / cleaner than a"	Clarify
1439	6255255	"Updated to ensure tray-icon is kept until Bitcoin-Qt exits, no further changes for no UI client. "	nAnswer
1439	6255314	"Well, it ended up with more ifdefs than I thought it would need, but it still looks better than it was imho, ACK. "	Clarify
1439	6263152	ACK 	Clarify
1439	6288245	"Note for whoever merges, close #1182, as this fixes it. "	nAnswer
1439	6294457	"I think we should aim to merge this asap, but as this affects critical functionality Gavin or Sipa should probably take a look at it for a sanity check.  "	Clarify
1439	6299186	"ACK on the changes to core; The exit(0) in Shutdown inside ifndef qt is a bit ugly though, imho. "	Clarify
1439	6299599	"Well, IMO the problem is that ""shutdown bitcoin"" and ""exit program"" are essentially different actions.  That's why I proposed adding a ShutdownAndExit function, and using that where appropriate: in StartShutdown [ifndef QT_GUI] and AppInit. The name would also clearly signal to the programmer that t"	Clarify
1438	6231938	Note atime and compression are both disabled on this ZFS dataset. 	Statement
1438	6232003	"If you want to keep a powerful machine powerful, do not use a userspace filesystem. (I assume thats how you're using ZFS on Fedora 17, because it certainly isn't part of Fedora)  "	Clarify
1438	19244523	Is this still a problem? 	ynQuestion
1438	19244737	"With 0.6.2 sure ^^, with current versions it should be much smoother... "	yAnswer
1438	20259417	"Current versions are buttery smooth. I checked with the old machine. The new machine does 20GB/s from RAM to CPU and 320 MB/s from the SSD, so I have no problem anymore.   But the more optimized the better. Bitcoin should not be a expensive computer boys' club. "	nAnswer
1438	20262922	@Rudd-O If this is no longer an issue feel free to close it. 	nAnswer
1437	6227661	"Whenever I proposed to update to Boost 1.49 for the Win-build I got the answer no that is not importand enough ... see #1023, which even hardens the URI handling. "	nAnswer
1437	6227977	"Dunno, maybe gavin didn't quite understand the phrasing there.  To be clear, this simply encourages using a path of boost_1_49_0 instead of boost_1_47_0 when building with a MinGW makefile, if you add your own -I/-L you can still gladly use any boost version you want.  It also upgrades gitian build "	Clarify
1437	6228011	"I'm with you and I have used boost 1.49 with this mentioned lines enabled for a long time now. I think my pull would perfectly fit on top of what you are doing here, but it seems no one even tried to look at it in detail :-/. "	Clarify
1437	6270376	"I think this feature is big enough it needs a test plan (see https://secure.bettermeans.com/projects/4180/wiki/Raw_Transaction_RPC_Test_Plan for an example of what I'm thinking). Also, since it opens up potential security holes, writing a tool to throw ""fuzzed"" input at it and verifying that nothing"	Clarify
1437	6274621	To test: 1) launch Bitcoin-Qt with a bitcoin: URI to make sure it opens URIs provided at initial start.     Result should be opening directly to the send dialog with the content of the provided URI. 2) while [ true ]; do ./release/bitcoin-qt.exe bitcoin:1JBMattRztKDF2KRS3vhjJXA7h47NEsn2c; done     E	Clarify
1437	6294361	It would be nice to get URL support back in once and for all. If that means requiring boost 1.49 *on windows* that's fine with me. But it's too bad it still needs the monkey patch to be stable :/ Won't the upstream boost developers integrate it?  `Anything larger than 256 will attempt to launch bitc	Clarify
1437	6300139	"@laanwj I consider this pull as a base for further updates to the URI handling code, even if not all parts of my re-work pull #1023 are considered good or mergable, I'm fine with a cherry picking or splitting them. But I think this pull needs to get in ASAP and if we need a patched boost 1.49 on Win"	Clarify
1437	6300706	"I agree with merging this ASAP.  Feels like a deja-vu, but can we detect the patched boost 1.49 somehow, compile time? It would be nice if it failed if one tried to build on windows with URL support without the patched boost. Otherwise, someone building bitcoin manually on windows might run into the"	Clarify
1437	6301160	"@laanwj I guess we need no detection for the Windows users, we just need an official dependency package, which includes the used version of Boost and its libs. "	nAnswer
1437	6301255	"Agreed, but not everyone will be using that, if you build from source you could insist to build everything from source. It's easy to miss.   "	Clarify
1437	6302267	"Why not ``#if !defined(BOOST_INTERPROCESS_HAS_WINDOWS_KERNEL_BOOTTIME) || !defined(BOOST_INTERPROCESS_HAS_KERNEL_BOOTTIME)`` and throw an error. It should be insinde an #ifdef WIN32, too or use defined(WIN32) as addition argument. "	Clarify
1437	6302817	"In terms of erroring if we dont detect BOOST_... flags specified, Id really prefer not to.  I dont want to follow boost and remove the checks if boost upgrades and complicate them with complicated boost version checks.  Anyone who is building bitcoin for Windows should be reading and creating execut"	Clarify
1437	6303212	"-mthreads/-fexceptions doesn't apply to people building on windows. It's a cross-compile specific issue.  Another idea (better than failing) would be to make URL support a build option in bitcoin-qt.pro, which is disabled by default on Windows. Then document it as ""Enable this only with a patched Bo"	Clarify
1437	6303306	"And AFAIK, most people who compile bitcoin for windows do cross compile.  I know several people recently have been on #bitcoin-dev asking how to build it, and ended up giving up and cross compiling in an Ubuntu VM. "	Clarify
1437	6304959	At least I build it native on Windows ;). 	Statement
1437	6359118	Added a #if defined(WIN32) && (!defined(BOOST_INTERPROCESS_HAS_WINDOWS_KERNEL_BOOTTIME) || !defined(BOOST_INTERPROCESS_HAS_KERNEL_BOOTTIME) || BOOST_VERSION < 104900) #warning 	Other
1437	6362559	"That's a good thing, even if it does not look very nice ;). "	Clarify
1437	6371220	I don't think looking nice is important in any way here. It is a complex logical expression because we need a complex logical expression.  ACK  	Clarify
1437	6372560	I think it is important that this functionality gets added soon. I haven't checked or tested the code though. 	Clarify
1434	6232580	"Updated - added ``updateDisplayUnit();`` in  OverviewPage::setModel(), to init the list of last transaction on the overview page with the current display unit. "	Clarify
1434	6254102	"@laanwj Can you take a look at the code, I think this is a rather ""small"" one, which could get in, if you don't want to add/change something. "	Clarify
1434	6281251	"Last commit implements 2 of your suggestions @laanwj , this will get squashed after we are ""final"" :). "	Other
1434	6281861	Removed the ?: and int usage from the SIGNAL. Anything left? 	ynQuestion
1434	6281993	ACK 	Clarify
1434	6282052	"Merged all commits, no further changes, final then. "	Reject
1434	6282405	"BTW one unrelated comment regarding your commit messages. It's not very urgent, and there's no need to change it for current pulls. However, currently you try to trim everything into one line, this makes for very long ""git log"" lines when abbreviated. The general format that most people use for a co"	Other
1434	6381274	"@laanwj Can you merge this now, I'm working on further changes in some of the files and would like to avoid merge-conflicts :). "	Statement
1433	6218940	"Haven't had time to test it yet, but yeah this is better "	nAnswer
1433	6227890	"Updated and added: - link Apply button and OK button when enabling or disabling them (how good is a disabled Apply button, if OK saves too ^^) - use LookupNumeric() from netbase to verify proxy address (via an EventFilter) - allows IPv6 and fixes #821 - change proxy address field to QValidatedLineEd"	Other
1433	6283211	Updated to reflect changes made in #1434 and use a well-formated commit message ;). 	Clarify
1433	6293876	"I've tested it, works great.   The default dialog size is a bit small, I'd recommend making it a bit larger.  Apart from that, ACK  "	Clarify
1433	6300177	"I'm going to add a restart warning for enabling / disabling SOCKS proxy and will re-size the dialog a little. If this is in, it would be really nice to get this into 0.7, do you think that's possible @laanwj? "	Statement
1433	6300472	"Yes, that's possible. Gotta love UI-only changes. "	Accept
1433	6301533	Last update: make dialog a little bigger in size / add warning for enabling / disabling SOCKS proxy 	Other
1433	6302775	"ACK  We should find a more general way of doing the restart warnings later (for example, using a map of QWidget* instead of booleans, so that one function can be used), but that isn't needed for this commit.  **BTW: we probably need a translations update after this?**  "	Other
1433	6304921	"We need for sure a translation update, yes :). I suggest you do a bitcoinstrings.cpp update and I will fetch current translations from Transifex, create a pull and tomorrow I'll generate a new english master file. "	Clarify
1432	6215639	I can confirm this behaviour. 	Statement
1432	6215673	#837 was the pull who introduced the Immature balance display. 	Clarify
1432	6374858	"I have a patch ready for this, but I'm not entirely sure about it. Perhaps another dev can take a look at it first! https://github.com/Diapolo/bitcoin/commit/04e75e4ab9e426b4b0c4e59196dbe5be127ad497  I'm sure the current call to ``GetCredit(pcoin)`` can't be correct, as it does: <pre> if (IsCoinBase"	Other
1432	6377625	"I found out (via a matured amount of BTC), that the displayed balance is not updated correctly (after a client-restart the value is correct though), so I now added an update of the displayed balances on a changed block number.  https://github.com/Diapolo/bitcoin/tree/GUI_fix_immature  Can any develo"	Clarify
1432	6505427	"I seem to have a somehow related problem with official 0.6.3.RC1, which doesn't show unconfirmed balances, although I have a transacion that indeed should be added to unconfirmed balance. Can anyone confirm this? "	Clarify
1432	6658381	@laanwj How is progress going for your fix to this issue? Would be a bad thing if this get's into 0.7 IMHO. 	Clarify
1432	6658403	I don't have much time to work on this at the moment.  	Statement
1432	6658450	"I took a look, but when reaching the boost::signal stuff I was out ;). Too bad... "	Statement
1432	6658539	"You don't have to do anything with the boost::signal stuff.   The only thing that is needed is a function like TransactionTableModel::updateConfirmations, called by a timer, in WalletModel, except that instead of the number of confirmations it recomputes the balances if the number of blocks changed."	Clarify
1432	6783453	Reference to #1559. 	System
1432	6823558	This should be fixed and can be closed now! 	Emphasis
1431	6208335	"IPv6 support should be enabled by default, disabled by necessity. "	Statement
1431	6208550	@jgarzik That's what this does... 	whQuestion
1431	6212706	"What is the practical difference between USE_IPV6=0 and USE_IPV6=-? One compiles it in, but leaves no way to use it, the other just doesn't compile it in. "	nAnswer
1431	6212891	"-onlynet=ipv6 should work, no? "	Statement
1431	6213037	"If you call SetLimited(NET_IPV6) explicitly, -onlynet=ipv6 will just disable all other networks, and there won't be any network left. "	Statement
1431	6213671	That's why it's in an 'else' clause 	Statement
1431	6213859	"Oops, missed that in the diff. ACK. "	Reject
1431	6510890	"Found and fixed some build bugs: 1. Omitting USE_IPV6 in Bitcoin-Qt effectively disabled it 2. The preprocessor might evaluate the right-hand side of && even if the left hand side is false, so complained if USE_IPV6 was undefined "	Clarify
1431	7433270	"weak ACK.  Would prefer a better system for including and overriding USE_FOO defaults.  Some build systems look for a file ""makefile.local"" or ""makefile.cfg"" or whatever.  If it exists, read it and use it to adjust the defaults. "	Clarify
1431	7433435	GNUmakefile can be used for that purpose (I do this). 	Statement
1431	7434612	Would be nice to not introduce something that does not work on Windows or makes building even harder to do @GNUmakefile ;). 	Clarify
1431	7434639	@Diapolo GNUmakefile is more of an out-of-tree config thing. Windows has .BAT files :P 	Other
1431	7632118	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/751b8eb120375a1a045d55f267d2d93d807ab649 for binaries and test log. "	nAnswer
1431	7984407	ACK. 	Clarify
1431	7984635	"So with Qt, now do I need to supply ""USE_IPV6=1"" or is that also default for Qt ^^? "	Statement
1431	7985162	It's default. 	Statement
1431	7993018	It has been default for a long time. IPv6 is not exactly experimental anymore :) 	Emphasis
1430	6203629	"Hmm, I cannot reproduce, but I suppose this is related to an attemped socks connection that takes a long time to timeout, longer than the shutdown code waits for lingering threads.  The solution is either implementing limited timeout for proxy connections, which should be done anyway, I believe, or "	Clarify
1430	7844939	"This seems fixed with current master (I can't reproduce on main- or testnet), so closing this. "	Clarify
1429	6789412	"This needs rebasing, and Im not going to keep rebasing this stuff without any interest in eventually merging.  If it ever gets interest, I may reopen. "	nAnswer
1427	6149098	"I think the old one is preferred if I want to parse Startup time from log file, not caring whether or not the log file tracks timestamp.  PS: I think the timestamp format itself is a little bit redundant. Taking a significant fraction of the log file size. "	Clarify
1427	6150871	"@csyangchen if one is wanting to parse start up times from the log file with timestamps turned on, one wouldn't use the startup time line anyway, but the first line with ""Bitcoin version"", or the line after ""Default data directory"". The ""startup time"" line is entirely redundant with timestamps enabl"	Clarify
1427	6155046	"@rebroad I agree with the point you made. However, a redundant line in debug won't hurt, just not worthy of a separate pull, IMO.  Previously (appeared at least in v0.6.0, fixed by now ) there is a duplicated timestamp output in main.cpp, on the recv message: ""timestamp timestamp received: ..."". Tha"	Clarify
1427	6171446	"@csyangchen The duplicate timestamps are fixed, I created a patch for this a few weeks ago. I also think this pull is unneeded. "	Clarify
1427	6214302	"It's not duplicate if you have logtimestamps disabled. Just because someone might be interested in a few cases where times matter, doesn't mean they want every line timestamped. "	Clarify
1427	6415920	"@rebroad , did you test this at all? It doesn't compile... -.- "	Emphasis
1427	6719094	"@luke-jr everything takes so long to compile on my laptop, as due to the way git works, it causes all file modification times to be changed, so make tried to recompile everything. If I could work out a way for make to use checksums instead of modification times, then my compiles wouldn't take so lon"	Clarify
1427	6720790	"I still think this one is no needed, your other current pulls that re-work debug-messages and stuff make far more sense. "	Clarify
1427	7432772	"ACK, for ever-so-slightly enhanced privacy  "	Reject
1427	7632123	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/8617052cb72f4ac96ce5f8dbf024d7cbf41f0351 for test log.  This pull does not merge cleanly onto current master "	nAnswer
1426	6139208	"I'd like to keep one leading 0 on diff-1 blocks, instead of removing all the 0s, which would leave only 6 0s on current-diff blocks, which IMHO is acceptable, but ACK on the idea. "	Clarify
1426	6140186	I like the at-least-one leading 0 on min-difficulty blocks idea; I've spent a lot of time staring at min difficulty testnet block hashes. 	Clarify
1426	6140210	"One downside of this change:  it might break blockexplorer.com's block lookup (please test, I know it works with the existing lots-of-leading-zeroes format).  "	Clarify
1426	6145819	I see what you mean re testnet. Perhaps I should code it so that it's one leading zero whatever the situation...? 	Clarify
1426	6203715	"Solution: use the low bits of block hashes to identify them, instead of high bits which contain several zeroes? "	Other
1426	6214268	I definitely prefer showing the low bits over high ones. 	Clarify
1426	6219802	"Agreed, as long as someone pings theymos et al to get bbe/blockchain.info updated to support low bit-searching implemented before release. "	Clarify
1426	6221169	BBE doesn't care which bits you use. Blockchain.info doesn't accept partial matches/searches at all. 	Clarify
1426	6222128	"Ah, well then I guess we should just switch to low bits. "	Clarify
1426	6332615	Using the 14 lowest hex characters of a block as identifier should suffice for 100 years (0.2% chance for a collision after 5.46 million blocks). So I'd say use the 16 lowest ones.  	Clarify
1426	6334207	"I'd somewhat prefer to show the full values, because thats what the getblock rpc needs. If we're concerned about space we should create rotation that doesn't stink.  "	Clarify
1426	6346104	"@sipa it's just a debug.log. I doubt anyone will have a debug.log file as long as 100 years, so 14 characters would be an extreme overkill.  @gmaxwell it doesn't currently show full values and never has. The current requirement seems to be that the numbers don't want to be duplicated within the enti"	Clarify
1426	6411056	@rebroad Are you going to update this to show the least-significant (end/tail) N? 	whQuestion
1426	6490750	"Yes, very likely, when i next get access to a computer (next week sometime). "	Clarify
1426	6719744	@luke-jr can I ask your opinion - is it better to hardcode the substr numbers or instead do it in a way that uses the length of the string? 	Clarify
1426	6719926	I'd just go with substr(504) 	Statement
1426	6722622	@luke-jr modified (not yet tested - compiling) 	Other
1426	6723154	wth? 504? hex hashes are only 64 characters long. 	whQuestion
1426	6723181	"@rebroad I prefer the reported hashes in the debug file to be globally and near-forever usable as unique identifiers. I'd just use the low 64 bits of the hash (i.e., the last 16 hex characters). .substr(48) i suppose. "	Clarify
1426	6723281	"... yeah, not sure how I got 504 (except I know I forgot to divide by 8)... long day :(  I meant .substr(56), but I don't mind 48 "	Clarify
1426	6723796	"@rebroad I know it doesn't currently show full values.  @sipa  I still think it should show the full value.  The partial values are almost useless because there is no way to getblock by them. I don't think carrying another index for partial block values names sense, nor do I think precluding hash ta"	Clarify
1426	6733760	updated. now substr(48) (effectively). Next.. shall we shorten the work= field....?! 	Clarify
1426	6733977	How about using the unit GHy? (gigahash year). We're currently at around 11874.5 GHy. 	Clarify
1426	6747803	@sipa how do you turn the current value into GHy? 	whQuestion
1426	6750076	Divide the bnWork number by 31556926000000000 (1 billion times the number of seconds in a year). 	Clarify
1426	6765569	"@sipa Shall I add that change to this pull, or a separate pull (which would need to go in after this one?) "	Clarify
1426	7287607	"Currently there is no way for a user to go from the entries in the debug.log, using bitcoind calls only, to useful information. Is there no intention of correcting the api calls so they accept whatever it is we're dumping into debug.log? This way we can do investigation without writing our own exten"	Clarify
1426	7432867	"Weak ACK, mostly don't care.  BLOCKSUBSTR should be in a separate, zero-behavior-change commit. "	Reject
1426	7434641	BLOCKSUBSTR could take a little comment IMHO. 	Clarify
1426	7434729	"While we're fence-painting, it seems to me hash.ToString().substr(BLOCKSUBSTR).c_str() could be reduced to hash.BlockSubstr().c_str() "	Statement
1426	7632127	"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/7a2670692e7cf455899fdb3dafdff734ce2a794b for test log.  This pull does not merge cleanly onto current master "	nAnswer
1426	7879870	Closing this in favor of #1670 	Statement
1425	6190467	Replaced with #1430! 	Emphasis
1423	6204063	fixed in 0ed0806 	Statement
1420	6277688	"This means you can also remove the following from handleURI:      if(!isActiveWindow())         activateWindow();  ""Binding"" a parameter, as it is called, to a SIGNAL or SLOT is not possible with Qt, so we'll need to keep toggleHidden around.  "	Clarify
1420	6281440	"Updated, and removed this from handleURI:  <pre> if(!isActiveWindow())     activateWindow(); </pre> "	Other
1420	6320846	ACK  	Clarify
1419	6117609	"More details, what is missing or is it a bug in the Qt code!? "	Emphasis
1419	6204119	Is that 0.6.2 or master? 	ynQuestion
1419	6204414	Somewhere between 0.6.2 and master. 	Continuer
1419	6204669	Reason to ask: this is potentially fixed by #1357. 	Clarify
1419	6608347	Seems to be working now 	Statement
1417	6214229	Does this wait until the client is actually shutdown? 	ynQuestion
1417	6214532	"@luke-jr The function is called, after we hide the main Window in preparation of a shutdown, which is the right place. "	Clarify
1417	6214665	"No, the current behaviour showing the icon until the client has exited completely is by design. See bug #908 "	nAnswer
1417	6214760	"Alright, then the call is miss-placed, but it IS needed to fix the icon still shown after shutdown issue. Will update to find a better place :), thanks for pointing that out. "	Clarify
1417	6215373	"@luke-jr Okay, I took a look and come to the conclusion as it's not possible to pretend, when trayIcon will be deleted, we have to call trayIcon->hide() as long as we know it is controllable.  In the present code from master branch this will not succeed and so the icon is displayed, even if the app "	Clarify
1417	6215424	Why can't you simply grab the pointer and hold onto it until shutdown completes? 	Clarify
1417	6215535	"Seems possible, but I'm not sure if I can do this in a clean and sufficient way. I'm sure other devs would say don't touch the Shutdown() function for hiding a system tray-icon and I think so too. If you have an easy and working solution for both problems here, you're welcome ;). "	Clarify
1417	6215739	```C++              Shutdown(NULL); +            window.hideTrayIcon(); ``` 	Emotion
1417	6215782	"Well Shutdown(NULL) calls exit(), so it won't return and cannot reach window.hideTrayIcon(); "	Clarify
1417	6219875	@laanwj Any idea for this one ;)? 	Clarify
1417	6226533	"Yeah, good catch. Shutdown calls exit()... that kind of sucks. This means that execution flow never leaves the function, and thus the destructor is never called.  Luke-jr is right, though, that hiding the icon *before* the shutdown function also isn't desired behavior.  The reason that Shutdown call"	Clarify
1417	6227644	"@laanwj Sounds good, will test and update this pull to only do that change. "	nAnswer
1417	6227750	"Updated and verified to work (on Windows). Tray icon is removed, but is visible until core is shutdown. "	Statement
1417	6228642	ACK 	Clarify
1417	6231547	"NACK, bitcoin-qt never exits if you send it SIGTERM after this (though, to be fair, its not really any worse to how it used to SEGFAULT every once in a while, in any case, maybe we could fix that too) "	Clarify
1417	6231617	"SIGTERM is non Windows stuff, I need your help here :D.  When receiving that signal it is handled via HandleSIGTERM(), which simply sets fRequestShutdown to true. I could only find ThreadMessageHandler2(), which seems to initiate a Shutdown(), right? "	Clarify
1417	6231637	"Correct, after SIGTERM, we end up just calling Shutdown.  I suppose we really just need to replace our Shutdown calls with uiInterface.QueueShutdown() (have I mentioned how ugly that looks when we are building without GUI?). "	Clarify
1417	6231706	"Wouldn't it work if I just extend my pull to modify Shutdown() to be like this in the end:  <pre> // ensure a clean exit for Bitcoin-Qt #ifndef QT_GUI         printf(""Bitcoin exited\n\n"");         exit(0); #else         uiInterface.QueueShutdown(); #endif </pre> "	Other
1417	6231725	Sounds like a good solution. That would also likely fix the current crashes when sending sigterm to the ui executable. 	Clarify
1417	6231753	Last comment was @bluematt.  Do not call queueshutdown from Shutdown that will cause big trouble! The qt event loop is long dead by that point and for non-ui you'd be calling shutdown recursively. 	Clarify
1417	6231761	"I will update, but I need one of you (if you use Linux / Unix) to test and verify this. "	Clarify
1417	6231777	"Personally, Id like to not have to see uiInterface.QueueShutdown everywhere, but be able to call Shutdown which calls uiInterface.QueueShutdown which can call FinishShutdown in its callback, or simply have Shutdown call FinishShutdown directly if we dont have GUI...but maybe Im the only one who does"	Clarify
1417	6231802	"@laanwj Damn, I was too quick ... and missunderstood your comment :-/. "	Clarify
1417	6231997	"@laanwj Well no, I don't get it ... calling ``uiInterface.QueueShutdown();`` triggers ``QMetaObject::invokeMethod(QCoreApplication::instance(), ""quit"", Qt::QueuedConnection);``, which puts a quit() command in the main event loop, right? So why should the event loop be gone when we are in ``Shutdown("	Clarify
1417	6232267	"@laanwj Don't bother with my last question, I had a discussion on IRC with BlueMatt and will come up with a new pull-request tomorrow and close this one. "	Clarify
1417	6235592	"There is nothing wrong with the current sequence. QueueShutdown first winds down the Qt event loop, which, returning in the main function, properly calls Shutdown.  You cannot simply spawn Shutdown in a new thread when the UI is running, this results in crashes so it takes a safer way.  I really don"	Clarify
1417	6235824	"See #1439, which I think is rather elegant. "	yAnswer
1416	6114750	"ACK. It makes ./test_bitcoin spew tons of ""best subset"" messages, but that's not your fault. "	Reject
1416	6298720	ACK 	Clarify
1416	6318520	ACK 	Clarify
1415	6090020	ACK 	Clarify
1415	6090117	"ACK, is probably still referring to bitcoind, where you can leave the - out, but since the - works for both, - should be there. "	Clarify
1415	7277152	what is the exact format because I wrote this but does not work: qmake.exe C:\bitcoin-bitcoin-v0.6.1-621-g12e5881\bitcoin-bitcoin-12e5881\bitcoin-qt.pro -r -spec win32-g++  USE_UPNP=- 	nAnswer
1414	6208351	"sounds like 'sendrawtx' has a bug...  it adds the new tx to relay inventory, but does not force immediate broadcast.  sounds like it should force immediate broadcast too. "	Clarify
1414	6645774	Retract my previous comment... it should broadcast as any other tx. 	yAnswer
1414	6953763	Commit 771ffb5e28a75bf2a99283b3a9c7c40dc0f7907d should fix this issue. 	Clarify
1413	6085005	"NACK-- the compiler is perfectly able to do this kind of micro-optimization, and the code is clearer in its original form in my opinion. "	nAnswer
1412	6207119	"As @laanwj is currently not here that frequently it would be nice to have some other dev, who ACKs on small GUI changes like this one :). "	Statement
1412	6214590	Updated to reflect lukes suggestion. 	Statement
1410	6077823	"Sorry, I was wrong, that field uses a median value, which does not always match the block count -> closed :D. "	Clarify
1409	6074683	ACK 	Clarify
1409	6086175	"I'm not sure if I understand it, do you intend to remove the ""generated"" status from the client? That would lead to more changes, I think of the mature vs. immature state and other strings used in Qt. Perhaps you can clarify this. "	Clarify
1409	6086388	"@Diapolo It seems to set it up so that generation transactions are just treated more like normal transactions and are tagged in the category ""received"".  Since I would guess that anything that made use of this data already should be able to handle a ""received"" transaction, I don't see the issue.  He"	Clarify
1409	6086423	"@wizkid057 I think there are still places in the code that need to be changed for the GUI client to handle generated like received, but I guess @luke-jr should give his thoughts on this, too. "	Clarify
1409	6087323	"It's not meant to make generation identical to ordinary received coins. That would create problems. It's just intended to make the common parts behave the same, so it's not a hassle to handle generated coins properly. With all current versions, it's impossible to tell what address or account generat"	Clarify
1409	6298568	"I like this. Less special casing for generations and ability to assign them to accounts. I do think that changing the way for denoting generations (by ""from"" : ""generation"" instead of ""category"" : ""generation"") may need some discussion first though, as this breaks compatibility. "	Clarify
1409	7471221	It is nice to remove this special casing 	Statement
1409	7633490	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ee9eecb54db794a97de6e5add719aa6c4c020589 for binaries and test log. "	nAnswer
1409	7703265	"ACK on the latest change ({""generated"" : true} instead of {""from"" : ""generated""}).  One minor nitpick: setting the status to ""processing"" instead of ""validating"" only at 2 confirmations seems arbitrary to me. 1 confirmation seems more natural. Anyone else with an opinion? "	Clarify
1409	7707634	"@sipa I also like ""processing"" on 1+ confirmation better, I don't get the 2+ here.  @luke-jr Does this touch or better do you need to look into other Qt code using mature / immature amounts or did you consider all that with the current patch? "	Clarify
1409	7710555	@Diapolo The only effect on Bitcoin-Qt is that it shows the address. 	Statement
1409	7711499	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/22e16c5d56f9506f2ff7fbce01e488bc0551aaf4 for binaries and test log. "	nAnswer
1409	7931754	Can you rebase? 	ynQuestion
1409	7935374	"I don't like the ""processing"" state. I say simplify and go with:  ""confirmed"" -- 6+ confirmations (120+ for generation) ""validating"" -- 0+ confirmations ( 1+ for generation) ""invalid"" -- negative confirmations (contradicted in main chain)  Those three states plus the explicit 'confirmations' number "	Clarify
1409	7939420	"@gavinandresen I think it might be nice to have a state that represents ""possible to spend immediately, but not confirmed yet"" (so 1+/100+); thoughts? "	Clarify
1409	7975862	"I don't mind a ""maturing""/""processing""/""confirming"" state for 1+/100+, but I don't really care. "	Reject
1409	7976399	">  I think it might be nice to have a state that represents ""possible to spend immediately, but not confirmed yet"" (so 1+/100+); thoughts?  +1 "	Clarify
1409	7982809	"Hm. I thought this was supposted to make generated txn work better with accounts, but it doesn't seem to. E.g. listtransactions ""accountthathashadgenerationsenttoit"" still doesn't give the expected results.  "	Clarify
1409	7983236	@gmaxwell It does for me? 	ynQuestion
1409	7983443	"How about: ""invalid"" for conflicted txn / orphan coinbase ""validating"" for 0 ""confirming"" for 1-6 ""maturing"" for 1-120 coinbase ""confirmed"" for >=6 / >=120  In any case, shed painting the terms aside, this appears to work for me. "	Other
1409	7983832	"@gmaxwell Having a special status for coinbases contradicts the main goal of the status ;)  I'd worry ""confirming"" could be misread as ""confirmed"" too easily.  I can rebase this as soon as @gavinandresen makes a final call on the shed painting :) "	Clarify
1409	7985346	"Luke, it is long discussions like this where you're pig-headed and ignore what everybody else says that makes me want to ignore every single one of your pull requests.  So:  fix your idiosyncratic coding conventions for   ... else if.  And get rid of the status key entirely; applications have surviv"	Clarify
1409	7986148	"Rebased without ""status"" "	Statement
1409	7987647	"category changes reverted to be safer (without ""status"" it can more easily be misinterpreted). "	Clarify
1409	7987791	"This is a often requested big improvement, even without the status changes. With the category being left alone, it's reasonably conservative.  I've tested it fairly extensively both on testnet and mainnet wallets.  Future pulls can put the status stuff back in after we figure it out in some future v"	Clarify
1408	6074405	"Updated with all the feedback so far.  Any further work (aside from bug-fixes) will be done on other branches, so this branch is ready for review.  Take special note of the last commit (and its very long commit message). "	Clarify
1408	6789402	"This needs rebasing, and Im not going to keep rebasing this stuff without any interest in eventually merging.  If it ever gets interest, I may reopen. "	nAnswer
1407	6264965	This should be fixed in current master  	Other
1406	6050206	"Whatever you are trying to fix with this, please break it into smaller pull requests. Such a huge diff is insanely hard to review. "	Clarify
1406	6050300	after further review parts are broken and i cant let this out. 	Clarify
1405	6183408	"The ""Add UI InitMessage for -loadblock."" commit should get in asap, but be seperate from this one. "	Statement
1405	6189658	"Finally got around to benchmarking IBD using -autoprune, it was a tiny sliver faster than master (just under 5%) -loadblock'ing to the current block, but its blkindex.dat was only 351MB instead of 554MB.   Thus, I made -autoprune default and rebased. "	Clarify
1405	6206992	"No noticeable speedup here, but ACK on the idea. I'll have a look at the code later. "	nAnswer
1405	6209711	idea ACK.  I like this!  	Emphasis
1405	6789452	Closing in favor of an (eventual) ultraprune.  No point in merging a stop-gap that conflicts with an actual solution. 	nAnswer
1404	6143023	This one for sure includes too many non-relating commits. 	Statement
1404	6145779	"@Diapolo which commits would you want to see removed? It's too much of a headache to remove -quietinitial, so I'd rather wait until that gets pulled and rebase this than remove it. "	Clarify
1404	6146160	"All that are unrelated to ""Download blocks from several peers concurrently"" e.g.: - Make truncating the debug.log file an option. - Show more significant bytes of block hashes. - ...and so on  Don't mix different projects, just open a pull for one thing and this is intended to allow to download bloc"	Emphasis
1404	6149173	@Diapolo is there an easy way for me to test this pull request with those commits on my machine but without pushing them to github? 	Clarify
1404	6413614	"If you really need to depend on other pullrequests, please at least rebase on top of them. I was going to put this in next-test, but it conflicts too much with your other pullreqs...  These commits should be removed or merged under the real changes (only if they're real dependencies): - Show more si"	Clarify
1402	6029769	"Thanks to the keypool feature there is no need to backup your wallet that often. For most users, a backup once per months is probably enough. Make sure to never backup your wallet while bitcoin is running! "	Emphasis
1402	6030734	"hmm, how man new addresses generated with keypoolrefill? I think olso i must compute used addresses itself to determine correct usage keypool command . "	Clarify
1402	6031103	"Wallets essentially consist of transactions and keys. Having only keys or only transactions is useless. Yes, transactions can be reconstructed from the blockchain, but this is slow, will not be possible in headers-only mode, does not reconstruct comments and other metadata about transactions, and do"	Clarify
1402	6792281	"You can increase the keypool size to something like 10,000, then back up very infrequently.  For the rest...  this merges with issue #68 "	Emphasis
1400	6028047	"Ths size grows over time and even if 1.5GB is perhaps a little too large (even depends a little on the used filesystem), I can confirm mine is currently 1,43GB in size! You can safely close this. "	Clarify
1400	6028285	"It seems more likely that the client (bitcoin qt 0.6.2) doesn't create the second file when it should (around 1GB), but I suppose the 1GB might just be a bad guess about the outcome of some calculation on Pieter's part, if it's written to start a new file based on some trigger other than the current"	Clarify
1400	6028443	"The threshold for another file is closer to 2GB.  As for the size, most of the recent rapid growth is this really transaction inefficient gambling site called satoshidice, the second biggest is deepbit mining pool's  inefficient daily payouts (with about 25% of the transactions before satoshidice be"	Clarify
1400	6792309	"Database file size will always be large, whether it is 1GB or 2GB etc.  Each blk????.dat file will grow to 2GB, and then a new blk????.dat is created and appended-to.  The growth of blk????.dat is directly a function of keeping a copy of all bitcoin transactions on local disk. "	Clarify
1399	6213068	"Rebased, refactored the code a bit, and added unit tests. Github fails to recognize it as automatically mergable... "	nAnswer
1399	6332382	Added more tests. 	Statement
1399	6404972	"@Sipa does this fix ``::1`` considered as invalid, if used in ``LookupNumeric()``? "	Other
1399	6405090	"@Diapolo yes; there's even some unit tests that test ""::1"". "	Clarify
1399	6405164	Good to see it got merged :). 	Statement
1398	6016834	"What if someone doesn't have 4.8 installed, but does have another version?  In general, I think people who compile their own binaries don't mind using the latest their system provides. "	Clarify
1398	6017297	"Then they can specify BDB_LIB_SUFFIX= (blank). In general, isn't it advisable to only use 4.8 for compatibility? "	Statement
1398	6278025	"I always compile using 5.x, and never had any problems. I'm not sure how it classifies as shooting myself in the foot. Newer Ubuntu versions don't even have packages for libdb++4.8-dev anymore.  "	nAnswer
1398	6278072	"@laanwj if you ever use a 5.x bdb, your wallet is incompatible with all the official builds of bitcoind/Bitcoin-Qt and downgrading is impossible. BlueMatt's Ubuntu PPA provides bdb 4.8 for newer Ubuntu versions. "	Reject
1398	6278093	"Defaulting to 4.8 makes sense for release binaries, but there we control the build environment very strictly anyway. When people compile themselves, I think whatever is default on their system is best. "	Clarify
1398	6278126	db5.1_dump wallet.dat.old | db4.8_load wallet.dat 	Emotion
1398	6278370	"Oh, didn't know that was possible. Nevermind then I guess. "	Statement
1397	6021273	done 	Statement
1397	6028026	"Thanks @sipa, will open a pull for the new master file later today :), closing this! "	Emphasis
1396	6280945	"Not sure this is needed, but ACK on the code change. "	nAnswer
1396	6605505	ACK 	Clarify
1396	6607718	I still dislike the parameter description. 	Statement
1396	6615675	@Diapolo what do you suggest for the parameter description? I changed it to that as per @luke-jr's suggestion. 	whQuestion
1396	6616439	"I think the parameter name should somehow match the description, so I propose ``Shrink debug.log file on client startup (default: 1 when no -debug)``, which uses a similar wording like -discover in the brackets. If you don't like that just keep it, I guess there are more important problems to discus"	Clarify
1396	6617586	@Diapolo amended as per your suggestion. 	Statement
1396	6617588	@Diapolo amended as per your suggestion. 	Statement
1393	5984145	In spite of the non-determinism of the 'smart time' I like these criteria a lot. 	Statement
1393	6429740	So got around to testing... all my transactions are showing a smart time of 1 (01/01/1970 00:00). Guess I have some fixing to do. 	Statement
1393	6494467	"Reminder: A||B is boolean in C++, not the first value that casts to true. :(  Fixed. "	nAnswer
1393	6681834	"Fixed a bug and tested some more.  Two open issues: - Would be nice if sorting transactions by time in Bitcoin-Qt respected the fixed order; I think Qt does it right now, though :/ - Probably during -rescan and initial blockchain catchup, the block time should be trusted even if the user has transac"	Clarify
1393	7030895	"ACK  Re:Qt, sorting transactions by time sorts the transactions by time, nothing else. Anything else would be confusing IMO. The only thing that can be sensibly changed is the 'default' order, when not explicitly sorting by anything. In the transaction details we can show all the different times.  "	Clarify
1393	7038748	"@laanwj Except for extreme differences in the local clock, the assigned order from this patch is always chronological; but right now, sorting by time in Bitcoin-Qt has no logic behind the order of transactions with the same time. "	nAnswer
1393	7634588	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f45fa25bb9efb6f83409e71b972f07cce0eb4520 for binaries and test log. "	nAnswer
1393	7967912	Where does this stand? 	whQuestion
1393	7977721	Been running fine for me since next-test 2012-07 	Emphasis
1393	7981411	"ACK, works for me, apparently works for other people. "	Clarify
1393	8394447	Hindsight is always 20/20.... ... but this pull didn't get sufficient testing/code review. I think a test plan should have been written and followed to try to catch the bugs earlier.  	Clarify
1393	8397660	"I agree on lack of testing. Unfortunately, the tests it included didn't cover enough (and I haven't thought of any way to actually test the problems found either). "	nAnswer
1392	5942135	ACK 	Clarify
1392	5958313	"Ive tested the heck out of this, it looks good to me.  "	Statement
1391	5927937	"Bitcoin has no ""servers"" - it is a peer to peer application that depends on other nodes willing to send you the block chain. A lot depends on which node is selected at startup to synchronize with. Other than that, downloading is not the most time-intensive part usually, rather verifying and indexing"	Clarify
1391	5933727	Closing this as a duplicate of issue#7  	Other
1390	5923722	I think it sucks to spread files all over the fs! 	Emphasis
1390	6792366	"Bitcoin's definition of 'cache' and XDG's are quite different, I think.  Also, splitting requires database schema update, as per issue #68.  Compliance is not desired, I think. "	Clarify
1389	5911976	"ACK  Tangentially related:  it would be nice to move as much code from init.cpp into net*.cpp as possible, with init.cpp only calling NetParseConfig() or somesuch.  Maybe that would help with qt/optionsmodel.cpp long term maintenance. "	Clarify
1389	5912312	"@jgarzik agree, I considered that, but wanted to postpone that until after tor hidden service support is merged, as that will extend the network config options further. "	Clarify
1389	5948233	"@laanwj ack on the optionsmodel changes? After tor hidden service support is merged, the network option panel should be extended, I think, but for now, this should do. "	Clarify
1389	5954803	updated 	Statement
1389	6040439	"As asked by @gavinandresen: the parameter interactions are now done using SoftSetBoolArg, instead of complex boolean formulas. Also added some comments. "	Clarify
1389	6057659	"ACK on gui changes  I wonder if ""applyproxysettings"" belongs in optionsmodel, though (or the ui code at all). It uses core settings to update core settings, wouldn't it be just as applicable when proxy is changed through other means? "	Clarify
1389	6057733	"Yes, and it is effectively duplicated code from init.cpp for now. That's why Jeff already suggested a common NetParseConfig somehwere - I think that's the right approach. "	Clarify
1389	6107157	ACK.  Lightly tested on OSX.  	Statement
1389	6110843	"@sipa This introduces a small display bug in the Qt GUI, it displays ""localhost"" as default Proxy-IP and it seems hostnames are not allowed there. If I enable the proxy and click apply it is changed to 127.0.0.1.  I think this happens in CNetAddr::ToStringIP(), which resolves 127.0.0.1 to ""localhost"	Clarify
1388	5915352	NACK. Please don't micro-optimize unless you've benchmarked and are fixing some performance bottleneck; otherwise you're just contributing to a code-review-denial-of-service-on-the-core-developers attack.  	Reject
1386	5944030	"The code itself (and JSON-RPC help docs) could use better documentation, IMO. How about letting each filter have its own command? "	Other
1386	5950112	"I really could use this functionality right now.  While you still can, how about renaming the RPC-commands and adding a related one? `notifystart <name> <bitcoinaddress>|0x<hexstring>`  Setup notifications named _name_ about transactions containing _bitcoinaddress_ or _hexstring_ `notifystop [<name>"	Clarify
1386	6207155	"Copying and expanding on the comments in @gavinandresen's gist RPC interface document https://gist.github.com/2839617  1) 'name' should be restricted to [a-zA-z0-9] etc. as suggested  2) although the **implementation** of the interface is currently exact match, the **semantics** are fuzzy match. use"	Clarify
1386	6208512	"1) I suggest allowing '_' in name, so PCRE \w matches.  3) I think '*' fits better here, but don't care strongly. Perhaps make the argument optional, so filterclear() does all?  6) How about supporting longpolling? It's well-established for JSON-RPC already and seems to work reasonably well. With mu"	Clarify
1386	6208680	longpolling-like behavior might indeed be a reasonable solution.  That would obviate the need for an HTTP callback with its own authentication.  	Clarify
1386	6301145	"Rebased, but it no longer builds or works after the CTxDestination updates in #master "	nAnswer
1386	6412808	@jgarzik Do you plan to finish rebasing it? 	whQuestion
1386	6607401	"Closing - out of date.  Consensus seems to agree with the approach, so the pull request will be reopened if/when the branch is updated (volunteers welcome).  Presumably, this would coincide with the introduction of the discussion P2P protocol bloom filter changes. "	Clarify
1384	5890714	"Oops :/ Apologies for the inconvenience.  Agreed with your suggestions. Updating the label as well was the original behavior of `ok`, but the code for that has been changed around a ""few"" times (#1092, #858, #1080, #840) so it might be a regression. It is really hard to keep up with peoples expectat"	Clarify
1384	5890732	I think having an address selected by default isn't ideal.  If I click the address book icon then click 'ok' without selecting an address I would like it to leave the 'to' field unchanged.  Luckily the address I sent the coins to was an old instawallet address of mine that I happened to have kept th	Clarify
1384	5892200	Agreed.  Phew...  	Statement
1384	6262589	"I can confirm this bug in 0.6.2, This only happens when an address has ""(no label)"" in the address book. "	nAnswer
1384	6263105	There is an other unclear feature.  * choose an address with label from the address book * change the label in the send tab * choose the same address again from the address book  Now it won't change the label back to the one from the address book. 	Clarify
1384	6265096	"@burger2 My idea with #1361 was a proposal to make make it more clear what happens by grouping label/address together visually, but it was shot down very quickly.  I'd still like to somehow put label and address in one field, to make it more clear that they belong together, and that it's nonsensical"	Clarify
1384	8800141	Is this still an issue? 	ynQuestion
1384	8803040	Yes. As if you click ok in the addresses and the bitcoin address don't have an label then only the bitcoin address will be copied to the send dialog and the label field still has the old text.  The label field in the send dialog should be empty if the bitcoin address don't have an label in address b	Clarify
1384	8807820	"As I said in my first reply on this issue, we've tried all the simple fixes to this. No matter what, there will always be someone complaining that the behavior is unintuitive, should be different, etc. In the end, it comes down to taste and individual habit, and we cannot take that into account for "	Clarify
1384	8808135	"But issue #840 don't have nothing to do with the address book. It was when you typed in a label and then pasted (ctrl+v in windows) in the bitcoin address field, then the label got deleted.  I think @dooglus should comment on this issue.  And the fix about not selecting automatically when address bo"	Clarify
1383	5900805	ACK 	Clarify
1382	5861884	"I really dont see the point in this, if we request a block, and a node lags behind due to some network congestion, and then we get the block later, there is no reason to drop that peer, if the peer is constantly lagging behind, we may want to not request blocks from that peer, but dropping them coul"	nAnswer
1382	5865333	NACK.  Only disconnect peers that really misbehave. Any disconnect rule that you add has potential to wreck the network in some (maybe unforseen) circumstances. We should be really careful.  	Clarify
1382	5916764	"@TheBlueMatt @laanwj Please can you see Issue #1120 - do we really want to continue having nodes sending thousands of duplicate blocks to each other? If we don't disconnect the peer, then what are the alternative solutions to this problem? By the way, in case it wasn't obvious, this is relating to w"	Clarify
1382	6300881	"Duplicated blocks (and tx as well!) are probably caused from client sending `getdata` multiple times in the first place. It occurs when the workload is high, typical situation during initial download. The operation turnaround time might exceed the request resend timeout, triggering the duplicated re"	Clarify
1382	6733822	"@csyangchen this isn't meant to disconnect to due misbehavoiur, but simply to reduce wasted bandwidth between two nodes. This is a problem still occuring in 0.6.3 with a good internet connection, so unless someone has an alternative suggestion for fixing this, I would appreciate some ACKs please. "	Clarify
1382	7257028	I'm opposed to disconnecting peers for expected behavior.  	Statement
1382	7273877	@gmaxwell what do you suggest instead of disconnecting then? Or do you propose that we continue to waste bandwidth as is currently the case? 	whQuestion
1382	7278391	"I don't completely understand the nature of the wasteful behavior and I can't reproduce it in 0.6.3, so I'm unable to make a suggestion.  I'm just reasonably confident that disconnecting peers for expected behavior is not the right thing to do (and among other problems, poses partitioning risk).  Th"	Clarify
1382	7432535	"This targets one highly specific flood, while ignoring all the other flooding possible within the protocol.  An attacker can just pick another message to flood, including messages we don't notice, but do unpack-before-ignoring.  Given the other two naks, closing. "	Clarify
1382	8293726	"Looking at the closing comment, I think this pull request has been misunderstood. It is not for protection against any sort of attack. The duplicate blocks happen naturally due to the way bitcoin works, due to the set timeouts, and the delays in the network due to processing. Given that there is no "	Clarify
1382	10687242	"Just getting started with bitcoin, trying to initialize a wallet, and after days of waiting to catch up, it seems to me the issue being described here is real and some fix would be quite beneficial.  By way of providing some real world data, here are some stats collected from my client's debug log: "	Clarify
1382	10692534	"I'm glad to see other people confirming this issue. What other options are there other than disconnecting the peer? If peer's utilised more than one connection, then it would be possible to disconnect the transfer without disconnecting the peer, but I'm not sure it's worth coding this just for that "	Clarify
1382	10692550	"The solution is to remember which block was requested from which peer, and not ask it again (unless the old one is really lagging). "	nAnswer
1382	10692568	"@sipa how do you tell if the ""old one is really lagging""? "	whQuestion
1382	10692606	"The core of the problem here is that we have two mechanisms:   1) when we think we don't have all blocks, pick a peer to download them all from   2) when a new block is announced and we don't have its parents, ask them from the peer who sent it  The problem is that these two mechanisms don't place n"	Clarify
1382	10692656	"@sipa No one is suggesting disconnecting a peer for doing what is asked from them. We are suggesting disconnecting peers which are sending _repeatedly and in a sustained fashion_ blocks which are not required.  You also haven't defined how to determine when a ""peer seems unresponsive"". I posit, that"	Clarify
1382	10692729	"I don't think you get it. Peers only send blocks to us, because we ASK them to send us blocks. There is no code that just sends blocks - it's always in response to a getdata. If we receive the same block twice, it is because we asked it twice. That is our fault, not theirs. The problem is that we as"	Clarify
1382	10692817	"@sipa I am aware that peers should only send blocks they've been asked for. There are already timeouts implemented, but these will always be arbitrary and only a guess to determine if a peer is lagging or not. They are therefore not reliable, and IMHO shouldn't be relied on. The problem cannot be fi"	Clarify
1382	10692859	"Of course it is always a guess. You cannot know which nodes are good and which aren't for sure.  But this patch does not fix the problem. The problem is that we request the same block multiple times in certain cases, even when there is no reason to assume the peer is lagging. And then it disconnects"	Reject
1382	10692875	"@sipa you're right of course that the code currently does request some blocks multiple times when it doesn't need to, but that is a separate issue and requires a separate patch to fix that. That fix, however, won't eradicate the situation that this patch mitigates.  There is an argument though that "	Clarify
1382	10692926	"I'll try to explain a bit more in detail why this is not a solution, but this is my last comment in this thread.  Assume we are doing initial block synchronization, so we're sending getblocks, receive invs, download blocks, and send a new getblocks. During that time, a new block is found. One node ("	Clarify
1382	10692976	"@sipa You're explaining things to me that I already know and understand, and I've already said I agree that there could  be a patch to fix what you are describing in my previous comment, and that that patch might be better done before this one (which is still needed to cater for lagging nodes). You "	Clarify
1382	10693301	"I did some initial work on proper request management a while ago, but never got very far as I was working on bloom filter stuff, you can work on it more if you want: https://github.com/TheBlueMatt/bitcoin/commits/bloom%2Brelayblock "	Clarify
1382	16715154	"@rebroad What you are seeing is not due to ""lagging peers"", this is pretty easily tested. Sipa explained why you saw this. We only make the request out to one peer (except in the case sipa outlined) so lagging really has nothing to do with it. "	Clarify
1382	16732271	@gmaxwell a block is requested from another peer if it's not received within 2 minutes. This 2 minutes is rather arbitrary and not a reliable way to determine that a block has failed to be downloaded. It will even request the same block from another peer even when the original peer is currently send	Clarify
1381	5855336	"ACK, long overdue. Compiled and ran on my Mac.  "	Clarify
1381	5856301	"Added new commit, catching deser exceptions for CAutoFile (blknnnn.dat) too. "	Statement
1380	5855852	ACK 	Clarify
1380	5858546	ACK 	Clarify
1380	5859627	ACK. 	Clarify
1379	5852879	ACK 	Clarify
1377	5991375	"NACK.  If you want to time stuff, then use -logtimestamps, lets not dirty up the code with lots of special-case timing logic. "	Clarify
1377	5992289	"@gavinandresen why do we time other things then, such as flushing, etc? "	Other
1377	5992478	Either because those other things were implemented before -logtimestamps or because I didn't notice/ask that they get removed after whatever optimization they were a part of got pulled.    	Clarify
1377	7432463	"nak'd by gavin, closing "	Statement
1376	7432359	"Consensus similar to #1375: ""txnode"" global is not worth it, and is not MT friendly.  The concept seems agreeable -- at times, various IRC denizens have expressed an interest in logging the IP associated with a particular behavior.  It might be easier to approach this from another angle:  maybe in t"	Clarify
1375	5934134	"Is this thread safe?  What if the thread executing the if (txnode) is interrupted after the if test, could another thread wake up and set txnode=NULL ?  NACK in general-- too many code changes, the risks outweigh the (minimal) benefits.   "	Other
1375	5943932	"NACK, example of bad use of a global IMO "	Statement
1375	5978397	"@gavinandresen It's thread safe unless some future change tries to change the value of txnode from a different thread. So far, only one thread uses txnode, so the value won't get changed between the test and the use.  @luke-jr - thanks for the feedback. How would you recommend doing it? I realise I "	Clarify
1375	5979816	"You're right that currently txnode is only set in ProcessMessage, which is only used in a single thread. But I agree it's a bad use of a global. If you really need to know who sent it, pass it along in arguments, or only report the offender from functions that do know.  Not worth it, imho. "	Clarify
1375	5985268	"@sipa I did try passing it in arguments, but I was getting errors about incorrect number of arguments. Perhaps my understanding of C++ isn't quite sufficient.. :-s Is there any way to restrict the use of txnode so that it can't be used by other threads? "	nAnswer
1375	5985441	Too bad C++ doesn't have Perl's locals ;) 	Statement
1375	7432292	"Consensus: not worth it, closing "	Statement
1374	5839369	"If README_windows.txt is updated, I think the NSIS installer should be changed to make it COPYING.txt at least too. "	Statement
1374	5840187	@luke-jr Agreed. 	System
1373	6474226	"If you can, create a patch :). "	Statement
1372	5838171	"That does the trick!  #defining it before every #include seems error-prone, though-- maybe better to -DBOOST_SPIRIT_THREADSAFE in the makefiles ? "	Emphasis
1372	5838320	"Updated commit to alter all the makefiles, though I'd argue that updating five makefiles -- four of which I cannot test -- might be a little error prone too ;)  "	Clarify
1372	5840583	"I don't think there is a way around having at least two makefiles (for qmake and make), but some day it'd be interesting to find the common parts of the makefiles and putting those in a single file that is included from all of them.  "	Clarify
1371	5836007	"@gavinandresen : BOOST_SPIRIT_THREADSAFE should be included in script_tests.cpp and rpcdump.cpp, I'd guess.  Can you try adding it at each location where the json_spirit headers are included?  "	whQuestion
1370	5845000	"I dont see any reason to make nClientStartupTime yet another global, throwing in one more call to GetTime() seems cleaner to me, but maybe I just hate globals. "	nAnswer
1370	5845951	"The global is used by the GUI Debug window and IS present in the current code. It only moved from clientmodel.cpp to util.cpp, to allow usage in the debug.log entry. "	nAnswer
1370	5846520	"Putting something in util.h is very different from qt/clientmodel.cpp, but Im probably just overly global-hating. "	nAnswer
1370	5846883	"Luke-Jr encouraged me to use a global ... seems like it's hard sometimes to get to the best approach. If no one thinks this is beneficial, just close the pull. "	nAnswer
1370	5858857	I don't see why you need a global for this? You only use it once... 	Statement
1370	5858905	"I think its beneficial, and have no problem with it in general, my point was simply to remove the global definitions, and replace the single use in init.cpp with a call to GetTime(). "	nAnswer
1370	5859600	"I checked the GUI code and yes, I can safely remove the whole global ;). Will update tomorrow! "	Clarify
1370	5878706	"Alright, updated and final now. "	Statement
1370	5890751	ACK 	Clarify
1370	5943975	"Yeah, while a global makes sense for what you were doing before, this one-time use doesn't need it ;) "	Clarify
1370	5945564	@luke-jr :-D Was that an ACK then ;)? 	Clarify
1370	5946625	"Looks good, but I only ACK stuff after I have actually tested it myself. ;) "	Clarify
1369	5825353	"Hmm the comment about bitcoin-qt storing settings in wallet can be changed, as that's deprecated. It now uses its own settings store, and moves the settings from the wallet on first run. The support for wallet options is only for backward compatibility. "	Clarify
1369	5825442	ACK 	Clarify
1369	5827492	@laanwj removed comment 	Continuer
1369	5827846	ACK 	Clarify
1368	5828147	"Looks good.  One comment: you have two error feedback mechanisms now. One that pops up a message box (ie, when the address is wrong or when it cannot decode the signature) and one that shows a red message in the window itself. I like the second one better. Can you use it for all errors? "	Clarify
1368	5828340	"I guess that should not be a problem, will try how that looks and update :), good point! "	Clarify
1368	5840687	"I just thought about it a bit, and I guess it'd be nicest to pop up a tooltip at the widget that contains invalid input, on validation error. Maybe even a special ""error"" tooltip (if possible).  We could use the same in the send coins entries. Currently, invalid fields are colored red there on error"	Clarify
1368	5840697	Updated to use the status label for (info / warning / error) message display and resized the window to see the full signature (use BC-address font for display). 	Clarify
1368	5840728	"@laanwj I would like to get this on meged (when final), as your suggestion requires a change to this ui-element and others. Can you show me a screen of how you think of that tooltip ... I currently have not imagination, how that would look :). "	Statement
1368	5840827	"Just a temporary message that points to the field, and that goes away as soon as you click (or after a while). .. you see this commonly on web forms.  "	Clarify
1368	5840878	"Alright, yes I know what you are talking about ... I like those. We should look how to do them :). Any further suggestions for this commit here, did you try it out? "	Clarify
1368	5851994	ACK  	Clarify
1368	5858880	@gmaxwell maybe you want to comment on this? 	ynQuestion
1368	5953924	Rebased and updated to work after #1357 got merged. 	Clarify
1368	5971887	"Updated once more, removed checkAddress() and placed code directly in on_verifyMessage_clicked() function. @gmaxwell Can you comment please :)? "	Other
1368	6031302	"Can another dev, who uses the GUI, please verify this is okay? I have another commit that depends on this one ... any reason not to merge this? Sometimes it takes a little long to get ""small"" changes in ;). "	Clarify
1368	6045969	"Updated to add visual feedback to LineEdits via QValidatedLineEdit class. Any other dev except @laanwj (who is not here currently), who can try this and comment? "	nAnswer
1368	6046642	"Updated to remove AddressTableModel references, as they are now unused. "	Statement
1368	6055887	Updated to resolve a small glitch with the visual feedback (QEvent::FocusIn would not reach QValidatedLineEdit::focusInEvent). 	Clarify
1368	6056548	Updated to add addr.GetKeyID(keyID) check. 	Clarify
1368	6057567	Ack 	Clarify
1368	6057731	@laanwj Great to see you here :)! 	Emphasis
1367	5814166	hm last time I accidentally ran bitcointools against a running node it corrupted the crap out of it. I didn't even think this was supported. 	Clarify
1367	5814225	"Yeah even with DB_PRIVATE cleared, there is a truckload of multi-process usage caveats.   "	Statement
1367	5815417	"I was playing around with this flag too and never had any obvious problems with it. What I observed was, that no __db.001 - __db.006 file is generated, as memory regions are created in per-process heap memory. @jgarzik While you are at it, could you bench with the flag dbenv.set_flags(DB_REGION_INIT"	Clarify
1367	5815448	DB_REGION_INIT seems pointless if DB_PRIVATE is set. 	Statement
1367	5815672	"Seems means no bench :D? Perhaps consider DB_REGION_INIT, if DB_PRIVATE is not set? "	nAnswer
1367	5819291	"I'd like to know why DB_PRIVATE was enabled in the past, but disabled at some point. See commit fdbf76d4f49c2. "	Statement
1367	5824679	@sipa satoshi removed DB_PRIVATE at my urging ;) 	Statement
1367	5825274	@jgarzik Why...? 	whQuestion
1367	5825403	"See above: ""In part, this enables processes other than bitcoind to examine the active database environment."" "	nAnswer
1367	5825582	"Oops, missed the pull request summary. ACK. "	Clarify
1366	5825062	"It comes up with an empty command list, which is correct. If one has not specified or configured how to access a running RPC-server there are no commands to issue. "	Clarify
1366	5844946	"Could you also put it in contrib/debian/bitcoind.install so that it gets installed, or will it happen because its named *.bash-completion? "	Clarify
1366	5847448	"Contrary to what I thought, installation is not fully automatic: One can add it to `bitcoind.install` (this branch), use bash-completion's debhelper (my branch `completion-dh` roques/bitcoin@e18f003b99cd4f0d0897328f6cc9257240a5962d), or ... What's to your taste?  "	Emphasis
1366	5850764	"I would say use debhelper, seems more like ""the debian way""(tm) "	Clarify
1366	5858716	"I'm not sure whether it should be in debian folder altogether? This is certainly useful to other distributions as well. ACK on adding such a file to our source tree, though. "	nAnswer
1366	5858794	"Pushed new version with an extra commit to use debhelper to install. I've kept the commits separate, as the `bitcoind.bash-completion` alone is useful for other distributions as well. "	Clarify
1366	5858869	"We have two (very outdated) man pages in the debian folder (because they were originally written by the debian maintainer and are GPL), so it kinda makes sense to throw this there, but if there is a better place, the build scripts can just as easily pull them in. "	Clarify
1366	5865395	"ACK, seems useful.   "	nAnswer
1366	5865640	I disagree that it makes any sense to put this under debian/; bash completion is distro-independent. 	Clarify
1366	5871612	"If there is a better place to put it, someone should suggest one, in any case ACK. "	Clarify
1366	5873356	contrib/bitcoind.bash-completion 	Statement
1366	5877620	"ACK, nice additional functionality, don't care where it is put. "	nAnswer
1366	5882379	I've redone my branch to put `bitcoind.bash-completion` directly into `contrib/` with a second commit to use debhelper to include it in the Debian package. 	Statement
1366	5888004	ACK 	Clarify
1365	5816238	Does this change anything visually? 	ynQuestion
1365	5816836	I took a screenshot of both initial screens (encrypt wallet) and compared them ... no difference. 	nAnswer
1364	5821146	"Rebased, fixing a merge conflict! "	Emphasis
1364	5827757	"Agree with moving HelpMessageBox to guiutil.h  I'm not sure about the ""options"" naming though. We already have an options dialog. This will generate confusion. "	Clarify
1364	5828006	"I guess we should call the ""options"" in that case parameters as that describes, what they are. "	Statement
1364	5828106	Yes that's better 	Statement
1364	5828699	"Okay, updated to use the word ""parameters"" in this case. "	Clarify
1364	5828932	"Uhm, you don't have to change it everywhere throughout the program. Just for the button... no need to make core changes for an UI improvement.  "	nAnswer
1364	5829268	"I believe it would be a bad idea to show ""options"" AND ""parameters"" for the same thing ... it IS a rename, but it makes sens. Just write ""Bitcoin paramaters"" on a label and when you click show you read ""options"" ... how missleading is this :)? "	Clarify
1364	5829368	"Well maybe call it ""command-line options"" then. It already makes it distinct from the UI options. "	Statement
1364	5829789	That's the best solution ... I need to revert some changes then ^^. 	Statement
1364	5833262	"Updated and now just using ""command-line options"" in the label above the added button and instead ""options"" displayed in the header of the help message. No further changes were made. "	Clarify
1364	6061766	Rebased and ready to merge. 	Statement
1363	5805512	ACK 	Clarify
1363	5807379	"Nice, ACK  "	Clarify
1363	5808962	ACK 	Clarify
1360	5801719	ACK 	Clarify
1360	5802359	"No noticeable improvement here (bdb 5.1), but ACK. "	nAnswer
1359	5800901	"I certainly agree we need to have this merged. I think the functionality it adds is limited (it feels like micro-management where more high-level constructions should be used instead), but its educational value is very high. It helps breaking the ""bitcoin-transactions-as-a-ledger"" abstraction (witho"	Clarify
1359	5805551	Is this UI-wise harmonized with other used dialogs (e.g. add as many settings as possible into the XML-file and remove code)? 	Clarify
1359	5806980	"From reports in #bitcoin, it sounds like you just get a Transaction Failed when fees are required  when the inputs selected don't have enough coin to pay the fee. (e.g. no fee request dialog or anything). This is a little confusing and should be fixed eventually.   "	nAnswer
1359	6104075	Rebased on top of #1416 to split Coin Control from selection refactoring. 	nAnswer
1359	6107226	Thanks Luke.  Sorry I wasn't able to do that for you. 	Statement
1359	6213149	"I was having trouble using this fork with the bitcoinrpc interface. Problem was, the sendFromAddressRestriction variable in cwallet was never getting set, so I would specify a list of ""from"" addresses and the system would ignore them, processing my transaction as if I hadn't specified them.  I event"	Other
1359	6213908	Good catch. Fixed. 	Statement
1359	6361512	"@tril0byte That bug is in git master for now, not related to this at all. "	Statement
1359	6363645	"@Diapolo Please post on the pullrequest (you're posting on an old commit). I don't foresee this getting merged any time soon, unless someone steps up to clean it up - including your changes. If you'd prefer, I can merge a patch you make into my branch. "	Clarify
1359	6364019	"@luke-jr It seems I took a route to a dead-end ... dunno how that happened, had no beer yet ^^. If you are willing to teach me the Git magic I need to do to be able to create a patch, you're welcome :). Do I need to fork your repo and create a pull or is there another way? "	Clarify
1359	6364237	@Diapolo ``` git remote add luke-jr git://gitorious.org/~Luke-Jr/bitcoin/luke-jr-bitcoin.git git fetch luke-jr git checkout luke-jr/coincontrol -b coincontrol # make your changes git commit -a git push # however you normally do it! ``` Then just point me at your branch... 	Emphasis
1359	6381916	"luke-jr: I'm going to start here, when some of my last GUI commits get merged or final, okay? "	Statement
1359	6390197	"Thanks for the git commands, I now have that branch and can start working with :). "	Statement
1359	6404747	@luke-jr https://github.com/Diapolo/bitcoin/tree/coincontrol 	System
1359	6410195	Rebased with @Diapolo 's changes. 	System
1359	6413013	"Is src/qt/forms/coincontrolpage.ui meant to be in this commit?  qmake complains:   WARNING: Failure to find: src/qt/forms/coincontrolpage.ui  and make errors:   make: *** No rule to make target `src/qt/forms/coincontrolpage.ui', needed by `build/ui_coincontrolpage.h'.  Stop. "	nAnswer
1359	6413355	Fixed 	System
1359	6416542	@luke-jr You merged the whole patch ;)? 	whQuestion
1359	6416589	"Yes, but it doesn't work  :( "	Statement
1359	6416617	"What does not work? You did try it before merging, no?  @dooglus: Yes I added that .ui file. Anything wrong with it? "	nAnswer
1359	6416628	"This is what I see:      Program received signal SIGSEGV, Segmentation fault.     0x081d34f4 in OptionsModel::getDisplayUnit() ()     (gdb) where     #0  0x081d34f4 in OptionsModel::getDisplayUnit() ()     #1  0x0809b429 in CoinControlPage::UpdateTable() ()     #2  0x08087113 in BitcoinGUI::gotoCoin"	Other
1359	6416705	Is ``OptionsModel::getDisplayUnit()`` the function which starts with that seg-fault? Did you ever set the display unit via optionsdialog before?  What happens if you comment out in coincontrolpage.cpp: <pre>     if(model)         unit = model->getDisplayUnit(); </pre> 	Other
1359	6416727	"The .ui file didn't find its way into Luke's branch at first, but it's there now.  The display unit is set to BTC.  Changing it causes the amounts shown in other tabs to change as expected.  Commenting out those 2 lines fixes the problem, and then everything seems to work. "	Clarify
1359	6416766	"@dooglus I'm glad this hot-fixes the segfault ... will have to check this in depth later. Strange thing is that does not happen for me on Windows. Thanks for testing my patch. I'm willing to bring this forward now GUI wise and perhaps we can fix the ""bad"" internals somehow to get this merged in the "	Clarify
1359	6417384	"I think the problem is that CoinControlPage::setModel(OptionsModel *model) isn't being called, and so the model pointer is uninitialised.  I don't know how you get away with indirecting through it on Windows.  Oh, except that it's probably 0 on Windows, so the if(model) check prevents the pointer be"	Clarify
1359	6418503	"This fixes the crash for me without commenting out the 2 lines you suggested, indicating that an uninitialised 'model' member is indeed the cause of the trouble:      diff --git a/src/qt/coincontrolpage.cpp b/src/qt/coincontrolpage.cpp     index 3be6813..c7290b9 100644     --- a/src/qt/coincontrolpa"	Other
1359	6420219	"@dooglus Great, yes this will fix it ... currently model is not initialized to 0. This should be done via:  <pre> CoinControlPage::CoinControlPage(QWidget *parent) :     QDialog(parent),     ui(new Ui::CoinControlPage),     model(0) </pre>  Will create a patch later... btw. I find it hard to follow "	Other
1359	6420264	"That's not enough to fix the real problem though.  We need to arrange for setModel to be called somehow, or it will always be 0. "	Clarify
1359	6420282	"It is called in bitcoingui.cpp, see https://github.com/bitcoin/bitcoin/pull/1359/files#L2R393  There are several things todo for the GUI, e.g. update units when you change them in optionsdialog, but that is in the pipe :). "	Statement
1359	6427734	Umm... guys... I fixed this last night :p 	Clarify
1359	6429793	"While we were discussing this was not available here ... as I wrote above can we work with seperate commits until we are final? It's impossible to track changes when it's rebased all the time.  I would also like to use model(0) as everywhere else in the GUI part of the code, not NULL. "	Clarify
1359	6430106	"I suppose separate commits makes sense for this one...  NULL is correct here. 0 is an integer, not a pointer. "	nAnswer
1359	6430146	Can you tell @laanwj he uses a wrong init value all over the GUI.  Btw: http://www2.research.att.com/~bs/bs_faq2.html#null 	Clarify
1359	6430332	"How can I update my local repo with the now current version?  ``git fetch luke-jr`` ``git rebase luke-jr/coincontrol``  Seems to generate to much merge-conflicts, so I believe there is sth. wrong. "	Clarify
1359	6430992	This will discard all local changes and commits in your current branch and set its HEAD to latest coincontrol: ``` git reset --hard luke-jr/coincontrol ``` 	Clarify
1359	6431184	"@luke-jr But this should be safe, as you merged my patch and did only some small further changes, right? When I have a new commit, how shall we proceed further? "	Clarify
1359	6431241	"I did not merge your changes unrelated to coin control. To see the difference between your current HEAD and my coincontrol, do: ``` git diff luke-jr/coincontrol ``` "	nAnswer
1359	6431329	"@laanwj That post was purely ironic, I want all of them to be 0 to stay consistent, nothing more :). "	Clarify
1359	6481900	"@luke-jr That ``git diff luke-jr/coincontrol`` doesn't help, as it's too much difference ... I regularly rebase patches to current master, but coincontrol seems to be not up to date, which makes comparing the branches very hard. My joy to push here fades away, when I don't know what you left out of "	Clarify
1359	6485222	Don't put unrelated things in pulls. 	Reject
1359	6540824	"I would like this extended to work on individual coins, if possible.  Currently I can see the balance at each address, but can't tell how many separate transaction outputs each address balance corresponds to, and can't select individual outputs to spend.  I'd also like it if all the selected inputs "	Clarify
1359	6541191	Accounts are something different I think.  There's no direct correspondence between addresses and accounts is there?  It's possible to move coins from one account to another without creating a transaction.  But it could work with labels.  It's possible to have the same label on multiple addresses. 	nAnswer
1359	6542938	"*Receive* addresses are associated with an account. Coins that originally arrived via an address that - at the time - was associated with an account, remain associated to that account.  Splitting the available coin list based on account is dangerous I think, as it will re-enforce the notion that coi"	Clarify
1359	6547702	@sipa  fair enough. 	Clarify
1359	6898469	Rebased with more of @Diapolo 's GUI improvements 	Statement
1359	6899086	"@luke-jr I just built your rebased version from an hour ago.  The coin control tab is now lacking a scrollbar.  I can scroll the contents using the right-hand edge of the touchpad (probably that's simulating a mouse's scrollwheel), but the scrollbar itself is missing.  It was there the last time I b"	Clarify
1359	6899194	"@dooglus As I currently don't work on this (e.g. found it boring to discuss about cosmetic changes that luke refused to accept, no commits, lack of under the hood updates etc.) I can only guess, that perhaps in the UI file scrollbars are disabled? "	nAnswer
1359	6899272	"@Diapolo It's a shame.  I find it to be a useful feature to have, but after rebasing it over and over I too had to give up on it. "	Statement
1359	6899388	"@dooglus I put great efforts in improving parts of the GUI client over the last weeks, but I think it could need a few more helping hands. You are absolutely right! "	Clarify
1359	6899450	"@dooglus Yes, I see that @Diapolo 's latest changes removed the scrollbar. I'll add it back, I suppose.  As far as just adding commits, I had intended to just pull (fast-forward style) from others. Unfortunately @Diapolo did his own rebasing and merging of his old changes with his new changes, so I "	Clarify
1359	6901504	"@luke-jr I like your feedback most of the time as coding-wise it's valuable ... but most of the time a team-play like here (where you are the master-chief of this patch currently) seems to not work. I rebase all my patches agains the current master in regular intervals, which minimizes merge-conflic"	Statement
1359	7432276	"Consensus:  we like ""listaddressgroupings"", and request that that be submitted in a new pull request.  The current UI, as proposed, is superceded by the raw transaction RPC API, which permits full coin control, and is accessible via the GUI RPC console.  Full discussion took place on #bitcoin-dev ar"	Clarify
1359	11648126	so.. what's happening with this? Is this the best pull to use currently for coin control? 	Clarify
1359	14411941	"> Enough was merged so that you could spend unlinked inputs manually with the raw transaction API  That's nice, but if the raw transaction API were a substitute for the GUI the client wouldn't have a GUI in the first place.  > not a single person was willing to step up to maintain the GUI stuff  Not"	Clarify
1359	14413412	@eldentyrell  Perhaps you are interested in Pull #2343 ?  	whQuestion
1358	5801712	ACK 	Clarify
1357	5805510	"What do other people think about using boost::variant?  I'm not a fan of the ""write a little class to do simple things"" style of programming that it brings, I think it just obfuscates the flow of control and makes debugging harder.  (oh, and creates god-awful compiler errors if you screw up)  "	Clarify
1357	5805585	"The main motivation for this patch is to make a clear separation between key identifiers and addresses, split internal representation from their base58 encodings, and sanitize header dependencies.  If people have a problem with boost::variant, I have absolutely no problem to write an ad-doc CTxDesti"	Clarify
1357	5830643	ACK 	Clarify
1357	5858792	@gavinandresen what say you?  	whQuestion
1357	5878643	I like the refactor.  It would be really nice to have English-language rationale for the design of CKeyID/CScriptID/CPubKey/CTxDestination in the .h file(s) and not just in the commit comment.  	Statement
1357	5913925	"Rebased and fixed unit tests.  @gavinandresen: added some comments, as well "	Other
1356	5805573	"@gmaxwell To understand the feature as it's intended, I need to supply a signature and a message and won't get the address out of the two. I just can verify, that the person, who send me both seems to be the owner of the signing address (I don't know or don't need to know). "	Clarify
1356	5817773	"I did some further tests and it seems the verifymessagepage is badly broken!  - create a signature from a testnet-address - start normal net client - paste signature and message -> no error, displays a bitcoin address (but not the one used to sign the message) - paste only signature -> no error, dis"	Clarify
1356	5819244	"@Diapolo that's quite expected - the signature does not encode whether it's from testnet or not. The key recovery mechanism (which does require the message, by the way) can recover the public key, but the address that corresponds to it depends on which network you're on. "	Clarify
1356	5820310	"@sipa: Alright, even if the behaviour is expected, I think the verifymessage page should act like the RPC ``verifymessage``. It does not make any sense to ""recover"" an address (or key) that was not used to sign the message. As I wrote, the current state allows to use a valid signature, enter any mes"	Clarify
1356	5822171	"@Diapolo both the testnet address you signed with and the bitcoin address you got are the same key; you can export it from testnet and import it to mainnet to use it there. Pasting the signature without the message is obviously a bug for sure,  though, and I do believe the behaviour should be correc"	Clarify
1356	6505365	"This can be closed, as even without the tabbed UI, the current verify dialog matched the RPC-call behaviour. "	Clarify
1356	6608360	Confirmed 	Statement
1355	6752332	"ACK on longpolling support in general.  Long polling turns out to be a useful way to avoid http callbacks, with all the authentication that that entails.  1) it is ugly and fragile to unlock, cv, then relock.  Disappointing and would be nice if there were a better solution (note: that is not a NAK) "	Clarify
1355	7431691	ACK longpolling support  Change appears mostly ACK-worthy.  I worry about adding a new lock deep inside SetBestChain though. 	Clarify
1355	7636048	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f1d42a05fe27d14f258ec5e1b15774dad583d458 for binaries and test log. "	nAnswer
1355	7688951	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/650ea32bbd60ac149809333131bd887537afa477 for binaries and test log. "	nAnswer
1355	7700110	Rebased 	Statement
1355	8268875	"Re-rebase requested, now that BIP 22 is merged "	Statement
1355	8277735	done 	Statement
1355	8284609	"1) It accesses hashBestChain outside of locks.  2) pointless wrapping inside do..while(0) block  3) BIP 22 just says ""longpollid"" is a unique identifier.  This code treats it as a block hash, not a job id.  Thus, this change seems to hardcode unspoken assumptions about the longpollid.  4) The code d"	Other
1355	8285420	"1) Where?  2) That exists so it can be break'd out of. I suppose it could probably work just as well with yet another nested if, though.  3) ""longpollid"" is unique per long poll event; bitcoind only has such events when a new block is found, so the previous block hash is a fair fit. Clarified BIP 22"	Clarify
1355	8378016	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/01e0e197ebb96cb14971c672b5704306e3ad0f1f for binaries and test log. "	nAnswer
1355	10378286	"Rebased without the while(0). I still don't see any hashBestChain accessing outside of locks, after looking over it again. With regard to TCP disconnects, I did look into this, but it seems not worth the effort considering: 1) boost has no way to detect the socket being closed without reading 2) it "	Clarify
1355	18694165	"No code objections.  The main question remaining on this, our oldest pullreq:  do we want/need it?  "	nAnswer
1355	18896443	I tested this a while ago and did not find it suitable for deployment as is.  1. The long polling only returns when a new block is found.  Ideally it should also return periodically to update the set of transactions.  (Do we really want to encourage mining without including a reasonably up-to-date s	Clarify
1355	21083503	"Err, no I didn't :( "	nAnswer
1354	5802577	ACK 	Clarify
1354	5807336	ACK 	Clarify
1352	5788608	How did you test this?  	whQuestion
1352	5790084	With an own build and the RPC console which is part of the current master. Anything badly wrong with the code or what's your intention to ask? 	Clarify
1352	5790852	"I'm looking for a simple test plan, something like:  Note the time and immediately run bitcoin  Wait two minutes.  Call getinfo  EXPECT: client startup time reported is the time noted immediately before starting bitcoin (or within a second or two)  If I'm reading your code correctly, that simple tes"	Clarify
1352	5791071	"Now I get it, you are right ... that is not a problem for Bitcoin-Qt as GetClientStartupTime() is called on init, which is not true for bitcoind. So for this to work we (I) need a place to be allowed to call GetClientStartupTime(). What is the best place to do this? I did not want to use a global, t"	Clarify
1352	5797110	"Changed back to a global, which removes the need to explicitly initialize the static const int64. This needs to get tested for bitcoind, as I can't compile that! Tested with Bitcoin-Qt and there it works. The startuptime in getinfo via RPC console doesn't change. "	Reject
1352	5798895	Closing this until it is tested with bitcoind.  	Statement
1352	5800442	"Updated and hoping someone can test this :). @luke-jr See: https://github.com/Diapolo/bitcoin/commit/e9558a2bd022823e232b23443ed2a124ed3715b3  I don't know, why the last update is not showing up here ... weird. "	nAnswer
1352	5801382	1. Note the time and immediately run bitcoind 2. Wait until debug.log shows it has finished starting 3. Wait two more minutes. Call getinfo EXPECT: client startup time reported is the time noted immediately before starting bitcoin (or within a second or two)  RESULT: Works correctly with bitcoind an	Clarify
1352	5801437	"NACK.  Process startup time is available from the OS, no need for this functionality: http://linuxcommando.blogspot.com/2008/09/how-to-get-process-start-date-and-time.html  (don't know about Windows, but I'm sure it has something similar)  "	nAnswer
1352	5803086	"Gavin, this isn't adding new functionality, it's just making bitcoind on par with a feature already available in Bitcoin-Qt. Process startup time is only available from the OS if someone is on the local system. bitcoind still supports binding external IPs for LAN use. "	nAnswer
1352	5805208	I think it's rather bad to use OS-specific code for such a small thing like this is. The code is portable and already in (only in another .cpp file). Like luke-jr said... 	Clarify
1352	5808754	Rebased to be mergable again! @gavinandresen What about re-open and accepting this or do you still prefer a non-portable approach? 	whQuestion
1351	5796076	Updated to reflect suggestion from @luke-jr. 	Statement
1351	5801603	"NACK.  It would be better to get rid of usage of strncasecmp all together and use boost's case-insensitive string support.  E.g.     -        if (strlen(argv[i]) > 7 && strncasecmp(argv[i], ""bitcoin:"", 8) == 0)     +        if (boost::algorithm::istarts_with(argv[i], ""bitcoin:""))  istarts_with is in"	Other
1351	5805212	"@gavinandresen Are you fine with massive boost usage now? I will update that pull and use what you suggested, no problem. "	Reject
1351	5805448	Closed in favor of #1363! 	Emphasis
1351	5805496	"RE: ""massive boost usage"" :  I'm all for making the code clearer and more cross-platform, and we're dependent on boost anyway. The string algorithms are nice little self-contained pieces of functionality.  But I'm on the fence for changes like sipa's pull request that uses boost::variant for bitcoin"	Clarify
1351	5807274	"*creates cryptic compiler messages, etc.*  One nitpick: you could use clang. In contrary to gcc, it has wonderfully clear error messages, even with template metaprogramming. Also it compiles much faster.  But I agree that usage of boost should improve readability, not decrease it.   And compile-time"	Clarify
1350	5779450	ACK 	Clarify
1350	5781115	"Saw that in the code yesterday and had the idea for a similar pull, ACK. "	Reject
1350	5788649	ACK 	Clarify
1349	5779058	"Blown up by 6d64a0bfed8636da4a0a5b7a4bf68cff2abbf035, after merging by hand it dies because key.cpp doesn't #include &lt;sync.h&gt;.  Introduces a harmless looking  signed compare warning key.cpp:388:3.  Have it running on a node now. "	Other
1349	5779164	Code appears correct to me.  Comments inline...  IMO push those refactors into the tree immediately.  	Clarify
1349	5779253	"@jgarzik if your 'log-worthy event' comment is also on the oversized orphans (like 183 instead of 191), I thought the same thing.  "	Clarify
1349	5779266	"both, really "	Statement
1349	5787180	"@gmaxwell : I want to keep this pull based on 0.6.2 in case we decide we need a 0.6.3.  @jgarzik : ACK, I'll fix the comments. I think encapsulation in a class is overkill.  @SergioDemianLerner  : excellent catch on vSpent, and I 100% agree this code needs extremely careful review and as much testin"	Clarify
1349	5813511	ACK 	Clarify
1349	5821060	"Gavin: can you estimate the time it takes to verify a signature compared to the time it takes to get the result from the cache? There should be a factor of at least 100x between them, but the test code seems to disagree with this. "	nAnswer
1349	5821270	"@SergioDemianLerner I'll isolate and benchmark the cache unit test to see why cached signatures are taking 50ms to validate.  Note that all of the CScript interpreter machinery is still being run (I am testing/measuring at the VerifySignature() level, not a the CKey:: level).  "	Clarify
1349	5851790	What I did:  Used valgrind --tool=callgrind and hacked versions of test/DoS_tests.cpp to isolate and measure just the cached signature verification code.  What I found:  Two things slow down cached signature verification:  1) Decompressing compressed public keys. Using uncompressed public keys almos	Clarify
1349	5852538	"Great! A lot of useful information!  Remember that I had suggested caching (outpoint,script)->bool and not the signature verification (signature,pubkey)->bool to get all possible speedups.  "	Clarify
1349	5852732	@SergioDemianLerner  Thats actually a bad idea.    Otherwise I can just create endless numbers of scripts of the form push $randomnumber pop  [normal script]   with no computation on my part in order to bypass the cache. 	nAnswer
1349	5856183	We're caching only the scripts that verify ok so that kind of attack does not work. 	Reject
1349	5856199	"Also I had suggested caching (outpoint,hash(script)) -> bool to reduce memory consumption.  "	Other
1349	5858817	See follow-up pull #1380. 	yAnswer
1349	5860763	"@gmaxwell You are right. Scripts cannot be easily cached. We would need an pushdown automata parser and optimizer to compress scripts and erase all garbage.  It would be interesting to program such an algorithm to allow clients to ""standarize"" scripts, detect and remove hidden messages while transac"	Clarify
1349	5871490	"Although IsStandard() check would prevent  ""PUSH $randomnumber POP {normal script}"" scripts from being forwarded, so it may be possible to cache at that level too. "	Clarify
1349	5872807	"@SergioDemianLerner  I picked a toy example, and besides, we wouldn't want to adopt a design which strongly discouraged expanding IsStandard in the future. "	nAnswer
1349	5877247	ACK.  	Clarify
1348	5777260	It would be nicer to find a comparable icon under a free license (CC Attribution isn't free IIRC) 	Clarify
1348	5780649	Sheesh I searched half the internet for a non-(L)GPL icon (and free for both commercial and non-commercial use) and it's still not free enough for you. 	Clarify
1348	5786389	LGPL and GPL are at least free... though I can see how GPL would be a problem for us. 	Clarify
1348	5787041	"Ok, I'll find a (L)GPL icon instead. No problem.  "	nAnswer
1347	5775415	"@jgarzik I would argue that had this mapping been named mapWaitingFor (as per #1341), this bug would have been less likely to have occurred, since upon renaming it becomes more intuitively obvious that it's in the wrong place in the code.  I do think quite strongly that #1341 should be re-opened for"	Clarify
1347	5790663	How should this change be tested?  	whQuestion
1347	5811712	"Not tested, but @rebroad's reasoning sounds correct to me. mapAlreadyAskedFor contains getdata requests that have not been answered yet. If AlreadyHave() returns true for an inv, there is no reason to keep waiting for it. "	nAnswer
1347	6605358	"mmm.  I feel like I'll regret this, but ACK.  "	nAnswer
1346	5774808	Sorry to have introduced that one ... 	Statement
1346	5775237	"Ok, removed the font tag completely.  I've also made it so that the (out of sync) label appears directly after Wallet and Recent transactions, and is not aligned to the middle. "	nAnswer
1346	5775360	"I can't verify that change by just looking at the diff, which hits me hard, but ACK to the intention :D. "	nAnswer
1346	5775516	Why not simply try it out?      $ git add remote wumpus https://github.com/laanwj/bitcoin.git     $ git fetch wumpus     $ git checkout wumpus/2012_05_overviewpage_restore     $ (build...)  	Clarify
1346	5775587	"I guess you will LOL, when I tell you how I test commits. Merged ones to master go into Bitcoin, I fetch them via git fetch upstream, rebase and then open a file-compare-tool and add every changed line into my test-build and compile it. Now next problem was I did never use other remotes, just the bi"	Clarify
1346	5775826	"Hehe, that does sounds quite inefficient indeed.  The simplest way to do it is to `git clone https://github.com/laanwj/bitcoin.git` into a new directory then check out the branch `git checkout 2012_05_overviewpage_restore`. Then build from there.  Remotes are essentially the same, but allow for trac"	Clarify
1346	5775939	"Thanks for this Git lesson :). I'm already advancing, my first pulls were done via merges and I created so much mess, Con (developer of CGMINER) still hates me for them I guess ^^.  Would a ``git clone https://github.com/laanwj/bitcoin.git bitcoin_wumpus`` work, so that I can use bitcoin_wumpus as d"	Clarify
1346	5776002	"Yes, that's would work well. You don't have to do anything on the github website. You can make as many local clones and forks as you want, that's the advantage of a distributed VCS.  I use `` (backticks) for the commands. "	Statement
1346	5776072	``Thank you once more!`` 	Emphasis
1346	5781393	"I need your help GIT-wise, sorry to OT this discussion :). I did:  ``git clone git://github.com/laanwj/bitcoin.git -b master bitcoin_wumpus`` ``cd bitcoin_wumpus`` ``git remote add upstream git://github.com/laanwj/bitcoin.git -m master`` ``git fetch upstream -p`` ``git checkout 2012_05_overviewpage`"	Clarify
1346	5781410	git checkout upstream/2012_05_overviewpage  edit: `git branch -a` to get a list of all branches 	Statement
1346	5781536	Ahhh okay currently I only checkout local branches and this is a remote one ... 	nAnswer
1346	5781645	"I guess I should have added ``_restore``, now it worked :). Checked out the changes and they work and look good, so ACK! "	Clarify
1346	5781823	Moved the color:red stylesheets to the XML file.  	Clarify
1345	5774707	Diapolo you should get a job at Microsoft and get them to remove all those ugly _ from the APIs :)  ACK  	Clarify
1345	5776206	"it is disappointing that the #define lives in two places, rather than one central location. "	yAnswer
1345	5776266	"At some time we perhaps should introduce something like a special windows header, as there are a few places were there are duplicate WIN32 things used in the code (that IE define for example). "	Clarify
1345	5776469	"Yeah, windows requires a lot of that hand-holding in the form of extra defines / un-defines. It might be worth making a config.h header that includes base OS includes and the necessary voodoo such as defining (u)int_XX types. On the other hand, that can easily grow out of hand into a headers.h-like "	Clarify
1344	6280672	ACK. 	Clarify
1344	6719350	@luke-jr whoops. fixed. thanks for helping. 	Statement
1344	8213517	thanks! 	Emphasis
1343	5774980	"This changes the accounting to include the local node, which is probably incorrect "	nAnswer
1343	5781779	"@jgarzik are you sure? I thought my edit simply added a printf, but doesn't change the logic. I've just double-check. Yup, it doesn't change the way local nodes are treated, it just reports when it happens now. "	Clarify
1343	5788597	"nMisbehavior increment was moved prior to the IsLocal() test, changing behavior. "	nAnswer
1343	5801628	"NACK because of the nMisbehavior change, we don't want IsLocal nodes getting banned.  "	Reject
1343	5809280	"ACK, if/when the ""nMisbehavior += howmuch;"" line is moved back to its original position. "	Clarify
1343	5819242	"Ah. Sorry, yes, @jgarzik, I do see what you mean now. I shall move the nMishehavior line back to its original location. Doing so now. "	Clarify
1343	5819362	"Ok. Now updated. The only change now is the printfs, and the change of nMisbehaviour is no longer moved. This move would not have changed anything though, as the only place where the value is read is in this function, and it's only acted upon if the peer is NOT local, so the treatment of local nodes"	nAnswer
1343	6280635	ACK. 	Clarify
1343	6719664	ACK 	Clarify
1343	6719873	ACK 	Clarify
1342	5774959	"ACK, though I'm curious if others want to preserve the old behavior "	Clarify
1342	5801660	don't care 	Reject
1342	5812977	ACK 	Clarify
1341	5773943	"I know from own observations, that core devs dislike variable or function renaming without a very good reason ;), only wanted to say... "	Clarify
1341	5774094	"Principle of least astonishment is usually the best reason for such a change, along with naming conventions probably coming a close second (or joint first). "	Clarify
1341	5774944	"NAK, breaks other more important changes for little gain "	Other
1340	5774921	"Timing the operation is useful, but there is not much use in reporting the other information again.  Just follow wallet.dat's lead and say ""flushed foo.dat NN ms"" "	Clarify
1340	5775244	is this better? 	ynQuestion
1340	5775797	@jgarzik I think it would be nice to define a standard format for these time-measuring log entries all over the code. 	Clarify
1339	5774887	"I found it useful for noticing IRC activity, and gauging channel participation rates.  Plus, IRC is disabled by default, so not really worth that much worrying about it. "	Reject
1339	5775054	oh.... don't the pull requests stay open a bit so that other developers can comment...? 	Clarify
1338	5776297	"1) the txnode bit is NAK'd.  not thread safe or really 100% accurate, and the value of the information is too low compared to adding that variable  2) the top, oh, 75% of this patch seems ACK-worthy, though it is changing High Value Code for a bunch of debug output, so the justification is not very "	Clarify
1338	5781746	"@gmaxwell how would you code it so that it reports the peer in question for a DoS(100) event? I've been testing this for over a month and not noticed any problems. What sort of symptoms from being thread-unsafe would you expect to see?  Regarding changing of HVC for additional information, does this"	Clarify
1338	7431259	"This does seem interesting, but I think we will have the TX hash logged elsewhere, if an error occurs.  Just not a big driving need for this change, and it's not collecting ACKs, so closing.  PS.  You added a ton of redundant braces { }  This is too big.  If you can (a) remove the redundant braces y"	Clarify
1337	5772930	"As ""Add build directory to .gitignore, so that it's not tracked."" was merged to master, you should rebase this to not include that commit again.  And I'm sure (as you change more stuff and not only add ""-quietinitial"") you should split things up and explain more what your changes are doing. "	Clarify
1337	6032211	"I've refactored this, making it simpler, and also separating the AskFor into two functions now, one for txs and one for blocks. This will make it easier to merge in #1404. "	Clarify
1337	6280503	Why does this add a function AskForBlock? It seems to change more than just disabling some debug output. 	Clarify
1337	6281296	"I think rebroad is currently learning the tricks and handling of Github, this took me a while, too :). "	Statement
1337	6345808	@sipa The addition of AskForBlock is explained above. It's due to #1404. 	Statement
1337	6792496	"Sorry... in general this is just a huge amount of changes for little value, during a special condition (IBD).  These are events that might be interesting (if they fail or have problems or simply do not appear, when they should), even during initial block download.  NAK from me....  though if the oth"	Clarify
1337	7431011	"Consensus does not seem to want this, closing. "	Reject
1335	5770508	ACK 	Clarify
1335	5770537	"Ideally, the build directory is *outside* the repository. With qmake you can easily do this:      $ cd ..     $ mkdir bitcoin-qt-build-desktop     $ cd bitcoin-qt-build-desktop     $ qmake ../bitcoin  With the makefiles it's probably possible with some trickery.  "	Clarify
1333	5769428	"ACK  BTW, wouldnt't the same be needed in the other makefiles?  "	Other
1333	5769653	"@laanwj maybe... I'll track them down as add to this commit, shall I? "	Clarify
1333	5769721	"@laanwj ok, other Makefiles also updated. Thanks for pointing this out. "	Other
1331	5768171	ACK 	Clarify
1330	5763239	Can you plase also fix this in the crypter.cpp and use a more detailed commit-message? If you do so I'm fine with this. 	Reject
1330	5763389	Done 	Statement
1330	5763527	"Good, now if you merge them into 1 commit everything is perfect :). ""git rebase origin -i"" helps :). "	Clarify
1330	5764410	I don't want to be a party pooper but uhm... the file *is* called COPYING:  https://github.com/bitcoin/bitcoin/blob/master/COPYING  I cannot find a license.txt anywhere in the repos.  	Reject
1330	5764554	My mistake.. So this means all the other headers are wrong? And should instead be changed to COPYING? 	Clarify
1330	5764646	"I just noticed that the file is copied as `license.txt` on win32 for the gitian build.  ...confusing... Then again, I suppose the name in git is leading.  "	Reject
1330	5764701	Then it's wrong in ALL other headers and cpp files ;). 	Statement
1330	5783948	"Will make a new pull for this, updating the license header in all the necessary files.  "	nAnswer
1329	5765151	"If everyone thinks the other correction substitutions are a bad idea, those can be removed, let me know....  "	nAnswer
1329	5779142	I'd really rather do something like highlight them in red in the interface rather than silently correct them. But maybe thats just me?  I don't think we should correct them for the same reason that we don't try all 1596 one character variations when an address is invalid to see if any give a proper 	Clarify
1329	5780876	"I've removed the correction. After the last commit, the O and 0 and such can no longer be typed the address field and it will only accept true base58 characters (and whitespaces, which are deleted).  "	Clarify
1329	5793860	Maybe it should pop up an error message explaining that it's ignoring it? 	whQuestion
1329	5794448	"Maybe. It'd be nice in general to be more verbose with validation, and give useful hints. But that's not the goal for this pull.   In the case of zero-width spaces, the users don't even know the characters are in there, so there is no reason to tell them about it either. It should just work.  "	Reject
1329	5827646	Added comment to validator function 	Continuer
1328	5761836	"Hmm, strange, some people tried this on OSX without problems...  Anyway, I suppose Sleep() could move to sync, if it's a problem. "	Clarify
1328	5761923	"Probably depends on the compiler version. Newer compilers will reject the use of undefined functions and types in parametrized templates. Older compilers will only check at instantiation time, so will let this pass. "	nAnswer
1328	5762173	"Where exactly is the circular dependency between those headers? `sync.h` includes `util.h` only on OS X if this patch is applied, but `util.h` only includes `netbase.h` which does not include `sync.h`.  How would you prefer this to be solved? A forward declaration or moving the `Sleep()` function ar"	Clarify
1328	5762301	"You could also help testing #1292, which gets rid of the sleep workaround on MacOSX.  "	Clarify
1328	5762511	Looks much better. Let's continue with that instead. 	Statement
1327	5763077	"Seems like that's the show/hide function, but isn't that the expected behaviour? "	Statement
1327	5768214	"Yes and no. The thing is when bitcoin-qt is not the front/shown app and you click the dock icon, it should come to the front and be usable. What happens is when you click the dock icon it comes to the front for an instant and then it disappears. When you click it a second time it remains at the fron"	Clarify
1327	5769236	"Indeed, that behaviout is not present on Windows, where it works like you expect :) "	Statement
1327	5840098	I've been experiencing the same issue. OSX 10.7.4 also.  	Clarify
1327	5841256	I am very hopeful it will be fixed. Is very annoying. 	Statement
1327	5841432	Perhaps it is related to this line of code @laanwj? https://github.com/bitcoin/bitcoin/blob/master/src/qt/bitcoingui.cpp#L407 	Emphasis
1327	5851637	I suppose we can simply remove that line. The OS does already what it is supposed to do (hide and show) by default? 	Clarify
1327	5851757	Please help testing in #1379  	Statement
1327	5876593	Should be solved 	Statement
1327	9755211	Any way to help test this? I've never seen this on 10.8.2. 	Clarify
1327	9762593	I'm running 10.7.5 and have not tried the test version shown above as I do not know how to use it unless I have a binary. 	Clarify
1326	5781630	"I've closed this pull for now, as it was opened for comments, but it's not ready to pull. It still needs: 1) stuck management, and 2a) either a separate AskFor function for txs and blocks, as as it's currently written, it'll getdata the same tx from many nodes at the same time, or 2b) the same treat"	Clarify
1326	5983705	"https://github.com/rebroad/bitcoin/commit/f11b01d6c3f0c8eeeca06ba210af08a51887acbc is an update of this pull request, and for some reason has ""detached"" from this pull request, so I'll have to raise another for this commit once I've done enough testing.... "	Clarify
1325	5751820	"Sneaky. But I think this would be pretty simple to solve; in the correction phase of BitcoinAddressValidator::validate, delete these characters from the string.  "	Clarify
1325	5752063	"I don't _generally_ like the idea of the validator ""fixing"" broken addresses, because it's perfectly possible for one character variations to also be valid.  ... but the case of random entities stuffed in, that seems pretty safe to fix to me.  Perhaps we should decode any entities, then strip only w"	Clarify
1325	5753926	"I don't like the idea of decoding entities at all.  From what I understood it is not about entities stuffed in, but actual unicode characters. Those show up in html source as entities, but appear as normal utf-8 characters when copy/pasted into a plain text field. Those QChar(8203) are easy and safe"	Clarify
1325	5754064	"We already replace other characters: l and I are replaced by 1, 0 and O by o. This is just a convenience for the user and does not give any confusion in base58.  Edit: but I agree that, beyond that, we should not try to 'fix' the addresses.  Edit.2: I also think you mean another validator, this is t"	Clarify
1325	5763563	See #1329 	System
1325	5763660	"I must have missed that change going in, as I specifically remembered NAKing #552 .  I continue to think that the character substitution is a bad idea (in a way that whitespace removal isn't). "	nAnswer
1325	5764060	"It was already in there from the beginning of bitcoin-qt. I think it is harmless, at most. Users typing in base58 addresses from paper, for example, should not have to care if something is a 0, o or O as they look visually the same and AFAIK that was the intended idea of base58.  "	Clarify
1325	5827674	Fixed 	System
1324	5746921	"ACK, fix works ... but it's kind of ugly to include that .moc. "	nAnswer
1324	5749800	"Well, blame Qt for that... it's the normal and documented way to do it. "	Statement
1323	5764346	"Updated and rebased, see initial description. "	Statement
1323	5807361	ACK 	Clarify
1322	5739081	"This is not the right way to solve it. I moved the ui-specific stuff out of init.cpp for a reason. This bounces strings around all over the place.  As this is a ui-only problem, please solve this without changes to the core.  Note that _ is defined in ui code, you can call it from there. However, it"	Clarify
1322	5739188	"tr() did not work, please try it. Even if the fix is not what it needs to be, there is a problem. And tr() vs. _() is for sure a difference, because _() shows up in bitcoinstrings.cpp, while this is not true for tr(). "	Clarify
1322	5739317	Strings that are defined in src/qt/bitcoin.cpp should not show up in bitcoinstrings.cpp but end up in the .ts through the normal translation path. 	Reject
1322	5739873	"Did you try to verify the problem? Before we start a discussion battle I would like to know if I found a bug or did something wrong in my local build ;).  Try to change tr(""Usage:"") into something stupid like tr(""Pig:""), what I say is that even after a translation the word ""Usage:"" is used in it's u"	Clarify
1322	5743685	I think I know why tr doesn't work in our new class: Q_OBJECT is missing. 	Clarify
1322	5746045	"I certainly did believe you that something is wrong, and wasn't trying to start a discussion battle. But I first wanted to know why it went wrong, instead of trying to work around it.  #1324 fixes this.  "	Clarify
1322	5746906	"It's all fine, I seem to have missunderstood what you were trying to say :). I'm glad it's fixed! "	Reject
1320	5733551	"The debug.log could contain valuable informations, e.g. what was the last thing the client did before the freeze. Dou you use the installert or zip-version? "	whQuestion
1320	5744067	I used the installer.  I did poke around a bit and saw that communication for the blockchain being downloaded looked okay - forget the log file I saw that in (I'm at work now and the computer is at home).  Managed to import my private key and address into an online client... So I have access to my c	Clarify
1320	5991188	"Closing as ""we cannot reproduce.""  Nothing bitcoin does should lockup your computer, and this doesn't happen to other people; it is almost certainly a hardware or driver issue with your system.  "	Clarify
1319	5733736	"I think it's a good idea to update all translations once in a while, no matter if releases are planned, so people that use the master branch have the last translations.  "	Reject
1319	5735193	"I can open another pull with an update for ALL translation files later, but I wanted to seperate the addition of new languages from that. "	nAnswer
1318	5733801	"Agreed, merged as #1321  "	Statement
1317	5723637	"Not too strange, as onion address support hasn't been merged yet... "	nAnswer
1317	5723905	"@sipa, uhuh, but surely it shouldn't exit, should it? Just ignore it instead? "	Other
1317	5726025	    $ ./bitcoind -externalip=blala.onion     Bitcoin: Cannot resolve -externalip address: 'blala.onion'  	nAnswer
1317	5726047	"With bitcoin-qt, I get a messagebox saying the same thing. "	Statement
1317	5726089	"@sipa - do you think it should exit or continue, ignoring the non-resolvable address? I think the latter would be better. "	Clarify
1317	5726121	"As specifying an unresolvable address is most likely the result of a configuration error, I think exiting is the most reasonable thing to do. Whatever happens when we ignore the problem will not be what the user intended. "	Clarify
1317	5726158	"@sipa in that case, can it exit *before* it spends ages loading the block index? "	Emphasis
1317	5726189	I'm sure there are improvements possible in the order of initialization and command-line processing. 	Statement
1317	7843132	This is expected behavior. Passing invalid input *should* result in an exit with error message.  	nAnswer
1316	5722588	Good! 	Emphasis
1315	5719161	I suspected getblocks was probably the answer :)  It would be very nice to see a mini white paper on what this does and how it works.... 	Clarify
1315	5732165	"K. Tested resync from start several times. Tested partial resync. Tested recovery from fork with reorg on non-stuck node. Tested recovery from a forkmode stuck node. Tested with loadblocks.   Make sure it wasn't bloating up the chain with a ton of copies of extra block ....  I can't break it, so I'm"	nAnswer
1315	5756764	"Just out of interest, does the initial getblocks (that's sent to the first peer upon starting the node) also cause the recovery from afork stuck node? Is it that this change is to enable it to become unstuck without restarting the node? Or did even restarting not fix things? "	Clarify
1315	5761362	"A bit more elaborate: if you were running an 0.6 RC, you would have code that used the old BIP16 switchover date. The date passed, but you did not update your software. Suddenly someone sends an invalid BIP transaction (so, one that is valid according to the traditional rules, but not according to t"	Clarify
1315	5761515	"I understand the explanation so far but it still doesn't explain how the new getblocks achieves that, and why upon receiving the very latest block, that that doesn't fix it, nor why it can't be coded to re-evaluate the last 6 or so blocks in the last known valid again to see if they are still valid "	Clarify
1315	5761599	"Sorry, meant to say, that it could re-check the invalid again upon start up, perhaps by giving a command line option or perhaps automatically whenever the invalid again is longer by 6 blocks or more.  Sent from my Nokia phone -----Original Message----- From: Pieter Wuille Sent:  17/05/2012 11:10:55 "	Clarify
1315	5761609	"This fix will - over the course of an entire blockchain syncup - maybe cause 50 kilobytes extra communication. What you suggest is also possible, but harder and with less guarantees, in my opinion. You'd need to traverse the entire blockchain database and find stale chains, and re-evaluate them all?"	Clarify
1315	5761659	"Doesn't this fix also increase data transfer even after the node has caught up? I thought it does getblocks upon receipt of every block, doesn't it?  To re-evaluate the invalid again it would only need to re-evaluate one block upon start-up in the example you give. The first block in the longest inv"	Clarify
1315	5761691	"Also, technically, i'd say this current fix requires a BIP. "	Clarify
1315	5761765	"In normal operation, this patch does nothing. It only sends out a getblocks when an inv is received with blocks that are already known and part of the block tree. During normal operation, this never happens, as you only request invs for the part after the main chain. And the block-sync process has n"	Clarify
1315	5761856	"I think you are incorrect to say it doesn't happen during normal operation. This is not my experience. When i new block arrives on the network, let's say 8 nodes announce it in invs. My mode will getdata it from the first one, download it and ProcessBlock it usually well before the last connected pe"	Clarify
1315	5767885	"I've added a fix to this, in my current bitcoin-ParallelBlockDownload branch (the 3rd commit of pull #1326).... I still think the ideal solution is to do it without using the network though.... "	Clarify
1314	5750074	"The idea is great, however I don't think ""obsolete"" is the word to use here. It has very negative connotations.  Also, it would be nice if the tooltip explanation was more verbose, and explained to the user that they should wait until they catch up with the block chain until they can rely on the num"	Clarify
1314	5759934	"You are right, we should not scare users ^^. Will change the strings. "	Reject
1314	5760133	Updated to be less scaring and more verbose. 	Statement
1314	5763547	"I'm tuning the layout a little currently, please wait for a final rebase before merging @laanwj. "	Clarify
1314	5763889	"Updated tooltip once more, changed tr() handling, to not need to translate ""("" and "")"" and fixed use stylesheet in the UI-file. If @laanwj you feel the text is now better this can be merged. "	Clarify
1314	5764330	"I think at least one native English speaker should check this, but some remarks:  * Never display ""(up to date)"". Only display ""(out of sync)"" when the block chain is out of sync. After all, there is never a guarantee that the client is up to date,  only an indication that it is not. See the origina"	Clarify
1314	5764794	I agree to hide the message if everything is okay ... will update. Have to think about the message-text again ;) ... will take your suggestion as base. 	Clarify
1314	5765814	"@laanwj My suggestion is: <b>The displayed information reflects an older state. To get more recent information, the local block chain needs to be synced with the network. This process starts automatically after a network connection is established.</b> "	Other
1314	5767363	"Yes, ok with me. (btw, you have a space before the message in your commit :-)  "	Clarify
1314	5767460	"@laanwj OMFG that needs an update :), thanks for mentioning! "	Emphasis
1314	5767508	Finished :-D!? 	Emphasis
1314	5768046	"As for the messages, maybe it'd be good if @gmaxwell takes a look too. He opened the original issue. "	Clarify
1314	5772568	Updated to @gmaxwell phrasing suggestion. 	System
1313	5712636	"Disregard this, I'm an idiot "	Statement
1312	5709917	Looks like a bug in one of my trees; ran the wrong binary. Sorry for the noise. 	Clarify
1311	5704735	"This makes non-trivial unrelated changes, for example it adds DoS() to node connecting with the old protocol version. "	Statement
1311	5704798	"Also, NAK on the general introduction of peer address to many messages.  I'd be okay with logging the peer address of attack behavior or truly unusual exceptions, but logging by default the address of every peer we pull transactions from is not good and would create considerable incentives to compro"	Clarify
1311	5705079	logtimestamps was disabled by default for similar reasons that we don't always log peer address...  major privacy implications. 	Clarify
1311	5705357	"@gmaxwell Doesn't it make more sense to use the misbehaving function on a peer that you will *always* disconnect whenever it connects? Why not use it?  Re peer addresses: these are changes anyone could do anyway, it is useful debug info, especially when trying to work out why blocks aren't downloadi"	Clarify
1311	5705949	"Understood. Ok, so DoS to be removed. Timestamps off by default. How about changing it to an option to enable peer logging, that's off by default? Would that be ok then? "	Other
1311	5713772	Looks like this pull contains code from other pull requests you've made. Shouldn't each pull request only have the code related to the specific change?  I'm fairly sure this pull also includes the code from here -> https://github.com/bitcoin/bitcoin/pull/1306 and here -> https://github.com/bitcoin/b	Clarify
1311	5716715	"@fanquake I just did a git log -p to check, but there's no mention of proxytoo in the entire log history, so I'm not quite sure what you're looking at. oh.. but on github it does show... I'll try pushing again. Ok, I've removed the ProxyToo mention now, thanks for spotting that. An inadvertent merge"	Clarify
1311	5717668	"Ok, this now displays peers only if -logpeers is true, and that option isn't advertised unless the code is examined. Peers are shown for blocks, and for Dos(100) transactions only unless the option is selected. Timestamps are disabled by default. DoS for obsolete version also removed. Also, HandleSI"	Clarify
1311	5768606	"This pull now contains no functional changes, only display changes. "	nAnswer
1311	5768996	"meh, this thing is still freakin' huge, touching all sorts of code.  will post a few comments inline... "	Other
1310	6792570	"Does this still happen on current release (or git HEAD)? If yes, can you provide a backtrace with symbol information?  "	Clarify
1310	6794066	"Has not occurred in more recently versions. Was intermittent, not able to duplicate. "	nAnswer
1309	5702903	wrong repo sigh 	Other
1308	5708871	"Apart from my small comment, ACK.  "	nAnswer
1308	5709104	Updated and rebased to reflect your comment. 	Continuer
1307	5700783	"It's better to remove the connect line and leave the slot named like that. Qt will automatically connect slots with a certain name, this is what happens when you create handler methods from the designer interface as well. "	Clarify
1307	5701015	I had a 50% chance of chosing the right fix :D ... will update! But that was a weird bug for me ^^. 	Clarify
1307	5701119	Updated! 	Emphasis
1307	5701290	"Well they're both right fixes :-) But removing a line is simpler.  It was kind of weird to me too, the first time I encountered it. I wondered how qt designer created the connections to the host object slots. It is documented in QMetaObject::connectSlotsByName. "	Clarify
1306	5708831	"How can ""things work more reliably through tor""? Tor routes your connections through several other nodes, it's never been set up for reliability but for privacy. Connecting through Tor 50% of the times annihilates 100% of that hard won privacy.   You seem to have routing issues with your network. Fi"	Clarify
1306	5718674	"@laanwj you are of course correct, in that there is probably software which could take care of the routing, routing some via tor, some directly, etc. I'm not aware of any, but I'm sure it exists. Would you be willing to let me know of the software that does this?  I think it's a simple enough change"	Clarify
1306	5809237	"I agree with @laanwj, I think ""sometimes things work more reliably through tor, and at other times directly"" is a sign that you either have issues with your connection, or the peer selection algorithms are doing a woefully poor job (depending on what, exactly you mean by work more reliably).  I cant"	Clarify
1306	5809975	"@TheBlueMatt he has a very limited internet connection, whose provider regularly resets TCP connections, it seems. "	Other
1306	5810140	"Oh, well in that case I would say a) you should look into other providers (if available) or complain because you arent getting access to the internet, you are getting access to some filtered, crappy version of it and b) do we handle getting our connections dropped that poorly? I know during initial "	Clarify
1306	5832529	I'd like to close this. I think few people would use proxying as a way to increase reliability. 	Clarify
1306	5841506	"@sipa I agree that it would be only a few people, but it's also only a few people who would want to see ""IRC got who"" events also, and we're keeping that in.... "	Clarify
1306	6303501	"We certainly need to deal with connection management in a better way (detect bad connections, find better ones, parallellize block download, ...), but abusing a proxy for this seems wrong. "	nAnswer
1306	6333335	"Well, your proxy might feel abused, but mine loves the attention :) "	Clarify
1306	7430979	"Consensus seems against, closing. "	Statement
1305	5709943	ACK 	Clarify
1305	5714746	Why receives HandleSIGTERM an integer? Seems unused in the diff. 	whQuestion
1305	5715170	Know your unix  :-) signal handlers receive an integer with the signal number. 	Statement
1305	5715257	"I'd make it ""SIGTERM received"", but otherwise ACK. "	Clarify
1305	5715331	Unix != Diapolo :-D 	Emphasis
1305	5716699	"@sipa or how about, considering that function will be run with any signal, displaying the signal number received..? "	ynQuestion
1305	5718270	"@sipa I've just realised this change is also in another pull request. :-s I've avoided saying SIGTERM received, as this is a specific signal (15), so saying that might be misleading, whereas it's true to say the function HandleSIGTERM() is called. "	Clarify
1305	5718290	I'll close this pull request in favour of the other which includes this change and others. 	nAnswer
1305	5719415	"HandleSIGTERM is apparently used for SIGTERM, SIGINT and SIGHUP. "	Statement
1305	5719694	"Ah, named according to the principle of most surprise. Interesting :)  "	nAnswer
1305	5720644	"I suspect HandleSIGTERM would run if SIGUSR1 was sent too. Any signal other than 9, probably. "	Clarify
1305	5720868	@rebroad no signal handler is installed for SIGUSR1. See the beginning of AppInit2 in init.cpp. 	Statement
1305	5768149	"Since this was getting ACKs, I've re-opened it. It's more likely to get pulled than pull #1311, which it's a subset of. I should probably break #1311 into smaller pieces.... "	Clarify
1305	5769197	You should rebase this! 	Emphasis
1305	5769248	@Diapolo I can do... does it make much difference? (rebased now) 	Emphasis
1305	5769298	"Yes, just take a look under https://github.com/bitcoin/bitcoin/pull/1305/commits what do you see :)? Use <pre>git fetch upstream</pre> <pre>git rebase upstream</pre> to ensure you have the current master as base. "	Other
1305	5769374	@Diapolo I see 1 commit and 1 diff. What do you see? That's also what I saw before I rebased. 	Clarify
1305	5769457	"I saw 4 commits and 3 of which were not from you ;). Now I see a single one, which is good. "	Clarify
1305	5792838	"What stops this from creating a deadlock when a signal is received inside the ""printf"" replacement log function? "	whQuestion
1305	5793722	@luke-jr how exactly? 	whQuestion
1305	5794391	"@sipa printf needs to use a lock to ensure multiple threads aren't writing at the same time, but signals can interrupt writes (while that lock is held). If this happens, the printf in the signal handler will try to lock again, and block. Even if the lock is recursive, there is a risk of the signal p"	Clarify
1305	5794881	Ouch. I keep forgetting that we redefine printf in a macro :-(  	Statement
1305	5796192	@laanwj You were updating the function a few days ago ^^... 	Clarify
1305	5828257	@luke-jr what would be your ideal solution for this (other than removing the prinf)? 	Clarify
1305	5828454	"I think it might be safe to create a new thread just for the printf. Then the signal returns - locks get released on their normal schedule, etc - while the second thread waits to acquire whatever locks it needs to log. "	Clarify
1305	5843234	"@luke-jr when I get time I'll have a dabble with this. I'm fairly new to the whole thread thing, but I was thinking of moving ProcessBlock() into a thread of it's own so that it doesn't block the reception of messages (which it appears to do currently, based upon the timestamps in debug.log) "	nAnswer
1305	7027932	"Creating a thread sounds like a terrible kludge. That the safest way is to save the ""signal status"" to a global variable in the signal handler and let the Shutdown function pick it up and print it. Python, for example, does signal handling in this way.   Btw, instead (or, in addition to) the numeric"	Clarify
1305	7273951	"@laanwj That does sound like a decent solution. I will update this to do that, when I get time... "	Emphasis
1305	7430939	"NAK, possible deadlock.  printf() obtains a lock, which can get really messy when signals are involved.  You might even be inside the printf lock itself.  Maybe set a 'got_sigterm' boolean that triggers a print elsewhere... "	Clarify
1304	5698826	"@gmaxwell they aren't usually a sign of manipulation, but they *could* be a sign. This is correct, right? It's rare, admittedly, and might never have happened so far! "	Reject
1304	5698948	"@rebroad It's not an interesting form of manipulation (someone could lie to slightly increase the difficulty by a about half a percent), but I wasn't taking issue with your comment.  There have been some people who saw the negative going timestamps and ran around claiming it was an attack, seems to "	Clarify
1304	6280388	"ACK. I think it's still interesting to have these in debug.log, even if just as a way of keeping track of how far you are behind. "	Clarify
1304	6282647	"If you indent, can you please ""always"" use 4 spaces (4 spaces == 1 tab kind of)? "	Other
1304	6333610	"@Diapolo I thought 4 spaces was for inside functions/parenthesis, and 2 spaces is for lines that have been broken up over more than one line. "	Clarify
1304	6333735	"I'm not sure abot that, it just looked weird to me. "	Reject
1304	8213502	oooh.. it got merged. almost 3 months later. cool. thanks! 	Emphasis
1303	5700779	"blkmeta.dat contains settings, options and all that stuff, right? "	whQuestion
1303	5701266	blkmeta.dat mostly contains random singleton datums like hashBestChain or bnBestInvalidWork 	Statement
1303	5703668	"Updated patch order, dramatically shrinking the diff. "	Statement
1303	5798806	eca20e7c4c263cb14f1d11e74fc362daca22fd42 is the first bad commit  	Statement
1303	5799558	fixed 	System
1303	5805043	"First run, I am prompted to upgrade my database. debug.log fills with lines like this: ``` ProcessBlock: ORPHAN BLOCK, prev=* ``` Immediately afterward, Bitcoin-Qt crashes: ``` EXCEPTION: NSt8ios_base7failureE        CDataStream::read() : end of data        ```  git bisect blames a commit between aa"	Clarify
1303	5805143	"``` #1  0x0811cbf6 in CDataStream::setstate (this=0xffffb92c, bits=4, psz=0x837c724 ""CDataStream::read() : end of data"")     at src/serialize.h:908 #2  0x0811ccad in CDataStream::read (this=0xffffb92c, pch=0xffffb8cc """", nSize=32) at src/serialize.h:936 #3  0x08148428 in base_uint<256u>::Unserialize"	Other
1303	5806765	Fixed in latest commits. 	Statement
1303	5810627	"Commit status notes:  Note 1) the base read/write logic works.  you can run a peer node stably with this.  shut it down, restart, etc.  Note 2) there is a strange behavior, where a single record appears during a read-all-records query of a hash database (LoadBlockIndex), which causes CDataStream to "	Clarify
1303	5811015	"For reference: the problem with the stuck chain is probably due to incorrectly isolating blockchain modifications in transactions. This would only cause problems when a block fails to connect to the main chain. When downloading from the network, one does not receive older stales, but LoadExternalBlo"	Clarify
1303	5811829	Issue 5 fixed.  Thanks to @sipa for noticing the probable bug. 	Clarify
1303	5812174	"db_stat output, after loading 180,953 blocks: http://pastebin.com/LEw3PQbL "	nAnswer
1303	5813053	"db_stat output, after loading 180,960 blocks the old way (blkindex.dat): http://pastebin.com/9DhQDCFc "	nAnswer
1303	5865800	"Merged several commits into one big one, and then refactored a bit into three pieces:  1. Upstream-ready refactoring. 2. Split CTxDB into three pieces, blkhash.dat, txhash.dat and blkmeta.dat.  Databases remain DB_BTREE at this point. 3. Switch txhash.dat and blkhash.dat to DB_HASH.  This arrangemen"	Clarify
1303	5866083	"db_stat output, with 3way split using DB_BTREE: http://pastebin.com/v9nZ6SCb "	nAnswer
1303	6332684	"I think it would make sense to keep a tree-based index for the block header database, to allow looking up a block prefix quickly. In #1426 the idea rose to use the lower bytes as identifier instead of the higher ones. Maybe it makes sense to do a byteswap on the block header keys, to allow a lookup "	Clarify
1303	6607457	"Closing.  Inclusion of this split is conditional on making other major changes to the database structure, such as TD's LevelDB changes.  If/when those are merged, this can be updated and reopened.  The net effect of this pull request was a 10% space savings and CPU util savings. "	Clarify
1302	5697517	looks good to my quick scan 	Statement
1302	5700714	Looks good and get's rid of some damn char arrays and buffer-fiddling! ACK 	Clarify
1302	5805603	ACK.  	Clarify
1301	5694905	"Are you sure this this works for the CMD_REPLY / CMD_ERROR? Let's say type help, scroll up in the QTextEdit, click in somwhere (perhaps to copy) and type help again. I have a feeling you will see the line where you entered ""help"", but not the output. "	Clarify
1301	5695494	It really works. I'm pulling off a trick to avoid that. Note that I don't move the cursor :)  	nAnswer
1301	5695833	"If it does what I tried to achieve with my pull I'm fine with this one, if it's behaviour is different on Windows I'm a tad unhappy though :). I will test this as soon as it get's merged! Perhaps you can leave my pull open until then. "	Clarify
1300	5804100	"This does not seem to cause problems in testing, but would appreciate some additional eyes on it. "	nAnswer
1299	5693721	"-blocknet remains:  in return InitError(strprintf(_(""Unknown network specified in -blocknet: '%s'""), snet.c_str()));     "	Other
1299	5693852	Fixed. 	System
1299	5694398	ACK 	Clarify
1298	5693483	How did you test these changes? 	whQuestion
1298	5693870	"For commit ""4843b55 Make CNetAddr::GetHash() return an unsigned val."", I verified that there was only one user of CNetAddr::GetHash() by changing the return value to 'void' and seeing where the compilation broke.  In the single user of that function, I think the changes are relatively straightforwar"	Clarify
1298	5697304	"Could you turn your small test program into unit tests in src/test/bignum_tests.cpp ? Comments on where to get your nifty testing tools/methods would be most welcome, too (in that does-not-exist-yet unit test file).  "	Clarify
1298	5699952	"I added test cases for CBigNum::setint64(). It was a bit more complex than I thought because gcc (with -O2) was inlining the function and, due to the values being constants, optimizing it to the point that -ftrapv was not detecting the signed subtraction overflow when the function was given an INT64"	Clarify
1298	6043999	"Thanks for the numeric limits suggestion, I was not aware of that (I'm a lot more experienced in C than C++, as you can probably guess). I have fixed that as you suggested.  As for the noinline attribute, it will work on any compiler that supports gcc extensions (it should work for gcc, clang and ic"	Clarify
1298	6188792	"I've moved the NOINLINE definition to the test rather than util.h, as suggested.  I have also fixed a bug which was causing the test_bitcoin program to abort on 32-bit systems. "	Clarify
1298	6280288	ACK (needs a trivial rebase though). 	Clarify
1298	6313676	"So what is the process now?  Should I rebase? If so, can I do it in the same branch, and will the pull request preserve all existing information? "	Emphasis
1298	6397905	"@wizeman Seems @gavinandresen did it for you.  For future reference: yes, you can just push to the branch on github where you originally pullrequested from, and the pull request will be updated accordingly (keeping relevant discussion, but changing commits as necessary). "	Clarify
1298	6397954	"Cool, thanks to both of you! "	Emphasis
1298	6897088	@wizeman Could you comment on #1497 please? 	Clarify
1298	6899278	"Hi luke-jr,  I added a comment to your pull request.  Cheers, Ricardo "	Clarify
1297	5684331	"I'd argue that the current behavior is ""normal console behavior"":  - when you are scrolled down, it will scroll down on appended text  - when you manually scrolled up, it leaves the focus alone until you go to the end again  Scrolling on append can be annoying when you're reading something in histor"	Clarify
1297	5684494	"In Windows the behaviour on the cmd-prompt is to scroll down, even if you manually scrolled up and that's what I was missing here. I understand your hint, that it get's annoying, when messages are appended automatically.  Scrolling to the end after the user entered a command looks kind of ugly, as y"	Clarify
1297	5684664	"I don't think that's true. Have you tried it? If you scroll down after the user command, I *think* the internal logic of qtextedit will make sure it stays at the end when the reply comes. "	Clarify
1297	5684754	"@laanwj To be more clear, I was referring to a WIndows command prompt, not the RPC Console, when I talked about what I as Win-user expect from such a RPC Console ;), sorry. "	Clarify
1297	5685150	Updated to only do this for non MC_ERROR and MC_DEBUG messages. 	Reject
1297	5694745	See #1301 for my take on this...  	Statement
1297	5702754	"Fixed by #1301, closing this one! "	Emphasis
1296	5683446	Updated to check for 50 MiB and make that a const uint64. 	Statement
1296	5688976	Updated to use a global constant (defined in main.h). 	Statement
1296	5709990	ACK 	Clarify
1296	5792604	ACK 	Clarify
1294	5683648	"This should be fixed in the current master, as there now is a check included: https://github.com/bitcoin/bitcoin/blob/master/src/net.cpp#L1903  "	Other
1294	5690559	"Thanks, I will close the issue now. "	nAnswer
1293	5682814	"Rebased on top of #1295 (check return values of TxnBegin, TxnCommit)  "	Other
1293	5695470	"DEPENDENCY UPDATE: this sits on top of #1300, in addition to #1295  "	nAnswer
1293	5707392	"Moved mapDb and mapFileUseCount into class CDBEnv.  mapFileUseCount had to remain public for the moment, until some wrappers may be written that eliminates the need for walletdb and CDB::Rewrite() to directly access these internals.  It doesn't help that we use this reference counting scheme *someti"	Clarify
1293	5804113	"This seems stable in testing, though the encapsulation isn't the best.  Some of the mapFileUseCount[] stuff is rather delicate, and relies on implicit behavior.  Best left to complete the encapsulation of that to a separate commit, IMO.  Once done, that will fit naturally inside CDBEnv::OpenDb(), wh"	Clarify
1293	5858762	ACK 	Clarify
1292	5680515	ACK 	Clarify
1292	5682865	ACK 	Clarify
1292	5695165	"boost::interprocess::interprocess_mutex dd_mutex in DEBUG_LOCKORDER?  (Edit: and, indeed, DEBUG_LOCKORDER is currently broken) "	ynQuestion
1292	5703253	Fixed DEBUG_LOCKORDER. 	System
1292	5788275	"ACK, good CPU usage on my mac. "	Reject
1291	5680510	getnameinfo() you mean?  ACK to the code...  	Clarify
1291	5680610	Commit and pull name updated :) 	Clarify
1291	5680832	ACK :) 	Emotion
1290	5679111	"Is %u the right format character for an int64? I don't think so -- we have these:  util.h:      #if defined(_MSC_VER) || defined(__MSVCRT__)     #define PRI64d  ""I64d""     #define PRI64u  ""I64u""     #define PRI64x  ""I64x""     #else     #define PRI64d  ""lld""     #define PRI64u  ""llu""     #define PRI6"	Clarify
1290	5679138	"%u is unsigned integer, usually 32 bits. uint64 obviously is 64. So you push a 64-bit value on the stack,, but %u only consumes the first 32 bits of it (which, if the the number is less than 2^32, is the right value). It leaves the higher part to be interpreted as a string pointer, though. "	Clarify
1290	5679184	"I knew it's a 64 bit value, what I didn't know was that we have a %""PRI64u"" define. So %llu should be fine. Will try and report back, thanks! "	Emphasis
1290	5679191	"@sipa is right, what you see is consistent with little-endian. This is, BTW, why people concerned with type-safety hate `printf`. Some compilers will warn you for these mistakes  with -Wformat. "	Clarify
1290	5679271	"Great, now it works and thanks for that quick help -> closed! "	Emphasis
1290	5679689	"No, %llu is not fine. uint64_t is not guaranteed to be the same as unsigned long long. Just use PRI64u. "	nAnswer
1290	5679712	"@sipa: That's what I did, thanks again. "	Statement
1289	5676535	"I don't think this will cause many conflicts, so I don't mind merging. One thing I'm not sure about is ""bitcoin address"" or ""Bitcoin address"". It could be interpreted both as referring the the currency or to the system. "	Clarify
1289	5676630	"For me such an address is a Bitcoin (system) address used to transfer bitcoins :). But we should hear others, too. "	Clarify
1289	5692594	Just take a look at http://en.wikipedia.org/wiki/Bitcoin There they write Bitcoin address 	Clarify
1289	5694943	"I'm not sure about Wikipedia beeing a general reference, but they use it the same way I would use it. @sipa What you say? "	Reject
1289	5702837	"Can we please decide to get this in quick? I want to create the next version of the en translation master file, so that we have enough time for such things to mature! "	Emphasis
1289	5702981	ACK 	Clarify
1289	5760036	Final merge-request ;). 	Statement
1289	5796107	I am not sure what the 'appname' in freedesktop notifications is actually used for. The specification is unclear on this: http://developer.gnome.org/notification-spec/  Using qApp name sounds like a good idea. There's no need to translate it.  	nAnswer
1288	5677432	You're trying to break all the translations aren't you? :p  	ynQuestion
1288	5678216	"@laanwj I think we should break translations before RC-phase, so yes ... I'm cleaning up ^^. "	yAnswer
1288	5678245	"I wish there was a way to change the English translation without invalidating all the translated messages... Or at least update the source string for all translations automatically, when there is no substantial difference.  "	Clarify
1288	5678298	"This would be a nice thing, but Qts same text heuristic doesn't cover such things.  Edit: All this leads to one thing, take more care if doing strings in the client that need a translations as this is a great plus in terms of UX! "	Clarify
1288	5678555	"I think you could actually set the strings as ""translation"" strings in bitcoin-en.ts instead?  "	Clarify
1288	5678688	"Sorry, I don't get it ... can you explain? "	Statement
1288	5678702	"If you open bitcoin-en.ts in Qt translator and set the new messages there, it will change the message shown in English clients without changing the message in the source code, so without affecting the other translations. "	Clarify
1288	5678760	"This would be less invasive, but produce an ugly inconsistency for the en translation-file and the source ... I don't really like that idea. A form of %RPC_Con_Information_Label_text% in the source and translations only in the lang-files, but that would even further raise the complexity. "	Reject
1288	5678820	"I don't like it either. But I also don't like it if 20 translators have to re-translate a message just because a space was removed, or a dot was added, for example.  Transifex also has no way to edit a source message. However, they claim they have ""Fussy re-using of existing strings in source langua"	Clarify
1286	5675934	AutoNAK: lfnet only supports nicknames up to 16 characters 	Statement
1285	5675520	ACK 	Clarify
1285	5675901	ACK 	Clarify
1284	5676443	ACK. I agree that this is a good time for aligning all that help info. 	Statement
1284	5677405	"Ok, aligned the messages. "	Accept
1283	5675142	Perhaps it's the time to discontinue support for such an old Qt version? Or at least set a date after which support is taken out?  Of course ACK! 	Clarify
1283	5675238	"We should drop support once it becomes a large burden. Currently we don't require significant work-arounds to support the old Qts, so it's not a big issue.  "	Reject
1283	5676317	"Alright, perhaps it's worth to mention in a source comment this is a Qt 4.6.2 work-around. "	Statement
1283	5678867	"Perhaps, though this only makes the condition in which the if() may be entered more explicit.   There's no reason to change this back when dropping support for Qt 4.6.2, which would be the definition of a workaround (such as the #ifdefs).   "	Clarify
1283	5679019	"ACK, get it in. "	Statement
1282	5674629	Good idea. It's bad form to put different stuffs into one database table.  	Clarify
1282	5675101	"Not sure whether an entirely separate file is better, or just a separate database within the same file (which bdb also supports). You'd need to implement cross-db transaction in the glue layer anyway before this is safe. "	Clarify
1282	5682860	Rebased on top of #1293 (BDB environment encapsulation)  	Statement
1282	5683089	Updated to do cross-db transactions.  	Statement
1282	5683163	This includes #1293 now? 	Emphasis
1282	5683341	"Yes, see comment above. "	yAnswer
1282	5695558	"DEPENDENCY UPDATE: #1295, #1300, and #1293, in that order  "	Statement
1282	5697443	Closing -- about to reopen a similar but revised pull req. 	Statement
1281	5674763	"Hmm.. on one hand, I agree that it doesn't strictly need to be a function, on the other hand, I don't really like exported free-for-all global state as you cannot enforce read-only. It's almost a necessity to have getters/setters in C++ for this reason.  I don't buy ""CPU efficient"" here. DataDir is "	Reject
1281	5675143	"@laanwj In all but the first call, it doesn't even need a mutex - it just returns the value cached in pathCached[]. "	Reject
1281	5675164	Wouldn't it be nicer to simply make the GetDataDir() function use a static constant but non global variable? I don't really like the solution this pull offers. 	Clarify
1281	5678430	@sipa: You're right.  That's a bug...  I meant to use the net-specific path.  	Clarify
1281	5699500	closing due to disinterest 	Statement
1280	5673389	"Right; it tries to encode your IPv6 address as an IRC nick, which isn't implemented. It should only try to nick using IPv4 addresses. "	Clarify
1280	5686596	Fixed by #1287 	System
1278	5672694	Works okay with git master on Linux right now. 	Clarify
1278	5672745	"it's a strange thing, because I've compiled it few hours ago and it is, as I said, ignores ""--help"" argument "	Clarify
1278	5672767	"Uh, okay! It just initialize splash and tray icon at first, and only *AFTER* that it shows help-screen ;) I just did not wait for initialization and pressed ^C every time.  Anyway, I think, --help should be processed before initialization of splash and tray icon ;) "	Clarify
1278	5672786	Agree; --help should maybe be dealt with separately from other options. 	Clarify
1278	5674507	Printing of --help should indeed be moved out of AppInit2 for many reasons. See for possible design the last post here: https://github.com/bitcoin/bitcoin/issues/1049  The core should return the options it has available with a call. GUI can add its own options and do the actual printing. In the case	Clarify
1278	5709520	"Should be fixed now, closing.  "	Statement
1277	5672459	"If you change the description on -blocknet= in the help output, you should also make sure these work (i.e. make ParseNetwork in netbase.cpp case-insensitive; i agree it should be). "	Clarify
1277	5672649	Updated! 	Emphasis
1277	5672795	ACK 	Clarify
1276	5672434	I like the answer here: http://meta.bitcoin.stackexchange.com/questions/21/how-do-we-capitalize-bitcoin-or-bitcoin-or-bitcoin 	Clarify
1276	5672452	"- Use Bitcoin (with a capital ""B"") when talking about the concept/technology. - Use bitcoins (no capitalization) when talking about the unit of currency (4 dollars - 4 bitcoins).  That's a thing I like, you were talking about that I guess :)? "	Clarify
1276	5672466	Yes. 	Accept
1272	5672248	"All IPv6 fixes should get in ASAP, if they compile fine and are working, so we have the chance to do a big IPv6 test during the RC phase. "	Reject
1271	5669129	"git fetch upstream; git rebase -i upstream/master; (in the opened editor, move the line of the fixup commit up to below the gitognore commit, and change the 'pick' to 'fixup', then save, and force-push the resulting branch) "	Clarify
1271	5669250	with force-push i mean: git push -f origin <branchname> 	Other
1271	5669315	@sipa thankyou.. now 1 commit. 	Statement
1271	5673791	"1) Thread safety of 'nAskedForBlocks' ?  Accessed in both ProcessMessage() and CNode::CloseSocketDisconnect()  2) fAskedForBlocks should be set to false, if found to be true in CNode::CloseSocketDisconnect() "	Other
1271	5679587	"@jgarzik 1) accessed in both, yes. thread safety - not needed from what I can tell, but please feel free to explain why you think it is. 2) No. Once asked for blocks, it's true. It never becomes false, since the past cannot be changed. Any new CNode, it's set to false on creation. "	Clarify
1271	5679677	1) you modify the value from two threads (message handler thread and socket handler thread) 2) Changing it to false when decrementing nAskedForBlocks would make it obvious that it cannot be decremented twice (even though that probably is already the case) 	Clarify
1271	5681367	"Of course, this only helps if the peer is actually disconnected. If he just becomes slow/unresponsive, or he simply doesn't have the chain past a certain point ... we'll still be waiting.   It's a small enough change that I guess it makes sense for now, though at some point I think we need to move t"	Clarify
1271	5697185	"@gmaxwell there's certainly room for improvement, but this is a small (intentionally, to increase the change of it bring pulled) step towards making it get the blocks more quickly. This particular change has been tested in my fork for over a month, but I've also got other code that checks for stuck "	Clarify
1271	6303647	"Note that though I think this pull is good and should be added to specifically fix #1234, it appears that the motivation for this patch is to fix an issue where some ISPs (specifically @rebroad's) are closing connections without RSTing them after a certain amount of time and I would kinda like to se"	Clarify
1271	7692317	"For some reason really old pulls don't show up in github's API (the total pull count returned seems to be limited, but its not mentioned in the API Docs...), so pull tester won't test this or any old pulls (maybe it will if the total pull count decreases?).  If anyone needs this, or any older pull e"	Clarify
1271	7718990	"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9543ca35cab6dfc53de84cb59dc4aedcc9253c09 for binaries and test log. "	nAnswer
1271	8378806	"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/8ce572c8ad0960ff08a577f1ed2bf49ed0108ab0 for binaries and test log.  This could happen for one of several reasons: 1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that mad"	Clarify
1271	10316613	This needs to be rebased. 	Statement
1271	10692658	"Did you keep the branch name the same and push it to github? Looks like maybe you pushed it as ""master"" instead of ""issue1234"" "	Clarify
1271	10692703	"I did:  git fetch upstream master git checkout issue1234 git rebase -i upstream/master git push --force origin issue 1234  The rebase didn't require any manual intervention, which I was surprised by, so I'm wondering if I did something wrong before the push... "	Clarify
1271	10693362	Any errors? 	ynQuestion
1271	10693423	none 	Statement
1271	10693500	"Is your remote actually named ""upstream""? The default is ""origin"". "	whQuestion
1271	10693659	$ git remote -v origin    http://rebroad@github.com/rebroad/bitcoin.git (fetch) origin    http://rebroad@github.com/rebroad/bitcoin.git (push) upstream    http://github.com/bitcoin/bitcoin.git (fetch) upstream    http://github.com/bitcoin/bitcoin.git (push)  	Other
1271	11582450	"rebased as requested. tested too... this patch is still helping with stale connections. reducing the time block download is delayed by 7 minutes on average (based on a wait of 10 minutes for the next block, compared with a wait of 3 minutes for a stale node to timeout). "	Clarify
1271	11582551	@TheBlueMatt just to clarify. This patch has nothing to do with ISPs that RST connections. It's needed for all ISPs for where any connection goes stale and eventually (after about 3 minutes in my last tests) times out. 	Clarify
1271	16131666	"Closing this, mostly replaced by sipa's ""make sure you always have a peer to sync to"" patch. "	Statement
1270	5672259	"Nice change, ACK. "	Clarify
1269	5667756	"I've removed the timestamps from the copy output. Apart from that, there's little to do, Qt only supports copying entire cells at once at most (or you end up back with scrollbars in the cells, if widgets are placed in there).  "	Clarify
1269	5668416	"Ok, what about this? The output is now a rich text view instead of a tableview, should be easier for copying.  "	Other
1269	5668821	"Looks a little less clean, but its worth it for the big improvement in copy behavior. I think it should be set to a monospace font (will make the hashes and such line up). "	Clarify
1269	5669886	"Should be better / good enough now. Explicitly scaling the icons with bilinear filtering so that they don't look ragged, and switched to a monospace font.  "	Reject
1269	5669935	I like. 	Statement
1269	5672227	Could you post a screen after the update :)? 	Clarify
1268	5667150	"Though this improves it a little bit, the transaction details dialog is butt-ugly anyway. It could use some better HTML design.  "	nAnswer
1268	5671919	"I think we do some great work over the last time and I agree, yes it need's a further rework :). "	Clarify
1268	5674519	"Yes indeed, it's going really fast now :) ACK BTW  "	Clarify
1262	5662706	"If I had a wish, I would remove all additional timestamps from the source and only rely on the -logtimestamps switch, as this is way cleaner. Perhaps we can force -logtimestamps, if one enables -debug!? "	Emphasis
1262	5663122	"I don't see how moving the conditional time output out of printf makes any difference?  Edit: my mistake, I misread the source changes. I assumed the double timestamps were caused by two threads trying to write to debug at once. "	Clarify
1262	5666450	"sipa: I have the impression if you use -logtimestamps and add a timestamp manually like in the places I changed in the code you get something like: ""05/11/12 18:10:37 05/11/12 18:10:37 sending: getdata (37 bytes)""  And that was what I'm trying to fix ;). "	Clarify
1262	5672176	"So, remove the manual timestamps?  @gmaxwell Is -timestamps default to on really a security issue? "	whQuestion
1262	5675209	Rebased and updated to remove manual timestamps! 	Emphasis
1261	5662450	ACK 	Clarify
1259	5648108	"Please don't add non-model arguments to setModel calls.  Sorry, but I don't think this is important enough to change the interface or introduce extra complexity at all. "	Reject
1259	5648177	I also wonder why this doesn't go right by default. Shouldn't it inherit the parent window icon? Or how does this work?  	Clarify
1259	5648185	"LOL, this can be done just like with the about-Qt dialog ... I don't even need to pass something new ;), so you are right. "	Clarify
1259	5648216	"Updated to an easy fix, but I don't know, why they don't use the testnet icon as default. At lest now every GUI element uses it, while we are on testnet :).  Edit: The Main-Window window icon is changed to testnet in BitcoinGUI::setClientModel(), perhaps the following dialogs still use what was defa"	Clarify
1259	5648278	"Yeah, I wonder where it gets the 'non-testnet' icon from at all? If new dialogs can somehow still find it, that means it is still stored somewhere, which is not right. We need to figure this out, so all the explicit setWindowIcons can go. "	Clarify
1259	5648297	maybe qApp->setWindowIcon ? 	Other
1259	5648422	Can qApp be freely used in bitcoingui.cpp? I'll try this. 	Statement
1259	5648473	Alright this fixes it! Will update this pull. 	Emphasis
1259	5648528	Updated! 	Emphasis
1259	5648635	You still need to set the window icon of the current window as well... It will only change the default for new dialogs/windows.  	Clarify
1259	5648712	"That is strange, as this works like it should. If I use normal net, the icon is correct on every dialog, the same for testnet.  As we call setClientModel() on Init, the icon set should be a global one, what am I understanding wrong here? "	Clarify
1259	5649138	"Ok, maybe this just works then.  "	Statement
1259	5650429	"On Ubuntu, this causes no dock icon to be shown at all anymore (either in testnet or normal net). You do need to set the setWindowIcon on the BitcoinGUI instance as well, in both places where you set it in qApp. The qApp icon is only applied automatically to windows constructed *after* it is set. Th"	Clarify
1259	5650458	"So just re-add setWindowIcon(QIcon("":icons/bitcoin"")); below the qApp-> lines? "	Other
1259	5650464	Yes 	yAnswer
1259	5650551	"Done and this work on Ubuntu now, too so that you have testnet-symbol on every dialog while on testnet? "	Emphasis
1259	5650628	"Yep it works great with this. However, ubuntu doesn't show a symbol for every window, just for the application, so I can't check the second part. I assume it is OK though everywhere now.  "	Clarify
1258	5647933	"The number reported by peers is actually the highest block height they have available, and this can in fact be 0 (the genesis block has number 0). "	nAnswer
1258	5647984	"That said, N/A is probably better UI-wise. "	Statement
1258	5648001	"That's a fact I didn't know ... but it looks kind of weird to display 0. So all nodes have at least the genesis block, which should read 1 as minimum then. How is this handled in the core?  Edit: It would be easy to change the N/A into 1. "	Clarify
1258	5648097	"No, the genesis block has height 0. getnumofpeers actually returns the median reported height reported peers. This can be 0 if most peers report 0.  But keep this pull as it is; if the number is zero it most likely means there are no peers that reported any meaningful number at all, so N/A makes tha"	Clarify
1258	5650579	On the testnet it will show 0 before connecting to any peers. On the normal net it defaults to the last checkpoint (so it would only go to 0 if many peers report 0). So this is mostly useful on the testnet. 	Clarify
1258	5650636	"You are free to take or discard this, as always :). "	Statement
1258	5650753	"Nah it's fine, I'll merge it. Tho we should be careful not to introduce too many translation strings in what is effectively a debugging tool.  "	nAnswer
1258	5650829	"Uhm, right, of course ""N/A"" is already in the translation, so that isn't even a valid point here :)  "	Statement
1257	5647136	"Looks safe, and I like squishing warnings (though I don't get this one). "	nAnswer
1256	5645062	"The Block time is the normal time/date format used throughout the client. Build date is the strange duck. However, using the same format as block time doesn't make sense as you want to be able to see the build time zone. Also, for troubleshooting it makes sense to show the raw value.  "	Clarify
1256	5645960	"Makes sense, I'll close this. "	nAnswer
1255	5642568	"Add a comment in the code, indicating this special condition... "	nAnswer
1255	5645815	Hmm. Alright. ACK.  	Clarify
1255	5647445	@jgarzik: added 	System
1255	5649072	LOL @ the comment! 	Emphasis
1254	5640250	"Added a second commit, which further quietens the logging, without losing information. "	Clarify
1254	5641303	ACK 	Clarify
1254	5643723	"Small and good change ... btw. is our printf thread-safe? At least sometimes I get lines that show no date - time, although -logtimestamps is supplied as switch and others show it twice. "	nAnswer
1254	5650578	@Diapolo don't tell me we need a mutex for printf on windows... 	Statement
1254	5650604	@sipa I was just asking with nothing bad in my mind... 	nAnswer
1253	6670402	Here are instructions on how to use macports to install boost 1.47_0_2  http://www.codedrop.ca/blog/archives/56  Boost portfiles: http://trac.macports.org/log/trunk/dports/devel/boost/Portfile 	whQuestion
1253	6670452	"So, add this to /opt/local/etc/macports/sources.conf before the rsync line:   file:///Users/Shared/dports  and then:   mkdir /Users/Shared/dports   cd /Users/Shared/dports   svn co http://svn.macports.org/repository/macports/trunk/dports/devel/boost/@85591 devel/boost/   portindex /Users/Shared/dpor"	Clarify
1253	6679351	"Gavin, the code you mention should be disabled on Mac, no? Can you post a full error message please.  Or are you running a build with #1437? "	Clarify
1253	8758044	Solved by commit 4060d64fc9de6f11ae69f3961d4f1f0450dd8286 	Other
1252	5635085	ACK 	Clarify
1252	5646011	"ACK on the idea.  Could the ""Grant"" be made into a RAII primitive maybe somehow? I am reasonably convinced that this is correct, but manual acquiring and releasing makes me a bit uneasy, as there could always been some forgotten case (or might easily arise in the future).  Also I wonder why boost lo"	Clarify
1252	5647062	@laanwj Excellent idea; why didn't I think of that myself?  Updated and rebased. 	Clarify
1252	5647112	"@gavinandresen You want this backported for 0.6.2.2, or stick with the earlier version? "	ynQuestion
1252	5647155	ACK 	Clarify
1252	5664159	(included in 1260) 	Statement
1250	5629161	"Updated: - allow translation of ""default"" used in language selection "	Other
1249	5628361	I promise to fetch the new Translations before the first 0.7 RC gets release. I even think it's needed to update the english master file a few times before the RC arrives :). 	Clarify
1249	5628596	Do you have any procedure to bump translators after string freeze and before final release? 	ynQuestion
1249	5628669	"Currently no, but I'm working hard to achieve this! It will be a big step forward, if updates happen more often and that the latest Transifex translations get included before the RC phase starts. "	nAnswer
1249	5701632	For next release maybe you'll want to pump me and I'd try to deliver an updated ES l10n. 	Clarify
1248	5618440	"The page is called ""Window"" on purpose. ""Client"" could refer to bitcoin client, network client, and so on. It's too general. Window clearly specifies it is about window behavior, whereas ""Display"" is about displaying things *within* the client window.   The ""Main"" page is for the leftovers, that wou"	Clarify
1248	5618578	"You are right about this beeing a minor issue, but as I said I have a bad feeling about ""Window"" it doesn't make sense under Windows, as even ""Start Bitcoin on window system startup"" can be missunderstood (Windows - window). I'm fine with moving it back to ""Main"" and can create that pull, so you can"	Clarify
1248	5618625	"I believe there was a suggestion once to change it to ""Start Bitcoin on system login"". On most operating systems that is more correct. This also makes it more obvious to move it out of the Window category, as it doesn't even have the w-word in it anymore.  "	Clarify
1248	5650996	"Closed, because fixed :). "	Statement
1247	5618500	"Nice!  * ""Open debug.log with the associated application"". Will this work by default? What is the default associated application for .log files?  * Hmm would it make sense to add this as a button (either on the information page or in an extra tab ""Logging"") on the debug window, instead of a first-cl"	Clarify
1247	5618659	"@laanwj .log files are opened with notepad.exe per default (if you didn't change the file association) on WinXP, Win Vista and Win7 (see: https://bugs.freenetproject.org/print_bug_page.php?bug_id=3245).  I thought about a button, too, but came up with the feeling it would be a bad thing to integrate"	Clarify
1247	5618903	"Does debug.log open cleanly in notepad? I remember opening log files with it at work, and everything being on one line. So I generally use wordpad.  The problem that I have with a menu option is that you get multiple ""debug XXXX"" menu options. I'd like to keep all debug and diagnostics stuff in one "	Clarify
1247	5622999	"On Win7 it opens without issues, even big logfiles (which take some time) open cleanly.  Well, then either we should add that ""Tools"" menu entry or I simply add a button to the information page of the RPC Console window. I would like to get this in to have some test time (if there are other Win-user"	Clarify
1247	5627772	@laanwj What do you think?  http://oi49.tinypic.com/35i5ct5.jpg 	whQuestion
1247	5628314	Great! 	Emphasis
1247	5628564	"Updated, rabased and ready after a last check from you ;). "	Clarify
1247	5644809	"Small update, I renamed the 2 open debug logfile functions to better match the current used coding styles and moved on_openDebugLogfileButton_clicked() to the private slots. "	Clarify
1247	5644897	"Just merged a few, seems this needs rebasing now.  "	nAnswer
1247	5645096	Working on fixing the merge-conflicts... 	Statement
1247	5646767	Rebased and fixed merge-conflicts. 	Statement
1246	5615558	This is bugged. ConnectBlock requires the block to be on the disk already :( 	Statement
1246	5615710	"In fact, this might even corrupt the blkindex.dat somehow, so if you tried it, I suggest rebuilding with -loadblock :/ "	Clarify
1246	5618107	"OK, this seems to work now. "	Statement
1246	5804142	"Eligius has been running this from block 179513 (56 blocks found) and EclipseMC from 180573 (11 blocks), totalling 67 valid blocks with no problems found. "	nAnswer
1246	5865621	Now includes tests for CreateNewBlock 	Statement
1246	5953430	"Added comments per sipa's request, rebased on master, and fixed a bug in diskless BDB I found testing. "	nAnswer
1246	5973239	"getmemorypool's caching mostly makes testing this impossible, but I did some vague performance testing by disabling it (so every call goes to CreateNewBlock): git master: 1063 transactions/sec checknewblock: 473 transactions/sec checknewblock with signature checking skipped: 782 transactions/sec  IM"	Clarify
1246	6014803	ACK (together with #1245). I really like having unit tests that test blockchains. 	Clarify
1246	6605462	ACK 	Clarify
1246	6605636	@luke-jr Can you rebase #1245 and this? I'd like to merge. 	Statement
1246	6606213	Rebased. #1245 did not need rebasing. 	nAnswer
1246	6940406	"Explicitly made the literals long long. Apparently ""long long"" was not a standard type until C++11, and compilers implementing it as an extension did not support mere numeric literals bigger than long (the C++11 standard requires these literals be handled properly). GCC 4.5 works with both ways. In "	Clarify
1245	5804141	"Eligius has been running this from block 179513 (56 blocks found) and EclipseMC from 180573 (11 blocks), totalling 67 valid blocks with no problems found. "	nAnswer
1245	6605225	ACK 	Clarify
1244	5606216	I'm working on this one ... 	Statement
1244	5646925	"Fixed, thanks @Diapolo  "	Emphasis
1243	5602947	Works for me.  	Statement
1240	5600226	"So far, I have done some minimal testing by analyzing the output of getmemorypool. "	Statement
1240	5625146	"Eligius has found 2 valid blocks (and none invalid) with this code (plus #1246, for safety) so far, at its default settings. I am now testing with a huge weigh toward transaction fees, to increase the likelihood of dependent transactions paying for their parents (and therefore risking any potential "	Clarify
1240	5627356	"Things I need to address:  1. False ""may be used uninitialized"" warnings * Config option names differ between actual code and -help * Second-pass priorities should be printed with -printpriority * Fee influence should be multiplied by total input value (input please: is this a good idea? should the "	Clarify
1240	5664224	"Integrated my 5 ""things to address"". "	Clarify
1240	5865737	Also passes the unit tests I just wrote on #1246. 	Clarify
1240	6007858	"This seems to be be excessively slow, and possibly exploitable right now. "	Statement
1240	6014397	"Define ""this"" ? "	whQuestion
1240	6015704	"This pull request. Eligius is getting stuck in some huge dependency trees, it seems. Trying to figure it out, but don't have time just this second. "	nAnswer
1240	6281103	"Fixed the major performance hit from complex dependency trees. Still not as fast as the old algorithm, but not absurdly slow either. I'd say the ability to pay for ""parent"" transactions is worth it. "	Clarify
1240	6281116	(Fix verified by about 10 days of testing on Eligius) 	Other
1240	6332093	I certainly agree to the idea of this patch. I haven't checked the source yet though. 	nAnswer
1240	6413992	Need to be very careful not to accidentally introduce a potential DoS attack by arranging transactions that require N^2 time or space to figure out fees/priority.   	Clarify
1240	6414164	@gavinandresen I think SatoshiDice tested that for me (the fix from ~16 days ago) 	Clarify
1240	6951577	Could you write up a gist that explains what formula for priority you're using?  And maybe talk about how it will handle transactions from old clients (who calculate priority the old way) ? 	Clarify
1240	6952446	- DepthWeight = user configurable (default: 1.0) - FeeWeight = user configurable (default: 1.0) - DepthScore = sum(sum(value * depth) for each input) - FeeScore = sum(value for each input) * fee - WeighedScore = (DepthScore * DepthWeight) + (FeeScore * FeeWeight) - EffectiveSize = datasize + sum(dat	Clarify
1240	6966899	"NACK, the priority formula would make it easy for somebody with (say) 100,000 BTC to pay tiny fees and get priority over higher-fee-paying transactions.  That's a bad incentive, it would encourage people to do dangerous things like keep more funds in their 'hot' wallet or add extra inputs to their t"	Clarify
1240	6966967	"So, should I take the input value out of FeeScore? "	Statement
1240	7430874	"Sadly, in addition to being NAK'd this conflicts heavily with @gavinandresen 's work redoing CreateNewBlock()  You should work with @gavinandresen to coordinate changes in that area, before posting another pull request relating to CreateNewBlock() + TX selection/fees. "	Clarify
1238	5599010	I added this to allow showing the Debug window without the need to have the client window open. 	Clarify
1238	5623084	@laanwj If you don't want to be the console that public just comment. I still like that :). 	Statement
1238	5644820	"Well yeah I guess it's ok for ""experimental software"" :-)  And yes some icon for the debug window would be nice, but I'm not really a drawing talent either, and finding suitably licensed stock icons is very hard (most is CC, Freeware or LGPL).  "	Clarify
1237	5598950	"I re-added the ""-Wno-invalid-offsetof -Wno-sign-compare"" switches to my local build environment, as it showed me ~150 sign/offset warnings. Am I the only one who observed this? "	Emphasis
1237	5600051	@Diapolo Yes. :) (are you actually current with master?  What GCC version?  With 4.7.0 we're clean for me (save a complaint about ignoring a fwrite return value) 	Clarify
1237	5600310	"Using current master with own mods I'm testing, but the Warnings arr all over the place. Using Qt Creator, which is bundled with MinGW - gcc version 4.4.0 (GCC). I have to say I don't compile bitcoind.exe, but Bitcoin-Qt.exe. "	Reject
1237	5600455	I believe the windows version still causes many warnings in the boost compile. 	Clarify
1236	5597518	"Right, the warning message should be shown when either the last block is older than 90 minutes (when the spinner shows) or when there is no network connection.  The challenge here is really coming up with a good message. It should make clear that transactions could be missing, but that absence of th"	Clarify
1236	5646691	"Perhaps rather than a message that either shows up or not, show a timer that estimates how far behind the rest of the network the client might be? Reset the timer on every block or received transaction. Perhaps color the timer red and show the message if the timer goes past a certain limit value lik"	Clarify
1236	5646865	"A timer would be possible, but it will be much more imprecise than that. Blocks are generated every 10 minutes on average, but holes of up to 90 minutes still happen regularly. "	Clarify
1236	5649108	"If the chain is not up-to-date just display a small but noticeable lable with a good info message? No timer, just check if we are fully synced. "	Reject
1236	5710822	"This warning should be shown on the *overview* page, probably in big red letters.  After all, it's not just the transactions that aren't complete. But the *balance* can be wrong as well.  "	Reject
1236	5717501	Working on a GUI warning for this .. see #1314! 	Emphasis
1236	5768132	"@gmaxwell Are you okay with this message as tooltip: <b>The displayed information reflects an older state. To get more recent information, the local block chain needs to be synced with the network. This process starts automatically after a network connection is established.</b> See #1314 for details"	Other
1236	5769839	"Nitpicking: ""state"" is a bit of technobabble perhaps. ""To get more"" starts of sounding like instructions to the user to take action.     Maybe something more like  ""The displayed information may be out of date.   Your wallet automatically synchronizes with the Bitcoin network after a connection is e"	Clarify
1236	5769922	@gmaxwell I will update once the final sentences are finished :). 	Clarify
1236	5770370	/agrees with gmaxwell's message  	Statement
1236	5772576	Updated the pull. 	Clarify
1235	5604759	Nice work guys! 	Emphasis
1235	5605327	"It's not yet fetched by Transifex, hope this happens over the next hours and then the translators can start their work :). "	Clarify
1235	5618799	@laanwj It's still not available on Transifex. @tcatm Can you check what's wrong here or tell me how I / we can force Transifex to fetch the new master file? 	Emphasis
1235	5618939	"Is transifex supposed to fetch it, or do you need to push it with a script?  "	ynQuestion
1235	5621810	It showed up a few minutes ago ... don't know if tcatm did something or if the fetch interval is that long. 	Statement
1235	5622320	I think they only fetch about once per day. 	Clarify
1234	5668764	"Issue #1053 was kinda this, but maybe too specific :) "	nAnswer
1234	5668880	"This just needs a line adding such as pfrom->AskedForBlocks = true along with nAskedForBlocks++, which then can nAskedForBlocks-- when that node disconnects... so the getblocks fires off again (maybe even move that code outside of the strCommand == ""version"", so that already connected nodes can fire"	Clarify
1234	12198671	I don't understand why it's taking so long to fix this rather simple issue....  	Clarify
1234	16893242	Closed by #2461  	System
1233	5616222	"For the record, cblockstore's download times from local nodes comes in reliably under master, but only by a very tiny margin.  This, on the other hand, comes in around 20% lower on tmpfs chain sync. "	Clarify
1233	5668865	"can this pull request be done in such a way that there isn't so much of a diff output? Did so much code need to move from main.cpp to protocol.cpp, for example? "	ynQuestion
1233	5669958	"Note that this pull is based on #771, which has radically different design goals.  This pull is fairly small on its own. Re: the move from main -> protocol.  One of the primary design goals of #771 is to remove the number of globals we export from main, especially the block index/chain storage stuff"	Other
1233	5674672	"I think those are very sensible design goals.  That said, in that case we should definitely pull #771 first, to prevent unrelated changes being merged into one pull request. Github seems to almost lock up when I try to view the diff.  "	Clarify
1233	5697411	"Ah, ok. Well, I'd certainly find the diffs easier to view if they were kept small. Probably would be better therefore to base this commit from a post-#771 commit then, in order not to effectively include that commit in its entirety within this commit, then it can be reviewed without having to manual"	Clarify
1233	5697644	"Github always shows total diffs from master, so the only reasonable way to do it is to just base on #711, pulling in its huge diff...however, you can always compare the commit list to #711 and view the diffs of individual commits. "	nAnswer
1233	5697689	"@TheBlueMatt, do you mean within github? I'm not sure how to do that. Could you provide a URL, perhaps? "	Clarify
1233	5697960	"You have to manually compare the list of commits, and then you can just open each commit from the commits list in the pull...if you feel like doing some URL hacking, you will notice git style ...s in diff URLs which you can replace manually using any branch like: https://github.com/TheBlueMatt/bitco"	Clarify
1233	6165915	Rebased onto #1429 	System
1233	6789417	"This needs rebasing, and Im not going to keep rebasing this stuff without any interest in eventually merging.  If it ever gets interest, I may reopen. "	nAnswer
1230	5591299	"nUBucket and GetNewBucket() should be unsigned, not casted.  The rest looks ACK-able. "	Statement
1230	5591340	"In some places, the bucket identifier -1 outside the normal valid range is used to denote an illegal value , so they are ints. Another possibility would be making them unsigned, and use the value (unsigned int)-1 to denote illegal values.  The first option required less code change, and it doesn't r"	Clarify
1230	5591510	ACK 	Clarify
1230	5597443	"Considering that we don't even work on big endian, the implementation definedness of (unsigned int)-1  shouldn't bother me that much.  But it does.  In all other contexts casting a negative value to an unsigned type, which may not be so obviously unsigned if its a typedef,  is almost certainly a bug"	Clarify
1229	5590596	I like the Overview; it shows me the information I care about (my balance and the last few transactions) and not the information I don't.   	Clarify
1229	5590761	"@gavinandresen I know it's to provide at-glance information to the user, and it's designed to be less busy than the transactions window. However, its use of space is very inefficient. I would like to either consolidate it with another tab, or reduce the window size so there is less whitespace. "	Clarify
1229	5592796	Perhaps we can come up with an idea what is valuable enough to be added to the overview tab!? 	whQuestion
1229	5593007	NACK.   It is supposed to be this way. The overview page is supposed to be a sparse dashboard page that only shows what is needed  for the end user. What's up with you people trying to cram everything together as if you paid a million dollars for every pixel?  Whitespace is good.  I agree that it is	Clarify
1228	5592807	Take a look at https://www.transifex.net/projects/p/bitcoin/resource/tx/ and see if you can fix things there. And amp; whould be a & on Transifex as it is an Alt-Key Shortcut in the client. If you have further questions just post again. 	Clarify
1228	5593053	"This needs to be fixed on transifex, as that's where the translations are sourced from.   I wonder how all that stuff gets into there, though. It isn't the first time. Looks like a case of double html-escaping.  Maybe we should change the transifex import script to barf when it encounters these... "	Clarify
1228	5596726	I can't find anything wrong on the translation over there. What I found was some updated translations that isn't in 0.6.2. Can it be that the newest bitcoin client uses and old .ts file? 	Clarify
1228	5596761	"That's sad but yes, the translations don't always get the love they need :-/. "	Statement
1228	5596815	"I'm currently updating some translations over there. 92% complete now =)  btw. One translation that I can't find on transifex is in Options menu ""Detach databases at shutdown"" "	Clarify
1228	5596975	"Right, the english master file also needs an update, to allow translations of new strings. This is on track and I promise 0.7 will be better in terms of translations and Transifex updates! "	Clarify
1228	5597076	"It looks like the last translation import from transifex was a long time ago. So yes, that's certainly possible. Tcatm used to do that, but he doesn't seem that active lately. "	Statement
1228	5597127	"See #1235... I have no problem in doing that, as I use the Qt client very much and love to have a good translation! "	Emphasis
1228	5628215	"Transifex is updated now... ""Detach databases at shutdown"" can now be translated! "	Emphasis
1228	5628571	And many more ;)... you can safely close this issue then. I will update translations more often. 	Clarify
1227	5662867	"While I was checking the master file I found ""bitcoin"" with a lowercase b letter, shouldn't it be with uppercase like ""Bitcoin""? Example: ""Send coins to a bitcoin address"" should be ""Send coins to a Bitcoin address"" "	Clarify
1227	5666443	"@burger2 I think you are right and bitcoin should be written uppercase, so if you can post the string and the occurences in the master file (click on Details in Transifex and copy the line that reads lile: ""Occurrences: ../forms/aboutdialog.ui:14"" I will try to get this fixed ASAP. "	Clarify
1227	5667240	"Send coins to a bitcoin address - Occurrences: ../bitcoingui.cpp:207 ""Modify configuration options for bitcoin"" - Occurrences: ../bitcoingui.cpp:243 This should not be uppercase if it referes to a filename. But I post it here as i found it with a lowercase b letter ""bitcoin-qt"" - Occurrences: ../b"	Clarify
1227	5667248	"And two more here: ""The entered address ""%1"" is not a valid bitcoin address."" - Occurrences: ../editaddressdialog.cpp:96 ""Welcome to the bitcoin RPC console."" - Occurrences: ../rpcconsole.cpp:195 "	Clarify
1227	5683605	Opened pull #1289. 	System
1227	5994937	I found some text that isn't in the translation master file. Check screenshot and the red text (out of sync) and it's tooltip http://dl.dropbox.com/u/82192439/bitcoin-v0.6.1-336-g20cb17e.jpg  I downloaded bitcoin-bitcoin-v0.6.1-336-g20cb17e.tar.gz from github and compiled with a freshly downloaded S	Clarify
1227	5995049	"@burger2 You are right, and that's not new to me, current Transifex master file is behind the real project status. Before I can update the master file, I need someone, who is able to create the bitcoinstrings.cpp file, which is created via some Linux scripts.  Opened #1397 for this. "	Clarify
1227	6061639	"So, current translation master is now on Transifex, I'll wait a few more days for the translators to catch up and then create a pull, which includes all available translations from Transifex.  100% up to date are currently: (English) French German Russian Turkish "	Clarify
1227	6088679	Swedish now at 100% 	Other
1227	6092411	"Dutch is currently at 100%, too. "	yAnswer
1227	6903861	"@laanwj Can you please create a current bitcoinstrings.cpp file once more, before the RC-phase begins? As I was told lang-updates are possible during the whole RC-phase we have quite some time for this. I'll keep an eye on the translations and will fetch the current translations before we push a new"	Clarify
1227	6904189	"Done, updated english translation as well as bitcoinstrings, see #1580 "	Other
1227	6960162	"When translating, I noticed that there are quite a few duplicate strings (or even triplicate). I don't know if this is inevitable, but for consistency it should be avoided I think? Especially the longer ones. Anyway, I scanned the source, so here they are:  Address Alt+A Alt+P Amount &amp;Sign Messa"	Clarify
1227	6960619	"@Dr-Nix I observed this too, while doing the German translation. I'm not sure though, if this because we use a different switch when creating the master file (which removes source- and ui-file line-references from the translation files) or if they were there before that change. Can you remember perh"	Clarify
1227	6960826	"Those are the same string, but used in different contexts (classes), so they may be translated differently in some cases. At least Qt Translator pre-fills them automatically AFAIK if it sees a duplicate.  "	Clarify
1227	6962065	"@Diapolo Well I remember duplicates come and go, but in the latest changes the two long ones (sign a message... & verify a message...) were empty and I had to fill them out three times each. Therefore I noticed them.  Transifex had suggestions ready (from what I entered before) so this suggests that"	Clarify
1227	6967779	It's a little harder to translate without the source- / ui-file references on Transifex. 	Clarify
1227	6968741	"Ok I'll restore them next time. There is also a relative line mode to reduce diff size, I'll try that. "	Clarify
1227	7034355	"@laanwj I guess it would be best to wait for that new master-file version, before doing a pull for current Transifex state? "	Clarify
1227	7434696	"Just want to remember, we have no current translations in master, so would be nice if someone can fetch them before relasing 0.7 RC ;)? I'm off for a few hours now. "	Clarify
1227	8153297	"We now have 500 strings on Transifex, let's celebrate :)! "	Emphasis
1225	5586442	sub-optimal? just call it incorrect :) `(hSocketMax > (SOCKET) -1)` is impossible to trigger.  	Other
1225	5586488	"It still needs the (SOCKET) cast to be portable to all platforms without warnings, I think "	Clarify
1225	5586536	"Yes, it still needs the (SOCKET) cast, otherwise you'll be comparing a signed against an unsigned value.  "	Clarify
1225	5593901	"If you don't like the magic value make it compare against INVALID_SOCKET. After all, it is a socket number. SOCKET_ERROR is a *signed* error value and is meant for comparing against wsaGetError() output.  You wanted to compare against both INVALID_SOCKET and SOCKET_ERROR which is the part I disagree"	Clarify
1225	5594131	Updated and rebased! 	Emphasis
1225	5594451	ACK 	Clarify
1224	8113486	"This should really also get onion seed nodes, and potentially testnet seed nodes (IRC stinks). "	nAnswer
1224	12017744	"What about this one, it was scheduled for 0.7 ;-). "	Statement
1224	12517580	Didn't get done for 0.7.... so I edited it so we (hopefully) get it done for 0.8.  	Statement
1224	12871342	done. 	Statement
1223	8303519	Done. 	Statement
1222	5581381	"From the Qt Creator help: Note: By default, only X11 will support themed icons. In order to use themed icons on Mac and Windows, you will have to bundle a compliant theme in one of your themeSearchPaths() and set the appropriate themeName().  I consider your suggestion a bad solution for a perhaps g"	Clarify
1222	5581535	From the [QIcon::themeSearchPaths](http://qt-project.org/doc/qt-4.8/qicon.html#themeSearchPaths) documentation: > By default all platforms will have the resource directory :\icons as a fallback.  Hence why I said you could rename the icons you're already using to match the names in the XDG icon-nami	Clarify
1222	5595111	"The only problem I see here is one of consistency. For example, the tab icons need to fit together. Currently they are all blue-ish to be in the same style. I wouldn't mind them being simplified even more, like Android tab icons. So don't do this to the tab icons (overview, history, address-book, re"	Clarify
1222	5597215	"The toolbar icons are actually the ones that jump out the most as **in**consistent with the rest of the desktop (and, given how variable the system theme can be just as a function of distro defaults, I don't think that can truly be fixed by a bundled icon set.)  Would this be an appropriate solution"	Clarify
1222	5597240	"@ssokolow I can't comment on your suggestion, but perhaps you can explain how and if this will affect Windows users as there are quite many of them using Bitcoin-Qt. "	Clarify
1222	5597370	It will not affect Windows or Mac users. Period. This is a linux-only party :p   	Clarify
1222	5597437	"@ssokolow yes, that's fine, just send a list with the icon names, and maybe examples how they look in various default themes, so we can see that they provide consistent tab icons   "	Clarify
1222	5597519	"Ok. I've got exams coming up, so I can't guarantee a time-frame, but I'll try to have it done within a week. (Failing that, I'm free in June)  Since it'd probably be the simplest way to test and fine-tune, I may just patch it myself and offer up the screenshots and list in a pull request. "	Clarify
1222	7842950	Any progress on this?  	ynQuestion
1222	15634121	"Too long without reply, closing this issue. This doesn't mean I'm not still interested, let me know if you're still working on this (or planning to).  "	Clarify
1220	5560084	"ACK. The panels do look quite empty now, though. Time to add some extra... "	nAnswer
1220	5586483	"Here's a start, I've added an option to change the language.  "	nAnswer
1218	5558297	"Agreed, feel free to remove it. "	Statement
1217	27141559	"Closing this, as it never spawned discussion and a lot has changed since a year ago.  "	Other
1216	5546764	ACK  	Clarify
1216	5549097	"These instructions simply instruct people to get their bitcoin from your site, which is currently distributing an out of date bitcoin along with a copy of openssl which doesn't have the latest vulnerability fixes. So I think this is a NAK at the moment.  I'd rather package the spec file in Bitcoin, "	nAnswer
1216	5549328	"On Mon, May 7, 2012 at 2:42 PM, Gregory Maxwell < reply@reply.github.com > wrote:  > These instructions simply instruct people to get their bitcoin from your > site, which is currently distributing an out of date bitcoin along with a > copy of openssl which doesn't have the latest vulnerability fixe"	Clarify
1216	5550171	"openssl recompilation is necessary yes, but gmaxwell's points about outdated bitcoin and openssl versions still stand. "	Statement
1216	5563131	"Ok, I've updated to 0.6.1 and last openssl: http://olea.org/paquetes-rpm/repoview/bitcoin.html  Nice to see bitcoin rebuilds easily between versions.  So, what is your prefered way to link/point/describe to the Fedora building? As I said I'm open to contrib the spec file too.  "	Clarify
1216	5585138	"I think the preferred form is probably  1) specfile patch for openssl 2) specfile for bitcoin  ...plus any requirements those specfiles need, outside of the distribution tarballs themselves. "	Clarify
1216	5585599	"On Tue, May 8, 2012 at 10:16 PM, Jeff Garzik < reply@reply.github.com > wrote:  > I think the preferred form is probably > > 1) specfile patch for openssl > 2) specfile for bitcoin >  I don't see why to split both.  the reason for for including openssl is just the platform one removes Bitcoin's need"	Clarify
1216	5585754	"Two specfiles, for two separate packages.  @gmaxwell already does this for openssl, in fact: http://people.xiph.org/~greg/openssl/  "	Other
1216	5586602	Openssl shouldn't be statically linked except for our special binary builds. 	Clarify
1216	5622638	"On Tue, May 8, 2012 at 11:12 PM, Gregory Maxwell < reply@reply.github.com > wrote:  > Openssl shouldn't be statically linked except for our special binary > builds.   Hum. Then all my work is fruitless.  Sorry folks.  --   Ismael Olea  http://olea.org/diario/ "	Other
1215	5545980	Could you add a Sign message button to the address book tab after the QR Code button to be in line with send coins and because you added it to the context menu?  I'm asking myself if it is allowed to use a non owned address to sign a message in general? 	Clarify
1215	5546153	"Yeah I noticed that inconsistency too, however it is not a good idea any more buttons. We'll add future actions only to the context menu. See it like this: The context menu has the authoritative list of actions, the buttons are just there to shortcut a few common ones.  There are already various iss"	Clarify
1215	5546743	Fixed 	System
1211	5537903	Putting utf-8 directly in the source is probably not a grand idea. I assume you can use an entity? e.g.  & hellip; 	Clarify
1211	5538120	"Unicode escapes such as `\u20AC` work in gcc, but I'm not sure it works in MSVC compilers. I'm not sure whether XML entities work, but I'm afraid not. Qt recommends manually appending QChar(xxx), but this will of course mess with translations as it cannot be in the Tr. It's unfortunate that non Lati"	Clarify
1211	5538574	Can we use C++11? 	ynQuestion
1211	5539903	"Do I get an ACK for the idea and current places in the code, if yes I will start looking into usage of perhaps & hellip ;. If that does not work we should simply continue with ""..."" (3 points""). "	Clarify
1211	5540182	"It is possible to use QString::fromUtf8(""\u2026"") in the code. Shall I use this? "	Statement
1211	5540506	"See my last commit, if this gets your OK, I will introduce the use of ELLIPSIS where it's used in strings in the code. And rework that pull. "	Statement
1211	5540766	"I don't think you should \u2026 unless you verified it with the MSVC compiler (which, AFAIK, doesn't support UTF-8 escapes as I've said above). Which means you will end up with the equivalent `\xe2\x80\xa6`. Also, you should at least use trUtf8 so that you can use it in translated messages.  "	Clarify
1211	5540838	"I can't verify it for MSVC, I can only try to investigate this via a web search :-/. Would it be possible to use a #ifdef for MSVC?  trUtf8 is not used, because I wanted to keep ELLIPSIS out of translations, so it wont ever show up on Transifex. "	Clarify
1211	5540853	"I'd certainly keep all messages in their entirely in translations. If that's not possible, don't bother with this.  "	Reject
1211	5540879	"@laanwj So it would be best to simply keep ""...""! Do you agree to the other changes (no ""..."" on buttons, but in menus)? If yes I will revert the last ELLIPSIS commit and this is finished. "	Clarify
1211	5540899	"Yes, it's fine then.  "	Accept
1211	5540940	Reverted and finished! 	Emphasis
1211	5586027	"Rebased, no code changes! "	Reject
1211	5594094	"Revert -> ""Range"" is now ""Range..."" again. "	Other
1210	5536309	"There is significant benefit to being able to navigate the UI by keyboard. I'd like to keep it that way.  Sure, it's not perfect at the moment, and there's always room for improvement. This is very low priority though, IMO. Mind there's plenty of actual issues.  "	Clarify
1210	5536357	"That's fine, so I'll close this and when there is time I'll perhaps harmonize the shortcuts and it's usage in the GUI. "	Statement
1208	5532946	I don't think we want it showing full bars when a user only has the maximum outbound connections.  Not having full bars is pretty much the only UI incentive we create for people to get their inbound connections working. 	Clarify
1208	5533019	"@gmaxwell nails it, the current behavior is intended. This does not ""fix"" anything. "	nAnswer
1208	5533517	"The idea is OK though, as it's more general, in that when MAX_OUTBOUND_CONNECTIONS changes the icon will still be correct.  But make sure that the ""full"" icon only shows when there are *more* than the maximum number of outbound connections.  Alternative option would be to track the number of outgoin"	Clarify
1208	5536469	"I was under the impression that this was only outbound connections.  Now that I have turned off my firewall, I see that I have more than 8 connections.  Maybe the tool-tip could be changed to indicate inbound and outbound connections with a hint about port forwarding if there are no inbound connecti"	Clarify
1208	5536856	"Yes, you could also do it the other way around and show a warning when there are no inbound connections. Many torrent clients do it that way.  "	nAnswer
1208	5537873	"I'd prefer to not bludgeon people _too much_ about inbound connections.  Basically I want to encourage people to get inbound working when its easy for them to do so, but not have them worry about it if it's hard... and I certainly don't want to deal with a bunch of tech support burden. 'zomg my inbo"	Clarify
1208	5537908	"Right, viewed like that, it's fine the way it is. It's visible but very subtle. Closing the issue.  "	Reject
1207	5531505	ACK 	Clarify
1207	5532969	"This has survived about 10 hours of running inside valgrind here on a node that previously crashed and with some tweaks to make it more likely to crash. It also survived a new node bringup. The code looks okay to me, so I'm going to go ahead and pull it in the hopes of getting more people testing it"	Clarify
1206	5537066	"You're changing the constant MAX_PASSPHRASE_SIZE into a literal 1024. Better to leave it as before, IMO, so MAX_PASSPHRASE_SIZE can be updated easily. "	Clarify
1206	5539924	@laanwj Do you agree with luke-jr on his suggestion? What about the other changes? I'm interested in a small integration of these little commits :). 	Clarify
1206	5540015	"I agree with luke-jr here. Please don't try to fix things that are not broken :/ Constants are always better than magic values, even in the XML file.  Focus on the things that this pull request fixes/improves, which is not clear to me.  "	Clarify
1206	5540352	"Updated to do only minor changes, I think style-sheets should be avoided if there is a Qt Designer default option for that goal. And the removal of the capsLabel default text results in one string less to translate that is never used anyway and as result allows to remove a clear() in the code. "	Clarify
1205	5546620	"I looked around in your changes and there is much code in, I can't really say anything to most parts ^^. Does it compile fine on Windows? This takes more time for me to check this, sorry. "	Reject
1205	5546858	"It mostly needs sanity testing. The code should compile find on windows, as there's no OS specific changes. There should be no user-visible changes to behaviour (except for the small fixed problems) but this improves efficiency, prepares for multiple-wallet support and makes it easier to split the U"	Clarify
1205	5628896	"This should help with lowering the current CPU usage of utilizing a full core, while initial block chain download is in progress, right? Is this an issue on non-Windows versions, too and have you verified this? "	Emphasis
1205	5630298	"Well, this is not really meant as a performance fix, although it probably has that effect. AFAIK there are no pressing UI performance issues in 0.6.2.  The idea is to further formalize the interface between the UI and the core.  Instead of a sledgehammer ""mainFrameRepaint"" event, the UI gets message"	Clarify
1205	5771366	ACK on changed to core 	Clarify
1205	5798628	"test_bitcoin fails to link: ``` obj/main.o: In function `InvalidChainFound': /home/luke-jr/Projects/Education/Tonal/BitCoin/bitcoin/src/main.cpp:949: undefined reference to `uiInterface' obj/main.o: In function `CBlock::AddToBlockIndex(unsigned int, unsigned int)': /home/luke-jr/Projects/Education/T"	Other
1205	5799524	Fix for test_bitcoin issue in 315fa37 	Reject
1205	5800046	Thanks for testing sipa and luke-jr.  I've pushed a commit that should resolve the test build and windows build issues.  	Clarify
1204	5545542	Rebased and reworked to be Qt < 4.7 compatible by using setPlaceholderText in the code instead of the ui-file. 	Statement
1204	5548644	"Good!  Btw, I think it is confusing that there are two slots gotoMessagePage. If you want, you can consolidate the gotoMessagePage to one slot that takes a QString argument that defaults to the empty string. Then add:      if(!addr.isEmpty())         messagePage->setAddress(addr);  "	Emphasis
1204	5549354	@laanwj I added your suggestion and consolidated gotoMessagePage() into 1 function. 	Clarify
1204	5625639	"Rebased (resolves merge conflict) and added: - rename window title to ""Sign Message Dialog"" "	Other
1202	5525882	"Could you change the ""all"" to ""All"" (as it appears that we capitalize all nouns).  "	Clarify
1202	5525901	Updated... 	Statement
1201	5525903	"textFormat is not an unused tag ! To reduce the surprise factor, always prefer an explicit text format (PlainText, RichText) to AutoText, especially when user-provided input is involved (not the case here but still...). This prevents bugs such as this: http://vigilance.fr/vulnerability/KDE-certifica"	Clarify
1201	5525915	"Well the default displayed in Qt Designer is Qt::AutoText, so I'm sure this is default and need's not to be added then? Default values in the Designer are non bold and changed values / settings are bold in the right attribute pane.  A I read your link ... well I guess there are more places, where th"	Clarify
1201	5525918	"Check the diff. It was RichText, not AutoText. Just keep it there, it's not hurting anything.  "	nAnswer
1201	5525933	"Right and as the text is in no way formatted (only line-feeds), it's save to use the default I think. If that gets plainText or RichText does not matter in that place. Well I can revert, no problem, but do you really think this is an security issue here? I only changed to save us a few lines. "	Clarify
1201	5525950	"Please just change it back. Saving lines in the xml files is not a goal, there's just no need to change it in the first place.   Being explicit (and reducing potential uncertain behavior) is a goal. If you encounter AutoText in other (potentially risky) places, feel free to change it.  ""it's save to"	Clarify
1201	5526140	"Convinced :), will revert ... "	Statement
1201	5526157	Updated... 	Statement
1200	5525724	ACK 	Clarify
1199	5525730	"You could perhaps add that this only happens, when there IS a signature in. "	Statement
1199	5525873	If there is no text in the signature field this already does nothing. 	nAnswer
1199	5525884	ACK then! 	Emphasis
1199	5537024	"I find this behaviour of GitHub (git URIs) to be very annoying, since it prevents me from selecting it myself (and thus putting it on the X11 selection-clipboard). But in this case, why would you click/select the signature at all? The ""Copy Signature"" button is right there... "	Clarify
1199	5537361	"Because I always use Ctrl-C to copy... Seems most intuitive. I don't even look for a ""Copy Signature"" button.  "	Clarify
1199	5537453	I don't like typing Ctrl-C when I want to copy. Easier to just select. :p 	Clarify
1199	5537634	"Well, selecting becomes really, really easy with this patch... so what's the problem? Did you select the entire field from begin to end manually before? Does it ever make sense to only select a part?  "	Clarify
1199	5537767	"Software-initiated selections don't go on the selection-clipboard. I did select the entire field before, by triple-clicking - it's not that difficult ;)  I'm not aware of any time it makes sense to select only part. "	nAnswer
1199	5537937	"Triple clicking! Hah, the world gets crazier every day.  "	Clarify
1199	5611298	"Well, unlike GitHub's thing, this seems to still work with my triple-clicking paradigm. ACK. "	Statement
1199	5611353	"@luke-jr I tried your tripple-clicking-thing and that's also nice, but I guess the majority likes this pull :). And if it doesn't break your work-flow even better! "	Clarify
1198	5525282	"Nice.  Suggestion: when an error occurs while reading the address file, log it but don't escalate it. A corrupted file can easily be rebuilt, after all (and would remove one source of fatal startup errors).  "	Clarify
1198	5526380	"I'd prefer addrman.{cpp,h} to be very self-contained and only have knowledge about the data structure and serialization, not how it's stored and certainly not where. The reason is that this may be useful to other projects (e.g. dns seeds) that don't have the same uti.h (addrman only depends on it be"	Clarify
1198	5530368	"1) Yes, error diagnostic -- particularly for a corrupted or truncated file -- should be expanded, made more verbose.  2) Yes, the code should do something like write to temp file, then rename.  I have said as much on IRC several times.  Windows apparently uses ReplaceFile(), while Unix uses rename()"	Clarify
1198	5531016	"2) Or boost::filesystem::rename() ? 3) Ok, that's just a minor design issue; it can always be changed later on in several places to do it in a consistent way. "	Clarify
1198	5531569	"Googling for ""boost filesystem rename atomic"" seems to indicate that overwrite-via-rename is explicitly forbidden in the boost code.  See e.g., http://lists.boost.org/boost-users/2008/01/33451.php  Would be happy to use boost if possible, but I think we will be forced to #ifdef WINDOWS { ReplaceFile"	Clarify
1198	5531658	The first answer here is helpful: http://stackoverflow.com/questions/3156841/boostfilesystemrename-cannot-create-a-file-when-that-file-already-exists  Seems that in boost::filesystem v3 the behaviour is correct. The problem is that we still support v2... 	nAnswer
1198	5537982	"First run with this pullreq included, I get ""Error loading ipaddr.dat"" and quit. How can I start it for the first time? :)  Edit: Confirmed ipaddr.dat doesn't exist yet. "	Clarify
1198	5538096	"Now, that's what I meant with not escalating the error...  "	Statement
1198	5539860	Should ipaddr.dat (451 KB) be much larger than addr.dat (7.3 KB)? 	Other
1198	5544289	"Added fix: do not die, if ipaddr.dat is missing  "	nAnswer
1198	5665388	"OK, ipaddr.dat is now renamed into place.  All concerns have been addressed in the latest rebase.  Additional comments? "	whQuestion
1198	5669758	operator<< can fail and throw an exception if the file is not in the correct format (or there's a bug). I think you'll need a try catch in/around addrman.ReadFromDisk. 	Clarify
1198	5674051	"Added a new commit, re-creating CAddrDB. "	Statement
1198	5743658	ACK 	Clarify
1198	5750053	"Added commits:  1. rename to ""peers.dat"", the consensus on IRC 2. add file header, which includes a magic number (pchMessageStart) and sha256 checksum  "	Clarify
1198	5754849	"Rebased, and fixed one final nasty bug. "	Reject
1198	5756821	Collapsed multiple commits into two.  A couple minor cleanups. 	Statement
1197	5524005	ACK 	Clarify
1197	5524606	Can you fix (or remove) the instance of the same thing in the commented out code in walletdb.cpp? 	Clarify
1197	5525130	ACK 	Clarify
1197	5529333	Pushed with tweaks in 82e6b92b0ac75ed15014e5b1723299fa838ce82e 	ynQuestion
1196	5541993	Pulling to master to get some more testing on it quickly.  	Statement
1193	5524991	Updated... 	Statement
1193	5525623	ACK to the code and visual changes! 	Emphasis
1193	5537698	I think it looks better with the grid lines. They should stay. 	Statement
1193	5541163	"I don't see alternating tinted rows, so without the grid lines it's kindof hard to read sometimes... "	Statement
1193	5541298	@luke-jr screenshot? 	whQuestion
1193	5541339	![Example](http://luke.dashjr.org/tmp/screenshots/snapshot83.png) 	Emotion
1193	5542108	"@Daminvar @luke-jr  Agreed, it does look better with gridlines, but only the vertical ones. There's no need for horizontal gridlines because any one with decent eyes can tell the lines apart. "	nAnswer
1193	5542122	I think you confused vertical and horizontal... 	Statement
1193	5542149	@luke-jr  I want lines going up and down I do not want lines going left to right 	Reject
1193	5542209	"Lines going left to right are needed, not up and down... "	Reject
1193	5542240	De gustibus et coloribus... 	Statement
1193	5544141	"Too much bikeshedding. This was supposed to be a simple non-controversial commit, not a discussion topic. I'm closing this, and re-submitting it without the grid change. "	nAnswer
1192	5500626	"Admittedly, there are only 4 unique nodes in that list..... "	Other
1192	5500972	"You can't expect nodes that were never intended to run as a Tor hidden service, are able to deal with this. If there are problems like this with code from my torhs branch, please report them in the relevant pull request. "	Clarify
1192	5501218	"I thought tor awareness had been in the code for a while. I remember seeing a fTor flag in the code checking if the proxy port is 9050, so thought it better to raise it as a potential issue (rather than a definite one). happy to hear it's not an issue. "	Clarify
1192	5501581	"Code for being behind a Tor proxy existed, yes. For outgoing connections behind a Tor proxy, the code should definitely not leak its ipv4 address. But what you're doing here is making connections to older code from 127.0.0.1, and expecting them to know that that is Tor (without them supporting runni"	Clarify
1191	5495221	"@gmaxwell. Yes, wallet / backend sepatation does seem to be where this idea would fit in. Protocol-wise, do you think it should involve a BIP, or be an independent network? I'm inclined to think it could fit in easily to the existing network (via BIP). Although I think the current version system adv"	Clarify
1191	5495649	"I don't think the communication between clients and a trusted blockchain backend server needs to use the same protocol. There is almost no overlap (it doesn't need peer exchange, block/tx distribution, ... but it does require knowledge about things like addresses and balances which don't exist at th"	Clarify
1191	5504769	As I've asked you on the mailing list already: Why do you not take a look at the existing lightweight clients? You are re-hashing ideas that were already proposed on the forum and mailing list more than a year ago. Some people are working very hard on those. I don't see it necessary to duplicate the	Clarify
1191	5509319	"@laanwj Apologies for the re-hashing of ideas. I wasn't aware that they were old ideas (although I'm not surprised). I did do a search of the github issue database first before raising this though, which I thought would be the first place to look for whether it had previously been suggested.  From m"	Clarify
1191	5509568	"Github issue tracker is for everything directly related to bitcoind / Bitcoin-Qt, not more, not less ... IMHO! "	Emphasis
1191	5510263	@rebroad: http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development  	System
1189	5505050	Can you please move the checking logic to WalletModel instead of inside SetAddressBookName? That'd make it an UI-only change and much easier to test.   	Clarify
1189	5505197	"The question is, if walletmodel.cpp is the only place, where that check makes senes or if it's beneficial to all places in the source? I'm fine if it's only needed in walletmodel.cpp, so can you verify this? "	Emphasis
1189	5505575	"Well, it'd be nice to only change only the UI for an UI-only fix.  Then again, I guess the extra check doesn't hurt (except that it complicates the code a bit). "	Clarify
1189	5506494	"@laanwj Updated to be a GUI-fix only, is the LOCK in parentheses correct? I get now compiler warning, just want to be sure :) "	Statement
1189	5506518	"The LOCK is not correct. You need to have the lock before any access to the address book, so also while doing the check.   "	Clarify
1189	5506791	"Alright, the LOCK is now before any access to wallet, locking good now? "	ynQuestion
1189	5507403	"Yes, it's ok now  "	Accept
1188	5487022	ACK 	Clarify
1187	5476664	ACK 	Clarify
1187	5481194	"Perhaps that is a dumb question, but is that the minimum IE version that has to be installed on the client running the BC client or is it needed for the machine, which compiles the executable?  I'm asking, because I'm sure MS doesn't support IE 5.1 anymore and we should perhaps do the same then? "	Clarify
1187	5481354	"ACK  @diapolo Right, we don't actually use IE, but if you define _WIN32_IE to some old version you may be including some deprecated API that no longer exists on 64 bit windows.  Edit: which makes me wonder, what happens if you don't define _WIN32_IE at all? or do all windows programs need it?  If so"	Clarify
1187	5482343	I will try to compile without and see what happens ... seems like it compiles with _WIN32_IE only and _WIN32_WINNT removed. Afaik it tells the compiler which WinAPI functions are available with the specified IE / WINNT version.  In util.cpp it is needed for SHGetSpecialFolderPathA() function. 	Clarify
1186	5475895	"I don't think many people need it, and I don't think it should be prominent (you consider one menu entry prominent?). "	Statement
1186	5481406	"If you don't know what it's for, you don't need it. Currently it's basically a login tool for some mining websites. It could be used for other things where you need to authenticate that you possess a certain secret key. "	Clarify
1186	5482805	"Is it really neeed to open an ticket for such thing? You could easily ask this in the forums, as it is no coding glitch. "	nAnswer
1186	5485665	"@Diapolo, I originally commented in the relevant issue for the pull request for this code, but luke-jr said I should raise a new issue, presumably because the old issue had been closed.  I'd love to ask this in the forums, but I don't have post access - if you can tell me how to obtain this I'd be g"	Clarify
1186	5515501	"I think you get forum post access after a while. They have a probation period of a few hours in which you can only post in the newbies forum.  Closing this issue, nothing to fix...  "	Clarify
1186	5518861	@laanwj I joined bitcointalk a few months ago now.. still no post access.... 	Clarify
1186	5521435	You need some amount of postings in the newbie section! 	Statement
1186	5522268	@Diapolo aha! Thank you! I guess I'm such a noob that I didn't realise that :) 	Emphasis
1183	5468375	"Can you be more verbose?  What exactly do you mean? Which windows are unminimized? Just the bitcoin one, or all windows?  Do you have any special options enabled? (such as minimize to tray / close to tray). If so, does it still happen with those options disabled?  "	Clarify
1183	5468543	"@laanwj  it seems to be random. usually it's my Google Chrome window, but sometimes more than one application is unminimised. No special options enabled. "	Clarify
1183	5470613	Sounds like a window system or Qt bug... there's no way bitcoin is minimizing or deminimizing other windows.  	Clarify
1183	5474584	"well. I see what you're saying, but all I'd say is that no other application I know of does this, so bitcoin seems to be triggering this bug in Qt, in a way that all other applications manage to avoid doing. "	Reject
1183	8757776	Does this still happen with 0.7.0? 	ynQuestion
1183	8797368	"@rebroad Any new input here? I would also be interested in what happens, when using a newer Qt version like 4.8.2. "	Clarify
1182	5468729	"Here is another gdb output, this one seeming to look quite different:   Program received signal SIGSEGV, Segmentation fault. 0x00007ffff6243958 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4 (gdb) bt #0  0x00007ffff6243958 in ?? () from /usr/lib/x86_64-linux-gnu/libQtGui.so.4 #1  0x00007ffff6"	Other
1182	5474556	This is the Qt error sometimes seen as mentioned earlier:-   Qt has caught an exception thrown from an event handler. Throwing exceptions from an event handler is not supported in Qt. You must reimplement QApplication::notify() and catch all exceptions there.  	Clarify
1182	5481595	"*speaking of which, often the tray icon does not appear, so it cannot be exited using the GUI the majority of the time*  Huh? I've never heard this before, and also never experienced this. Together with #1183 it seems that your desktop is somehow broken.  "	Clarify
1182	5485693	"@laanwj - If I'm the only experiencing this, then it would seem that it's a rare combination between my unusual desktop, and something unusual bitcoin-qt is doing (since no other applications have these problems). I'd still suggest this issue remains open pending further investigation - and if anyon"	Clarify
1182	5678179	"    This doesn't happen if it's quit using the GUI (speaking of which, often the tray icon does not appear, so it cannot be exited using the GUI the majority of the time).  Can you try with -nosplash? It seems that the splash screen causes unity to be confused if there is a .desktop file, as it rega"	Clarify
1182	6264992	Can you test whether this is fixed with #1439? 	Emphasis
1182	6280057	"Bitcoin-Qt has virtually always done this (if its working while you exit), but it is fixed by #1439. "	Clarify
1181	5459185	It could be possible to get the text-direction from the system locale via QLocale.textDirection() and set it via http://harmattan-dev.nokia.com/docs/library/html/qt4/qtextoption.html#setTextDirection but I guess @laanwj is able to confirm this :). 	Clarify
1181	5459671	"I have no idea, I suppose it should be some kind of global option?  I'm surprised that Qt doesn't pick it up by default. I'd think right-to-left is a property of the language, not of the system locale. Maybe it needs to be set in Qt translator?  "	Clarify
1181	7842926	"Can you be more specific? I just tried this out with Hebrew:  ![](http://i48.tinypic.com/t6pjma.png)   To my untrained eye at least, this looks fine, at least not bad enough to claim that ""Bitcoin-qt incompatible with right-to-left languages"".   Maybe it is not perfect, but someone that knows the la"	Clarify
1181	8046739	"Closing issue because it not specific enough. I've established that basic right-to-left support is there.  No one in the dev team (AFAIK) knows right-to-left languages, so we need specific issues with screenshot to improve support further.  "	nAnswer
1180	5464976	ACK 	Clarify
1180	5476481	Survives my tests. ACK. 	Statement
1180	5585219	"It is definitely a valid point that "" if (hSocketMax > (SOCKET) -1)"" is an imperfect test.  Probably should use != etc.  However, that can be addressed in a separate pull request.  This pull req does not change the test itself... "	Other
1180	5585505	@jgarzik Will you do that mentioned pull above or shall I do it tomorrow? 	Clarify
1180	5585702	feel free to do so... 	Statement
1179	5455174	ACK 	Clarify
1178	5442747	"Sure, will report back after I did the tests :). "	Statement
1178	5443069	"Seems like a good idea to move MyGetSpecialFolderPath function from util.cpp into guiutil.cpp, too, as I currently get: guiutil.cpp:229: Fehler:'MyGetSpecialFolderPath' was not declared in this scope. "	nAnswer
1178	5443223	It seems that shlwapi.h can be removed from util.cpp after your changes. 	Statement
1178	5443224	"Thanks for the fixes.  MyGetSpecialFolderPath cannot be moved as it's also used in GetDefaultDataDir, which should certainly stay in the core code.  On the other hand, if we can remove the fallbacks, we could simply use the windows API function SHGetSpecialFolderPathA directly in both places and get"	Clarify
1178	5443325	"Ok, updated.  "	Accept
1178	5447007	"Now compiles fine on Windows, just see above comment for guiutil.cpp :). I will have to rebase #1134 after this get's merged, but that's fine. I consider removing MyGetSpecialFolderPath() then. "	Clarify
1178	5525053	Updated to _WIN32_IE 0x0501  	Statement
1178	5675345	Rebased  	Statement
1176	5446165	ACK 	Clarify
1175	5442016	ACK 	Clarify
1174	5442416	"If someone wants to test (use -connect= or -addnode=), I run a bitcoind hidden service on a57qr3ydpnyntf5k.onion:8333. "	Clarify
1174	5442615	"Cool!  Can you add a doc/Tor.txt with ""how to run your bitcoin node as a hidden service"" info in it?   "	Emphasis
1174	5446183	Nice!  	Statement
1174	5467286	Fantastic! thanks sipa.  	Reject
1174	5467527	"Hi sipa, I'd like to help test this. I could do with some help using git to apply this patch though. I was wanting to offer a bounty for git help, but I don't have post access on bitcoinforum..., and constantly using meld is becoming a bit too time consuming... :-s "	Clarify
1174	5476879	"@rebroad: switch to whatever branch you want my patches to be merged with (possibly just master), and type ""git pull git://github.com/sipa/bitcoin.git torhs"". "	Clarify
1174	5485789	"@sipa Thanks. doing that now. Has -addnode code been removed from init.cpp, or am I misreading the merge conflict? "	whQuestion
1174	5485987	It's not removed; only the code in init.cpp that added -addnode nodes to addrman was removed (the actual processing of -addnode is in ThreadOpenAddedConnections2 in net.cpp. 	Statement
1174	5486711	"By the way: what are you merging with, that you get a conflict? "	whQuestion
1174	5488342	"Couple of questions. Why do I get:  Cannot connect to a57qr3ydpnyntf5k.onion:8333: unsupported network  whereas other onion address work? (the above onion address is the one you mentioned in this pull).  Also, re:-  receive version message: version 50200, blocks=178423, us=127.0.0.1:47146, them=106."	Clarify
1174	5493037	"That ""unsupported network"" error means you're trying to connect to an onion address directly (not through a proxy). Is it possible you didn't use -proxy?  That received version message means that you connected to siqdznszjf4e6v5j.onion:8333, and thereby reached a peer who thinks you are 127.0.0.1 (s"	Clarify
1174	5499223	"receive version message: version 60000, blocks=178480, us=127.0.0.1:56334, them=24.7.178.63:8333, peer=p2hwc26zdsrqxiix.onion:8333  Seems pretty similar for a 0.6.0 too.... "	Statement
1174	5504531	"This passes my initial testing.   It's perhaps a little too easy to leak your IP when trying to run as a hidden service. E.g. if you -listen=1 without setting -externalip  ...  still better than what people would get if trying to run a hidden service today, but of course more support will encourage "	Clarify
1174	5509277	"@gmaxwell can you elaborate on what anti-dos you have in mind? ah, you mean such as banning based on IP address. Well, the only way around this would be to make nodes somehow uniquely identifiable. I'm not sure which would be worse, that or lack of ability to ban peers. "	Clarify
1174	5509543	grep the source for DoS.   	Statement
1174	5518896	"@gmaxwell, already did that before my post. "	Other
1174	5536037	"@rebroad the anti-DoS system registers IP addresses which engage in incorrect behavior, and prevents them from connecting or being connected to. In combination with Tor hidden services, you don't know the source IP, so it cannot be banned.  Mental note: make sure the proxy is never banned. "	nAnswer
1174	5655778	Hoping this would have been pulled by now... Re IPv6 testing. What would I need to see in debug.log to confirm that this works? 	Clarify
1174	5794436	Needs rebasing. 	System
1174	5831531	"Here's a proposal for a revamping of the relevant command line arguments: https://gist.github.com/2763381  It removes the special casing of :9050 as tor port, and defines more convenient defaults for several options. "	Statement
1174	5929127	Rebased on top #1389. 	Statement
1174	6267518	Can I get some ACKs? 	ynQuestion
1174	6270128	"I'm not the one, who can give an ACK, but are you sure this is rebased on current master? At least ApplyProxySettings() in optionsmodel.cpp seems weird, as I know this function is already there.  It would be also nice, to get a) #1433 in before this (no testing comments currently) or b) I need some "	Clarify
1174	6301802	"Rebased, fixed some sign warnings, and updated a comment as asked by @laanwj. "	Other
1174	6398148	"ACK if you make the following edit to doc/Tor.txt:  REPLACE: In a typical situation, this suffices to run behind a Tor proxy:  WITH: These instructions assume that Tor is listening as a SOCKS proxy on port 9050; if you use the Tor Browser Bundle, then it (by default) picks a random port every time i"	Clarify
1174	6509846	ACK. 	Clarify
1174	6510367	"@sipa I would like to make this available for the GUI, can you specify / tell me what is needed? "	Emphasis
1174	6510407	Rebased and updated documentation a bit.  @Diapolo: I'll explain over IRC if you like. 	Clarify
1174	6520376	Fixed - the function was renamed to IsTor(). 	Statement
1174	6533700	@sipa: I saw that in the source comments the option ``-notor`` is mentioned. Was this left out of the help message in init.cpp by intention? 	Clarify
1174	6533879	"Some ""advanced"" usages of options aren't mentioned. Explaining everything and all combinations would take too much place. Most is quite straightforward though - many options can be prefixed by ""no"" to disable them already. "	Clarify
1174	6534048	Thanks for the info and allright then. 	Statement
1173	5430895	ACK 	Clarify
1173	5432271	ACK 	Clarify
1173	5434071	ACK  Loosely related comment: I see that this call (and the (Get|Set)StartOnSystemStartup functions) could be moved to the UI code initialization (qt/bitcoin.cpp) instead of clutter the core code with a QT_GUI guard.  	Clarify
1173	5436100	"@laanwj That's a thing you should do, but sounds like a very good idea :). "	Statement
1173	5439991	"Erm, why make a useful comment less useful? The purpose of that code is to remove old wxBitcoin shortcut links... so the ""bitcoin-wx"" note is correct. "	whQuestion
1173	5440138	"This removes the current Shortcut (Bitcoin.lnk) and as we don't have wx anymore this is correct, no? "	nAnswer
1172	5430888	ACK 	Clarify
1172	5432277	ACK 	Clarify
1172	5434369	ACK 	Clarify
1171	5430877	"Please add the specific warning being fixed to the commit messages.  ""fix compiler warning"" is vague, and will get even more vague over time.  Code changes look OK "	Clarify
1171	5432296	ACK 	Clarify
1171	5432787	"Sorry, to be more specific, please redo the commits to include the warning being fixed inside the git commit itself.  Need to get that useful info into the permanent git history. "	Clarify
1171	5436072	Renamed the commit-messages to be more detailed. 	Statement
1171	5440299	ACK 	Clarify
1170	5424971	I'll never understand this war on spaces. IMO this just breaks other patches for reason at all.  	Clarify
1170	5425248	"It is a very minor change, yes, but it pops up again and again in pull requests for various projects.  Sometimes editors automatically trim this stuff, which may generate larger patches (with changes in unexpected areas) down the road.  Others will submit this stuff, as was already done in #1136, so"	Clarify
1170	5430469	Great big and never-ending ACK ;). 	Clarify
1170	5467480	Well done. Does this mean I'll have more free disk space after applying this? 	Clarify
1170	5529556	I think we should pull this in 0.7.0 after pulling most of the other outstanding 0.7.0 pulls that this would break. 	Clarify
1170	5534655	"I think this should be rebased once more (if needed) and then get merged. Why should this even break pulls, it removes not a single line only spaces? "	Clarify
1170	5535796	"It is scripted, thus may be regenerated from scratch at any time. "	Statement
1170	5535985	ACK for applying at the end of 0.7.0's merge window. 	Clarify
1170	6607555	Closing.  Will run script to do this immediately prior to 0.7rc1 release...  	Clarify
1170	6607732	I hope so ^^. 	Statement
1169	5422341	"This ""issue"" is incredibly aspecific.   The export button exports the contents of the current tab as csv. I'm not sure what could be more intuitive than that. It was frequently requested, and useful if you need an exports of your addresses, or transactions, for example for tax reporting.  What do yo"	Clarify
1169	5429201	"Apparently it exported public keys in this case? I didn't really look into what exactly was non-intuitive about it, but thought it should get reported for tracking rather than simply ignored/forgotten. "	Clarify
1169	5433942	"It simply exports bitcoin addresses, not public keys.  "	Reject
1169	5436275	"Tested it and it simply exports the listed addresses from the client ... what else should it do, seems rather obvious!? "	Emphasis
1169	5481554	Closing issue (nothing to fix)  	Clarify
1166	5436200	Updated to reflect laanwjs suggestion. After an ACK I will merge both commits. 	Clarify
1166	5481518	ACK  	Clarify
1166	5482319	"Rebased to be a single commit, no further code-changes. "	nAnswer
1165	5651090	I should have mentioned this happens with the Qt version ... could anyone verify this behaviour? 	ynQuestion
1165	5783988	Still present with official 0.6.2:  05/18/12 11:18:32 Fehler beim registrieren des Ports 8333 auf diesem Computer. Evtl. wurde Bitcoin bereits gestartet. 05/18/12 11:18:34 05/18/12 11:18:34 Flushing wallet.dat 05/18/12 11:18:34 Flushed wallet.dat 10ms 05/18/12 11:18:40 EnvShutdown exception: DbEnv::	Other
1165	5784708	Sounds like maybe EnvShutdown is called before the DbEnv is initialized. 	Statement
1165	7844968	"Also fixed with current master, 2 error messages are displayed but no crash occurs, good :) -> closed. "	Other
1161	5400611	It returns true consistently before the highest preset checkpoint.  This is the most important aspect of the behavior.  After that it's just guesswork and it should be expected and okay to be inconsistent.  	Clarify
1161	5400677	"ah.. well, if that's the intended behaviour, it's working as designed. "	Statement
1160	5449255	"NAK for ""Grammer"", ACK for ""fixed non-sensical error message"" "	Other
1160	5450320	"Sure, I'll delete ""grammer"" if that's the consensus. "	Statement
1160	5451737	"Not sure whether it's intentional or not, but it's called ""grammar"" in English. "	Reject
1160	5452074	"I need to follow this up for the pull request ""Me and my buddies fixed them spelling."" "	Clarify
1160	5486865	"NACK, as he included an already merged commit. "	Other
1160	5486926	"Oh, thanks for noticing. "	Statement
1160	5490156	"@retep You have to rebase to current master, so that only your commit goes into this pull-req. e.g. rebase origin upstream "	Reject
1160	5504159	"@Diapolo Thanks. I think I fixed it.  Sorry, this is the first time I've used github pull requests before. "	Clarify
1160	5504193	"Looks good now :) and I had a hard time learning Git, too ... don't worry. "	Statement
1159	5398671	"During normal 24/7 operation, the first-seen time is still used, right? "	whQuestion
1159	5400170	"the behaviour with this patch would be: transactions first seen in a ""tx"" message or self-generated get clock time, transactions first seen in a block or found by rescanning: block time. "	Clarify
1159	5400361	"It's problematic if transactions can be ""timed"" older than the most recent wallet transaction, or in the future. Doing so would make ""listtransactions"" out of order (or worse, reordered). "	Clarify
1159	5400640	In general I prefer this behavior to the current one... though txn appearing 'out of order' in the transaction history is unfortunate.  ... but traditional banking sites do that all the time and people seem to survive. 	nAnswer
1159	5400987	"I'd mind less if they actually appeared out of order, but I'm pretty sure they're sorted by time, so they'll reorder. :/  I care less, if listtransactions shows all 3 times (seen, block, and ""best guess"") and sorts by seen time... "	Clarify
1159	5403693	"I think it's fine for the JSON call to show all the different times, as people may need them for different purposes.  On the other hand, @Sipa's change is great for the GUI.  "	Clarify
1159	5593060	"Why not do it this way, without changing function args list:  ``` diff --git a/src/wallet.cpp b/src/wallet.cpp index 9989098..defab00 100644 --- a/src/wallet.cpp +++ b/src/wallet.cpp @@ -322,7 +322,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn)          CWalletTx& wtx = (*ret.first).second; "	Other
1159	5778948	Can we get some more discussion here?  Agreement on this would be nice. 	Statement
1159	5779005	"[We discussed this a bit back in December.](https://bitcointalk.org/?topic=54527) I think having all 3 times (received, block, and ""smart"") in JSON-RPC and just the smart times in Bitcoin-Qt is the best solution. ``` ""time"": smart timestamp, ""receivetime"": timestamp, ""blocktime"": timestamp, ``` "	Clarify
1159	5780101	"Yes, the smart time would also logically be the sent time as well. "	yAnswer
1159	5780642	"Right, we can put all the times in the ""transaction details"" window.  "	Reject
1159	7430829	"I'm officially -ENOCARE.  Code appears correct to my minimal scan.   @gavinandresen ?  @gmaxwell based on your comments, it sounds like you ACK this code?  "	Emphasis
1159	7431161	ACK. Looks obviously better than the current behavior.  	Clarify
1159	7431234	This is NACK since it breaks listtransactions. #1393 	yAnswer
1159	7431300	I'm very unsure myself whether I want this merged. Luke's version is more complex but probably behaves as expected in more use cases.  I'm not sure either should be merged without some testing... 	Clarify
1159	7982535	(Obsoleted by Luke's version.) 	Statement
1155	5384664	"Misunderstanding in IRC: I'm building the cross-compiled win32_deps.zip, not the compile-on-windows zip "	nAnswer
1155	5390255	"Too bad, so who created the initial package to compile on Windows? "	whQuestion
1155	5395659	"It's a pity that the gitian-compiled deps don't work with qt creator on windows. I can't recollect exactly why at the moment, but there were some linker symbol mismatches.  I guess it's worth finding out the cause, if you're working on this.   "	Clarify
1155	5396241	"Could you link me or upload the Gitian package, so I can try and see the error messages? I know how to compile the boost libs, but couldn't get the QR-Code libs to compile, didn't try OpenSSL or BDB. "	ynQuestion
1155	5784067	"Anyone from the core devs, who can comment on my request? "	ynQuestion
1155	5784698	"Sorry, no idea. "	nAnswer
1155	6126175	"Alright, I'm now able to compile OpenSSL (at least for my own usage), BDB and the QR-code libe are now left. "	Statement
1155	6608955	As no one seems to be able to help here I'll close this now. 	nAnswer
1154	5397017	can you elaborate please? 	ynQuestion
1154	5398257	Updated initial posting! 	Emphasis
1154	5403883	"Not that is interesting, as long as the current checkpoint is active which has 168000 blocks there is no lag and no problem with selecting addresses from the list, but as soon as the current block count is recieved by a node the client starts to lag / missbehave. "	nAnswer
1154	5403983	"The focus loss for addresses is indeed related to MainFrameRepaint(), if I simply empty this function no focus loss occurs. The problem with the GUI lag is that I can't reproduce it with my own builds and it only happens with the official 0.6.1 RC1 :-/. "	nAnswer
1154	5404052	"@laanwj I need your help here, have you got any ideas? I guess it is related to your commit https://github.com/bitcoin/bitcoin/commit/98e61758744ed34e8b7f59b37edb6d09b33d5517 "	ynQuestion
1154	5404279	"The address loss-of-selection should only happen when `AddressBookRepaint` is called, which only happens when there is an actual change to the address book. I'm not sure why it would happen on `MainFrameRepaint` but that's wrong behaviour, I split them on purpose.  The lag could be related. `MainFra"	Clarify
1154	5404320	Found the problem. WalletModel::update calls addressTableModel->update() ... oh my...  Thanks for spotting this. 	Clarify
1154	5404497	"This fixed the worst performance issue.   However, MainFrameRepaint is still called *a lot*. Also, every time it scans the wallet and computes the balance.  - We need some kind of rate limiting on MainFrameRepaints. There is no need to update the UI faster than say, 10 times per second, even if hund"	Clarify
1154	5406700	"Thanks for your quick reaction, as I'm not advanced in Qt-GUI stuff I could not have fixed it by myself. But in terms of debugging and helping we are indeed a good team :).  Will merge your fix into my local build and test it out.  An update-rate limiter would be a great idea. Value could be once ev"	Clarify
1154	5407020	"I can confirm addresses now stay again selected, but as I said I can't check if CPU usage or lag is fixed, as I didn't observe this with my own builds. @laanwj Shall I let this open until the next RC or will you work-out on further commits that address the problem, so this can be closed? "	Clarify
1154	5407842	"Let's leave this open for now. I'll leave the other mentioned improvements for 0.7.0 as they're not as urgent as this one, and have the risk of introducing further issues into the release candidate. But it helps to leave this issue open to remind. "	Clarify
1154	5651051	Reference to #1205 	System
1154	5808769	"#1205 has improved the CPU usage during initial block download, but it feels still a bit hight. @laanwj How is CPU usage on Ubuntu with -debug -logtimestamps? "	Other
1154	5809164	Remember that the crypto during block chain download also takes quite some computational power. You should compare with a bitcoind in initial block download. 	Clarify
1154	5963207	Low. I don't see how these flags would make any significant difference to the CPU usage.  Sent from my Nokia phone -----Original Message----- From: Philip Kaufmann Sent:  20/05/2012 14:10:49 Subject:  Re: [bitcoin] during block-chain download: high CPU load + GUI lags + addresses don't stay selected	Clarify
1150	5357416	ACK.  Thought this was already done; guess I thought wrong. 	Clarify
1150	5359432	ACK 	Clarify
1150	5533652	"For the record in case anyone comes upon this again, this was a wxWidgets flag afaict. "	Statement
1148	5347679	Get github to link to the commit: c2e8c8ac 	Statement
1148	5356467	The specific commit that caused this is faf705a 	Statement
1148	5357088	"It breaks OP_CHECKMULTISIG, at least on my 64-bit Linux virtual machine:  Exception thrown from this line in script.cpp: 946                        int nKeysCount = CastToBigNum(stacktop(-i)).getint(); (gdb) p i $7 = 1 (gdb) p -i $8 = 4294967295  "	Clarify
1148	5357436	Fixed by reverting i to signed.  	Statement
1147	5349594	"See #1082, too. I guess Gavin wants this for 0.7. "	Statement
1147	5382516	I generated a new testnet genesis block and a chain a couple of weeks ago; before releasing I'd like to expand the data-driven Script test cases and then embed them in the testnet chain behind a checkpoint. That is at the top of my TODO for 0.7 pile...  	Clarify
1147	5397023	oh.. there goes my idea of opening an exchange trading testnet bitcoins.... 	Clarify
1147	5945572	#1392 	System
1147	7842953	"This already happened, closing issue. "	nAnswer
1146	5341290	ACK 	Clarify
1145	5312121	"If the rpcpassword is less than 20 characters long, then every incorrect-rpc-password-attempt results in a 250ms delay:  Code from bitcoinrpc.cpp:          if (!HTTPAuthorized(mapHeaders))         {             printf(""ThreadRPCServer incorrect password attempt from %s\n"",peer.address().to_string()."	Clarify
1144	5308567	"I've seen this warning as well, however I've not fixed any warnings in json_spirit. I'm not sure we should do anything about it, as it's not our code.  "	Clarify
1144	5309881	Whose code is it and what is it used for? 	whQuestion
1144	5310065	it is used for serialising json in the json-rpc interface. that link you're talking about is not really an issue.  what happens is that the method can be instantiated using a template parameter. so there are different string type definitions creating that function. sometimes it has a 'char' type whi	Clarify
1144	5406871	"If this does not need to get fixed or can't be fixed by us, shall I close this? "	Clarify
1144	5784058	"Closing this, as no further comments were added. "	nAnswer
1143	5314007	"I like the IRC channel-hopping idea, although supporting old clients having trouble finding peers because none of other seeding options is working for them is so far down the priority list I'm not sure it's worth the effort.  "	Clarify
1143	5314261	"If we hadn't decided to deprecate IRC, that should have been merged for sure. Maybe there's some way for checking how many nodes are in the channels, and based on that join more or less? Probably not worth the effort anymore though.  Hardly related: in #1141 (i should split it off) I added a ""-seedn"	Clarify
1143	5315918	Or maybe a community volunteer could connect to all channels 	Statement
1142	5424501	"Closing, due to @sipa comments "	nAnswer
1141	5314485	"I added a  -seednode= option, which causes a short-lived connection to the specified address (which may be a name, and can be passed directly to the proxy, without leaking DNS information) until some peer addresses are returned, and disconnects. This mechanism is used implicitly instead of DNS seedi"	Clarify
1141	5397058	"Is it possible to specify different proxies for different address types, and possibly to even round-robin proxies/non-proxies for certain address types? e.g. for .onion addresses, always use 127.0.0.1:9050, for .i2p, always use 127.0.0.1:4444, and for ipv4 and ipv6 round-robin between 127.0.0.1:9050"	Clarify
1141	5397116	That shouldn't be too hard. 	Statement
1140	5287822	"RE @gavinandresen:  1) Updated and rebased, to fix LimitOrphanTxSize() issue.  2) RE ""Test ScriptSigArgsExpected() for error"" -- I agree ScriptSigArgsExpected() may not return <0 given current conditions, but there are two advantages to the new code,      a) the code is less fragile, in case those c"	Clarify
1140	5287970	ACK. 	Clarify
1139	5268641	"ACK on the tooltip fix, but the button text is fine as-is IMO. "	nAnswer
1139	5268894	"Wouldn't it make the button very wide? Too much text on buttons is not good, better to convey the function by context instead. "	Clarify
1139	5269257	"Now only updates the tooltip, which is the correct solution! "	Emphasis
1139	5269309	ACK 	Clarify
1139	5288491	ACK 	Clarify
1138	5382121	Fixed; the makefiles now pass -DTEST_DATA_DIR=... so the test data directory gets compiled in as a fallback place to look.  	Clarify
1136	5268587	"Reverted to while (1) instead of loop, but as laanwj said the use of loop should perhaps be deprecated, or loop should be removed (not with this pull request). "	Clarify
1136	5268637	"Most changes look like minor code style changes, or personal preferences (""char* x"" vs ""char *x"", for example). Not sure that's worth the trouble of possibly conflicting with other changes. "	Clarify
1136	5268679	"Well the changes to net.cpp and serialize.h, and the comment update in init.cpp make sense.  Removing/adding spaces on the other hand (especially at the end of the line), meh...  "	Clarify
1136	5268765	@sipa agreed 	System
1136	5269299	"I saw you guys removing left-over spaces, too ... so what's wrong with beeing thorough? "	Clarify
1136	5269329	"Removing spaces when you're modifying the line already is fine... removing it with no other changes, on the other hand... "	nAnswer
1136	5269403	"It isn't even worth the discussion, I'm not searching for those parts in the code, but while merging commits I see those things with BeyondCompare. The need not to be in and so it should be simply okay to change this whithout any discussion. I won't remove any line-breaks and reverted that! "	nAnswer
1136	5406779	Will this get merged or shall I chery-pick the 3 changes and we leave unused spaces all over the code ;)? 	Clarify
1136	5424916	"Basically this is a whole bunch of unrelated changes, lumped into a single commit.  Even if we're talking about two one-line changes, consider putting such changes each in a separate commit *if they are logically unrelated*.  In particular, trim trailing whitespace should never be mixed in with othe"	Clarify
1136	5430485	"I'm fine with splitting this up into several pull-requests, if that is the wished procedure :). "	Statement
1136	5434516	"Mind that @jgarzik is talking about multiple commits, not necessarily multiple pull requests. Multiple pull requests are good for completely unrelated things, but don't feel obligated to make a separate pull request for each warning message, for example. "	Reject
1136	5436219	"Thanks for clarifiying even further, I don't feel disabused, but it helps me with helping the project! "	Reject
1135	5268286	"Wow many code changes for a little win, but I'm fine with them. "	nAnswer
1135	5268385	"Binary changes to: addrman, bitcoinrpc, db, guiutil, keystore, main, net, script, wallet, walletdb  http://luke.dashjr.org/tmp/code/preinc.bin.diff.bz2 "	nAnswer
1135	5268607	I consider pre-increment/post-increment more of a code style preference - no need to change it if it doesn't gain you anything. 	Reject
1135	5268624	I consider unnecessary post-increments to be akin to unused variables. 	Statement
1135	5268762	@sipa +100 	System
1135	5268878	"The number of changes could be brought down if you'd only do this for non-primitive types (ie, iterators).  But even then, this is a kind of a micro-optimization that makes sense for tight inner loops. I'm not sure it's worth changing everywhere.  "	Clarify
1135	5268977	"FWIW, KDE fixed this in 2007. "	Statement
1135	5269903	I just compiled a simple for-loop twice (i++ and ++i) and compared the disassembled code. There were no differences even when using -O0. 	Clarify
1135	5269921	This isn't the only cleanup for 0.6.1 that has almost no effect on binary output. I suspect the actual binary differences are all in the iterators. 	Statement
1135	5270156	I've just talk to someone who knows a thing about C++ compilers. He said iterators from the std library can be inlined and thus it++ vs ++it won't make a difference there either.  In case we overload ++ in Bitcoin this might in fact make a difference but the better way to fix it would be by making t	Clarify
1135	5270193	"That's assuming glibc and GCC. Best to do things the ""right way"" so we don't depend on implementation-specific optimizations. "	Reject
1135	5271371	Too much code change for zero gain. 	Statement
1134	5275411	"Rebased, only decision left is the rename of Bitcoin.lnk to Bitcoin-Qt.lnk. Please vote and I'll follow. "	nAnswer
1134	5406974	"Revert to old Bitcoin autostart link (Bitcoin.lnk), so there should be no blocker in here anymore. "	Statement
1134	5430738	"Rebased, removed most space changing stuff and removed the compiler-warning fix, which goes to a seperate pull-request. "	Clarify
1134	5491426	ACK 	Clarify
1134	5525832	"Rebased, no code changes. "	Statement
1134	5585346	"Why does this patch add a bunch of redundant initializations of large buffers?  BTW/hint: the commit message should answer this question...  ""utility functions cleanup / update"" is too vague; it tells us nothing about why these changes were wanted/needed.   "	Clarify
1134	5585476	"@jgarzik If an array has no initialization, the values are undefined, no? You are right about the commit message, it's one of my early pull-reqs ^^. "	Statement
1134	5585689	"Correct.  However, you will note that these undefined values are never accessed. "	Reject
1134	5585768	"I'm willing to learn again, if the main devs don't want arrays to get initialized, I will remove that change. "	Reject
1134	5593190	"In general we want variables to be initialized. But initializing large buffers can cause performance problems, I think the decision not to initialize them was conscious. I'd rather completely get rid of the buffers and replace them by a sensible string type, where possible.  (For example, add a func"	Clarify
1134	5596935	"Rebased and removed the char inits, only 1 change is left in FormatException(). "	nAnswer
1134	5597096	ACK 	Clarify
1133	5267627	"Does this resolve symbolic links? (I don't think that is proper behaviour, if so) "	ynQuestion
1133	5267645	I don't think boost::filesystem::system_complete does that. This commit changes the behaviour back to what it was before ee12c3d60c4 (except that the suggested bitcoin.conf file in case of a missing rpcpassword now has the correct file path). 	Clarify
1133	5268480	This breaks the UI build :-)  (There's also a call to ReadConfigFile there that assumes that the result is a bool).   	Clarify
1133	5268567	Fixed. 	System
1133	5268598	ACK 	Clarify
1133	5268745	ACK 	Clarify
1133	5271368	ACK 	Clarify
1132	5267346	"I agree, but I'm not sure it's worth the trouble to fix it.  "	nAnswer
1132	16414598	Outdated 	Statement
1131	5263005	ACK 	Clarify
1131	5263557	ACK 	Clarify
1131	5264359	ACK 	Clarify
1130	5261021	"I remember someone once mentioned that such stack randomization is even optimized away by recent compilers, so I had at a look at the generated code. My assembly-fu is not that good, but from what I understand, ThreadMessageHander for example is compiled to not more than a strangely-ordered loop. A "	Clarify
1130	5266108	That's a pretty smart optimizer!  Hmm if the goal is to displace the stack pointer with an arbitrary amount we could also use alloca() with a random amount.  	Clarify
1130	5268009	"Is there an option to enable ASLR with GCC, this should do the same right? "	ynQuestion
1130	8847114	"Closing this, I don't think it's an actual problem as every usage of the macro creates a new static variable which is only used within that thread.  "	nAnswer
1129	5261128	"although the pastebin test seems accurate, I would have preferred one that directly includes both old and new enum{} lists...  add prefix OLD_ to each symbol in old enum, and then script-create a test that tests OLD_FOO==FOO, for each symbol.  ACK on the concept "	Clarify
1129	5261461	"Done that: http://pastebin.com/GtjjXRZM  I've also diffed the disassemblies  (with *only* commit 7be8b2f): http://pastebin.com/fTvGwW94  (difference in version.o is explained by different git commit, apart from that there are no differences)  "	nAnswer
1129	5262993	ACK 	Clarify
1129	5263559	ACK 	Clarify
1129	5264369	ACK 	Clarify
1128	5245752	"I'm not sure it is a good idea to accept nonstandard (or otherwise non-policy compliant, whatever the policy is) transactions into your memory pool if you're not mining yourself. "	Clarify
1128	5246036	"Refusal to accept your own transactions breaks the rest of the wallet code right now, in my experience. At least this way, you can solicit a miner to accept it. "	Statement
1128	5246101	"Of course, but the wallet shouldn't create such transactions. If it does, that's a bug. "	Reject
1128	5246168	"Or a new feature in development.  So either it's a no-op in a non-buggy vanilla client, or it prevents bug compounding and makes testing new features easier.  "	nAnswer
1128	5247137	"Or (Satoshi would certainly say ""no"" here...) just add a cli switch that disables the isStandard test at runtime (i.e. accepts all valid transactions as standard), instead of hacking it half-way like this. "	Clarify
1128	5247283	That'd be #559 ;)  I don't think bypassing the non-standard checks for ones own transactions is a half-way-hack. 	Clarify
1128	5264398	"Accepting transactions you don't understand is a really bad idea, ESPECIALLY if they are to you. Getting your client to accept a non-standard transaction that the rest of the network will eventually reject is a good first step to a successful double-spend.  No philosophical objection to the other co"	Clarify
1128	5264493	"This doesn't accept non-standard transactions *to* you, only *from* you... or at least that's what I had in mind when I wrote it - does IsMine return true for ones you're receiving too? "	Clarify
1128	5267845	"Yeah, looks like I confused IsMine with IsFromMe. Closing until I've fixed this (let me know if it's wanted for 0.6.1 and I'll prioritize it) "	Clarify
1128	5795434	"Rewrote, should fix the problems. "	yAnswer
1128	7430782	"Sounds like consensus is fairly strong against accepting non-standard TX's, from yourself or not. "	Clarify
1127	5238046	What's your LOCALE / LANG?  My guess is that somehow it doesn't detect your language as english but as some unknown language.  	Reject
1127	5242624	LANG=en_GB.utf8 LC_COLLATE=C 	Statement
1127	5246531	I've tried setting those environment variables and it works fine.  I wonder what value does `lang_territory` take in bitcoin.cpp in your case?  	Clarify
1127	5247682	"lang_territory is ""en_GB""  Also, shouldn't the en locale be used for unsupported locales anyway? "	whQuestion
1127	5247746	"That may be a sane thing to do. But it's not the case right now.  Anyway, in the case of ""en_GB"" it tries ""en"", so this doesn't explain the problem. "	Reject
1127	5247758	"Oddly, git master seems to work... bisecting now "	Statement
1127	5248089	"Doh, it was fixed in:  commit 3fddc8effca227707773b5655c4cae4acb8396a6 (HEAD, origin-pull/1089/head, laanwj/2012_04_translationupdate) Author: Wladimir J. van der Laan <laanwj@gmail.com> Date:   Fri Apr 13 08:45:26 2012 +0200      Update translations for bitcoin core          - Move scripts/qt to sh"	Other
1126	5235367	Is there a reason to use these instead of the standard string.h (memset) and stdio.h (sprintf)? 	Clarify
1126	5235902	"I admit I'm unclear on the advantages of cstring/cstdio over the normal header.  The bitcoin codebase does currently prefer the C variant (""#include <stdio.h>""). "	Other
1126	5238111	"cstdio and such are more canonical c++.  The actual difference is that stdio.h puts the symbols in the global namespace and cstdio puts them in `std` (http://stackoverflow.com/questions/7596406/stdio-h-not-standard-in-c).    All in all, it doesn't make much difference. But we should not mix them.  "	nAnswer
1126	5241666	"ok, I'll change my pull request "	Emphasis
1126	5246783	Does this actually fix the GCC 4.7 build (without -fpermissive)? 	Clarify
1126	5247892	Yes. A log is better than 1000 words: http://paste.pocoo.org/show/584719/ 	Other
1126	5263575	ACK 	Clarify
1126	5264034	ACK 	Clarify
1125	5228809	"Hmmm. Changing line 85 of db.cpp to just:              filesystem::path pathLogDir = ""database"";  Seems to solve the problem. When the log path is relative, it will take it relative to the data directory, not relative to the current directory.  This is documented here: http://docs.oracle.com/cd/E170"	Clarify
1125	5231283	#1086 Seems related to this. 	System
1125	5271642	Fixed in #1133 	System
1124	5210071	ACK 	Clarify
1124	5215103	ACK 	Clarify
1124	5255323	"I added a commit that moves the definition of CRPCTable and CRPCCommand to bitcoinrpc.h, so that it does not need to be duplicated in tests/rpc_tests.cpp. I suppose it is useful for #1075 as well. re-ACK? "	Reject
1124	5255356	ACK 	Clarify
1124	5264403	ACK 	Clarify
1123	5215436	#1107 #605 seem like similar issues (but not duplicates)  I suggest removing all data except your **wallet.dat (!)** from your bitcoin directory and re-trying.  We really need to implement an auto-recovery...  	Clarify
1123	5223059	I deleted addr.dat and it worked. 	Statement
1123	6319038	Somebody knows how to fix this in OSX? I did not find those files. 	Clarify
1122	5192114	The 'signed char' doesn't really make me happy. We use 'char' with the implicit assumption that it's signed all over the code base. Many programs do this. We make worse assumptions about data types (see #888). Changing this assumptions will require quite some thought especially in serialize.h.  Why 	Clarify
1122	5192297	Assuming that 'char' is signed is a bug; ISO C and C++ leave it undefined.  The fact that Satoshi's prototype was a little bit sloppy isn't much of a reason to never fix these bugs.  Is -fsigned-char portable?  (Does clang support it?)  What happens when you link against a library that defines char 	Clarify
1122	5192331	"Yes, clang supports that option. So does MSVC2010. Linking against a library that defines char otherwise should not be a problem as the in-memory representation is the same.  I agree that it's no reason to never fix these, but have you checked all other places where char is used? Are you sure that u"	Clarify
1122	5192436	"Eventually the fix would be to forbid the usage of plain `char` completely, and define our own typedefs for signed and unsigned char (or use posix `uint8_t` / `int8_t`, even better as we assume 8-bitness?), and force the use of those everywhere.   Edit: but don't get me wrong, I'm not opposed to acc"	Clarify
1122	5198669	"Actually, not every use of `char` needs to be changed.  Cases where `char` refers to the characters of a human-readable string should be left as-is (since things like `open` use `const char *`).  I searched for every instance of `char`, and skipped anything that looked like it was just ordinary stri"	Clarify
1122	5216045	I don't have specific suggestions. If you check(ed) all occurrences of char it should be OK.  	Statement
1122	5244737	"All changes to unsigned seem safe to me, and changes to signed will not influence any current;y supported platform. ACK. "	Clarify
1122	5246432	"I concur with sipa on a read-over basis, but comparing the object files produced (on x86) reveal some disturbing (to me, as someone who isn't familiar with x86 assembly) differences...  The following object files are changed: bitcoinrpc, checkpoints, main, script, Checkpoints_tests, miner_tests  Her"	nAnswer
1122	5246633	"@luke-jr: a lot of those seem different function names to calls? (but same binary representation)  If you want a fair comparison you should remove the ',' from phexdigit, so that the array will stay 255 bytes. (don't know if you did that already)  Also gcc tends to be quite weird, in that small unre"	Other
1122	5247217	I was only comparing the tip of this pullreq. 	Statement
1122	5247582	"@luke-jr  That's weird.  On my machine, I only see these differences for script.o: http://paste.pocoo.org/show/584704/ "	Statement
1122	5247951	"The `callq  50 <CScript::DecodeOP_N(opcodetype)+0x50>` must be the call to `__assert_fail` (called if eax<=0x50 or >0x60, which matches the `opcode >= OP_1 && opcode <= OP_16` expression ). So a different argument is passed when the assert fails, we can live with that, I guess.  Edit: objdump -rCd c"	Clarify
1122	5248528	ACK 	Clarify
1122	5261492	"Thanks, guys! "	Emphasis
1121	5192204	ACK  	Clarify
1121	5255402	ACK 	Clarify
1120	5188027	Is this unmodified source code? 	whQuestion
1120	5188074	"@sipa, yes, stock 0.6.0.6-beta, running on Windows 7, using tor. "	Accept
1120	5396910	"My proposal for solving this would be to introduce a ""stop sending me blocks"" command, or a ""I already had those blocks"" command, which would cause the sending node to stop sending. For backwards compatibility, old nodes would ignore these commands, so nodes would give them a chance to stop, and if "	Clarify
1120	5400596	I can also confirm that this problem exists in a recent version of litecoin. 	Statement
1120	5400820	Is it possible for ProcessMessages() to determine which block is being sent before it's finished downloading it? Perhaps get advance notification of its hash rather than wait for the block to completely download before realising it's wasted time and bandwidth receiving it? 	Clarify
1120	5400875	"That would require some structural changes to the code, and I'm not sure it's necessary. I'd much rather like to know why your node requests blocks twice. "	Statement
1120	5401118	Isn't it standard behaviour that it requests the same block more than once if the nodes requested do not respond within a certain time period? 	Emphasis
1120	5401651	"I've added some debugging code to work out what's going on, and I've noticed that in ProcessMessages() that the blocks seem to get stuck downloading. The vRecv.size() sometimes never reaches nMessageSize. i.e. every time ProcessMessages() is called, the vRecv.size() is still the same as last time fo"	Clarify
1120	5552951	"One solution to this problem is to add the ability to include a checksum/hash of the block in the block header, so the node can reject it without downloading it if it already has it. Only one other solution I can think of, other than putting it with receiving blocks that the node already has, but wh"	Clarify
1120	17772821	I'd like to understand exactly why pull request #1382 was closed. The issue was that nodes were being disconnected when they were simply doing as they were told - but what is the alternative to this? How do we avoid receiving duplicate blocks? The only way I see this is to NEVER request the same blo	Clarify
1120	17774746	"@rebroad If a node is slow in responding, you need to switch to another peer for downloading. If a node is really slow, you can choose to disconnect him. If a node doesn't respond at all, he'll timeout after one minute anyway. But without logic to at least prevent unintentional double requests, disc"	Clarify
1120	27141549	"Closing, as it ""works as intended"". Pull requests to speed up block downloading are on the way and could use testing, see #2964. "	Clarify
1119	5187960	Extra information: lsn_reset is not faster when it is run a second time. I assume it needs to traverse the entire database file. 	nAnswer
1119	5215221	"Code is ACK  Maybe we could add some text to the description/tooltip that it doesn't affect the safety of the wallet. Somehow this ""rush database shutdown"" manages to creep me out (and that would even more apply to users, I think).  "	Clarify
1119	5219234	"@laanwj I'm not so sure - I believe many corruptions are caused by people shutting down their computers before lsn_reset has completed, or otherwise killing it because of slow shutdown. Not calling lsn_reset is perfectly safe, only you can't move blkindex.dat to a new environment afterwards. If you "	Clarify
1119	5219674	"Another random concern: could this interfere with deleting db logs on startup/shutdown? (i'm not sure we do this but remember reading about it on irc) Is the ""unflushed state"" in the log files? "	Clarify
1119	5220373	"If you manually delete log files, and no lsn_reset was performed on blkindex.dat, it will fail to load. We call some bdb functions to remove log files automatically, but this only happens when they are safe to be removed. "	Clarify
1119	5264511	"A random thought after reading http://dbaspot.com/berkeley-db/266028-database-recovery-no-transaction-logs-sybase-its-termed-suicide-recovery.html  If the datadir/database directory is empty or missing at startup, could we just leave the DB_RECOVER flag out of the dbenv.open() call and cross our fin"	Other
1119	5264631	"I did a test: close all database files nicely, do a checkpoint, (do not reset lsn's), shutdown the database environment cleanly, delete the log files, restart application without DB_RECOVER. Result: Db::open: Invalid argument.  So it seems that no matter what, the log file needs to be present. I won"	Clarify
1119	5290193	"ACK.  db_dump calls: dbp->verify(dbp, filename, NULL, stdout,                     DB_SALVAGE |                     (Rflag ? DB_AGGRESSIVE : 0) |                     (pflag ? DB_PRINTABLE : 0));   "	Other
1119	5290451	"Right, not what we want to do by ourself.  @jgarzik and @gmaxwell: what worries do you still have w.r.t. this pullreq? "	ynQuestion
1119	5314001	"@laanwj If i'd change the checkbox to be ""detach block and address databases from environment (slower shutdown)"", and make it default off. Would that sound less alarming? "	Clarify
1119	5342193	I swapped -fastshutdown=1 for -detachdb=0. This way of formulating things hopefully sounds less scary. 	Clarify
1119	5342597	"The blk000x.dat file(s) are not involved here, as you didn't mention it? As addr.dat and blkindex.dat can be rebuild I think it is a nice addition / option. I had to read the description several times to understand what is default now ^^. "	Clarify
1119	5345430	Default is the fast shutdown without calling lsn_reset on blkindex.dat and addr.dat. I believe that's what most people want - very few people move these files around between environments.  blk0001.dat is indeed not involved here as it is no database. 	Clarify
1119	5349581	Thanks for clarifying and ACK ;). 	Clarify
1119	5350045	I like the diplomatic renaming :-) ACK.  	Clarify
1118	5186485	ACK 	Clarify
1117	5181151	ACK 	Clarify
1116	5179793	"The big-endian issue is known (#888). Not only does the test fail, entire bitcoin serialization is broken on architectures sufficiently different from x86.  The to_internal error for boost::program options is a problem in boost. As I had the same problem building with clang, I've worked around it he"	Clarify
1116	5235188	Just add -fpermissive on CXXFLAGS 	Statement
1116	8757322	    Fixed in version bitcoin/0.6.2.1-1     Done: Jonas Smedegaard <dr@jones.dk>     Bug is archived. No further changes may be made.  Closing this...  	Other
1115	5180150	ACK 	Clarify
1115	5180210	ACK 	Clarify
1114	5179657	ACK 	Clarify
1114	5179668	ACK 	Clarify
1113	5179234	disagree with all of these  	Statement
1113	5179341	"BIP 0031 does say ""can contain a nonce field"". I'm not sure this is useful, but it warrants some discussion maybe. "	Reject
1113	5231520	"BIP31 has been updated to make nonce mandatory (unfortunately, IMO). Closing. "	Statement
1112	5153386	"It is unfortunate that every usage site gets larger, with this patch. "	nAnswer
1112	5154479	"Yes, I did it that way because it exposed all places where implicit versions where being used. In many places, this implicit value must obey some hidden rules. For example, GetHash() needs to be done using a constant version number, or everything would break, but used PROTOCOL_VERSION formerly. If w"	Clarify
1112	5154569	"Or put otherwise: i think using PROTOCOL_VERSION is a bad default anyway, because as soon as the version number becomes relevant, every piece of code that uses the default constructor will have to be changed anyway. "	Clarify
1112	5155692	"Larger, but also more explicit and less magic. I like it.  New diagram: https://dev.visucore.com/bitcoin/includes_saneserial.svg  "	nAnswer
1112	5171238	"I also expect that making the version parameter explicit and passing it through prevents many of the ""argument unused"" warnings currently emitted in the headers. "	Clarify
1112	5173532	I doubt that; they don't become magically used because they're explicit instead of implicit. 	Reject
1111	5437235	10$ from me. 	nAnswer
1111	5461990	I'm in for $200 	Statement
1111	5710603	"I agree that some parts could use a redesign (especially the icons, or the transactions details dialog). However, the goal is not to have a ""fancy design"" but to get in the way as little as possible. So, integrate with the OS native interface where possible (see for example #1222), and make use of Q"	Clarify
1111	5761276	"I can partly agree, but I also need to disagree on some points.  Let's say that I want to pay for something on a website. The client is running on my desktop/iPhone/Android then I click on the bitcoin URI to make the payment (actully I think its implementation is not working yet, see #1110). The ide"	Clarify
1111	5761695	"You're comparing a desktop program to websites. No, I don't think excel, openoffice and other business tools are ""fancy"" or ""fashionable"" (you could claim exactly the opposite, they're boring). They are optimized for usability and platform integration. Also, organizations such as Github have the res"	Clarify
1111	5781611	"You're right, I compared web sites to desktop programs because I thought that it is easier to demonstrate than desktop applications.  Ok, I understand that it's would be too much time to integrate the Photoshop design, and you don't want to waste your time on it. I approached the question of design "	Clarify
1110	6207084	"Should URI work on the mac? Never has for me. That would be a big step in the right direction. Currently handling payment is not smooth at all. It would be ideal, if clicking the Bitcoin address would open the bitcoin client and insert the clicked address into the receiving field. "	Clarify
1110	6218077	"My thoughts exactly. The URI definition (http://en.bitcoin.it/wiki/BIP_0021) is complete enough to make the label (name of the receiver), receiving address, bitcoin amount, message and other future parameters pre-filled in the client. "	Clarify
1110	6219291	URI handling is currently only active for Linux-style OSes. 	Statement
1110	6227561	"Ok, so is there an existing ticket for URI implementation on OS X? "	whQuestion
1110	6227643	"I was working on the Windws part of this some time ago, but it was considered not perfect. For Mac this is a todo-comment in the source. "	nAnswer
1110	6239840	"ok thx for the info. so I can't subscribe to any ticket :(  talked to sipa via IRC, he said it should be coming soon. I think this is very important and should be rather high on the priority list.  maybe you can update this ticket once it is implemented? That would allow me and others to get a notif"	Clarify
1110	6244576	"Windows URI handling was disabled prior to 0.6, as it was considered unstable and would have had to be added late in the development cycle.  It is enabled for all non-Windows and non-OSX builds, but you have to register the protocol handlers manually unless you use some form of automated installatio"	Clarify
1110	13463697	"Closing this, it was fixed in version 0.7 I believe.  I just implemented bitcoin: URI handling on OSX, that should be in the-release-after-0.8.  "	Statement
1110	14349722	"Hi Gavin, not sure I understand. 0.8.0 does not have URI support yet, but it's in the code already and will be in 0.8.1? Could you elaborate? "	ynQuestion
1110	14350882	"The next includes-new-features release (which may or may not be called ""0.8.1"") will include support for bitcoin: URIs on OSX. "	Clarify
1110	14350911	Great :) Thanks for clarifying. 	Statement
1110	17120455	http://www.ambience.sk/how-to-add-bitcoin-uri-to-firefox/ 	System
1110	21512911	0.8.3 brings this functionality. Glad to see this finally happening and working on OS X. 	Clarify
1110	21514420	If this is fixed @andrasfuchs can you please close the issue? 	Clarify
1110	21549541	"I tested only on Windows, but I got the following error after clicking on the bitcoin URL:  ""Cannot obtain a lock on data directory C:\Users\Andras\AppData\Roaming\Bitcoin. Bitcoin is probably already running.""   ![bitcoinqt_v0 8 3_urlclicked](https://f.cloud.github.com/assets/910321/855368/214c58d4"	Clarify
1109	5143467	Seems @jgarzik was doing something similar. I've rebased his changes on top of mine now. 	Clarify
1109	5143511	Tested builds of bitcoind and bitcoin-qt in gitian (linux and windows). 	Statement
1109	5143539	ACK 	Clarify
1109	5146046	I've ran it through the graph-o-matic and it's even readable now! https://dev.visucore.com/bitcoin/includes_noheaders.svg  This is much better.  It does show there's one circular dependency left:  ui_interface.h <-> util.h  	Other
1109	5181777	Superceded by #1112 	System
1108	5143526	superceded by #1109 	System
1107	5143008	Is this a new install or an old one? Was it working before? If so what changed when it stopped? What version of bitcoin is this?  	Other
1107	5143093	This looks like a corrupted blk0001.dat file. 	Statement
1107	5147661	It is a brand new install from the ubuntu ppa.  If I mv blk0001.dat to blk0001.old the application starts but then quits with message: unable to open blk0001.dat 	nAnswer
1107	5413614	"This is happening for me also after bitcoin-qt SEGVed last night. Even after restoring the blk0001.dat and blkindex.dat back to a backup taken 2 weeks ago, it still does it.  (Using Bitcoin version vCLIENT_VERSION_MAJOR.CLIENT_VERSION_MINOR.CLIENT_VERSION_REVISION.CLIENT_VERSION_BUILD-unk-beta (2012"	Clarify
1107	5414207	"Your version string indicates an own build and not the last 0.6.1 RC1, right? @sipa How could a corrupt blk000x.dat be detected, to take care of this condition? "	Clarify
1107	5420366	"Also tested on 0.6.1 RC1 and exists also. However, I've since discovered it was the addr.dat file it was objecting to, not the blk files. Deleted addr.dat, and now running fine. "	nAnswer
1107	6671287	"Closing this as ""unreproduceable disk corruption problem."" "	Clarify
1107	6717500	This doesn't seem to be happening on 0.6.3 	Reject
1106	5146178	ACK  Is this enough to remove -Wno-sign-compare from the build? Or are there still a lot of these warnings left even after this?   	Clarify
1106	5146395	"Still too many left in the headers, to remove -Wno-sign-compare.  Several key classes exported directly to the network assign and test 'unsigned int' types against -1.  A few other warnings require some thinking as well.  My patches get 75% of the warnings maybe. "	Clarify
1106	5165377	ACK 	Clarify
1104	5138711	ACK 	Clarify
1104	5140196	"ACK, good work cleaning all that up "	Statement
1103	5137633	"IMO this is less ugly instead of more ugly than #1102. All non-implementation information about RPC commands is conveniently in one place, in table vRpcCommands. You could in principle add the help message as well. And there's no long registration function that has to be kept up to date when new com"	Clarify
1103	5138742	"You could have an RPCDIspatcher class with a singleton object, which uses RegisterRPCCommands as constructor.  "	nAnswer
1103	5138771	"As I understand it we currently simply take both mutexes for all RPC commands? (which is inefficient, but very safe) Did that change with this commit?  "	Clarify
1103	5138788	"Oh right - I confused safe mode with ""requires extra locking"". I removed the part of the comment about that. "	Clarify
1103	5139633	"BTW, I am looking for suggestions on how to best encapsulate the parameter parsing in CommandLineRPC().  That is the last area where there is a long ""if command==foo, do X"" decision table, containing per-RPC-command logic.  It would be nice to move that parameter parsing into the vRPCCommand table. "	Clarify
1103	5139721	"I'm not entirely sure about that. IMO it would be nice to separate client and server concerns as far as possible, even into separate implementation files.  * The server logic is a box that accepts JSON and produces JSON data structures. It knows nothing of argument parsing, formatting, just handles "	Clarify
1103	5140037	"RE @laanwj ""And there's no long registration function that has to be kept up to date when new commands added, just a simple one""  Well, the long registration function is replaced with a long table.  As the saying goes, ""six of one, half-dozen of the other""  In both this pull request and #1102, there"	Clarify
1103	5165352	"ACK. I like this one better.  I like data-driven programming, so describing argument types in a std::map<string method, std::map<int argNumber, ...something... argType> > or something instead of the current big long ""if/else..."" appeals to me. But that's such a low priority I probably wouldn't bothe"	Clarify
1103	5208409	I've extended the encapsulation a bit further (while fixing the initialization issue) in #1124. 	Clarify
1103	5264481	Included in #1124 	yAnswer
1102	5143544	"Closing, as people seem to prefer #1103 "	Statement
1101	5136103	Note this is missing some important thread-safety issues I had cleaned up in #568 (which has been upstream-ready for months) 	Clarify
1101	5136460	Nothing is -missing-.  There is a lock across the entirety of the RPC command execution. 	Statement
1101	5136773	"Ah, okay... that's what I missed when comparing the two. "	Statement
1101	5141885	Any limit to the number of threads spawned?  Could somebody out-of-memory DoS if they just keep connecting to the RPC port a gazillion times and never closing the connections?  	Clarify
1101	5141966	"I suspect you'd hit PID limits before memory, and socket limits before that. And since bitcoind uses select(), it would randomly corrupt memory. But that's already a problem anyway... :/ "	Clarify
1101	5142668	"There is no limit to the threads spawned -- but note that threads are spawned only after checking the IP filter list.  The first resource likely to be exhausted is a thread-group or systemwide thread limit, not memory.  But yes, if you pass the IP filter list, that can be DoS'd.  Should not be a pro"	nAnswer
1101	5165259	"ACK. I assume the main benefit right now is the keepalive to save constant connection setup/teardown, since RPC calls will still be essentially single-threaded due to obtaining the cs_main and wallet locks. And the secondary benefit is we can eventually move to more fine-grained locks...  "	Clarify
1101	5265649	"Rebased.  @gavinandresen do you still get a warning? If yes, can you paste the code line as well as the warning, just for double-checking?  "	Emphasis
1101	5297675	@gavinandresen fixed.  Merge error added some useless code. 	System
1101	5306003	"Testing this, I got a crash on shutdown of Bitcoin-Qt; see    https://gist.github.com/2480177   "	Statement
1101	5590186	"Rebased, and updated for recent table-driven RPC dispatch.  That change simplified our error handling, here. "	Reject
1100	5137588	ACK 	Clarify
1100	5138684	ACK 	Clarify
1097	5139935	ACK 	Clarify
1095	5143645	ACK 	Clarify
1094	5127347	"It is unfortunate that AlreadyHave() is called in a loop, implying a lot of lock/release in a row (even if it is likely cached and uncontended).  If LOCK() is moved outside AlreadyHave() and above its callers' loops, that reduces lock/release to one, but holds the lock for MSG_BLOCK in addition to M"	Clarify
1094	5129131	"How long do the loops run on average/worst-case? Is the runtime of the loops that enclose AlreadyHave dependent on I/O such as network/database?  It looks like AlreadyHave runs very fast (just some hash lookups), however the enclosing loops contains network calls such as PushMessage. I suppose it is"	Clarify
1094	5179288	"ACK. If there is a performance problem arises for the processing of ""inv"" messages, we can always move the lock to a pre-processing step that filters the received inv list before further processing. "	Clarify
1094	5179319	"ACK, agreed, safety comes first  Edit: Btw, what's the reason that mapBlockIndex / mapOrphanBlocks don't require a mutex?  Are they only ever accessed from one thread? "	Other
1094	5179425	"Actually, I'd prefer the txdb.ContainsTx() call to be outside of the lock, as the db lookup could be slow. "	Clarify
1094	5179643	updated 	Statement
1093	5126335	ACK 	Clarify
1093	5129031	"ACK (code-wise, cannot test this)  "	nAnswer
1092	5148188	@luke-jr can you test whether this really fixes your issue?  	Emphasis
1092	5151055	"Yep, thanks "	Accept
1092	5151057	ACK 	Clarify
1091	5118349	"Dunno why, but the default is now even readable on Win7 as the text stays black, no matter if the Window is active or not ... I'm fine with the OS default then! "	Clarify
1091	5139975	"The dominant bitcoin coding style is overwhelmingly ""if ("", with a space.  Two seconds of grep would show that...  Let us continue to be consistent with the rest of the code. "	Clarify
1091	5140032	"Maybe in the core. Not in the Qt code.  Whatever the common coding style is, commits shouldn't be cluttered with unrelated changes.  "	Reject
1091	5185404	Why was this merged? This is how it looks now for me: http://bitcoin.sipa.be/bitcoinqt.png 	whQuestion
1091	5185551	Sipa: See discussion on #1071. We intend to only override the style in specific cases. In most cases the OS default simply works. 	Clarify
1090	5118406	"So \<br\> can be used in strings for a word-wrap and \n will be replaced by it? Seems like a very good solution. Only question I have left is, if we can set a default width of tooltips.  Try it with the current version, if you hover the lock-icon if your wallet is encrypted. This is rich text, but l"	Other
1090	5118573	I'm not sure where it gets the default width from (which is indeed extremely narrow). Couldn't find any documentation about that. That leaves looking in the Qt source I guess...  	nAnswer
1090	5118638	"But you could verify that the default is to narrow, so this is no Win specific behaviour? "	Statement
1090	5120018	"No, it isn't specific to any OS. This seems to make the tooltips wider (crazily wide, in this case), for example:      app.setStyleSheet(""QToolTip { min-width: 500px; }"");  "	nAnswer
1090	5121661	"I've added a min-width of 350px, this looks like a nice tradeoff between too narrow and too wide.  "	Clarify
1090	5122525	"Tried it and it's way better than before, I agree it's a nice tradeoff until we comeup with a even nicer solution in the future :). "	Clarify
1090	5122844	"Shouldn't worry too much about this, there's way more serious issues to solve first.  "	Clarify
1090	5264439	ACK 	Clarify
1090	5409796	This should get in 0.6.1 as the detach db tooltip is quite long ;). 	Statement
1090	5412558	"No, I don't think it's a good idea to merge this between release candidates. That's only for critical bugfixes. There's the possibility that this introduces problems in some place / language so it needs testing. Better to merge it after 0.6.1. "	Clarify
1090	5413383	It was targetted for 0.6.1 and I reminded of that fact ;). There are quite a few commits that could have been merged in before the RC1. 	Statement
1090	5452893	This makes tooltip windows too wide sometimes: http://luke.dashjr.org/tmp/screenshots/snapshot82.png 	Other
1090	5454295	"Yea, it only works if a minimum width is set, otherwise it makes them too narrow.  Qt can either size the boxes to the text or the text to the boxes, not both. "	Clarify
1090	5525385	"Rebased, and added a useful heuristic to only do this for *long* tooltips, where ""long"" is defined as longer than a certain length in characters. This fixes @luke-jr's issue.  "	Clarify
1090	5534669	ACK 	Clarify
1089	5112392	"Im fine with wthis change in general (ACK). If it get's merged #1000 (yay ^^) can be closed, too! "	Emphasis
1089	5114073	I'll re-run with -no-obsolete and change Hide to lowercase.  I don't have control over which plural forms are generated. 	nAnswer
1089	5114583	"Great!  I'm very sure the plural forms (english base) need to be put in the .ts  directly (manual).  Am 13.04.2012 15:03, schrieb Wladimir J. van der Laan: > I'll re-run with -no-obsolete and change Hide to lowercase. > > I don't have control over which plural forms are generated. > > --- > Reply to"	Clarify
1089	5114817	Can you point to the documentation on that? It sounds unlikely; TS files are supposed to be generated automatically from the source code. (And plural forms differ per language. They cannot be sourced practically from English)  	Clarify
1089	5115046	"Look at the other plurals or numerusform tags in the en .ts file. I'm sure someone placed the translations for the existing numerusform tags in there.  It seems this can be done with Qt Linguist application (open the en .ts and search for %n second(s) ago in BitcoinGUI), as the existing translations"	Clarify
1089	5115153	"It seems Qt Linguist is the tool of choice :) ... you can even say that a translation is finished, which marks the string with a green check + removes the type=""unfinished"" tag for finished translations (that's for english master file - translation here means you looked through, added plural forms a"	Clarify
1089	5115172	"Ok, you're right. I misunderstood. The _en needs to be manually updated to make the plural mechanism work in English, not to facilitate translations.  https://qt-project.org/doc/qt-4.8/linguist-programmers.html (under ""Handling Plural Forms"") "	Clarify
1089	5115300	"Fixed; and also marked the plural forms as ""finished"".  "	Clarify
1089	5117987	"Looks pretty good, so ACK! "	Emphasis
1089	5118579	"@laanwj 1 more thing I observed while playing around in Qt Linguist, we should set the base language of our en .ts file to only english (currently set to country USA). This can be done under Edit -> Translation File Settings...:  http://i42.tinypic.com/fp5irm.jpg "	Clarify
1089	5129366	"Ok, fixed too...  "	Accept
1088	5108639	"According to @diapolo transifex has problems with \n in messages, they tend to get lost in translations.   Also, as I said before, I think it's crazy that we (and translators) have to estimate the width at which the text gets rendered, the width of the users screen, and manually break the text. This"	Clarify
1088	5109362	"> According to @Diapolo transifex has problems with \n in messages, they tend to get lost in translations.  I had remarked this with the content of the About Bitcoin-Qt window but it was apparently just a rendering issue of translated strings on Transifex's side. The file was formatted correctly in "	Clarify
1088	5109677	"Thanks for looking that up. We will handle the wordwrap issue in the code instead of the individual translations, by making sure all the tooltips are detected as rich text.  I've applied the other part of this pull.  "	Clarify
1085	5108985	"Both sound good with me, as they can be useful in different scenarios.  1. Make it possible to pass a JSON array of keys to import as well as a single key    * to import multiple keys faster, but still safely 2. And add a flag to suppress rescan    * if you can guarantee or don't care whether the pr"	Clarify
1085	11071773	I think it had also been mentioned that it might be useful to be able to specify how far back to rescan (either from a block or a date I guess). 	Clarify
1085	15298136	The second part seems to have been fixed by 44051af1a87a5fb8f4e88442c0eb64a1b4ecf2e6. 	Clarify
1085	15701055	Why not simply remove the automatic rescan since a manual rescan can be performed any time someone wishes to run one? 	Clarify
1085	15701399	@rebroad because that would leave the wallet in an undertested 'inconsistent' state. (e.g. you may find out transactions from the network spending prior transactions of yours which you don't know about) 	Clarify
1085	16002297	"this is an issue, would love to see the suggested features     import multiple keys with a single importprivkey RPC call, or     optionally suppress the blockchain rescan  "	nAnswer
1085	16002544	This was fixed by 44051af1a87a5fb8f4e88442c0eb64a1b4ecf2e6 which allows you to suppress the rescan. 	Clarify
1085	16893319	"I think this is fixed, closing. "	Statement
1084	5102604	ACK 	Clarify
1084	5109139	Makes sense. ACK.  	Clarify
1082	5098844	"I think there is consensus it is time for a complete testnet reset, with a new genesis block, etc.  "	Statement
1082	5099249	@gavinandresen Is that in any way relevant to this bug?  Resetting testnet wouldn't fix this bug.  The fix would be changing the line to the following to do away with the unsigned subtraction:      if (pblock->nTime > pindexLast->nTime + nTargetSpacing*2) 	Other
1082	5099591	"Sorry for the non-sequitor, it is only relevant in that I think fixing this bug should be combined with a testnet reset.  Otherwise the testnet chain will be an even bigger mess than it is right now (last I checked there were old nodes mining old chains that didn't include the BIP16/30/difficulty ad"	Clarify
1082	5099640	"Would resetting testnet stop these old nodes mining on old chains?  If people aren't updating their clients, they won't even notice the reset. "	Clarify
1082	5100571	It is relevant as some quite old blocks use this underflow.  Fixing it would cause a huge blockchain reverse/fork.    	Clarify
1082	5100614	"@sirk390 Together with a testnet reset this should not be a problem, right? "	Other
1082	5111185	"Some statistics might be useful: There are 397 (5%) blocks using this from 46739 to 54673.  I also did a quick  scan about the 15feb2012 difficulty algorithm changes. From the 30 peers I could connect to, 14 are up to date. The other 16 peers are stuck at height 47475 and have a version < 50300.  Th"	Other
1082	5111252	> This gives 0.47% of nodes  You mean 47%? 	Clarify
1082	5111285	Yes :) 	Emotion
1082	5945575	#1392 	System
1081	5073136	"This is intended to supercede pull request #932, for the following minor reasons:  1) removes the actual protocol version increment. IMO this should be external to the 'pong message' commit.  and under the principle of making code self-documenting...  2) use a named constant rather than a magic numb"	Clarify
1081	5079212	"Independent, yes, but where is a better place for version information than version.{h,cpp}?  It is an odd policy that the ""version"" module excludes certain classes of version information and not others.  That seems to violate the Principle of Least Surprise. "	Clarify
1081	5080131	"Agree, but calling them both ""_VERSION"" will be very confusing. "	Other
1081	5081305	"No more confusing than the existing PROTOCOL_VERSION vs. CLIENT_VERSION, each with the _VERSION suffix (which I argue is not confusing at all, but rather a logical naming scheme for each).  If it appeals to one's sense of symmetry, we can move PROTOCOL_VERSION to version.* as well.   "	nAnswer
1081	5085266	"IMO, version.h should contain version information *for the current client*, that will change over time.   I agree that feature-specific thresholds that will be ""written in stone forever"" should go somewhere else. Maybe there will eventually be enough for a bip_versions.h :-)  (if we tracked down oth"	Clarify
1081	5091661	"No, we don't need multiple version.* modules in the tree.  "	Reject
1081	5091975	"To me, mixing the client version (metadata about the project you're compiling) and the network version (a property of the protocol being implemented) in the same module is wrong. It's like having a source file in firefox that encdes both information about the firefox browser version and the differen"	Clarify
1081	5092268	"This is being WAY overthought.  1) It is silly to have multiple version modules, for that will create confusion among outside reviewers. 2) It is silly to put version constants outside the existing version module, for humans outside the dev team will naturally look for anything version-related in a "	Clarify
1081	5092840	"You can use the exact same argument that this causes confusion for ""outside reviewers"". Do we need to increase the BIP0031_VERSION with a new release? How is it different from the CLIENT and PROTOCOL version?... etc. "	whQuestion
1081	5092989	"Helpfully, there is a comment for outside reviewers in the code I added, solving this imagined problem.  "	nAnswer
1081	5093460	"Certainly, a comment saying ""This relates to the protocol version being used in P2P connections, and is independent from the client version"" is enough to make it acceptable (I see no such comment right now, though...). Still, such constants belong in the networking code, imho. "	nAnswer
1081	5094890	"Updated to add such comments, and further illustrate the usage. "	nAnswer
1081	5102698	Other magic protocol version constants: * protocol.h: 31402 (nTime in CAddress) * main.cpp: 31402 (avoid requesting addresses from older nodes) * main.cpp: 32000...32400 (don't ask for blocks from these versions)  	Other
1081	5105933	"added, along with 209 "	nAnswer
1081	5153553	"Meh, ACK. "	Reject
1081	5153885	Reminder to bump our own PROTOCOL_VERSION to 60001 too... 	Clarify
1081	5153975	"@luke-jr yes, that will come in a separate cover "	Statement
1079	5068643	"Right, appears that they recommend setStatusTip iso setToolTip for menu items.  Note that some qactions are also used in other places than the menu, in that case the tooltips do make sense. "	Clarify
1079	10557430	"As we use statustips now, this can be closed. "	Statement
1078	5084851	Visual ACK  	Clarify
1078	5084894	"0.7, because it has to do with URIs ^^? "	ynQuestion
1078	5084927	"It has to do with URLs but not ""URL stuff that scares Gavin"".   And this fixes a crash bug reported on the forums? I guess it should go into 0.6.1 then...  "	nAnswer
1078	5085154	"This fixes a glitch with a payment request and the amount set, the crash observed in the forum was with 0.6 RC2 I can't reproduce this, but think as most changes here are very tiny it should go into 0.6.1. "	nAnswer
1078	5086217	From what I understand he performs a DOS attack on the QR generation code. By pasting more and more text into the label field he eventually runs out of memory or some other limit.  Maybe we should enforce a sanity limit on the URL length (256?) and above that show an empty image.  I could be complet	Clarify
1078	5088126	An URI limit of <= 255 would be a good idea. 	Other
1078	5095211	Added URI length limit and info message to prevent a DoS against the dialog window. 	Clarify
1078	5096622	"Works well. However, the info message is wider than the QR dialog, can you enable wordWrap on lblQRCode in the designer? Alternatively, paste this into the .ui file under &lt;widget class=""QLabel"" name=""lblQRCode"">:       <property name=""wordWrap"">       <bool>true</bool>      </property>  "	Other
1078	5097258	@laanwj Done! 	Emphasis
1078	5097434	"Great, I intend to merge this asap, however seems sje397 and gavin's commit somehow ended up on this pull request?   "	Emphasis
1078	5097478	ouch ... a rebase-mess sorry will cleanup ^^ 	Statement
1078	5097548	fixed 	System
1077	5072835	"ACK, works for me now, thanks "	Emphasis
1077	5073916	ACK. 	Clarify
1076	5065095	"I had to remove the new lines in the project file, to be able to compile on Windows in Qt Creator, so yes, this needs some more work. "	Clarify
1076	5066944	"I'm unable to make build/version.o depend on build/build.h, somehow qmake always turns it into ../build/build.h. What is possible, is adding this to PRE_TARGETDEPS, which makes sure it is rebuild right at the start of the build process. That should suffice, but there is a caveat: if your source dire"	Clarify
1074	5043322	"Yes, I think it's a good idea to enable it for all operating systems unless there is a critical reason not to. "	Reject
1074	5045046	"My memory is fuzzy, but was there some issue with enabling it for mingw and/or cross-compiles?  "	Statement
1074	5045412	"I compile under Windows with Qt Creator and mingw 4.4, which works. Perhaps one should test it with Gitian ;)? "	Clarify
1074	5074778	"I somehow don't think we added this warning just for fun:      QMAKE_LFLAGS += -fstack-protector     # do not enable this on windows, as it will result in a non-working executable!  I now remember that @thebluematt added this after the gitian-produced executable frustratingly didn't work. Might be t"	Clarify
1074	5074855	"IIRC it was an issue with building using Ubuntu's i586-mingw32msvc-* compiling, though it may have worked on some other distro mingw packages, and possibly also on windows mingw builds.  Though this causes issues for gitian, maybe it has been fixed in post-lucid Ubuntus? "	Other
1074	5079261	Why not give it a try? If the resulting Windows executable is messed up disable the flag again and perhaps add when we last tried it and if it works it would be a nice security benefit for Windows users :). 	Clarify
1074	6061834	Anyone willing to build an executable with this enabled? I'm glad to try it out on Windows ;). 	Clarify
1074	6873625	"Is there any way to enable ASLR with MinGW for the bitcoin-qt.exe? Even if we are unable to ship the official client with DEP / ASLR enabled, I would like to know how I can do this ^^. "	Clarify
1074	6873740	Pass QMAKE_CXXFLAGS=-fstack-protector QMAKE_LFLAGS=-fstack-protector  on the qmake command line 	nAnswer
1074	6874013	@laanwj Even passing -fstack-protector-all does not set the ASLR enabled flag in the resulting executable (checked via ProcessExplorer - Sysinternals tool). 	Clarify
1074	6874078	Seems TOR does it:  https://trac.torproject.org/projects/tor/ticket/2358  https://trac.torproject.org/projects/tor/attachment/ticket/2358/0001-Enable-ASLR-and-permanent-DEP-for-Windows-executable.patch 	Statement
1074	6875110	"Nice find, I'll test this out with my build, perhaps a patch can be added later to enabled this for the official client. "	Clarify
1074	6899317	"I made positive progress on the mitigation techniques on Windows, but as long as the core devs don't care to (re-)test the ``-fstack-protector`` or even better ``-fstack-protector-all`` flag and take this issue more serious I don't mind creating a new patch ;).  Everytime Gavin is talking about secu"	Clarify
1074	7004445	"@luke-jr I know you have that test-next project, which uses the official build-process ... could you try to enable the stack-protection on Windows with ``-fstack-protector-all``!? I will be glad to test it. This needs to be looked at! We can be happy there are currently no known attacks on the clien"	Clarify
1074	7011306	"I seem to recall the linker failed with stack protector, but maybe I was doing something wrong... "	nAnswer
1074	7012479	@luke-jr You are free to test: https://github.com/Diapolo/bitcoin/tree/stack-protector 	Clarify
1074	7075551	@TheBlueMatt Could you give Jenkins a try on this? I would like to test a Gitian or static-compiled bitcoin-qt.exe to verify if it's usable now :). 	Statement
1074	7721231	#1674 is now the pull for this wish ;). 	Clarify
1074	8758599	"Let's keep the discussion there, closing this "	Statement
1072	5035522	"I will leave ACK/NAK to others, but I will note...   this Boost feature is occasionally used as an example of C++ abuse.  It is ""cute"" to build pathnames using the ""/"" operator, but such usage is decidedly non-standard for the ""/"" operator and therefore confusing to the uninitiated reading the code."	Clarify
1072	5035685	"I wouldn't mind using a longer function name, or operator to accomplish the same. The point is that this operator constrcuts paths in a platform-independent way.  The closest alternative is extracting the path as a string, use platform-dependent code to select the correct separator, add the extra pa"	Clarify
1072	5040021	"I agree with @jgarzik on that this is ""cute c++ abuse"" by boost. Then again, the standard library << and >> for stream operators?!? is not much better.  And just like those, `/` has no standard use for strings.  This is an upstream issue way outside the scope of bitcoin. We cannot decide the interfa"	Other
1072	5040364	"I like your changes and prefer to get them merged to master before my https://github.com/bitcoin/bitcoin/pull/1066 gets in, as I will likely have to rebase and rework some parts, but the other way around it would be nonsense :)!  So definately ACK! "	Clarify
1072	5043357	ACK 	Clarify
1072	5051765	"This needs to get in, before #1066, more ACKs please ^^. "	nAnswer
1072	5052106	The helper functions to convert boost::filesystem::path to const char* risked returning something pointing to a destroyed temporary on windows. I've replaced them now with slightly uglier macros that should be safe... 	Clarify
1071	5034184	I'd prefer to see a smart way to leave the OS default processbar colour alone... Any details on what the exact problem encountered was? 	nAnswer
1071	5034268	"The bright orange is horribly ugly on my monochrome theme.  I'd prefer to have the process bar fit in with the theme, not be bright orange.  I think https://github.com/bitcoin/bitcoin/pull/1025#issuecomment-4879464 in #1025 was the initial reason for the redesign.  I submitted #1030 which left the s"	Clarify
1071	5040599	"The default progressbar design is unreadable on quite a few OSes, sipa observed problems with it and on Win7 I also couldn't read it. That's why we changed to the current design ... "	nAnswer
1071	5040610	"Fair enough, but shouldn't you control both the foreground and the background, rather than just hoping the default foreground contrasts with your chosen background? "	Clarify
1071	5040644	"As far as I remember, the Qt specs didn't mention you could set the text color, too. If it's possible that could be added, sure. "	Clarify
1071	5040697	"This seems to work:      progressBar->setStyleSheet(""QProgressBar { color: red; background-color: transparent; ...  But since the bar is transparent, there's still the problem of having the text needing to show up against both the orange you specify and the background colour that you don't know.  So"	Clarify
1071	5040804	I know it's a problem to ensure readability on all default OS themes + don't make it look ugly ... but a white background feels kind of ugly ^^. 	Clarify
1071	5040883	I don't really care what colours you pick so long as you pick some that make the text readable.  Leaving one of the three colours to be decided by the OS vendor isn't a good idea. 	Clarify
1071	5040929	"I have to agree, but I'm not sure how to chose the best colorisation for this problem :-/. "	nAnswer
1071	5045157	"I wonder how difficult it would be, to use the default style with an opacity of 50% so the window background brightness shows through? "	Clarify
1071	5045521	"I think opacity requires OS support for transparent windows and there are OSes and themes, which don't support that at all. "	Statement
1071	5111092	"Qt makes it possible to query what styling engine is used. I think it makes sense to only apply custom styling in the specific case of the QWindowsVistaStyle engine.  Otherwise, simply rely on the default to do the right thing.    "	nAnswer
1071	5111565	"Talk to sipa, guess he uses some Linux, which also had unreadable text with the used theme. I'm fine with OS defaults, as long as text is readable. I really love orange though :-D. "	nAnswer
1071	5111992	"Arguably it is a problem with the theme or Qt and not with Bitcoin if text on the progress bar is unreadable, it is a common enough use-case.  Orange kind of fits with the rest of the icons in the status bar, and the color of the bitcoin icon. It's not the color that is the problem, it is that this "	Clarify
1071	5112065	"This:  ![](http://i39.tinypic.com/2s0esg4.png)  and when almost done, this:  ![](http://i40.tinypic.com/200po3p.png) "	Other
1071	5112096	"... which is perfectly OK, I guess? (except that maybe the progress bar should be wider, but that's a completely different thing) "	Clarify
1071	5112104	Yes.  I deliberately narrowed the window so the ~ would be partially within the dark area of the progress bar.  And the green checkmark shouldn't be there when 8 blocks are remaining.  I think I made a separate issue (#921) for that. 	Clarify
1071	5112122	"As I'm going to be off for 7 days tomorrow, you are free to create a pull-request, which only replaces default style, when there are problems with readability. We could aswell add a small option into the settings -> display to set default or our theme for the bar? "	Clarify
1071	5112215	"That's fine. I propose that we handle the exceptions on a case-by-case basis. @sipa can you comment what environments exactly have the readability issue with the default style sheet?  No option for this, please. That'd be lazy and shoveling the trouble on the user.  See you in a week!  "	Clarify
1071	5116425	On Ubuntu and Kubuntu (default theme) it is also readable by default:  ![](http://i39.tinypic.com/6hrn9z.png)  ![](http://i40.tinypic.com/2j13bee.png) 	Other
1071	5116533	"If there are themes where it isn't readable, that's not a Bitcoin bug, but a theme bug.  I'm not sure we should be doing anything about bugs in themes, other than reporting them in the appropriate place. "	Clarify
1071	5118481	"If there is a consensus to revert back to OS defaults, which I'm very fine with, as Win7 has no problems anymore in terms of readability with the Aero theme, I opened #1091. "	nAnswer
1071	5186140	"Ok, on Ubuntu 11.10, xmonad, it looks like this: http://bitcoin.sipa.be/bitcoinqt.png after merging #1091. "	Other
1070	5039958	"Hahaha Google Translate makes ""Bitcoin the partner's spouse cryptographic virtual currency"" of the tr translation :-) I suppose that's the way to say ""peer-to-peer"" there?  ACK  "	Clarify
1070	5041210	"Is this string visible to the enduser? If yes, where? "	whQuestion
1070	5041382	The desktop / menu item will show it 	Clarify
1069	5109706	#1089 should solve this.  	yAnswer
1068	5140278	This is not a NAK... but I don't really think this is much needed 	Reject
1068	5143746	Superceded by #1109.  Anything remaining should be on top of that. 	Statement
1067	5020116	"Network icon 4 shouldnt be all green bars because if you only have 8 connections (ie no incoming connections), your connection is misconfigured.  You should either enable UPnP in the client and on your router, or forward port 8333 manually.  Though that should be made clear. "	Clarify
1067	5020124	"Matt, 4 is the highest one, the one you get when you have 10 connections.       switch(count)     {     case 0: icon = "":/icons/connect_0""; break;     case 1: case 2: case 3: icon = "":/icons/connect_1""; break;     case 4: case 5: case 6: icon = "":/icons/connect_2""; break;     case 7: case 8: case 9:"	Other
1067	5020130	"Oh, I thought it went to 5, sorry... "	Statement
1067	5020195	"network icon 4 is used from 10 connections on, so it implies you have incoming connections.  That said, I prefer 4 bars, red orange yellow green, being enabled one by one. "	Clarify
1066	5034999	I've done some similar cleanups (only path-handling related) in #1072. 	Clarify
1066	5040285	"Last commit reverts to old style of array init via = """", which is allowed and shorter than a memset(). At least now all arrays are initialized :). The only exception is in real_strprintf() where the init could perhaps slow down the GUI / client. "	Clarify
1066	5040327	"Thanks, looking good now.  "	Statement
1066	5046339	Rebasing required. 	System
1066	5051759	"As I said I would like to get in #1072 before, as I will have to rebase against that :). "	Statement
1066	5052153	"You can already rebase against #1072, if you like, but you risk needing to change things if #1072 changes before being merged then. "	Clarify
1066	5080348	I merged #1072. 	Statement
1066	5084573	"Nice, will rebase later today :). "	Clarify
1066	5085472	Rebased and I'm looking through the code again to verify... 	Statement
1066	5095309	"Rebased one more ;-). I'm only going to fix glitches / errors that are currently in my changes, as I don't want to bloat this. There is of course plenty of room for optimizing our utility functions, but that should go to seperate pull requests. "	Clarify
1066	5100771	"Most of this looks like it makes the code more unreadable. IMO, the absolute namespaces are far clearer, and should be encouraged, while the general ""using namespace"" discouraged. sipa's per-function ""using namespace foo = boost::longerfoo"" makes sense and doesn't interfere with readability. "	Clarify
1066	5101132	"God damn ... everytime I try to harmonize the code someone has an own feeling about things. BUT most of the time I see things in the code + in many places and use these as base. I have no problem to completely discard the global use of ""using namespace"" if everyone would do it. Function local using "	Clarify
1066	5102558	"I really don't care about namespaces, and only followed the pattern of the code already there when doing the boost::filesystem::path stuff. As long as there are no namespaces in header files, I don't care. "	nAnswer
1066	5103099	"56 comments for such trivial changes... I think there are higher priority things we could be spending our time on.  This is why I don't like ""I'll just clean up the code because I can"" changes. I would much prefer to see code cleaned up as it is being improved, so:  + Fix a real bug (we have 180 of "	Clarify
1066	5105970	"May I suggest for code cleanup pull requests, you make a smaller and simpler pull request for each one such as ""make sure all char arrays in util.cpp get initialized to 0 and use sizeof(CharArray) instead of MAX_LEN"" "	Clarify
1066	5108916	"I like bold code cleanups, such as code de-duplication, eliminating unneeded functions, replacing archaic and dangerous C with modern C++, grouping together similar functionality, isolating different concerns, untangling knots of unrelated include files, and so on.  Oh yes and: fixing compiler warni"	Clarify
1066	5111620	"Allright, 2 options for me ... leave this as it is or rework to change no var names and only add the small changes I did code-wise. First vore wins, let's go :D.  Edit: @laanwj Thanks, I'm more the GUI lover than console user and it's fun to work together :). "	nAnswer
1066	5127215	First vote: rework. 	Statement
1066	5260389	I'm back and will do this in the next days :) and btw. I like clear orders ^^. 	Clarify
1064	5075339	"Yes, that happens in Dutch as well.  Problem is, I can't find the original (layered) image anymore. As we'd like to get rid of the splash screen eventually anyway (see #1028) designing a new one is too much bother.  "	Clarify
1064	5078419	"I believe Samuel (on IRC) has been working on a new splash screen, as part of his GUI makeover attempts with tcatm. "	Clarify
1064	5108786	"As a last recourse, I'd propose the following image:  ![Resized splash image](http://ompldr.org/vZGN3bw)  I tested several languages, with the default font size they all seem to fit nicely with this 250*194 image (aspect preserved).  > I believe Samuel (on IRC) has been working on a new splash scree"	Clarify
1064	6679566	@cardpuncher Is your graphics a simple resize of the current one? 	Clarify
1064	6680467	I was playing around with the splash screen graphics: ![new splash screen graphic V1](http://i50.tinypic.com/2i8zoli.jpg) ![new splash screen graphic V2](http://i50.tinypic.com/o6bev4.jpg) ![new splash screen graphic V3](http://i45.tinypic.com/20iza75.jpg)  Based on: https://commons.wikimedia.org/wi	Clarify
1064	6683464	"On 30/06/12 00:14, Philip Kaufmann wrote: > @cardpuncher Is your graphics a simple resize of the current one?  Yes, the image results from a quick resizing of the current JPEG with GIMP.   --  One man alone can be pretty dumb sometimes, but for real bona fide stupidity, there ain't nothin' can beat "	Other
1064	6707374	I have to say I prefer the simple resize and wrap lines that don't fit instead of the new proposed one. 	Reject
1064	6707517	"I still like the sharper version, but I'm completely fine with a resize of the current one. A line-wrap seems to be not possible for the QSplashScreen messages. "	Reject
1064	6707691	"If you could line wrap, you dont need to scale it as much, so it wouldn't be as bad. http://lists.trolltech.com/qt-interest/2008-09/msg00453.html seems to indicate you can put html in there with style=""word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "" "	Clarify
1064	6710083	"I like the sharper one but it's too bling-y too my taste. Would make it look like a casino client. I don't use any gold on purpose in my graphics,  for example also why I went with the more abstract orange coin instead of Satoshi's gold coin.  Line-wrapping sounds like a good intermediate idea until"	Clarify
1064	15832405	"@laanwj I never got line-wrapping to work in the splash-screen + I would like to keep that screen (after some thoughts about it, I think it's a nice thing - which could just be improved). Perhaps we could add an abort button somehwere, like Office 2010 does in it's splash-screen? "	Clarify
1064	15835196	Good idea. The problem really is that the initialization runs in the gui thread. So the window cannot react to events such as clicks right now. 	Clarify
1064	17570769	"@laanwj Can be closed, as our new splashscreen is bigger :). "	Statement
1063	5022458	"1) I think it's a pity that Qt doesn't break off long tooltip messages itself. How the hell are we (and translators) supposed to know how wide text gets rendered and what will, and will not run off the screen.  2) Yes, that was forgotten when it was added. "	Clarify
1063	5109913	"The recommended way to fix this appears to be to add `<qt/>` in front of the message to make sure Qt interprets it as rich text instead of plaintext, and can apply its own formatting algorithm. It would be preferable to do this automatically for all tooltips. I'd loathe having to track this individu"	Other
1063	5111670	"@laanwj I think it could also be done by replacing \n with a HTML-br as this is what's done for the lock symbol in the client, if the wallet is encrypted and / or unlocked ... that tooltip seems to be rich text already, right? I think there are only 2-4 places at all, where HTML-tags are used direct"	Clarify
1063	5112066	"Yes, you are right, the programmatically generated tooltips will also have to be generated as rich text. `\n` will not do anything for formatting in rich text messages. If custom line breaks are desired, `<br>` should be used.  "	Other
1063	6670388	"*<quote>then rewriting the tooltips to prefix `<qt/>` if it is not yet rich text.</quote>* You sure that is works? On my side `<qt/>` is displayed as plain text and there are no line breaks, so apparently the content of the tool tip is considered as plain text rather than rich text. Here's an exampl"	Other
1063	6672185	Works fine for me.  What version of Qt?  	whQuestion
1063	6678042	"On 29/06/12 20:30, Wladimir J. van der Laan wrote: > Works fine for me. >  > What version of Qt?  Help > About Qt says ""This program uses Qt version 4.6.2.""   --  One man alone can be pretty dumb sometimes, but for real bona fide stupidity, there ain't nothin' can beat teamwork.--Edward Abbey "	Other
1063	6679205	"@cardpuncher Can you upgrade, that's a rather old version ... we currently compile Bitcoin-Qt with 4.7.4 and available is 4.8.2. "	Statement
1063	6679843	"Yep, that's the cause, you can compile bitcoin-qt with Qt<4.7 but then you have some slight quirks such as missing placeholder text and, it seems, this. "	Clarify
1063	6679862	"Btw the message says ""Bitcon network""... lol that's one typo "	Clarify
1063	6680394	That typo is awesome ^^.  Edit: #1537 	Emphasis
1062	6510493	Can this be solved somehow by shortening the translated strings or is french a language of natively long strings :)? 	Clarify
1062	6669928	"On 22/06/12 17:29, Philip Kaufmann wrote: > Can this be solved somehow by shortening the translated strings or is french a language of natively long strings :)?  Yes, French sentences are in average longer than... well, most other languages, which makes them good candidates as placeholders (and for "	Clarify
1062	6679521	Is this only present for the address selection window and splash screen or are there other examples that would need a little resize? 	Clarify
1062	6683518	"On 30/06/12 00:12, Philip Kaufmann wrote: > Is this only present for the address selection window and splash screen or are there other examples that would need a little resize?  IIRC I noticed nothing else with a similar problem when I was clicking frantically on every option Bitcoin has in order to"	Clarify
1062	6685337	Are you able to compile Bitcoin-Qt? Can you try this with 720 x 360 Pixel (edit addressbookpage.ui with Qt Designer and set the values on the main QWidget). 	Clarify
1062	6686422	"On 30/06/12 15:41, Philip Kaufmann wrote: > Are you able to compile Bitcoin-Qt? Can you try this with 720 x 360 Pixel (edit addressbookpage.ui with Qt Designer and set the values on the main QWidget).  As we discussed on IRC, 760 x 380 seems to fix this issue. The result on my desktop is the followi"	Clarify
1061	5018605	You can always help in making the translations better via: https://www.transifex.net/projects/p/bitcoin/resource/tx/ 	ynQuestion
1061	5022533	"The lookup mechanism works like this when handling translation request from English to language 'xx_YY':  1. use message from 'xx_YY' if it exists 2. use message from 'xx' if it exists 3. fall back to defined message in source code (which is English)  Hence, I think it is a good suggestion to rename"	Clarify
1061	5022644	"This would be a good thing for all ""major"" translations, I dunno if there are more like the french one. "	Statement
1061	5025191	"I can confirm what Iaanwj said, I tested it on my side: compiling from source after adding bitcoin_fr.ts (with no country code) and declaring the file in src/qt/bitcoin.qrc and then starting with ./bitcoin-qt -lang=fr_CA launches Bitcoin Wallet in French and not in English.   In other words making s"	Clarify
1061	7058338	"As Bitcoin-Qt now has a working language selection in the options, I would suggest to close this. I see no possibility to force translators to keep in mind to use a base lang, when e.g. creating a new translation. "	nAnswer
1061	8176234	"@cardpuncher Anything to add, if not can you close this? "	ynQuestion
1061	12886368	"Indeed, the language selection makes this issue irrelevant. "	Statement
1060	5014746	"I observed that too, but had not the time to fix it so far ... "	nAnswer
1060	5022475	@sje397 sent pull request #855 to implement this. It needs rebasing and testing on the various OSes still though. 	Clarify
1060	5096100	"This is in solved, will be in 0.6.1 "	Statement
1059	5014762	"I don't have this with 0.6 final, what version are you using? "	whQuestion
1059	7058261	"Not a problem in official 0.6.3 client, so can be closed! "	Reject
1059	8763260	"@laanwj You can close this one, it was fixed long ago. "	nAnswer
1058	5014820	Which version are you using? New wallet? New blockchain? OS? 	whQuestion
1058	5099887	"Closing for lack of information. Please open a new issue with more details, like what OS, what version of bitcoin, etc.  "	Statement
1056	5022564	"I don't agree this should be in the about box.  I do agree a diagnostic window that shows all such information would be useful, though.  "	nAnswer
1056	5097540	Fixed in #1075 	System
1054	5006748	"1) why do you ""cd .."" in      cd ..; contrib/genbuild.sh >src/build.h; cd src ?  it seems like one command would suffice:      ../contrib/genbuild.sh > build.h  2) do we want to update 'clean' targets?       "	Clarify
1054	5007416	"@jgarzik   1) genbuild.sh depends on being run from the project's root directory, which may include a commit id  2) no idea what you mean    "	Clarify
1054	5008443	"Looks like useful functionality. However, as I understand it (I'm not a makefile guru though), build.h is force-written on every build.   Won't this cause the dependent compilation unit (version.cpp) to be built every time, and a subsequent link?  Ideally, to prevent this, build.h should be left unt"	Clarify
1054	5008598	"@laanwj yes, indeed; version.cpp is built every time, and linking is done every time. These are small, and won't take much time to build. However, preventing such a rebuild every time would be nice indeed. No idea how to pull that off via a makefile, though.  "	Clarify
1054	5008620	"Write a .new file, use diff to compare, then mv over the real file if different? "	Clarify
1054	5008654	"Could certainly be done in sh script. Something like:      BUILD_H=src/build.h     if [ -e ""$BUILD_H"" ] ; then         CURRENT_BUILD_VERSION=`cat $BUILD_H`     else         CURRENT_BUILD_VERSION=     fi     # expected to be run in the project's root directory     if [ -d .git -a -e ""$(which git)"" ];"	Other
1054	5008683	Luke's suggestion is easier.  	System
1054	5008692	"Right, of course. That won't prevent rebuilding build.h, but it will prevent its dependencies from being rebuilt. "	Statement
1054	5008902	"New version, mostly following @laanwj's idea, but generalized genbuild.sh a bit. "	Other
1054	5009019	I just realized: I think we don't handle the case in which an empty build.h file needs to be created (as an empty file is handled in the same way as no file).  Maybe set NEWINFO to a C++ comment i.s.o. completely empty when no version info can be found...  	Clarify
1054	5011072	"Ok, fairly large rewrite: by using the export-subst git attribute in a somewhat hacky way, the commit id is now included statically in version.cpp in exported source trees (github tar/zip bundles, output of the git-archive command, gitian build src/ directories, ...). contrib/build.sh is only used f"	Clarify
1054	5011632	I don't think this will put the correct file in the Win32-setup source? 	Statement
1054	5012158	@luke-jr now it does. 	Statement
1054	5012514	"1) there should be no need to run from project's root dir.  git certainly works in sub-directories (where "".git"" is in .. etc.)  2) 'clean' is a makefile target.  one types ""make clean"" (or sometimes ""make distclean"")  to remove build generated objects.  Your change fails to update the 'clean' makef"	Clarify
1054	5012569	1) there was; this was for handling cases where we worked in a gitless environnement. the script looked at the directory name to find the commit id (since github's tarballs contain a directory [projname]-[reponame]-[commitid]). The script used some pattern matching on the last component of $PWD to f	Clarify
1054	5028403	"Ok, updated, simplified and added some comments. I've also changed it to use git describe --dirty, which will result in nice version strings like 0.6.0-66-g4f364be-dirty-beta. The problem is that the gitian scripts modify the source directory before building, so they too result in the dirty marker b"	Clarify
1054	5046279	version.cpp:43:23: fatal error: build.h: No such file or directory  	nAnswer
1054	5050483	"Ok, again some changes: the ""dirty"" flag added in the gitian builds was a result of a bug in git that was fixed in 1.7.7. For now I've worked around it. Gitian builds are now done from a clean repository, and seem to be deterministic.  I also added a CLIENT_DATE next to CLIENT_BUILD, with either the"	Clarify
1054	5053309	"ACK  Would prefer that genbuild.sh output to stdout, rather than overwrote a file, but that's not a big deal. "	Reject
1054	5053406	"@jgarzik reason is that we want to prevent build.h being updated unnecessarily, as that would cause a rebuild of version.cpp and linking every time. "	Clarify
1054	5053466	"I know the reason the logic exists.  It is only a question of taste, where that logic should go.  Did not mean to suggest the logic should be deleted. "	nAnswer
1054	5055365	ACK 	Clarify
1053	5003657	Is this a select() failed message? 	ynQuestion
1053	5003690	"This is a broken ""internet"" connection. I expect you probably have grounds for a class-action lawsuit if it's intentional. "	Reject
1053	5003701	"BTW, you might consider:     iptables -I INPUT -p tcp --tcp-flags RST RST -j DROP "	Emphasis
1053	5007830	"@luke-jr they sent the RSTs to both sides of the connection, so this would only work if the other side had this rule too, which is unlikely... class action lawsuit sounds a good idea, but I'd rather not admin it..! "	Clarify
1053	5099948	"Closing this-- sorry, downloading the entire blockchain from slow throttled ISP connections is not something we're going to test/support.  And there is already an issue open to support ""lightweight"" headers-only mode.  "	Clarify
1053	5105138	"I still do think the network would be healthier if it were to be taken into consideration that some nodes will be running from behind these ""crippled"" ISP networks. It has some impact, although perhaps considered negligible. Perhaps these type of ISP services will become a thing of the past. Perhaps"	Clarify
1053	5575099	"Hi @gavinandresen , do you consider the ability to resume downloads to be useful? e.g. ""wget -c""? Given that it seems to be fairly standard on the internet these days, is there a good reason that bitcoin should *not* support resume-able block downloads? Could at least there be an option feature that"	Clarify
1053	5575566	"All blocks are downloaded one at a time anyway, if the connection fails, it will eventually continue from another peer. I don't think it's worth adding the complexity to handle partial downloads to the protocol - especially now when blocks are at most 1 MB.  There is an independent useful improvemen"	Clarify
1053	5575979	"@sipa, I've already modified the software to re-issue getblocks, but haven't gotten around to re-basing it and submitting a pull request for it. My internet connection disconnects connections at around the 300kB mark, so a 1MB block is often a problem unless download it via tor. I won't be the only "	Clarify
1053	5576911	Network-facing code is the most security-critical code; a mistake in handling data from the network can easily lead to a catastrophic compromise.  So keeping it as simple as possible is a high priority.  	Clarify
1053	5586059	"@gavinandresen I agree with the importance of keeping it simple. I was wondering if perhaps then the ability to respond to to peers which request partial blocks might be added, (in a similar way to header functionality being added), but that wasn't used by default. This would allow it to be tested b"	Clarify
1053	5586422	"I am afraid there is no way to get a decent user experience from a bitcoin node running on a crippled internet connection, anyway. "	nAnswer
1053	5588876	"@sipa - what is a decent user experience? With the changes I've made to my fork, I'm now downloading the blockchain much faster, but it's very inefficient in terms of bandwidth due to often downloading the same block from many peers, and often the connection breaking before the block completes. My p"	Clarify
1053	5630306	I'm about (when I get time) to clean-up my patches and start from scratch on improvements to downloading blocks. I'll probably completely separate the code for downloading blocks from the code for downloading txs. My thinking is that it can getblocks to a number of nodes and keep a list of the block	Clarify
1052	5009030	"Updated; I like this even more: TRY_LOCK(cs, name); if (name) { ... } "	Clarify
1052	5009036	Yes this is much better :)  	Statement
1052	5010064	"To understand that stuff, LOCK() is used, when code needs to be thread safe and UNLOCK() is used if that part has been processed? "	Other
1052	5010097	"LOCK() implements what is called a scoped lock: it makes sure that inside the current block of code (surrounded by { }), a lock on a particular mutex is taken, and released when that block of code exits. Because of that, there is no need for an UNLOCK(). "	nAnswer
1052	5025265	ACK. 	Clarify
1051	4989567	ACK 	Clarify
1049	4990901	"https://qt-project.org/doc/qt-4.8/qmessagebox.html  You can pass a setInformativeText / setDetailedText. The detailed text will be in a scrollable area, which is suited to this (show the main arguments in the main area, then expand for more details).  Only do this if you don't have to add too much c"	Clarify
1049	4991009	"Maybe this is a good opportunity to move the help functionality out of AppInit2. We already want to move most of the initialization to another thread eventually, so it helps to split it to multiple parts. Arguments parsing should of course remain in the GUI (main) thread.  So I propose: - Add a Help"	Clarify
1049	4993784	@laanwj sounds like a good idea 	Statement
1049	5709439	"@laanwj This got much better, but the work-around you use to set a width is really ugly ^^. I tried to search the web, but found no good solution to this. I'll give it another try and if I find nothing I'll close this one. "	Clarify
1049	5709494	"I've already tried a few things. It's the only workaround that works. It's an OS-level message box, there is no fine control over it. Any other workaround would amount to re-implementing the message box, which would be even more code and just not worth it.  Feel free to completely remove it though i"	Clarify
1049	5784034	"I added a few more nonbreaking spaces in my test-build, which looks okay so far. I'm working on that part, but before I open another pull it would be good if #1323 could get into master, can you have a look at it? "	Clarify
1049	6061685	"I consider this ""fixed"" after #1364 gets in, so closed! "	Emphasis
1048	4988386	Can you bisect it? 	ynQuestion
1048	4988550	This happens without anything in the bitcoin data directory? 	ynQuestion
1048	4988772	    This happens without anything in the bitcoin data directory?  Everything except the .wallet file.        Can you bisect it?  I'm bisecting it now.  I should have the culprit soon. 	Clarify
1048	4989245	xxx@TOWERLIN:~/workspace/bitcoin$ git bisect good Bisecting: 0 revisions left to test after this (roughly 0 steps) [7993454a927f3c4cf5ac935c613afeeb68f35f0a] Document strlcpy.h in assets-attribution.txt since it isn't MIT-licensed  xxx@TOWERLIN:~/workspace/bitcoin$ git show commit 7993454a927f3c4cf5	Other
1048	4989335	"Not possible, I don't think that was even committed when you reported the bug :p  Maybe try again, more carefully... "	Clarify
1048	4989499	"Strange.  I git reset --hard master to try the master again, but no more error.  It loads up fine. "	nAnswer
1048	4989566	I just tried git reset --hard v0.6.0 .  Still no more error.  Somehow it resolved itself .. 	Clarify
1046	4983533	ACK 	Clarify
1046	5000625	I've updated the code to take @luke-jr's suggestions into account 	Clarify
1046	5000700	Visual ACK 	Clarify
1046	5054224	ACK 	Clarify
1045	4983588	ACK 	Clarify
1045	4984210	"ACK, yes this is preferred "	yAnswer
1043	4976107	"I've also wondered about this tss line. But I was afraid to remove it, as it looks dangerous.  Let's try if it does't break the gitian build... "	Clarify
1043	4976262	"While you are trying, I have another thing for you to test :) ... if you want. My build on Windows works great with ""-fstack-protector-all"" enabled :) (set in the .pro file). "	Clarify
1043	4976923	ACK. I tested building in gitian. 	Statement
1042	4967077	shiny 	Statement
1042	4968784	ACK 	Clarify
1042	4968931	"The client is on a diet, nice and ACK. "	Statement
1042	4979390	ACK 	Clarify
1041	4979371	ACK 	Clarify
1039	4966769	"ACK.  What would be a good test?  Encrypt a wallet with a long random password and then run a brute-force guesser via RPC-- expect an eventual crash before this fix, expect it to run forever after?  "	Other
1039	4967057	"Via RPC it does not crash, you just get a different error.  $ (for A in $(seq 1 5000); do ./bitcoind walletpassphrase test$A 1; done) 2>&1 | tee res.txt error: {""code"":-14,""message"":""Error: The wallet passphrase entered was incorrect.""} error: {""code"":-14,""message"":""Error: The wallet passphrase ente"	Clarify
1039	4968952	"ACK, checking return values is always good  "	Other
1039	4976177	"ACK, passes my testing "	yAnswer
1038	4968793	"ACK. Wonder how lang=""edit"" got in there in the first place :-)  "	Clarify
1038	4968914	See https://github.com/bitcoin/bitcoin/commit/c16eb949450a573baf4c5f868f58d870b3b34ab2 :-D. 	Statement
1038	4968974	"heh, must have fat-fingered some key in qtcreator  "	Other
1037	4961978	ACK 	Clarify
1037	4965116	ACK 	Clarify
1036	4962571	w00t code removal 	Statement
1036	4964341	I like ... red in commits that remove dead code ^^. 	Statement
1036	4965108	ACK 	Clarify
1036	4968851	ACK 	Clarify
1033	4980405	ACK. Survives my testnet-in-a-box stress tests.  	Statement
1032	4948462	"I we want this before 0.7 I could do this via transifex and a copy & paste of the translated word ""Wallet"" for the used languages directly from the current lang-files. Before I would create a pull for the new en master file, so tf can fetch it from here. "	Clarify
1032	5244683	Any reason not to merge this yet? 	ynQuestion
1032	5244766	"It would mess up the word ""Wallet"" in all translations with no clear immediate gain. Better to merge it after 0.6.1 is released to give translators some time. "	Clarify
1032	5245627	"Diapolo did volunteer to adjust the translations, and it seems to fit well into the ""cleanup"" purpose of 0.6.1. "	Statement
1032	5260430	How was the timeline for 0.6.1? I was off for 7 days and will re-start helping during the next days. 	Clarify
1032	5521995	"As we have 0.6.1 final released I would like to get this merged asap, so we can rely on the translators :). Transifex just needs an updated en master file afterwards. "	Statement
1031	4947713	Do you mean with or without keys in the keypool?  Can you be more specific what happens when you try? 	Clarify
1031	4952512	I mean with keys in the keypool. When I try the GUI requests I unlock the wallet 	Clarify
1031	4954347	"Ok, I understand now.  It works after entering the passphrase? "	Clarify
1031	4954797	Yep 	Accept
1031	4955837	"When the wallet is locked, it should be perfectly possible to retrieve a new key from the key pool (unless it's empty). "	Other
1031	4955877	we must also remember to refill the keypool on unlock 	Clarify
1031	4955902	"That already happens automatically, afaik. "	Statement
1031	27689629	This has been fixed 	Emphasis
1030	4935758	See also: Pull 1025.  	Clarify
1030	4938259	"Ha.  I completely didn't see that.  If you type the number with a # in front, like #1025 and #753 then it makes a note in the referenced issue, making it easier to find. "	Clarify
1030	4947374	The pull #1025 has even a very cool redesign and some other small changes / fixes for the progress bar. 	Clarify
1029	4923316	"I prefer conditional building in a single makefile for unix. Otherwise, the makefiles will eternally be out of sync when, for example, new source files are added.   "	Statement
1029	4923498	"On 03/04/2012 21:37, Wladimir J. van der Laan wrote: > I prefer conditional building in a single makefile for unix. Otherwise, the makefiles will eternally be out of sync when, for example, new source files are added.  Makes sense, I'll try to modify ""makefile.unix"" instead then.  --  khorben "	Clarify
1028	4908126	"Yes, some phases of the initialization process could be moved to after the UI is shown.  Especially now that the UI is no longer dependent on the wallet for settings.  "	Reject
1028	4908293	"Perhaps the simplest temporary solution is an ""in ui"" splash screen.  Replace the main panel with an image and loading bar, until loading is complete.  Then in a later iteration the loading bar can then be moved to the status bar, and the main interface can be added.  "	nAnswer
1028	4908467	"Right, that's a possibility. On the other hand, if we're going to implement this better do it right, otherwise we end up with temporary solutions to temporary solutions. The whole splash screen thing was already a temporary solution for the ""loading is slow"" problem, "	Clarify
1028	4909271	"I agree, this should be well planned to not have a different GUI with each release... "	nAnswer
1028	4909381	It's better than having a different gui in the same release 	Clarify
1028	4951107	I like this idea. How hard is it to implement? 	whQuestion
1028	4951463	"It will be easier to do once #1019 is merged, as it constructs the main dialog before the AppInit2, and changes the message box function used in AppInit2 to work across threads, so that it will be possible (though this has to be handled carefully) to do (most of) AppInit2 in another thread instead o"	Clarify
1028	5188021	"Probably not the place for this, but +1. (Is there a place for +1s on suggestions for improvement?). Sounds like this should be easy to implement. e.g. if one deletes the blk0001.dat but not the wallet.dat and runs the bitcoin client, they still see the transactions, etc, but simply don't have the b"	Clarify
1028	5188356	"That's an interesting step towards an spvSent from Samsung Mobile   -------- Original message -------- Subject: Re: [bitcoin] Disable splash screen, use status bar instead (#1028)  From: rebroad   To: tagrain@gmail.com  CC:    Probably not the place for this, but +1. (Is there a place for +1s on sug"	Clarify
1028	5192285	That wouldn't work with orphaned transactions. It needs the block chain to verify which transactions in wallet.dat are real and which are invalidated.  And NO +1s here! We already know this is a good idea. What we need to get this realized is someone to implement it.  	Reject
1028	17570960	"@laanwj IMHO we should close this now, as splashscreen is full of life :). "	Clarify
1028	17571094	"I'm not convinced about this. Having the full application window being available earlier would be good in my opinion, even if it's not fully functional initially.  Then again, I don't want to throw away the nice splash screen either... "	Clarify
1028	17571479	"Any time I try the GUI I'm astounded that people find it tolerable at all. The splash screen monopolizes my interface for what seems like an eon. There must be a shortage of tar and feathers. :P    Of course, it doesn't have to be one or the other, it could be displayed for N seconds and go away eve"	Clarify
1028	17588014	"@gmaxwell: How is that in any way GUI specific? If you start bitcoind you have the same delay before you can use the interface. And the splash screen doesnt monopolize at all; it doesn't have ""stay on top"" enabled, you can do something else (just not with bitcoin) while it loads.  "	Clarify
1028	17588238	"Ok in that case I agree with ""tar and feathers"", thanks for explaining. Maybe we can detect that combination somehow; what distribution and window manager?  "	Emphasis
1028	17588294	"Xmonad, I'm looking into it now. "	Statement
1028	17589156	i agree with @sipa. Splashscreens are somethings from the last century. A splashscreen always reminds me to a bad startup/thread design. :) Maybe we could try getting the main-window earlier and show the block/db init there somewhere. But I would also say it's not trivial because some features in th	Clarify
1028	17607888	"Arguably the two most used programs in the world, MS Word and MS Excel have a splash screen. Even the most recent versions.  I'm not saying that it is preferable, but ""some things from the last century"" is not true either. In any case we should decide on things because they make sense, not because t"	Clarify
1028	17608965	"It would be possible to fake this functionality by building a splashscreen that looks and acts (re-size, translate, minimize etc) like the bitcoin-qt gui with everything greyed out other than the loading bar. "	Clarify
1028	17610622	hmm... i don't know where's the user benefit when having a disabled gui instead of showing a nice splash screen. What could the user do during the init process? change settings? Including a splash screen within the bitcoin-qt gui looks like a 50-50 solution and will probably looks bad. Maybe we shou	Clarify
1028	17611163	"The only advantage would be that it could be incremental. Ie, information about the wallet could be displayed as soon as the wallet is initialized, information about the block chain could be displayed as soon as the block chain is initialized (but I suppose it needs information about the blockchain "	Clarify
1028	17611409	"one plus could be the thing that @graingert mentioned: ""read their address book"". "	Clarify
1028	17614279	@laanwj Would making the splash screen go away when you click on it be bad? 	Clarify
1028	17614861	@laanwj @gmaxwell I'd like that as well (also xmonad user)... 	Statement
1028	17617713	"I think that would be fine, there are more programs that do that.  "	Statement
1028	21846742	"I also encounter the problem, that while loading, I have the non-dismiss-able splash screen. Expected or normal program reaction to me, for long loading system type process would be,  start loading in background, with icon in taskbar, or similiar, indicating task is proceeding as normal. User uses s"	Clarify
1028	26982103	@Squeezle42 use the -nosplash option  I'm closing this issue as we don't really want to replace the splash screen with a visible but dysfunctional main window.   	Clarify
1027	4897541	(wtf there's no way to attach a file?) 	whQuestion
1027	4897582	"llvm-g++ -mmacosx-version-min=10.5 -arch i386 -O3 -Wextra -Wno-sign-compare -Wno-char-subscripts -Wno-invalid-offsetof -Wformat-security -g -DMAC_OSX -DMSG_NOSIGNAL=0 -DUSE_SSL -DUSE_UPNP=1 -I""/Users/looris/Sviluppo/_varie/ext/bitcoin/src"" -I""/opt/local/include"" -I""/opt/local/include/db48"" -o bitcoi"	Other
1027	4909030	"The clue is: libdb_cxx-4.8.dylib, file was built for unsupported file format which is not the architecture being linked (i386)  Either remove the -arch i386 from the makefile.osx or Bitcoin-Qt.pro, or build all your dependencies -arch i386.  The builds are set up to build for maximum compatibility ("	Clarify
1027	4910262	"Just removing the -arch i386 from the makefile.osx worked.  The dependencies are build this way by a default (I guess) MacPorts configuration, so I'd think it would be wise to stick to that. "	Clarify
1027	4911109	"See http://gavintech.blogspot.com/2011/11/deploying-bitcoin-qt-on-osx.html  -- by default, MacPorts builds for the architecture you're on, which is great unless you're creating binaries that you want to run on other people's (32-bit, OSX 10.5) machines.  "	Clarify
1026	4885429	"Half an hour was 7 false alarms per day, an hour is a false alarm every three days.  Two hours is once per three years.  The tradeoff is how quickly you let the user know that something is broken vs false alarms. Since it's already a pretty slow indicator even at 30 minutes, I think we should error "	Clarify
1026	4888283	Seems like a good change. 	Statement
1026	4892639	ACK 	Clarify
1025	4873072	"I'm new in that discussion, but think about it for a while ... the ugly thing is not really the full resync, but if you didn't start the client for a few days and it has to catch up let's say 1000 blocks. This would be displayed relative and does not seem to stuck for so long on 99%. I even added th"	Clarify
1025	4873254	"We've already tried the ""show relative progress"" thing once. It didn't fly.  Unless someone develops an elegant widget that shows both absolute and relative information in a neat, intuitive way (and cross-validates this with the complainers on the bitcoin forums and here) I'm reluctant to try it aga"	Clarify
1025	4873969	"So if a relative display didn't fly what about displaying ""x of y blocks (z %)"" as text on the progressbar? I think it's very nice, because you see progress per block and not per % (which is ver imprecise). "	Clarify
1025	4874227	Updated to be not relative anymore and changed network detection part as laanwj suggested. 	Clarify
1025	4874419	"The problem is that the source information (the YY in ""XX of YY blocks"") is imprecise too. Showing that number only gives a false sense of precision.  On the other hand I agree with you. If you show a progress bar, the % is redundant as it is already visually conveyed. "	Clarify
1025	4874478	"Can you explain, why YY is imprecise? That are the current all time blocks in the network (claimed by the nodes), but even if the real value is not correct, the new text display is clear.  If you start the client and it sits on 99% for minutes you think fuck what's up. If it reads 9900 of 10000 bloc"	Clarify
1025	4875514	"I'd say use an absolute percentage chain always, but put in readable text on it ""est. X blocks left"". "	nAnswer
1025	4875673	"Last commit makes it absolute again, so that's fine and I won't touch it anymore ^^.  So we have the coice if we keep ""%"", use my suggestion ""x of y blocks (z%) or something like sipa suggested above. As I said everything is better than a simple % because users want to see at least a real progress. "	Clarify
1025	4875988	"Thanks for making it absolute again.  I'm convinced. I think we should drop the percentage from the text and show ""xx of estimated yy"". Percentage is implicit in the progess bar visual and doesnt add anything.  Sipa's suggestion to show only the estimated number of blocks left is also good. Advantag"	Clarify
1025	4876430	"The more I think about it, the better I like sipas idea of only showing the remaining blocks. And for problem diagnostic we have a tooltip, which shows the real numbers.  So ""~xx blocks remaining"" as text? Centered on the progressbar (perhaps hard to read as this uses the native OS style for the bar"	Clarify
1025	4877036	I'd say show it *on* the progress bar. That's one less level of indirection. If it looks weird on some OS we can always change it. 	Clarify
1025	4878451	"Was a bit tricky to count backwards (blocks remaining) and keep track of the right value (scale) of the progressbar, but now it's ready for testing / review :). "	Statement
1025	4879464	"Looks good so far, but * small blocks for the progress percentage are not nice when combined with text * at least here, it's completely unreadable: dark blocks for progress with black text; is there a way to get something like this: http://stackoverflow.com/questions/6258690/is-there-any-way-to-chan"	Clarify
1025	4879609	"@sipa The style/design of the progressbar comes from the OS and can only be changed by some form of Qt stylesheets afaik (see: http://harmattan-dev.nokia.com/docs/library/html/qt4/qprogressbar.html#details).  2 options, put the text right to the progressbar or search the web for howto edit the style"	Clarify
1025	4882562	"Okay, I found a way to apply stylesheets to the bar and it can be very well customized ... will add a commit so you could try it out @sipa. "	Clarify
1025	4882746	"Ok, let us know how it goes. Sounds like something that is a nightmare to get right on all OSes. Otherwise, putting the text in the progressBarLabel to the left of the progress bar is fine too.  "	Clarify
1025	4883233	"OMFG what a mess, but now I'm happy :-D. So on Windows the bar looks equal, no matter what theme I activate and even if I chose the classic theme.  I moved some one-time functions so that they don't get called everytime setNumConnections() is called.  To the style itself, I chose an orange as bar co"	Clarify
1025	4883549	"*So on Windows the bar looks equal, no matter what theme I activate and even if I chose the classic theme.*  This does mean we lose platform-native styling for the progress bar. Not that that is necessarily a problem, I think it looks nice (also on Ubuntu 11.10).  "	Clarify
1025	4889871	"I had to edit the code once more, because in the end of a sync the bar was rather jerky and jumped a bit too much. Because of that I had to seperate the ""~x blocks remaining"" text from the real progress bar values, to be not linked. Now the displayed text is one thing and the progressbar progress di"	Clarify
1025	4892624	"It looks nice, visual ACK. I didn't check the source code changes. "	nAnswer
1025	4895073	That last commit did certainly make it better. It seemed like the number never changed while I was looking :-)  Edit: ACK 	Clarify
1025	4895352	"@laanwj Could you take a short look over the last commit. If you are fine with that, I will rebase! "	Emphasis
1025	4947387	"So we have 1 ""visual"" ACK and laanwjs ACK, further dev votes :)? "	Other
1025	4948044	"I don't think there's much more to be done, except determine whether we want this for 0.6.1 or 0.7.0. The code change is small and simple enough to make it end up in 0.6.1 IMO, the only hindrance is that some translation messages have been changed and it usually takes a while to update them. "	Clarify
1025	4948230	"As for the translations, I would push the new master file (en) early to transifex, so that translators have enough time to keep up. So I guess there will be RCs for 0.6.1 and I suggest let's integrate this one here.  Remember, there is that Wallet-HTML-thing from #945, which has to do with translati"	Clarify
1025	4948298	"Yes, agreed. I'm for merging this as soon as possible. (and also #1002, depending on whether we fix URL handling for 0.6.1)  #945 is for 0.7.0 as it is pretty low-priority (nearly no visual difference) but a lot of hassle for translators. "	Clarify
1025	4950906	Fine for 0.6.1 for me. 	Statement
1024	4872054	Do you have a backup of your wallet from before this issue happened?  	whQuestion
1024	4872214	of course not. 	Statement
1024	4899121	What about a try with 0.6 and the switch -walletupgrade (https://bitcointalk.org/index.php?topic=74858.0)? But use a copy of your wallet.dat just in case ... 	Clarify
1024	4903494	same crash as described above with version 0.6.0.6 beta after -walletupgrade when i try to change my passphrase. 	Clarify
1024	4924569	"I ran into the same issue after upgrading to 0.6.0.6-beta, and same potential root cause, I tried entering the passphrase probably 30+ times and now when I try the correct phrase it crashes when attempting to send coins.   ""This application has requested the Runtime to terminate it in an unusual way"	Clarify
1024	4957633	Update: I found the right pass it looks like the crash was being caused on an incorrect pass.  Using 0.6.0.6-beta trying (incorrect-password1) when attempting to send coins or change passwords the client crashes. Because of this I figured it was the correct password due to other incorrect passwords 	Clarify
1024	4966388	This should be fixed by #1039. 	Clarify
1024	4968719	ur teh r0x0rz. err... mostly. i still have to guess my passphrase. wee. 	Clarify
1023	4885091	"Please don't open pull requests until you think your code is 100% perfect and tested and ready to go.  Before then, you can ask people to look at your code or help out using your github repository.  "	Clarify
1023	5007888	"These might be interesting as an alternative to boost::interprocess (and flakey shared memory queues in general):  http://doc.qt.nokia.com/4.7-snapshot/qlocalserver.html http://doc.qt.nokia.com/4.7-snapshot/qlocalsocket.html  They provide a named socket (unix socket on unix, pipe on windows) to comm"	Clarify
1023	5046267	Rebasing required. 	System
1023	5056175	Rebased and re-worked a little. I need someone to test this ;).  Needs boost 1.49 with a small edit in boost/interprocess/detail/tmp_dir_helpers.hpp see: https://svn.boost.org/trac/boost/ticket/5392#comment:24  There is currently no need for any hard monkey-patches like #986. 	nAnswer
1023	5060351	"NACK-- not worth requiring boost 1.49 for this, and ""a small edit in boost"" scares the pants off me.   "	nAnswer
1023	5062872	"The small edit is uncommenting 3 lines of code that are already IN the tmp_dir_helpers.hpp ... I really would like to know what your problem with a boost update is? If you could explain it a little it makes it easier for me to understand, thanks. "	Clarify
1023	5063407	"With the amount of trouble it has given us, I think we can safely conclude that boost::interprocess is not ready for production use yet until upstream gets their act together. Also it seems aimed at much more complex use-cases such as sharing memory and objects instead of signaling simple lines of t"	Clarify
1023	5074216	"RE: what's the trouble with requiring everybody upgrade to boost 1.49:  boost is probably the hardest of our dependencies to get compiled and working, and somebody running an older version of Linux or OSX that spent a day getting boost 1.46 compiled and working properly to compile bitcoind isn't goi"	Clarify
1023	5074502	"Gavin: I don't completely follow this reasoning. URL handling (and *any* usage of boost::interprocess) is limited to bitcoin-qt, if we required boost 1.49 for bitcoin-qt for Windows doesn't mean everyone has to upgrade. The rest of the code can remain backwards compatible. Also, even for bitcoin-qt,"	Clarify
1023	5079425	It's to easy to say Linux / OSX users may not care about Bitcoin-Qt at all and certainly don't care about Windows. How many Windows users download the client and how many use the GUI version contra how many Linux users are out there? For example I never used bitcoind as Windows users like GUIs and t	Clarify
1023	5953721	wtf is with 1e39376? you just committed conflicts! 	whQuestion
1023	5953846	"Dunno how that happened, I normally don't include rebase-conflicts ;), should work again. Sorry @luke-jr! "	Clarify
1023	6229399	"Updated to reflect the last suggestions from the discussion, all commits will be merged after this get's final (if it get's final ^^), so I used NO speaking commit message! "	Clarify
1023	6801656	I will cherry-pick some of the changes and open a new pull. 	Statement
1022	4873276	ACK  	Clarify
1021	4874937	"I can't really comment on your code changes, but I'm interested in some of the changes. You removed / changed how the global var addrLocalHost worked. There is now a list / an array which holds all local addresses, which can be used for bitcoin network connections. That one can be queried via GetLoc"	Clarify
1021	4875044	"@Diapolo: yes you can use it with multiple NICs; it's even in a separate commit named ""Support for multiple local addresses"".  IPv6 external address detection works the same way as IPv4, though IRC and whatismyip.com will obviously only tell you about IPv4 addresses. "	Clarify
1021	4875624	"Thanks for the infos @sipa. How would I query or list all interfaces that are used for connections, is this possible with a single GetLocal() call somehow? "	Clarify
1021	4875823	"GetLocal() queries the mapLocalAddress database; this contains the routable addresses detected on local interfaces, but also addresses discovered through UPnP, IRC, website lookups, or manually specified. There's not really a way to link them back to interfaces anymore (though you can find those in "	Clarify
1021	4876452	"I'm asking, because I have a small commit in the pipe, which displays the external IP as a tooltip when you hover the connection symbol in the Qt client. This would get broken by your commit and I wanted to know if I could make it work again (if it ever get's accepted - but it would be an added valu"	Clarify
1021	4877233	"You can query which potentially local addresses bitcoin knows about (just check the mapLocalAddress), but that is not the same as the addresses it's reachable on (no way to know that for sure) or the address of local interfaces.  Edit: you could just use GetLocal(addrBest, NULL), which will return t"	Clarify
1021	5046199	Needs rebasing. Sipa broke everything using locks. >_< 	Other
1021	5046510	"Yeah, I'm a lock breaker. Rebased. "	Statement
1021	5051835	"I'm sure IPv6 support is one of the biggest infrastructure things in the ""Internet"" ... would it perhaps be a good idea to offer an IPv6 enabled beta instead of merging directly into master? That's no NACK btw! "	Clarify
1021	5051922	"IPv6 is basically deployed by now. Even in the rare cases of ISPs behind the times or ancient routers, Windows will still setup a Teredo tunnel and Linux users can trivially configure 6to4. "	Clarify
1021	5052923	"Ok, updated.  * Foreign addresses (ipv6 when you are ipv4-only, for example) are now not stored in addrman, and only relayed to one node instead of 2. * USE_IPV6 is enabled by default by all makefiles  "	Statement
1021	5053064	"as soon as support for tor/i2p hidden services is added, you'll probably need -externalip=something.onion to make your node advertize that address as well. It seems a bit strange to limit the function to IPv4 when the semantics are exactly the same for every network. "	Clarify
1021	5053073	ACK 	Clarify
1021	5053324	Socks version is now selectable using -socks=<n>. 	Other
1021	5288015	"I would like to merge this sooner rather than later...   we can always merge this with !USE_IPV6 for 0.6.1, for example, and then turn on USE_IPV6 on 0.7. "	Emphasis
1021	5288083	I just split off the SOCKS-related changes to another pullreq. 	Statement
1021	5397076	is the -externalip=blahblah.onion working yet? 	ynQuestion
1021	5397097	"No, that requires onioncat-style IPv6 addresses support. "	Reject
1021	5650601	Added -bind=[addr]. 	Clarify
1021	5650916	"FWIW, I don't seem to be getting any IPv6 connections with this "	ynQuestion
1021	5651038	@luke-jr how do you mean? 	whQuestion
1021	5653559	"I mean, I expect running with this should get me at least a few IPv6 connections..? "	Clarify
1021	5654372	"You're probably the only one besides sipa running an IPv6 node, so connection success seems doubtful "	Clarify
1021	5655410	"I'm running this also, and I think I have IPv6 enabled. "	Statement
1020	4860676	"Agreed, we can just as well hide it completely.  Eventually we will add the option to delete (well, hide, they should never be really deleted) receiving addresses from the list. But for now it is only confusing. "	Statement
1017	4873290	"whoa, github makes this confusing list of commits. It may be better to submit this against coderrs coin control branch? "	Other
1017	4873310	"Two problems with that: * coderrr's branch isn't rebased against 0.6.0 * coderr's changes use 2 spaces per tab, so pretty much every line needs changing to fit bitcoin   I can make a single large commit if that helps. "	Clarify
1017	4873472	That's a good point. My idea was that it is best to keep coin control development coordinated. Let's wait for @coderrr.   	Clarify
1017	4873514	just let me know what you guys want me to do 	ynQuestion
1017	4873538	"I guess take a look at my pull request and let us know what you think.  I changed a bunch of stuff, but for the better I think.  The only thing I removed was the ""balance plus tx fee"" column, and replaced it with ""balance of group"".  The ""plus tx fee"" isn't particularly useful because the fee change"	Clarify
1017	4873559	"Yea i've been watching what you were doing and it all seems fine, I didn't take a close look at how you optimized the algorithm but I'm assuming its fine.  Do you just need my ok or do you want me to squash your changes into the commit on my pull request or what? "	Clarify
1017	4873584	It really doesn't matter to me.  @laanwj ? 	Emphasis
1017	5023176	"The coincontrol patch #415 was accessing walletModel outside the if(walletModel){...} block, but only recently started crashing on shutdown, possibly because bitcoin-qt now seems to wait for everything to shut down before closing the GUI?  9a525b2 above fixes the crash. "	Clarify
1017	5046182	Needs rebasing. Sipa broke everything using locks. >_< 	Other
1017	5052268	Thanks for the heads up.  I rebased it. 	Reject
1017	5105348	"I rebased it again, since it stopped merging cleanly again.  I'm a little unclear on what needs doing to get this merged.  Is there something in particular that's holding it up? "	Emphasis
1017	5105626	"I think it will be merged for 0.7.0, together with a few other extra features. We're currently doing merges for 0.6.1, which will be a mostly bugfix & cleanups release. "	Clarify
1017	5105656	I see.  Thanks.  I'll keep rebasing it then. 	Statement
1017	5106924	"I do think the blank rows should be replaced with some kind of proper divider before merging, if possible. "	Clarify
1017	5140405	"No objections or NAK, but I really think that coin control is wasted code in general.  1) Average users will never use it.  The total userbase we will be able to count on our fingers :) 2) Cleanups are nice, but coin control is really dead weight.  If privacy is the goal, it is safer, easier, and le"	Clarify
1017	5140449	"I don't care so much about privacy.  I use it to (1) see how much is at each address and (2) chose which address(es) to send from.  For new users I think it helps them see what's going on behind the scenes, how new change addresses are created for each spend, etc.  Maybe they don't care, but I would"	Clarify
1017	5140755	"The current client presents the user with a ledger view to his money. Where this money is stored, and how the wallet transactions are mapped to bitcoin transactions is entirely abstracted away. This makes starting to use it easier, but it's very confusing to people who want to learn what's going on "	Clarify
1017	5140769	"I like the ""lets them see what happens behind the scenes"" idea. It gives advanced users and developers some more control over what happens. Also the feature appears to be pretty popular with the bitcointalk.org crowd.  What I don't like about the implementation is that it makes CWallet stateful (set"	Clarify
1017	5141256	"We already have some multiple wallet support in the base code, thanks to sipa I think "	Statement
1017	5141283	"Yes, CWallet was written with that in mind. The problem is the bdb database environment. If you want to make wallets really portable files, which can be opened and closed independently, you need at least a separate environment per wallet, and - my preference - no bdb at all.  I've been working on an"	Clarify
1017	5190509	Non-trivial rebasing needed. 	Statement
1017	6279846	Is this superceded now? 	ynQuestion
1017	6281184	"Yes, split into #1416 and #1359 "	yAnswer
1017	6282130	Guess if dooglus doesn't work on this anymore we should close this then. 	Clarify
1016	4853497	The duplicate ampersands might be plaguing other translations as well; it was a simple search and replace. 	Statement
1016	4857644	"This needs to be fixed directly on Transifex, which is our translation master.  Take a look at https://www.transifex.net/projects/p/bitcoin/resource/tx/l/sv/ and look through the translated strings. I did this an discovered, that i.e. it reads ""&amp; Kopiera till Urklipp"" instead of &Kopiera till Ur"	Clarify
1016	4857961	I fixed the Transifex one now and I'm closing this pull request. :) 	Clarify
1016	4857983	Thank you :)! 	Emphasis
1015	4853514	"Could you please post a screenshot? The &amp; (=&) is normaly used to display an underscore if you press the alt key, to give you a hint to be able to only press that key instead of using the mouse.  I made a quick comparison of bitcoin_sv.ts and bitcoin_de.ts and the &amp; is in both of em and caus"	Clarify
1015	4853553	https://imgur.com/Svc7D as well as in some menu items. I did a pull request that I think should fix it. 	Clarify
1015	4856715	"We've seen this before. Somehow, &amps are sometimes duplicated in the translations.  You should submit translation fixes to transifex, as that site is leading (we pull the changes to git once in a while). "	Clarify
1015	4857655	"Take a look at https://www.transifex.net/projects/p/bitcoin/resource/tx/l/sv/ and look through the translated strings. I did this an discovered, that i.e. it reads ""&amp; Kopiera till Urklipp"" instead of &Kopiera till Urklipp. I'm not sure if that's a problem with transifex or the translator.  The g"	Clarify
1015	4858210	"As translations are not updated dayli and you fixed this on transifex, you could perhaps also close this one :)? "	Clarify
1015	4860574	Definitely :) 	Emotion
1014	4858521	Keeping the comma's there makes patches that add new enum entries smaller and less conflicting. Is this actually a problem on any supported platform? 	ynQuestion
1014	4858599	"It's ""ugly"" and unsupported, if the used compiler is not C++0x compatible. There should be coding standards for this, as everyone seems to handle this differently all over the source, which is bad practise IMHO. "	Clarify
1014	4873351	"I think sipa's patch-cleanlyness argument is pretty convincing. I see this as ""in the future it will be allowed, so why bother fixing it"".  No compiler that I know of has problems with this (g++, clang, VC). And I suppose we will switch to c++0x when the time is right.  If you like to clean up compi"	Clarify
1014	4873822	"Alright, but please let's do something about coding standards in general. There are some rules defined in the docs, but there are large parts of the code not using that. "	Reject
1013	4841245	"It's quite useful still for testnet, It's not entirely disabled by the way, just inaccessible from the GUI.  Maybe releases could be compiled without it, though. "	nAnswer
1013	4841303	"It's only a suggestion, if we could seperate the code and compile without it, that would be nice, but I guess very low priority :). Leave it on this list as a reminder, if other devs say NACK simply close this one. "	Clarify
1013	4841842	There was a discussion about this some time ago and the outcome was to leave it in as example. It can still be enabled through RPC or the command line. 	Statement
1013	4842265	"NAK - it is still useful on test networks and other dev scenarios, including as working reference code "	Emphasis
1013	4852334	"Closed, as the answers were pretty clear :). "	Clarify
1012	4833810	"Yes, this is a known issue. It should only be present during or shortly after the initial sync though. I'm not sure how serious it is, but maybe we do need a progress bar with ""cleaning up"" instead of no GUI at all. "	Clarify
1012	4833833	"This is happening for me with a fully synced blockchain.  Definitely not any time close to the initial sync.  It even happens if I arrange for the client to have 0 peers (I use -connect=0.0.0.0 -nolisten, but there's probably a cleaner way). "	Clarify
1012	4844281	"Not a showstopper in my opinion.  GUI for ""cleaning up/shutting down"" is a great idea, as is optimizing shutdown time in general.  "	Statement
1012	4850967	"The only issue I can see is that people might think that because the window has closed that the client has closed, and so it's a safe time to shutdown, or backup the .bitcoin directory, when in fact it's probably a really bad time to do that, since there is still a lot of disk activity. "	Clarify
1012	4857598	Agree. 	Accept
1012	4894967	"Right, the UI should have a shutdown state:  - Show a simple window with ""Bitcoin is shutting down, do not turn off your computer until this message goes away"" or similar - Grey out the bitcoin icon in tray  Edit: The practical problem here I think is that Shutdown() calls exit() directly, so curren"	Clarify
1012	4896564	"Yes, the GUI should be the last component that is shutdown, so that we can display the progress infos. "	yAnswer
1012	5082886	"Since the dbenv.set_cachesize line was added, my bitcoin-qt takes around 6 minutes to close....  "	Clarify
1012	5084030	@rebroad Do you have the blockchain downloaded?  I think it's known that shutting down can take a long time if you've recently been syncing the blockchain.  The bug I was reporting here is that the shutdown time has doubled even if the blockchain has been synced for months. 	Clarify
1012	5454806	Is this still a problem with the new fast-shutdown (detachdb) enabled? 	ynQuestion
1012	5455094	"I'll try it.  ""-detachdb          Detach block and address databases. Increases shutdown time (default: 0)""  That makes it sound like detachdb gives slower shutdown, not faster.  Where's the misunderstanding? "	Clarify
1012	5455122	"-detachdb is -detachdb=1, whereas the default is -detachdb=0, which is the fast shutdown I had a hard time understanding this, too :D. "	nAnswer
1012	5455171	"Without -detachdb it takes about 2s to close, and with -detachdb it takes about 18s.  Both better than the 24s in the initial report. "	nAnswer
1012	5455236	@sipa Is there anything more planned or is 2s considered fine (which I think is okay). 	Clarify
1012	5455367	"This can be considered solved, `-detachdb` is off by default, only enable it if you really need to. Detaching the database is slow and only important if you want to copy block data files around manually.  Closing the issue...  "	Clarify
1010	4828486	"With this patch I did my fastest full block chain load from a local file yet, and did so with never needing more than 120 MiB of log files. After #1007 (which does not appear slower), this still requires 220 MiB. "	Clarify
1010	4828571	ACK 	Clarify
1010	4830560	"Not sure I see the value of the 200,000 hueristic. "	Statement
1010	4833837	"@jgarzik it was chosen after some benchmarks that counted the number of transactions between flushes. Flushing every 200000 transactions causes max 120 MiB log files, which seemed reasonable as long as it did not decrease block sync efficiency. "	Clarify
1010	4834845	"Just the simple time-based heuristic would seem to suffice for both initial block download and thereafter.  maintaining the 200k counter seems rather useless after I.B.D. completion.  But no big matter...  just a nit, not a NAK :)  "	nAnswer
1008	4828413	"ACK. vDelete is obsolete now, but it may be necessary again soon. "	Statement
1008	4830494	ACK 	Clarify
1007	4819145	ACK 	Clarify
1007	4823509	ACK 	Clarify
1006	4797503	ACK (for 0.7.0) and thanks for all the fixes!  	Emphasis
1006	4797759	"It's fun, I can contribute and don't need a deep understanding of all the undelying protocol code :). By the way, if 0.6 gets released, will the commits be accepted directly after? It seems there is currently a commit stop during the release phase. I'm asking because that's the first time im somehow"	Clarify
1006	4798241	"As I understand it: if no blocking new issues arise we want to generate a 0.6.0 final from master, which is the same as 0.6.0.5 except the version number. So we can't pull anything now.  (of course, we could make another branch and pull on that, but this is easier and hopefully the delay won't be to"	Clarify
1006	4828646	ACK for 0.7.0 	Clarify
1004	4793143	"Have you tested that this actually works? I've been playing for a few hours now with DB_LOG_REMOVE, DB_LOG_AUTO_REMOVE, closing all db files occasionally, checkpoinging, flushing, stopping and restarting DbEnv, ... but all I've seen are a lot of unexplainable segfauls, and not a single deleted logfi"	Clarify
1004	4793449	"Nice!  I'm baffled, too.  I don't think this should be a command-line option, though:  I think it should just happen, I can't think of any reason to keep gigabytes of logs around. "	Clarify
1004	4793503	"@sipa: I tested it a lot before making the pull request, yes.  It seems to work well in db5.1.25.  I don't have db4.x.  @gavinandresen: I think the logs are so you can do database recovery in the event of a crash.  It seems that in the event of a crash we usually manage to clean up the logs before e"	Clarify
1004	4794055	"I'm testing a bit more extensive patch that counts the number of transactions updated or time since last flush as condition for flushing (instead of 5000 blocks), plus a few other changes. I'm benchmarking now.  Thanks for showing this was possible at all - I had almost given up (seems there was a b"	Clarify
1004	4794543	No problem.  I don't care what triggers the deletion so long as it's done occasionally.  To arrange for rapid blockchain downloading to test this I've been using a second computer on the same LAN with a complete copy of the blockchain and connecting only to it. 	Clarify
1004	4794642	"Ok, one full load of the blockchain up to 172000 (from a local file) completed in 35 minutes. That's a few minutes slower than a previous benchmark, but it never needed more than 12 log files (of 10 MiB again). This did a log flush every 200k transactions (which was every 0.5-2 minutes). I'll post t"	Clarify
1004	4794662	How much of that was spent loading the blocks 168000 to 172000?  The last checkpoint being at 168k makes the last 4k blocks so much slower to load.  How about adding a new checkpoint before the release of 0.6.0? 	whQuestion
1004	4795300	"grrr...  So after WASTING time testing dbenv.set_flags(DB_LOG_AUTO_REMOVE, 1) this afternoon, I discover the correct call is actually log_set_config:  dbenv.log_set_config(DB_LOG_AUTO_REMOVE, 1);   Testing with a 10MB logfile size and the logs are automatically being cleaned up as the blockchain is "	Clarify
1004	4809925	"So there are three options now: a) remove logs at given points b) flush + remove logs at given points c) use auto remove.  I wonder if there is any danger in using auto remove (meaning logs will be removed while transactions/databases are open). I suppose not.  Gavin, how many log files were present"	Clarify
1004	4813463	The most log files present at one given time with LOG_AUTO_REMOVE and 10M logfiles was 5.  Typical is 2.  Raw data (ls -l in the database/ dir run every 2 minutes): https://gist.github.com/2236954  	Clarify
1004	4826441	"Thanks for the help Chris-- without this pull I think we would have given up hope of finding a good solution.  But I'm going to close, because using AUTO_REMOVE (properly) is fewer lines of code.  "	Clarify
1004	5082916	"I think it would be nice to have the option to exit bitcoin-qt without it flushing the database so that (presumeably) it can load the database quicker on the next run. This would be useful when frequently running and exiting the client between code changes and recompiles, and then the database flush"	Clarify
1003	4780656	Should that number be dynamically generated because the cache size can be changed? 	Clarify
1003	4780831	ACK on the concept for 0.6. 	Statement
1003	4780845	"Maybe.  I wanted to make the change as simple as possible for now, but could make it some multiplier of (or addition to) the log size. "	Clarify
1003	4786341	"> Should that number be dynamically generated because the cache size can be changed?  I added a couple of constants to db.h to define the in-memory log buffer size, and the max on-disk log file size, and used those in both places.  I don't think this is related to the cache size - did you mean the i"	Clarify
1003	4787871	"Oh, Im sorry, I thought the max log size was set based on cli parameters now, didnt realize it was still constant.  Anyway, like the addition of the constants too...ACK "	Clarify
1003	4791666	Small and good change! 	Emphasis
1003	4826469	"Log file size has a negligible effect on performance, so it was dropped back down to 10M. It is the cache size that really mattered.  "	nAnswer
1003	4826661	Isn't it still a good idea to have the size in one place only rather than in two places? 	Clarify
1003	4826782	"Yes, that is a good idea.  Can you put another pull together for 0.7?  "	Emphasis
1003	4827209	"@gavinandresen I've updated this pull request with the change, but can't reopen the issue. "	nAnswer
1002	4765810	"Good idea.  I think there should also be a notification if an invalid URI is sent, to aid web developers etc in testing (hey, where did my url silently go) Op 28 mrt. 2012 15:21 schreef ""Philip Kaufmann"" < reply@reply.github.com> het volgende:  > Current state of this request: > > added: > 1. valida"	Other
1002	4782840	"I'm going to add what you suggested :), sounds good. "	Statement
1002	4790492	"I added message boxes. A hint would be nice, if I should call ""it"" URL or URI ;)? I'm also working on somewhat ""hardening"" the IPC code and I would prefer one of the two for every source comment, var name, function and so on.  Edit: I will take URI in the message boxes and where a user can see it an"	Clarify
1002	4797065	"Nitpick: use notificator, not a message box  Re: URI or URL, I'm fine with either. Though URI is the most correct, more users know what URL means. "	Clarify
1002	4797109	"Cool idea with the notificator, will see how that looks :). "	Statement
1002	4797229	"Changed to notificator, which is much better/smoother in terms of usability and usage flow. "	nAnswer
1002	4885854	Can you please rebase this into one commit?  	ynQuestion
1002	4886330	Done :). 	Statement
1002	5002052	Rebase to current master and all remaining URL / url were re-named to URI / uri ;). 	Clarify
1002	5051578	Rebased once more and fixed the 2 glitches luke observed :). 	Clarify
1002	5244846	What does @TheBlueMatt think about this? 	whQuestion
1002	5255257	"Those are minor gripes anyway, ACK "	Other
1002	5262083	"@TheBlueMatt  I'll look into your suggestions, even small glitches can be changed / fixed :). "	Clarify
1002	5407066	"Rebased once more, merged the 3 commits into a single one and re-worked a few days ago to include one of @TheBlueMatt suggestions. "	Clarify
1002	5585985	Rebased and reworded the commit message! 	Statement
1002	5672312	"Rebased and fixed merge-conflict. Can this get in please, if there are no further wishes? "	nAnswer
1002	5674600	"I think this one's waiting for URI support to be resurrected. Otherwise, it's kind of hard (and insensible) to test.  "	Clarify
1002	5675362	"At least for Linux URI-support is in the client ;). And it's working fine with my build ^^, just wanted to bring this back into devs-mind. "	Clarify
1002	5809058	"I agree with @Diapolo here, we have a huge list of pulls piling up (dont we always...) and I see little reason to not pull this because URIs are supported, just not on Windows or Mac. "	Clarify
1002	5913154	"If this would get in, I didn't need to rebase and keep this current, so ... :). "	Statement
1002	5954075	Updated to use toggleHidden() function for showing the window after a bitcoin-URI was clicked. 	Clarify
1002	6077490	Rebased to fix a merge-conflict. 	Continuer
1002	6301788	Rebased and changed back the use of toggleHidden() into showNormalIfMinimized() as another pull takes care of this. Can we please merge this with #1437! 	Clarify
1002	6320950	Updated to fix a merge conflict. 	Continuer
1001	4757949	"Does the number of connections in the interface drop back to 0, or does it keep showing 8? "	ynQuestion
1000	4857228	Agreed.  And congrats on issue #1000 :-) 	Other
1000	4857664	"Cool, where is my price :-D? "	whQuestion
1000	5129375	"Ok, messages updated, it will just have to be pushed to transifex...  "	Reject
1000	5260402	"As the en master file get's fetched from Transifex if updated and this happened a few days ago, I close this one and start translating the german parts ;). "	Clarify
999	4748530	"The ram disk I'm using for ~/.bitcoin is 4000M, created like this:      $ sudo mount -t tmpfs -o size=4000M tmpfs .bitcoin  The 4000M is running out of space and causing the crash.  Does bitcoin not handle a disk full condition without segfaulting?  There are a lot of logfiles in the database folder"	Clarify
999	4748736	rc4 has the same issue; it just uses smaller logfiles:      chris@chris:~/.bitcoin/database$ ls | wc -l     187     chris@chris:~/.bitcoin/database$ ls -ltr | tail -5     -rw------- 1 chris chris 10000000 2012-03-27 21:47 log.0000000183     -rw------- 1 chris chris 10000000 2012-03-27 21:47 log.0000	Clarify
999	4764544	"Not a show-stopper for 0.6, but handling out-of-disk-space more gracefully is definitely high priority. Using less disk space during a full blockchain download is lower priority, in my opinion; most users will be running with tens or hundreds of gigabytes free, and if I recall correctly old database"	Clarify
999	4776201	"Some people run mining rigs from bootable USB sticks (to save having to buy a hard drive for each machine) and currently won't be able to download the blockchain unless they have a big USB stick, or keep quitting and restarting bitcoind to flush the logs.  If bitcoind was better about not using so m"	Clarify
999	4823978	"The problem is that it doesn't do a graceful shutdown when a fatal condition happens (such as out-of-diskspace). It spawns Shutdown() in a thread immediately, which causes the UI to crash. I'm working on a fix for this, which will likely go into 0.7.   "	Clarify
998	4749407	ACK 	Clarify
997	5097703	Can you try to remove/move everything from the data directory but wallet.dat? 	whQuestion
997	5098603	This is what I had to do in the end. It was the only thing that worked. After the block chain has downloaded things are now working again. 	Clarify
997	5100551	"There were quite big changes in the database parts of the code during the RC releases. This in combination with a hard chrash or corrupted blockchain file could have caused this. If this is working again, I guess you can close this @runeksvendsen. "	Clarify
997	5946525	"I'm running into this issue. My client said something about syncing problems and either my or other clients needed an update. So I ""git pull""ed, compiled. Still the same. Then I got a blockchain tar from http://eu1.bitcoincharts.com/blockchain/blockchain-2012-05-26.tar (re-downloading blockchain is "	Clarify
997	5947103	I experienced this error as well when updating to 0.6.2. I had to download the block chain from scratch to fix it. 	Statement
997	5947508	@molecular You will have to let the client re-download the chain or use -loadblock command to use an external file. 	Clarify
997	15633787	"Closing this, please comment if you are still experiencing this with the latest version and I'll reopen. "	Statement
995	4710272	ACK 	Clarify
995	4714741	"ACK, of course. But let's not break rc5 for it. "	Reject
995	4714842	100% agreed  ... only wanted to let you know :)! 	Clarify
994	4700940	"ACK.  Tested on my Mac via: 1. Run old code with luke's broken testnet/ dir : result: hang 2. Restore addr.dat with addr.dat.hang 3. Re-run with this patch : result : happy bitcoind  sipa: any idea why this fixes the issue, or what the issue was in the first place? "	Other
994	4701066	"No, I don't understand what's going on. I made bitcoind close the entire database environnement and create a new one when doing the rewrite, and it still blocks as soon as it tries to write a single value to the file. I have no idea what it is waiting for, but bdb calls pthread_cond_wait while there"	Clarify
992	4698668	"ACK, somehow I could have sworn this fix was added several months ago... "	Clarify
992	4700454	Modified to also remove the Program Files\Bitcoin\locale folder which is wxWidgets-only.  	Clarify
992	4700677	ACK 	Clarify
991	4698782	1. #986 is a dead-simple patch which solves a known and well-documented issue in boost::interprocesses.  What it does is clear and simple and there is no reason to avoid it.  2. This one has been discussed over and over again (we've had one pull request or another sitting around getting slow discuss	Clarify
991	4699532	"Re: URLs that do bad things, any special reason that you think this is suddenly an issue? You ACKed it first time and I don't think this aspect changed.   Given that there are no fatal bugs in boost::interprocess and the Qt URL parser, I think it's pretty unlikely there are security problems.  "	nAnswer
991	4700244	"1. #986 is ""a somewhat-hacky workaround"" to a boost bug. 2. It has been discussed over and over again, and, apparently, been essentially untested. 3. Adding even more things to test in the 5->final release process is not a good argument. 4. I have strong reservations about bitcoin: URIs, especially "	Clarify
991	4700729	"Since apparently URI's didn't work at all in windows releases so far, I really don't mind disabling URI's for now to get 0.6.0 out, and re-enable them as soon as they have actually been tested.  "	Clarify
991	4701165	I'm fine with disabling it for this release.  	Statement
991	4701187	"1. Somewhat hacky in the sense that it doesnt bother fixing the issues with its COM usage, but instead just works around broken COM code.  Just because its ""hacky"" doesnt mean its bad nor is it a reason to avoid it.  2. It was very thoroughly tested aside from the ipc issues (which only cropped up i"	Clarify
991	4701290	"Right, the MITM issue is completely separate, and isn't worse with embedded URLs than with embedded addresses in pages or mails. The only way to protect against that would be to sign the URLs, but that brings the the whole web-of-trust/chain-of-trust shebang into bitcoin and should be considered car"	Clarify
991	4701446	"If everyone thinks this needs disabled for 0.6, thats fine, though Im really tired of this getting kicked down the road, it was ready to go for 0.4... "	nAnswer
991	4701564	"There are certainly risks involved when using URI's to transfer information, but this does not ""worsen"" the situation if even a copy-pasted static base58 address can get intercepted and replaced by a trojan. I hope we can enable this feature quickly. I also don't mind using very boost-specific patch"	Clarify
990	4701384	Very good. ACK 	Clarify
990	4707036	ACK 	Clarify
989	7430748	"Well, there is clearly a user interest, if somebody paid for it, but it seems like this is subsumed by @gavinandresen 's recent miner/fee proposals.  No apparent dev review interest.  I looked over the patch, and technically appears to be correct.  I don't object to it, but I think we need a gavin a"	Clarify
989	7437363	I agree this seems redundant given @gavinandresen 's recent changes. 	Clarify
988	4691076	"Programs that jump to the foreground when they want your attention are terrible.  There are better ways; a blinking icon, a notification, etc. (remember that any js can send bitcoin urls) This is heavily dependent on the window environment so hopefully Qt has a function for it. "	Clarify
988	4693347	"If I click an bitcoin: URL and nothing happens that is simply not good ... what do you expect from clicking a mailto: link? From my side I would like my mail client startet as the foreground application, have the address filled in. How is your preference here?  How differ bitcoin: links from mailto:"	Clarify
988	4694372	"I just read that windows 7 does the right thing when activatewindow is called: blink the entry on the taskbar. No ""focus stealing"" is allowed. So this patch is fine. "	Clarify
988	4699990	ACK for 0.6 	Clarify
987	4686290	"You really need to stop calling things bugfixes that arent ;).  This is a code cleanliness change, no functional or user-visible changes are made. "	nAnswer
987	4686309	"I consider it a bug to say ""apple"" when it refers to a grapefruit :p "	Statement
987	4687460	I dont if its not user-facing and doesnt affect functionality. 	Reject
987	4902384	"Rebased, this should probably go into 0.6.1. "	nAnswer
987	4998387	"NACK,  I think while we are working on the URI handling and the IPC stuff, there should be no cosmetic changes to the code, that only renames stuff. After the main work is finished I'm fine with a rename to URI, but that's for sure a core dev vote :). "	Clarify
987	5001580	"No prob, as long as I'm allowed to say what I think ;). "	Clarify
986	4684399	It seems to be a (somewhat hacky) workaround to https://svn.boost.org/trac/boost/ticket/5392 	Statement
986	4684418	"Note that because /all/ of boost::interprocess is implemented in headers, this patch can be applied in contrib/gitian-descriptors/gitian-win32.yml or contrib/gitian-descriptors/boost-win32.yml I chose boost-win32.yml as it seemed more sane, but it does mean everyone ~~has~~ gets to rebuild boost "	Clarify
986	4685305	"Prove me wrong, isn't boost::interprocess a compiled lib? It would make sense to get that bug fixed with the boost guys and use a safe work-around until this is done and we can upgrade. "	nAnswer
986	4685806	"Though boost is a collection of compiled libs, as it turns out, boost::interprocess isnt.  If you look in the boost source at boost/interprocess you will notice that there are no files that end in .cpp, all of them are hpp (header files).  Nothing is compiled to a library in boost::interprocess.   A"	Clarify
986	4688059	"You are right, only true libs we have from boost are filesystem, program_options, system and thread. "	Reject
986	4688212	"I tested your fix and what it does (and what I should have observed before), is to create a directory in the boost_interprocess folder whose name is based on the Windows bootup time. This is broken in the official 1.47 and 1.49, too.  I suggest we combine your work here and my work (with ipcRecover("	Clarify
986	4688267	"Yea, I dont think the two are at all mutually exclusive.  If boost's interprocess stuff were to die with bitcoin (not sure how boost handles it, did I read that it was thrown in a service somewhere or something?) without the OS dying, the same issue could still appear that ipcRecover fixes.  That sa"	Clarify
986	4688406	"I updated it a few minutes ago, but I have no problem with getting it integreated into early 0.7. It were many many hours of debugging and trial and error, so it would be very nice, to include it :). "	Clarify
986	4858548	"The patch looks sane to me, the only thing we have to make sure is that it remains compatible with a range of boost releases (past and future...).  Also, I don't really like how this is limited to gitian builds. Is it impossible to do from qmake? "	nAnswer
986	4866016	"It would make sens to get this integrated with boost, so we would not have to handle it in the future. Are we allowed to modify the boost headers, so we can redistribute the fixed version of that file in i.e. the deps.zip for Windows? "	Emphasis
986	4890172	Update in the boost discussion: https://svn.boost.org/trac/boost/ticket/5392#comment:29 I will try the latest boost SVN version tomorrow / later. 	Clarify
986	5056197	See here what the boost dev had to say to your patch: https://svn.boost.org/trac/boost/ticket/5392#comment:29  I did some further tests and it seems with boost 1.49 it's sufficient to edit a hpp as per https://svn.boost.org/trac/boost/ticket/5392#comment:29 	Clarify
986	5056250	"Yea, I never said it was suitable for upstream inclusion.  It was written specifically to fix the issue in bitcoin. "	nAnswer
986	5056357	"No problem I only wanted to point out that we could achieve better IPC handling without a monkey-patch :). Your initial work was great and helped me a lot to progress further, so thanks! "	Clarify
986	5056410	Alright then. 	Statement
985	4683006	ACK 	Clarify
985	4683015	ACK :) 	Emotion
985	4683034	ACK 	Clarify
985	4683061	"how did click-on-URI even work, on windows? "	ynQuestion
985	4683082	"I would say it didn't ^^, how should it, the exe could never be found. "	Statement
985	4683087	"In its merged form, it never did. "	Statement
985	4683100	Seems like a good thing that I'm a Windows guy ;). 	Statement
984	4681823	Note that built-in seeds get a random age between 7 and 14 days ago. No reason why DNS seeds should be considered even older than that. 	Clarify
984	4682190	ACK 	Clarify
984	4686120	ACK 	Clarify
984	4686298	"ACK, sounds good to me. "	Statement
983	4681068	"Every code cleanup is a good thing, I'm with you! "	Emphasis
983	4681788	EOM = end of message? 	ynQuestion
983	4681812	ACK 	Clarify
983	4681893	"@sipa yes, as in  ""the title says it all"" :) "	Emphasis
982	4695837	Is this reproducible?  Are you running git-head or next-test? Anything special or weird about the addr.dat?   	Clarify
982	4695970	I can reproduce with both master and next-test by copying the addr.dat to my testnet dir. I don't know what caused whatever is in that addr.dat triggering this. 	Reject
982	4696043	I can't reproduce it on master with luke's addr.dat file. 	Reject
982	4696081	Interesting. I'd be willing to share my entire testnet dir with other devs (though not the general public). 	Clarify
982	4696174	"Wallet and block index are only loaded after the point that caused the backtrace above. Can you still reproduce with empty database/ dir and __db* files? If so, wallet.dat and blkindex.dat should not matter. "	Clarify
982	4766163	New reports: https://bitcointalk.org/index.php?topic=74447.0 and twmz in IRC.  	Statement
981	4674512	"If its trying to open a new instance, there is some issue with the build that you are running's handling of the IPC stuff.  Is this a custom build or a released one?  Does the Win-Installer register a protocol handler? <-- Yes "	Emphasis
981	4674624	"I'm talking about the official 0.6 RC4 build.  Can you point me to the code or the .reg file that is used by the installer version for creating the protocol handler. It could well be, that my manual aproach (see above) is not perfect, as I took a Mozilla How-To as information source. "	Clarify
981	4682739	See https://github.com/bitcoin/bitcoin/blob/master/share/setup.nsi#L97 	System
981	4682793	"Well, that one does a protocol registration for bitcoin.exe? Is Bitcoin-Qt.exe called bitcoin.exe in the Win-Installer-package? If not, that should not work ... "	ynQuestion
981	4682988	"Heh, wow thats out of date, see #985 "	Other
981	4683097	"That was a fast fix, nice!  Is the difference between open a new instance and using the current one this here: bitcoin-qt.exe ""$$1"" vs. bitcoin-qt.exe ""%1""? "	Other
981	4683182	"No, currently the whole boost::interprocess IPC stuff isnt working at all, Im looking into it (because it used to work...) "	nAnswer
981	4683887	Was that a statement for official 0.6 RC4 or has it sth. to do with the #956 issue and my fix for it? 	Continuer
981	4683980	It appears to be a bug in boost (affecting 0.6rc4 and probably all 0.6rcs). Note that it causes both this issue and #956 	Clarify
981	4684113	"Can you give some more details to me / us?  I have the impression, that Bitcoin-Qt on Windows needs to be a single instance application in order to get URL handling working (again). Only one application can be registered and is listed in the registry, now lets say 2 clients are running with differen"	Clarify
981	4695081	Is there any documentation in which format websites should use bitcoin: links or which parameters in the URL are allowed? 	ynQuestion
981	4695655	https://en.bitcoin.it/wiki/BIP_0021 	Statement
981	4749812	"I close this for now, as I'm currently working on that part of the code and the initial questions got answered :). "	nAnswer
980	4669389	How does bitcoin-qt cope if you start a second instance which runs this patch (ie a testnet one and a mainnet one at the same time)? 	Clarify
980	4669552	"@TheBlueMatt I will have to try this ... never used testnet before (does this work in the default and same data-dir?). But I have an idea if it causes problems in the current state. Perhaps I could add an ""testnet"" string to the message_queue name, which is now ""BitcoinURL"". Is there a utility funct"	Clarify
980	4669880	"Adding a testnet string doesnt fix the problem, there are also valid uses for opening two bitcoin-qt.exes on mainnet at the same time (using different datadirs and ports). "	Clarify
980	4670034	"@TheBlueMatt I will do some tests on this tomorrow. I don't even know if there are issues with your mentioned case at all, but thanks for your input :)! "	Emphasis
980	4670756	"1) can you rebase this into one commit? (15 is a bit excessive for a bug fix...) 2) there seem to be some coding style errors and unneccesary code moves. 3) if this indeed fixes #956, nice! that was the last blocking bug for 0.6.0, afaik. "	Clarify
980	4672501	"@sipa What do you mean by coding style errors, would be nice if you can point me to them, so I can fix it. I only added so many commits, to get some kind of history, will rebase. "	Clarify
980	4672663	"Question on coding style, is it common to only use ex for exeption handling, no matter what type they are? If yes, I will revert that, too. And what about boost::interprocess::message_queue mq -> boost::interprocess::message_queue mqMessageQueue, good or bad? I'm asking, because in bitcoin.cpp it's "	Other
980	4672750	"But back to the test case ... as I currently can't compile Bitcoin-Qt with static libs, I'm not able to run 2 instanced at the same time. But I think this definately needs some further investigation and clarification!  So 2 instances with different ports and different data-dirs currently work on RC4"	Clarify
980	4672850	"So to summarize: If you start multiple instances, it will work, but the most recent instance will get the URLs?  That behavior is OK with me.   I don't think many people start multiple instances of bitcoin, and if they do, they generally have no use case involving a browser (more for servers etc...)"	Reject
980	4673669	"Okay, so the latest version is more friendly in terms of what is displayed in the debug.log.  stale message queue IS there and can be removed: ipcInit - boost interprocess exception #9: File already exists. ipcRecover - possible stale message queue found, trying to remove C:\ProgramData\boost_interp"	Clarify
980	4681883	"Since this is a workaround for a boost-specific windows-only problem, I have no problem with using undocumented and windows-only boost internals. You do need to make sure it keeps working on other systems though, so enclose the fix in #ifdef WIN32 / #else / #endif, and try to keep the windows-specif"	Clarify
980	4681991	"For now I will add the needed #ifdefs, so that the fix is activated only on Windows. After we are sure this works and breaks nothing, I will definately look into how I can write this in a platform independent way (new pull request and no blocking change ^^).  Oh and thanks for the ""using namespace"" "	Clarify
980	4682296	"It feels to me like this feature (click-to-open bitcoin: URIs) needs a re-think on Windows; poking boost::interprocess internals is a bad idea that we should avoid if at all possible.  For the 0.6 release, I'm inclined to disable click-to-open bitcoin: URIs on Windows entirely, and get a cleaner fix"	Clarify
980	4682454	Tell me the intended release date for 0.6 ... I'm trying to get a cleaner fix ready. 	Clarify
980	4682705	"Due to the massive list of changes since rc4, we really need to push an rc5 and give it a while to simmer before we can really release a 0.6 release (IMO).  In that case, I have no problem merging this and poking windows-only boost internals, as long as all the changes in here are within #ifdef WIN3"	nAnswer
980	4682826	"May I suggest the following, as this one has plenty of commits, I will rebase it into a single one with the current code here.  It could then be used in a possible RC5, but I would really like a dev to test a compilation and execution with Linux / Mac before, as I can't do this. During the testing p"	Clarify
980	4682864	"Don't worry, we won't merge it if it doesn't compile cleanly. "	Reject
980	4683134	"Last commit does not use any boost::interprocess internals, it works and removes stale message queues (tested this after I once more crashed / switched of my Windows machine to create a stale mq).  If an existing message queue is detected the first try is to remove it. If it's locked (i.e. by anothe"	Clarify
980	4684338	"An alternative to this that (should) work and also fixes #981 can be found at: https://github.com/TheBlueMatt/bitcoin/commit/1b327daeb510d91c065ea3610c4b5740c743fffe though its more of a hack since I really, really dont feel like diving into the win32 apis and figuring out whats going on in that ugl"	Clarify
980	4684387	@TheBlueMatt I compiled Bitcoin-Qt with boost 1.49 and that did NOT fix this bug. Is your commit a backport from boost > 1.47 to 1.47? 	ynQuestion
980	4684457	"No, that commit is something I wrote, afaict boost has not yet fixed the bug (though it was filed 12 months ago as https://svn.boost.org/trac/boost/ticket/5392 ) "	nAnswer
980	4696339	"I'm going to be the ""bad guy"" for this one and take the conservative route: lets get this fixed and thoroughly tested early in the 0.7 release, and disable bitcoin: URI handling on Windows for the 0.6 release.  "	Clarify
980	4696386	"Given #985, it seems URI's never worked on windows anyway... "	Emphasis
980	4696747	"The URI feature is little known, so perhaps the problem with URI handling in general was not observed, since no one ever used it on Windows (i.e. because currently there are very few links out in the internet).  @gavinandresen I'm fine with 0.7 ... you would only be the bad guy, if you said that cod"	Clarify
980	4703048	"Would the main devs prefer a rebase now, so that it's a single commit or after it's discussed, tested and finished? "	Statement
980	4713076	Rebased with current master and fixed up a little git mess I created ... 	Clarify
980	4831547	"Doh, this one seems completely obsolete in the light of my current work on the IPC server and URI-handling code. It's a pain in Windows to use a ""file"" for doing IPC communication it seems (at least when things go wrong ^^). There a severe handling problems with stale / wrong mq files and the combin"	Clarify
980	4865795	Closed! 	Emphasis
979	4654690	"NACK  I'm fine with sending the output somewhere else, but keep it behind a #define please. It produces huge amounts of output, to the point of slowing down the UI considerably.  "	Clarify
979	4671291	"Hmm, didn't seem like that much to me... just about once per AddToWallet, right? "	Reject
979	4672181	"Every time the timer runs, at least... "	nAnswer
979	5585453	"nak'd, agreed, closing "	Statement
979	5586624	Note that #1205 adds debug logging for UI updates (but not as verbose as to flood the log).  	Clarify
978	4650910	Does listtransactions show it? Or did you start without -server? 	whQuestion
978	4650974	"Yes, listtransactions shows it. "	yAnswer
978	4651652	"    (gdb) printf ""%d\n"", pwalletMain->vWalletUpdated.empty()     Program received signal SIGSEGV, Segmentation fault.  :(  Starting Bitcoin-Qt again shows it, I did *not* need to rescan.  Assuming QTimer works correctly, I think the problem must lie in TransactionTablePriv::updateWallet "	Clarify
978	4654591	DecomposeTransaction (and associated function showTransaction) decide whether transactions are visible or not in the UI:  https://github.com/bitcoin/bitcoin/blob/master/src/qt/transactionrecord.cpp  It might have something to do with the block chain depth check that happens there. Maybe if a coinbas	Clarify
978	4672185	Eligius payouts are coinbase transactions right?  	ynQuestion
978	4673747	"Right, though as I mentioned, I'm pretty sure I've seen this occur with non-generation too. "	nAnswer
978	4680487	"If you don't trust the QTimer you may be interested in this commit in my sandbox, it removes the timers and updates the transaction list / address book when asked to by the core. Also fixes the problem that address created through rpc don't appear in the ui.  https://github.com/laanwj/bitcoin/commit"	Clarify
978	5710476	"This should be solved by #1205, which allows for re-visiting transaction visibility. Mined transactions will become visible after they reach block depth 2.  "	Other
978	5710675	They should be visible at depth 1...? 	Statement
978	5710800	Maybe. But I haven't changed that part from the Satoshi client. 	Reject
978	5710843	"Uh, you're right... its <2, not <=2, see  https://github.com/bitcoin/bitcoin/blob/master/src/qt/transactionrecord.cpp#L22  "	Other
978	7842892	Closing this issue; the wallet update code has been overhauled and this should no longer happen (and if it happens we have useful debug.log output).  	Clarify
977	4680761	@luke-jr should probably update the version string 	Clarify
977	4684718	Are you sure you're running 0.5.3.1? 	whQuestion
977	4684754	Is it possible you are still running 0.4.0? Bitcoin-Qt doesn't delete the old wxBitcoin client... 	ynQuestion
977	4684761	"Actually, 0.5.3.1 does not have a ""Help/About"" menu, only a ""Help/About Bitcoin-Qt"" menu... "	nAnswer
977	4685478	I am using 0.5.3.1. I downloaded the Windows binary installer from the bitcoin website and upgraded my earlier version 0.5.1 which also reported 0.4.0-Beta. And yes there is a Help>About on the main menu on the main screen. Here is exactly what it says:  Bitcoin version 0.4.0-beta Copyright c bitcoi	Clarify
977	4685508	"If the menu entry is called ""About"", and not ""About Bitcoin-Qt"", you are most certainly running a 0.4.x version.  Probably the old binary (bitcoin.exe) was not removed when you upgraded to a newer one (where the binary is called bitcoin-qt.exe), and you still have shortcuts to the old one? "	Clarify
977	4685661	"sipa:  You are right! The shortcut was wrong, pointing to bitcoin.exe. And there is a bitcion.exe still there in addition to the bitcoin-qt.exe. So does this still qualify as a bug? Since the installer did not correctly delete the old exe and update the shortcuts?? :-D "	Emphasis
977	4685674	Is there any reason that I should not delete the old bitcoin.exe under c:\Program Files\bitcoin\? 	ynQuestion
977	4685702	"Also, seems like the olde UI provided more useful information about connections/transaction/#BTC all on one page than the new UI does. :-| "	Other
977	4686284	"I thought that bug was fixed, though now that I look at setup.nsi, it doesnt look like it... :(  Is there any reason that I should not delete the old bitcoin.exe under c:\Program Files\bitcoin\? <-- no  Also, seems like the olde UI provided more useful information about connections/transaction/#BTC "	Clarify
977	4695908	We need to teach the 0.6 setup.nsi to remove the old wx .exe and shortcuts.  	Clarify
977	4703123	"@TheBlueMatt For the new GUI, is it possible to make the last bar in the ""connection-quality"" symbol green ... I did never understand, why it's more like yellow (and am no graphics artist ^^). "	Clarify
977	4766116	"The 0.6rc5 setup.nsi removes the old wx .exe, and shortcuts are overwritten, so this is fixed.  You can still shoot yourself in the foot if file permissions are wrong (e.g. install bitcoin as administrator, then install a new version without admin rights), but I think the answer to that is ""Don't do"	Clarify
976	4643564	"Were you able to reproduce the crash *before* this change? I guess not, because this wasn't fixed in Boost until 1.48! "	nAnswer
976	4643806	"I debugged that crash during RC2 and it's clearly related to boost interprocess, see: https://bitcointalk.org/index.php?topic=66887.msg779221#msg779221. As I have never been able to compile bitcoin with the supplied 1.43 libs with the current Qt SDK I could simply not try to reproduce the error in t"	Clarify
976	4644022	How about using the stock release builds to try reproducing it? 	whQuestion
976	4644167	"RC2 used the gitian build process, which uses Boost 1.47.  See contrib/gitian-descriptors/gitian-win32.yml  It WOULD be interesting to know if upgrading to the latest boost (1.49) fixes the problem. "	Clarify
976	4645469	@luke-jr: What you mean by stock release builds?  @gavinandresen Is there a place to download the pre-compiled boost libs which were used in RC2? I would like to make a file-compare. Another thing that is weird for me ... why is 1_43 in the bitcoin-qt.pro and why does it compile on Gitian without th	Clarify
976	4646248	"1.47: - switch off PC with running client, reboot, start client -> GUI freeze  1.49: - switch off PC with running client, reboot, start client -> GUI freeze  1.49 fixes one thing unrelated to Bitcoin on Windows, now C:\ProgramData\boost_interprocess\ is used instead of C:\ProgramData\boost_interproc"	Clarify
976	4650219	"Boost 1.48 has a very nice fix to remove that strange ""Select LastBootUpTime from Win32_OperatingSystem"" directory (https://svn.boost.org/trac/boost/ticket/5392) used by boost interprocess on Windows and 1.49 includes more bugfixes for interprocess (http://www.boost.org/users/history/version_1_49_0."	Clarify
976	4671286	I think this is missing the gitian changes to build/use the new version? 	ynQuestion
976	4672689	"Sorry no, the commits are current and mergeable. What do you mean by gitian changes? A link or hint would be nice, still treat me like a newb :D, I'm learning everyday. "	Clarify
976	4696225	"gitian is the deterministic build system we use, that sets up a virtual machine environment with known versions of EVERYTHING and then builds in such a way that bit-for-bit identical .exes come out of multiple developer's machines.  It means anybody can verify that we are using the source code we're"	Clarify
976	4696880	"To summarize, the bitcoin-qt.pro file I edited is only of interest for people who compile it for themselves, like I currently do. So a change to that file is of no benefit for official releases, but at least helps others in compiling, right? "	nAnswer
976	5052016	"Closed, I'm using a modified version of this for my local version, seems unneeded here. "	Statement
975	4637735	"ACK, planning ahead for future upgrades is something we need to get better at.  "	Clarify
974	4644305	"Thumbnail sketch of test plan:  + Create a wallet using 0.3.* version of bitcoin + Run 0.6, create a couple of new keys via getnewaddress RPC + Verify:  0.3.* version of bitcoin can still read wallet, version number in wallet is old  Repeat for 0.4 and an encrypted wallet.  + Run 0.6 with -walletupg"	Clarify
974	4650548	Results of test:  start with a 0.3.24 wallet start 0.6.0 (master + this pull) reported wallet version is low request 101 new addresses validateaddress reports that all are uncompressed  start 0.3.24 validateaddress reports that earlier address are 'ismine'  start with an encrypted 0.4.1 wallet start	Clarify
974	4666646	ACK 	Clarify
974	4669103	"Code-read ACK, though do we want to enable compression when we encrypt wallets in 0.6 or only encrypt and set minversion to 0.4? Though maybe I dont understand why we would want to do an ""explicit"" upgrade when encrypting.  Also, what, exactly, is meant by an ""explicit"" upgrade? "	Clarify
974	4669224	"Explicit upgrade = the user takes an action from which one can reasonably expect that it makes the wallet incompatible with older versions. Wallet encryption is such an action (and for now, the only one).  Also, when an upgrade is done, it always upgrades all the way, unless a parameter is passed to"	Clarify
974	4669243	ACK 	Clarify
974	4670803	"A summary of the policy implemented by this patch: * -upgradewallet and -upgradewallet=0 force an upgrade to the latest version * -upgradewallet=<version> allows (but does not force) upgrades up to version <version>, unless the user takes an explicit action that requires upgrading beyond <version>, "	Other
973	4631598	"I did test downloading from block 143XXX to current tip and didnt see any issues (nor even any warnings about send buffer being full, which makes sense given that this is downloading from one local node to another) "	Clarify
973	4632301	"Looks like fun stuff to play around with... building now.  Disagree with the minor AddAddress debug change.   Once a node is running, these messages are (a) minimal and (b) useful.  Better approach is to start separating messages at a much more fine grain, by introducing, e.g. fNetDebug (network-rel"	Clarify
973	4632595	"Everything short of the last commit is part of #771 and is just here because I had that branch checked out when I wrote this, plus I dont expect this to get merged until 0.7 anyway, so there is no point doing it on master. And agreed on the more finely controlled Debug messages, but AddAddress gets "	Clarify
973	4632709	@TheBlueMatt addrman has significantly less address messages (it adds groups of incoming addrs at once). 	Clarify
973	4632897	"Ah, well Ill go drop that commit from CBlockStore then. "	nAnswer
973	4640072	The strings explaining -maxreceivebuffer and -maxsendbuffer should be updated to reflect the change of the default size. 	Continuer
973	4642821	"Oops, good point...fixed. "	Clarify
973	4643828	"Helping and get helped, right ;). "	Clarify
973	4884899	"The ""don't disconnect"" part of this change worries me.  If an attacker can connect to you 100 times from 100 different IP addresses and then fill up the send buffer on each connection that's bad.  I suppose they could try to fill up your send buffer minus 1 byte now...  "	Clarify
973	4888418	"This patch doesnt change the difficulty of eating 10MB of any node's ram.  Also, I dont see much option in the way of disconnecting nodes for eating too much ram in buffers, we may end up just killing nodes behind 24.4k modems.  Or atleast I dont trust myself enough to write any kind of such code. "	Clarify
973	5589308	ACK 	Clarify
973	6162400	Rebased. 	System
973	6279391	"What if a node sends you a good new latest best block while the send buffer to that node is full, and then disconnects?  Probably not a real issue, and I certainly likes this approach more than the earlier hack to cut off the 500 block invs earlier when size exceeds the buffer. "	Clarify
973	6331904	ACK 	Clarify
973	6605208	ACK 	Clarify
972	4632334	Code appears correct.  It would be nice to see -checklevel documentation somewhere besides the git log. 	Clarify
972	4632366	"I've done a level-6 check on a full blockchain without any found errors (takes around 10 minutes in combination with fastblocks). Note that even level 6 does not do signature/script checking.  Also: agree, check levels should be documented. But where? "	Clarify
972	4637890	Where to document:  How about a doc/troubleshooting  file that describes how to use -checkblocks and -rescan and -dumpblock  and any other undocumented goodies hiding in the source code? 	whQuestion
972	4638691	"Benchmark, with blk0001.dat and blkindex.dat entirely in OS cache before bitcoind startup:  -checkblocks=10000 -checklevel=?: [1,3,10,20,20,27,45] seconds  -checkblocks=172354 -checklevel=?: [6,22,57,122,123,153,274] seconds  "	Other
972	4639165	"@gmaxwell What do you mean, only yell if it fails any of the harder tests? Failing the easier tests is probably much worse. "	Clarify
971	4627504	"Bleh, I bet boost has a const for this or something? :/ "	ynQuestion
971	4627598	Is this really needed? Using / should be perfectly fine on win32. All the OS functions can cope with slashes both ways.  	Clarify
971	4627806	"Will take a look here: http://www.boost.org/doc/libs/1_49_0/libs/filesystem/v3/doc/portability_guide.htm ... sorry if I'm a bit over-motivated to contribute, but at least it would be more aesthetic to have no mixed paths with \ and /. "	nAnswer
971	4627905	"Yes maybe boost has something like Python path.join(), that'd be nicer than having to special-case it all over the place :) "	Clarify
971	4628864	pathxyz.make_preferred() is what I need :). POSIX: no effect. Windows: convert slashes to backslashes.  http://www.boost.org/doc/libs/1_47_0/libs/filesystem/v3/doc/reference.html#path-make_preferred  Is there interest in me redoing my commit?  This would not work for strLogDir and strErrorFile as th	Statement
971	4633499	Updated to use the Boost filesystem::path.make_preferred() function and modified the change for the db dir and db.log. 	Clarify
971	4637909	NACK.  I hate #ifdefs.  	Statement
971	4639510	Updated to only use Boost filesystem::path and removed all of my former WIN32 #ifdefs! 	Emphasis
971	4639708	"Much better. Code changes are ok w/ me now, this ofc needs testing on all concerned platforms. "	Statement
971	4639884	"Right, needs testing, but at least path.string().c_str() were already used in the code and are verified to work. I can say on Windows it looks good, Wallet Backup works and paths in the debug.log are now Windows-style. "	Clarify
971	4659437	Rebased to keep pull request compatible :). 	Statement
971	4669277	"It seems to me this adds more function calls to more complicated functions to give os-specific path separators when, though an os may prefer one or another, it accepts both.  So it seems like this just slows down and complicates non-performance-critical code for absolutely no reason? "	Clarify
971	4669490	"On Linux or POSIX OSes make_preferred() does nothing, so no harm here. On Windows, I as a Windows user really hate Log-Files or whatever, which display a POSIX style file-path, even if it's supported. What would Linux users think, if there were backslashes in path-names ;)? "	Clarify
971	4672157	"Using OS-specific path separators is the right way; we've been ""lucky"" in that we only have to deal with two path separators, and one OS accepts both. Still it might be better not to rely on such (legacy) behavior.  And if we later want to show the paths in UI (for example, if we add the diagnostic "	Clarify
971	4673857	"I'm with @laanwj, as performance is really a not existing problem with 4 more make_preferred() calls out of any thread and the main-loop. "	nAnswer
971	4674370	"I said performance wasnt critical here, but its always nice to keep in the back of your mind when coding.  The issue I have is that it complicates the code further for very little gain, though I suppose if it ends up confusing users when it gets printed to debug.log, I suppose it really doesnt matte"	Clarify
971	4682186	ACK for 0.7 	Clarify
971	4703804	Rebase to current master. 	Statement
971	4858283	"Last commit is for bitcoinrpc.cpp, which now uses make_preferred(), too. I fixed some small coding style glitches, to match the changes to be even to the ones in db.cpp.  The ""boost/filesystem.hpp"" header is already included before the #ifdef USE_SSL, so I removed that. "	Clarify
970	4625799	Code-visual ACK. 	Clarify
970	4627839	"ACK, patch looks OK "	Accept
970	4632216	ACK 	Clarify
970	4632302	ACK 	Clarify
970	4632621	ACK 	Clarify
969	4625530	ACK. I love pulls that remove code... 	Statement
969	4632432	ACK 	Clarify
969	4633440	"Indeed, removing code always feels good "	Other
967	4612428	"Thanks for the correction. Phew, almost revealed that I'm posting this from the far future.  "	nAnswer
966	4608721	"Nak. :(   Logging IPs of identifying things by default would make it profitable to go around breaking into nodes in order to backtrace announcements.  However, I'd ack a non-default option to log IPs for blocks (and other things too) though.  "	Clarify
966	4608723	"NACK - this makes it valuable to collect debug.log from user's systems to trace transactions/blocks back to IP Addresses, which should not be trivial. "	Reject
966	4609317	NACK.  RE: making it optional:  maybe -blocknotify could optionally pass the IP into the notification method.  	Clarify
966	4617129	"Plenty of NAK's, including mine "	Statement
966	4617313	Since it seems people are getting the wrong impression from this pullreq...  It was proposed by a pool member who noticed the mystery jerk miner (making transactionless blocks) was relaying them through Eligius. This handy-but-simple change enabled me to get the real IP of the actual server making t	nAnswer
965	4608064	I could've sworn -Wextra included -Wformat.  Maybe it does on later versions of gcc....  	Clarify
965	4611411	ACK 	Clarify
964	4608148	ACK.  The one-line checkpointing change probably had the largest impact. 	nAnswer
964	4608240	"@jgarzik:  Time to load 133k blocks:  NF: 30.4 LC: 8.6 LC+NF: 5.1 LC+NF+NS: 5.0  LC = large cache (100 MiB cache, 100 MiB log, 10 MiB log buffer) NF = no flushing every 500 blocks NS = open database env with DB_TX_WRITE_NOSYNC  The larger db cache size has the largest impact.  "	Clarify
964	4611440	ACK. Nice! 	Statement
964	4617109	"Interesting.  I guess the large cache helps with all the lookups needed to validate each block.  Because we are looking up random hashes, there is likely zero cache locality from one lookup to the next. "	Clarify
964	4625729	ACK 	Clarify
964	4628947	"The only thing I'm worried about is that the longer interval between log flushes means more/larger log files, which may causes out of disk space errors. "	Clarify
963	4604239	"The transactions tab has a search function. That's what the filter row is for. It would be nice if the address tabs have it too though. Op 20 mrt. 2012 21:01 schreef ""buttcoin"" < reply@reply.github.com> het volgende:  > Would be nice to have a search function in the address book, transactions > and "	Other
963	4858706	This is a duplicate of #623 	Statement
962	4602241	I think you are confusing connections and *outbound* connections? 	ynQuestion
962	4602380	"Outbound connections are the real IP connections from the ""internet"" to my PC running the node, the value that is shown in Bitcoin-Qt if you hover the connection quality symbol.  I don't say the commit is perfect, perhaps it includes errors, but it does what I wrote above ;). "	Clarify
962	4602439	"Outbound connections is the number of connections your node makes to other nodes. Inbound connections is the number of connections your node receives. What bitcoin-qt shows in the hover text the sum of these two, and that is what -maxconnections limits. "	nAnswer
962	4602543	"MAX_OUTBOUND_CONNECTIONS was set to 8 in the code and I saw that a maximum of 8 TCP connections were established no matter, if -maxconnections was set > 8. So the number of 125 was not reached, right? With my changes this is fixed and the value of -maxconnections works. So perhaps I missunderstood s"	nAnswer
962	4602585	NACK: we don't want to increase the number of outbound connections past 8.  8 is plenty.  	ynQuestion
962	4602615	"If you do not get more than 8 connections, it means that you don't accept incoming connections (firewall issue, typically).  -maxconnections is not supposed to change the number of outbound connections (you don't need more than 8, and the number of nodes that accept connections is limited, so we sho"	Clarify
962	4602809	"Seems I missunderstood something, but perhaps someone can explain to me, why I only see a max. of 8 ""active connections to Bitcoin network"" in the client and why this changes with my commit and why there is a default of 125 in the GetArg-call for -maxconnections used in a comparison with nInbound? "	Statement
962	4602829	You'll see more if your internet connection properly accepts *inbound* connections... 	Clarify
962	4602889	"@luke-jr I see more, if this commit is active ... does ""active connections to Bitcoin network"" sum inbound and outbound as that could explain the numbers, because there are more outbound connections active. "	Clarify
962	4602979	"Switching to making it easy for people to make a ridiculous number of outbound connections (really, anything more than 8) just makes it easy to DoS the network.  Yea its not hard, but you have to atleast be able to compile bitcoin, whereas making it easy to do with just command line flags opens us u"	Clarify
962	4603021	"If you only see 8 connections, it is because you only have 8 outbound connections (which is limited to 8, and it should), and no incoming connections (because of a firewall issue).  Your patch changes the number of outgoing connections. Yes this will mean more total connections as well, but that is "	Clarify
962	4604876	"One thing, which was a faulty firewall configuration (instead of allowing 8333 as local port, I chose remote port) on my side is fixed by a reconfiguration (thanks for the hint).  And I now understand that only a maximum of 8 outbound connections is wanted per design of the client and to make it har"	Clarify
962	4608286	"@rebroad storage and network connections are two very different things. as more peers join the network, it actually becomes easier to broadcast your connection, not harder. "	Clarify
962	4611728	"My intention is to understand and learn, so I looked in https://en.bitcoin.it/wiki/Satoshi_Client_Node_Connectivity for an explanation and there it's stated: ""Outbound Limiting  ... The first thing the loop does is count the number of outbound connections, and if the maximum has been reached (8 or -"	Clarify
962	4612651	"@gruez Ok, so if the network became smaller then nodes might need more than 8 connections?  With my ISP I'm not allowed incoming connections. Is the max of 8 always going to be sufficient for nodes that will never be able to receive incoming connections?  "	Clarify
962	4622989	I let this one open for another day or two and then close it! Till then more comments are welcome :). 	Clarify
962	4627587	Can you please explain in words what this patch is supposed to do? I don't see any problem with the existing behaviour. 	ynQuestion
962	4628259	"The patch does not do, what it should do, because my FW didn't allow incoming connections from the outside, which limited the total number of connections for my node to 8 (and these were outbound). 8 is perfectly fine and I read in the Wiki that's defined and wanted behaviour.  What I don't understa"	Clarify
962	4628528	"Because if you specify -maxconnection=4, you do not want more than 4 connections, and a fortiori not more than 4 outgoing connections. "	Reject
962	4628697	It takes it's time but okay I see ... so 125 as default for in- and outbound connections with a hard limit of 8 for outbound and the possibility to lower this further. 	Clarify
961	4610750	Doesn't the current implementation work fine? I don't see why MTT should be blamed for the apparent bug in #855... 	Clarify
961	4611395	Seems I read a mail out of context.  Put this on hold for now :)  	Emphasis
960	4602284	ACK 	Clarify
960	4603141	ACK 	Clarify
960	4604126	ACK. 	Clarify
960	4605681	ACK 	Clarify
959	4611125	"Don't ask me how, but this makes bitcoind and Bitcoin-Qt both segfault at startup (after "" wallet                 9172ms"")... (I didn't try to interrupt anything) "	nAnswer
959	4611487	"Returning true from AppInit2 implies that initialization succeeded, it should return false when interrupted.  "	nAnswer
959	4612156	"@luke-jr - I'll assume you mean every time. Have you compared with the version my changes were based on? What does gdb show? My changes are so few, and especially if you're not exiting during the load, I struggle to believe it would be due to this change. "	Clarify
959	4612252	"@laanwj I initially coded it to return false but changed it to true as 1) it made the code smaller, 2) it's not failing, 3) would you normally expect a return code of false from any program that exited only because the user requested it?  In answer to 3, the answer is no, and so I believe and functi"	Clarify
959	4612359	"I couldn't get a useful backtrace out of gdb. git bisect blames this change, and indeed removing it fixes the problem. "	nAnswer
959	4612479	"How does this ""make the code smaller"" if you return true? The UI code will assume that initialization was successful and display the main window, right?  Edit: and yes, many programs return non-zero return status when forced to terminate by a signal. "	Clarify
959	4612480	@luke-jr What OS are you using?  P.S. @luke-jr  are you sure you're not some Manchurian candidate or perhaps a cylon without knowing it?! 	Emphasis
959	4612496	Gentoo GNU/Linux (32-bit x86 stable) 	Emotion
959	4612535	@laanwj No. But if LoadBlockIndex returns false then AppInit2 will display an error without additional code. 	Continuer
959	4612540	"@luke-jr Ok, so how would you code it to allow it to be killed during the block index load? "	whQuestion
959	4612547	I don't see anything wrong with the way you did it. Maybe when I'm more awake I can be of more help tracking down the segfault. 	Clarify
959	4612561	"I'm not saying that LoadBlockIndex should return false in this case, but AppInit2 should.   See `src/qt/bitcoin.cpp`. If AppInit2 returns true, it will spin up the UI.  "	Reject
959	4612615	Though this shows the limitations of using boolean return values to signify conditions more than anything else :-)   	Clarify
959	4625693	"@laanwj - ah, so it does. Thanks, I will change this. I'm currently debugging to find the cause of the SIGSEGV @luke-jr mentioned. "	Clarify
959	4629590	"ok. There was a bug, which I've fixed with the fixup. This was also the cause of the SEGV initially reported by @luke-jr. Thanks Luke! "	Emphasis
959	4704027	"Hi @luke-jr, would you be willing to ACK this please to confirm that the issue you found has been resolved please? "	Clarify
959	4950953	"ACK on the changes. The direct ""return true"" from AppInit worried me, but the only thing necessary is shutting down the database environment, which happens automatically anyway.  Can you rebase this into one commit though? "	Clarify
959	5181524	ACK assuming luke's issue isn't an issue.  	Clarify
959	5185544	"Seems sane, though it would be nice if the two commits were combined into a single one, before it hits upstream. "	Clarify
959	5185549	"It seems to be in the next-test that I've been using regularly for a week now, so it's probably safe.  I'd want to test it out specifically before I give it an ""ACK"" myself, but don't wait on me. "	Clarify
959	5188125	"sorry I've not combined these two changes into one. If someone can tell me the git commands to do it, I'd be happy to oblige. :-s "	Clarify
959	5188550	"go to your working directory, checkout this branch (""git checkout LoadBlockIndexKillable""), fetch upstream (""git fetch upstream""), rebase against master (""git rebase -i upstream/master""), you should see an editor now with two commits listed, change the ""pick"" of the second on to ""fixup"" (meaning tha"	Clarify
959	5196553	"Do a ""git reset --hard"" in advance. This will throw away any local changes you may have made in the current branch. If you don't want that, commit them first. If you want to chat about it, come to #bitcoin-dev on irc.freenode.org (using an IRC client, or on http://webchat.freenode.net/?channels=bitc"	Clarify
959	5196573	"ok, that worked.. (except I had to do a ""git stash"" before the rebase - I'm not sure why it said there were other changes...) "	Clarify
959	5207437	ACK 	Clarify
959	5215546	ACK 	Clarify
958	4590481	"You are right, bitcoin_cs_CZ.ts is completely untranslated and can be safely removed. "	Statement
958	4590625	I added a fix to my pull request: https://github.com/bitcoin/bitcoin/pull/954 	Clarify
955	4585726	"I should also note that I tried moving this wallet to 2 other Windows computers and still the same thing.  You guys have seen this issue before  https://github.com/bitcoin/bitcoin/issues/711  Also I tried Pywallet.py to dump the keys, but I'm getting ""wrong password"" on all the passwords tried "	Clarify
955	4586347	Which bitcoin version? 	whQuestion
955	4586819	"was using 0.4.0,  I updated to 0.5.3.1-beta and I'm still getting the crash. "	nAnswer
955	4600671	"What about 0.6 RC4, does this work? Are there any special characters in the password? "	whQuestion
955	4600768	"Thanks for the quick replies everyone.    I'll give 0.6 RC4 a go.   There are no special characters in the password.   The password is 7 alpha numeric characters,  the first 5 characters are letters with the first letter being uppercase and the last two characters are just numbers.     "	nAnswer
955	4600899	Same problem with 0.6 RC4 	Statement
955	4601014	"Too bad, is it the same error in the debug.log as before? "	Statement
955	4601630	"Yes same error in debug.log, "	yAnswer
955	4615712	"Can someone explain to  me what's happening here?    bool SetSecret(const CSecret& vchSecret, bool fCompressed = false)     {         EC_KEY_free(pkey);         pkey = EC_KEY_new_by_curve_name(NID_secp256k1);         if (pkey == NULL)             throw key_error(""CKey::SetSecret() : EC_KEY_new_by_cu"	Other
955	4616311	"That function initializes the EC_KEY object embedded in a CKey to have a given (32-byte) secret (CSecret). In your case that function is called with an empty CSecret, which shouldn't happen. "	Other
955	4619521	Is secret based on my password or a public key? 	ynQuestion
955	4630950	"I wish I understood this a bit more.  Sorry for all the simple questions, but I'm really curious about how this class works and where the corruption happened.  I used Fairdell HxCmp to do a byte comparison of   2 known good encrypted wallets and  then I compared a good encrypted wallet to my bad enc"	Clarify
955	4696012	"Consensus is this is a ""we don't know how it happened but somehow the bits on your disk are not what they should be"" problem that we can't reproduce.  I moved the priority from high to medium, and removed the 0.6.0 milestone from this issue, but I think the only fix for problems like these will be a"	Clarify
954	4573084	"By the way, this pull request does intentionally  NOT include a fix for https://github.com/bitcoin/bitcoin/issues/945, as that would mess up the translations for ""Wallet"", which needs some time to get re-translated. "	Clarify
954	4612014	ACK  	Clarify
953	4569926	Thanks @passy I fixed that one via another commit (via the same procedure as described above). 	Clarify
952	5483568	Working on this one now... 	Emphasis
951	4567753	There really is no reason to allow nodes to request all of the headers from where they are in the chain to our max block + 2000... 	nAnswer
951	4642329	ACK for 0.7.  Not high enough priority for 0.6 IMHO.  	Reject
951	4725470	Looks good to me 	Statement
950	4566337	"Note that this only fixes this issue for newly encrypted wallets. We do not rely on it for security however, so I do not think there is enough reason for reencrypting old keys. "	Clarify
950	4567003	ACK for 0.6. Update: after incrementing min-version. 	Clarify
950	4574612	"NACK for 0.6 : maybe pull early in 0.7 and thoroughly testing backwards/forwards compatibility, although if it creates yet another wallet.dat variation that is not backwards-compatible then I'm not sure the cost is worth the extra security benefit.  (cost is incompatibility with earlier releases and"	nAnswer
950	4575693	"I'm currently of no help coding wise, but I think an extra security benefit is not only nice to have, but a must. I agree it's a bad idea to include such a wallet-compatibility change at the end of the 0.6 development, but does wallet.dat variation really matter (i.e. is there a standard defined, wh"	Clarify
950	4576568	"Oops, this needs to increment wallet's min_version.  I don't see why there is any objection to making another wallet version that is non-backward-compatible: wallets in 0.6 are already not compatible with any previous versions, so this is just another change that makes them further incompatible.  In"	Clarify
950	4576885	"(edited)  @TheBlueMatt: oh yes, indeed, it needs a min_version update "	Accept
950	4998626	Is this sane now with the -walletupgrade thing? 	ynQuestion
950	5002796	I'll update this to be compatible with -upgradewallet. 	Statement
950	6279172	Closing this as it is outdated. Will reopen when redone properly. 	Statement
949	4565862	ACK for 0.7 	Clarify
949	4678114	This breaks in combination with (now merged) #969. 	Statement
949	4679931	"Yes, I'll rebase it when 0.6 is released  "	yAnswer
949	4879311	Can you rebase? 	ynQuestion
949	4916611	rebased  I suppose we can get this into 0.6.1?  	ynQuestion
948	4567008	ACK for 0.6 	Clarify
948	4574364	ACK 	Clarify
947	4574392	ACK 	Clarify
946	4598876	This should also take care of the issue for non-gitian users. 	Clarify
946	4598895	Can I get an ACK from Matt? 	Emphasis
946	4599409	ACK if @laanjw says it doesnt break anything when built on Win32. 	Clarify
946	4625505	Shouldn't we actually pass MINGW_THREAD_BUGFIX to qmake somewhere in the gitian file?  	nAnswer
946	4625594	"Its on by default, so it doesnt matter... "	Emphasis
946	4626370	    QMAKE_LIBS_QT_ENTRY -= -lmingw32  This causes an undefined reference to Winmain@16 when building in Qt Creator in Windows.  Any specific reason why are you subtracting it? Is mingwthrd supposed to be a full replacement for mingw32? (I don't think so)  	Clarify
946	4626400	What if we add -lmingw32 onto the end of LIBS (after -lmingwthrd)? 	whQuestion
946	4626666	I've tried it. Same problem...  	Clarify
946	4626791	How about:      QMAKE_LIBS_QT_ENTRY -= -lmingw32     QMAKE_LIBS_QT_ENTRY += -lmingwthrd -lmingw32     DEFINES += _MT 	whQuestion
946	4627039	Also tried. Same problem.  Every time I add the `-= -lmingw32` line it fails...  	Clarify
946	4627330	"What link command is it trying to use, with the last 3 lines I posted? "	whQuestion
946	4627426	I've got a working one:      QMAKE_LIBS_QT_ENTRY -= -lmingw32 -lqtmain     QMAKE_LIBS_QT_ENTRY += -lmingwthrd -lmingw32 -lqtmain   	Statement
946	4627585	"Aha, great. Really too bad qmake doesn't have a prefix operator, though.  Can anyone test that this creates a secure build when cross-compiling? (Otherwise, I can do it when 0.4 rc is done building) "	nAnswer
946	4629356	"Found a way to do a prefix. @laanwj, please test on native Windows. I'm doing a cross-gitian build now. "	nAnswer
946	4630314	"ACK, the build @luke-jr gave me to test worked fine. "	Clarify
946	4642440	Rebase into one commit? And a final ACK from @laanwj ? 	whQuestion
946	4642560	Done 	Statement
946	4644731	"ACK, this works "	nAnswer
945	4554290	"Thanks for noticing. There isn't supposed to be HTML there in the first place, QT creator must have added it.  "	Reject
945	4554330	"No problem, even small glitches are worth to get discovered and fixed, to produce a ""perfect"" product :). Some other parts of the code contain HTML-tags for writing bold or to do a line break, is this supported and can be used in translations for text layout?  Example: https://github.com/bitcoin/bit"	Clarify
945	4554484	"Yes, it's fine to have &lt;b> or &lt;i> etc, but there should be no html/body headers, or font changes to fonts only present on one Linux distribution :)  The only problem with fixing this is that all translations have to be changed too.  "	Clarify
945	4554682	"There are 32 language files, so yes it's a bit work. But what would be the cleanest way to do this, update main file (english), do an lupdate, push to Transifex, let translators do their jobs? And how does the fixed string look like? I will update the german translation as soon as it's possible to d"	Clarify
945	4554704	"If we want translators to do it, we have to wait at least until after the final 0.6.0 release, otherwise ""Wallet"" will remain untranslated for a lot of languages in the coming release.  I'd prefer changing them all at once (either manually or with a script), but I don't have any experience with the "	Clarify
945	4554761	"I guess tcatm (Nils Schneider) could help, as I don't know how to proceed from here, too. Any idea how to point him to this issue ;)?  From the documentation:  Source file src/qt/locale/bitcoin_en.ts is a treated in a special way. It is used as the source for all other translations. Whenever a strin"	Clarify
945	4569968	"Well I think best solution would be really to do this after 0.6, to have a sufficient time window for all translations to get updated. "	Clarify
945	4749902	"Could someone set the milestone to 0.7 for this, as the word ""Wallet"" will need to get re-translated, which should be possible very early in the 0.7 development.  And someone needs to fix it, by removing the HTML part completely ... I could do that, but I'm not sure, about the font settings for this"	Clarify
945	4797550	"I'd still prefer one person to update all the translations in this case. It is a pretty trivial (even programmatic) operation, which will be the same for every language. Indeed, just strip the HTML so it says ""Wallet"". Let's not bother the translators with it, who might also get it wrong.  And yes t"	Clarify
945	4797742	"There is a font formatting used for ""Wallet"" (size 11 and it looks bold). This would add tags into overviewpage.ui instead of the HTML code. Is this okay or how is the default for setting that stuff for a label, if not in the designer. "	Clarify
945	5525708	"As #945 got merged, we now need to update the en master file in our master branch. "	Statement
945	5651019	Fixed and the new master file containing this change is in Transifex -> close! 	Emphasis
943	5525687	Merged -> Fixed -> Close 	Other
942	4550498	I think this has basically missed the window under which it can be included in rc4 without further delay. But I don't see any issue in pulling translation fixes any time before final release. 	Clarify
942	4550557	"Well the fix is a rather small one, so that should be no problem if it's in the final release. Is it okay to open a pull request only for a specific language? I can help with the german one and that's what I 'm trying  to do :). "	nAnswer
942	4552404	Please use transifex for translations! It's not easily possible to merge changes to transifex so they will get overwritten the next time transifex is merged to git. 	Reject
942	4552728	"I downloaded the Transifex translation after I made tha changes there  and used that file in the commit, so everything is okay.  Am 17.03.2012 08:22, schrieb Nils Schneider: > Please use transifex for translations! It's not easily possible to merge changes to transifex so they will get overwritten t"	Clarify
941	4540319	ACK : and I agree with removing it (either completely or for Linux/Mac) if it still doesn't work.  	Clarify
940	4552836	"There are even more strings missing in Transifex, for example the one which explains usage of the sign message dialog is still in english in RC4 :-(. And I saw that the Cancel buttons, or Yes / No dialog boxes are not translated either ... so perhaps a developer can do an ""lupdate"" and push the curr"	Clarify
940	4553979	"A ""bitcoin-qt.exe -?"" on Windows reveals even more untranslated and currently untranslatable strings. Does it help if I list all strings I find here or shall I wait for an developer who can do an ""lupdate"" ;)? "	Clarify
940	4571643	"So I figured out how to do an lupdate on Windows, I installed the latest Qt SDK and this includes an Qt command-line, where lupdate can be run.  I used ""lupdate -no-obsolete C:\Users\%USERNAME%\bitcoin\bitcoin-qt.pro"", which uses the path to my local repo. I checked the ts-files, they got updated an"	Clarify
940	4571681	The updated ts file should be merged to github. Transifex will pick it up from there. 	Statement
940	4571944	"So only the bitcoin_en.ts needs to be merged to github and Transifex will then offer the new / updated strings for the other languages or should the commit include all *.ts files (lupdate updated all of them)? I will be glad to create the commit for the bitcoin_en.ts file, but to not create a mess ("	Clarify
940	4572775	Will create a pull request for this -> closed! 	Emphasis
939	4516634	"This should be solved on master (with the ""yet another minimize to tray"" commit). We went through various iterations however it should now be OK on all platforms. "	Clarify
939	4864664	Closing this since it's fixed in 0.6.0. 	Statement
938	4513836	"~~Nevermind, Ive solved the problem.~~ Well, OK maybe not quite, but I am getting closer. "	nAnswer
938	4516673	"If we're going to disable it, please add an error message, don't ignore the flag silently. "	Reject
938	4521317	Done. 	Statement
938	4545513	Changed to fix the problem itself. 	Clarify
938	4545527	ACK.  	Clarify
937	4499372	"Do we need the ""static for source tarballs?""  Could we just create releases using:      make BUILD_ID=$(git describe) USE_UPNP=1 ... etc  ... have version.h do: #ifndef BUILD_ID #define BUILD_ID unknown #endif (then use #BUILD_ID in the About/getinfo information)  "	Clarify
937	4509066	"Hmm, if we consistently change CLIENT_VERSION for all releases and release candidates, that would suffice. Otherwise, I don't think it's so hard to make it generate/include that file. "	Reject
937	5595167	"I think this was implemented? If so, we can close the issue.  "	Statement
936	4496980	What does @forrestv think?  	whQuestion
936	4500429	"I don't see any reason to separate submitblock, further cluttering the RPC interface, if the old way will continue to be supported. Other than that, looks good! "	Clarify
936	4500932	"I only kept the old way in there for backward compatibility. There's really no reason to use the same method for two different functions - it's like sending coins using getbalance. More importantly, ""getmemorypool(&lt;data&gt;)"" doesn't provide any way to communicate the reason for rejections. Durin"	Clarify
936	4501072	"Ah, I see. ACK then. "	Clarify
936	4574464	Too late in the 0.6 release cycle for a new RPC call. I think we should pull this early in the 0.7 release cycle so it gets lots of testing. 	Clarify
936	4951055	"I disagree with the term bugfix here, but ACK on the changes. "	nAnswer
936	5054319	ACK (and agree w/ sipa on term) 	Clarify
936	5673965	"Rewrote based on recent BIP 22 revisions, including longpolling support. "	Statement
936	5790996	Moved longpolling to #1355 	System
936	5791259	"ACK, now. "	Statement
936	5804140	"Eligius has been running this from block 179513 (56 blocks found) and EclipseMC from 180573 (11 blocks), totalling 67 valid blocks with no problems found. "	nAnswer
936	6053914	"Rebased, plus the changes to BIP 22 discussed on IRC (getmemorypool now requires exactly one argument, the parameters Object, but tolerates the old calling methods for compatibility)  Also stripped whitespace when parsing JSON Object in bitcoind-CLI-test-tool (while it could just convert input to Ob"	Clarify
936	6242406	"I've been trying to send a mail to the mailing list about BIP22, but it doesn't seem to come through.  As it's a bit too long to paste here, you can read it on https://gist.github.com/2909725. "	Clarify
936	6243007	"@sipa can you pipe that through ""fmt -72"" or similar?  Even 'raw' requires a horizontal scroll bar, which is unreadable in these modern times... "	Clarify
936	6243140	@jgarzik done 	Statement
936	6244868	"@sipa Hope this addresses everything:  1) Servers are not required to have access to the transaction database, and miners may wish to include transactions that have not been relayed on the main network. 2) The ""submit/hash"" mutation allows miners to replace actual transaction data with a reference, "	Clarify
936	6246562	"@luke-jr you didn't respond to the big-picture design question about whether you agree that BIP22 is over-complicated.  I agree with @sipa, I think there are way too many optional features, different ways of doing things, etc.   "	Clarify
936	6247705	"@gavinandresen ""Overcomplicated"" is relative based on what it needs to do. I think for the most part (there are exceptions, which I hope to simplify based on sipa's suggestions) BIP22 as it is can't get *too* much simpler with its given requirements. "	Clarify
936	6249907	"I guess @sipa and I think maybe you're throwing in too many requirements.  I say start simple, and if there is demand for a feature add it later. I'm OK with planning ahead with a design that allows stuff like adding/removing transactions, but that's a feature I've never heard ""dumb miners"" say they"	Clarify
936	6254547	"Optional things means *fewer* requirements, not many. ""Dumb miners"" don't care about any of this, they're fine using getwork with centralized pools. BIP22 is aimed at ""smart miners"" which want to (at least) audit the blocks they're working on to keep Bitcoin secure against potential poolop attacks. "	Clarify
936	6256660	"Updated BIP22 based on @sipa and @gavinandresen 's suggestions.  Unless there are problems with the subset of BIP22 supported by bitcoind (in this pull request), however, let's move BIP22 discussion back to the mailing list. I don't think it makes sense to hold up this pullrequest due to unrelated c"	Clarify
936	6274690	Rebased addressing Gavin's most recent comments. 	Reject
936	6299418	"One thing that still bothers me in the implementation is that is supports different decompositions for transactions. I understand the fee/sigops/dependencies/size meta-data is necessary, but do we really need to retain the origin (hex) encoding as well? Sure, dumb miners don't need this, but the pro"	Statement
936	6302079	"Smart miners don't necessarily have a transaction database available either. In fact, I'm not aware of a single getmemorypool client that has easy access to one right now. "	Reject
936	6302107	"Also, support for fetching transaction list as hashes exists for non-mining tools (I find it handy via the CLI as a human, to see what transactions are in the mempool). Support for fetching them as hex only is mainly a backward compatibility thing. "	Clarify
936	6331784	"@luke-jr What I was talking about in my latest comment here, is the availability of {""tx"" : ""hex""}, as {""tx"" : ""obj""} provides a strict superset of that. It would indeed mean breaking backward compatibility, indeed. "	Clarify
936	6620044	So... seems nobody has anything else that needs addressing - time to merge? 	Other
936	7430556	"Conditional NAK[1]:  pick one of DM_OBJ or DM_HEX, not both.  ACK, if one of those is removed.  [1] Red Hat's ""conditional NAK"" means that if the described condition disappears, then the NAK disappears.   "	Clarify
936	7460894	"Looks good to a quick review.  I'll have to apply the patch and read to be thorough.  Please edit the OP to indicate name change and consensus ""why?"" opinion.  "	Clarify
936	7461493	Will do as soon as we have a final on the new name. I emailed @gavinandresen so hopefully he'll provide input next time he's got email access. 	Clarify
936	7463196	"Encore on the name.  -- Gavin Andresen   On Aug 2, 2012, at 11:02 AM, Luke-Jr<reply@reply.github.com> wrote:  > Will do as soon as we have a final on the new name. I emailed @gavinandresen so hopefully he'll provide input next time he's got email access. >  > --- > Reply to this email directly or vi"	Other
936	7468702	"The following review comes from reading the code directly, and may or may not reflect a change you made.  Regardless, it is something that warranted a note.  1) is mode=foo the preferred form?  if yes, update help text to reflect this.  2) help text is missing description of 'time'  3) like 'getwork"	Clarify
936	7468835	"7) Submit mode should mimic getwork, and return true if the block is accepted, or false if not.   "	Clarify
936	7473067	"1) Neither form is necessarily preferred; what is important is that the code doesn't take a path if it's set to something unexpected.  2) 'time' was for backward compatibility: removed  3) Why should submissions be prevented if not connected? Right now, it's possible this node has no network connect"	Clarify
936	7698920	ACK 	Clarify
934	4455664	"Needs to be added to contirb/linux-download-config and contrib/win32-download-config as well. I would also say requiring more than 3/7 sigs would be nice, so maybe increase minimum_weight to 150 (4/7). "	Clarify
934	4455781	Like that? 	ynQuestion
934	4455955	"If you increase minimum_weight, sure.  Anyway, this absolutely needs a Gavin ACK. "	Clarify
934	4480457	ACK 	Clarify
934	4611782	"ACK, the more gitian signers the merrier (and I think we can reasonably trust luke-jr a bit by now :) )  "	Clarify
934	4651480	"Remade with my new 8192-bit PGP key (my old one was 1024-bit, which concerned some people); the old key has signed this new one. "	Clarify
934	4658316	http://xkcd.com/538/ 	System
934	4658392	@sipa: That one is so cool ^^. 	Statement
934	4658417	At least now they have to manage to drug+coerce me. Which means a significant chance I shoot them first. :p 	Clarify
934	4658481	"(I must admit, I have a 4096-bit RSA key...) "	nAnswer
932	4443382	"I suppose this also requires an increase of the network protocol number.  Looks good to me, otherwise. "	Statement
932	4443548	"Yes, I was assuming that would happen automatically once 0.7 starts development. "	yAnswer
932	4443649	"Since BIP14 was introduced, client versions and network versions are independent. In fact, the network version hasn't changed since. "	Statement
932	4463196	"Ive always kinda wondered why we have a ping command that doesnt do anything...does this need to be BIPified? It probably needs a version number bump, so I guess? "	Clarify
932	4469089	"Yeah the patch is incomplete. I'll add another commit soon. We need to send a nonce with outbound pings too. On Mar 12, 2012 11:25 PM, ""Matt Corallo"" < reply@reply.github.com> wrote:  > Ive always kinda wondered why we have a ping command that doesnt do > anything...does this need to be BIPified? It"	Other
932	4480352	How does it look now? 	whQuestion
932	4480729	"Given a post to the mailing list with no significant dissent, ack.  "	nAnswer
932	4487181	ACK for 0.7 	Clarify
932	4599773	"Not sure if this is the right place to ask, but what exactly is being pinged and by what? "	whQuestion
932	4600571	Your node by a remote node. 	Statement
932	4600614	How are nodes uniquely identified in order to know how to route the ping? 	whQuestion
932	4600741	"I'm sure it's not like an ICMP ping, but a ping via the normal ""message flow"" between nodes, so if nodes can talk to eachother this ping would work. I think of it as a heartbeat check-alive signal. "	Clarify
932	4601500	"Ok, so if it's not a ping, what is it? Is it a check-still-responding then? What would be the impact/harm of this change not happening? I think the answer to this last question should always be included by default in the description of any pull request, IMHO. "	Clarify
932	4601516	It checks whether the connection is alive. 	Clarify
932	4601657	"It's a feature, not a bug-fix, so it extends the nodes possibilities to interact with eachother. "	Reject
932	4601744	"I'm fine with clients having extra functionality added which isn't part of the core bitcoin protocol, but this change confuses me as there's an increase in the protocol number associated with it. I'd understood bitcoin wasn't supposed to be changed in ways that weren't part of the core functionality"	Clarify
932	4601972	"Bitcoin chose to implement its own network layer: the p2p protocol that's part of its functionality. I believe this was worth it, but it also means this layer must work well and be maintained, even if it's not its goal but only a medium to achieve it. As Mike noted, it would be useful to have a ping"	Clarify
932	4602441	"Well, I agree that if there's a ping, there ought to be a pong, otherwise, what does the ping alone achieve? I do agree that a connection needs a way to determine if it's still active/operatonal or taking up limited (file descriptors, memory, bandwidth, etc) space with no benefit. If this does that,"	Clarify
932	5055396	"ACK, but IMO this needs a BIP  "	nAnswer
932	5055439	@jgarzik: agree 	Accept
932	5068540	"That seems a little heavy, but alright:  https://en.bitcoin.it/wiki/BIP_0031 "	Statement
932	5073234	"I just created a fork that includes a few minor changes, in pull req #1081:  1) removes the actual protocol version increment.  IMO this should be external to the 'pong message' commit.  and under the principle of making code self-documenting...  2) use a named constant rather than a magic number fo"	Clarify
932	5073658	"1) Why should the version increment be in a different change to the actual new functionality? Doesn't that just increase the risk of confusion with people running betas/dev builds? It's a number, incrementing it is cheap :-)  2/3 - sounds good to me. "	Clarify
932	5585706	merged as #1081. 	System
931	4443411	ACK 	Clarify
931	4455597	ACK 	Clarify
931	4567176	ACK.  	Clarify
930	4463120	Ack. Passes my testnet reorg tests. 	System
929	4600235	"I even don't know, what Tonal means, never heard of it ... guess Google is my friend. "	Clarify
929	4600314	"http://books.google.com/books?id=aNYGAAAAYAAJ&printsec=frontcover https://en.bitcoin.it/wiki/Tonal_Bitcoin  Tonal Bitcoins provides another use-case for Bitcoin. Right now, Bitcoin appeals to libertarians, anarchists, and some other groups. By supporting more languages, Bitcoin extends to people who"	Other
929	4600475	"Okay, I propose this should be opt-in somehow, as I would not like it to be shown as a default. I think it would scare ""normal decimal users"" and make the GUI unnecessarily complex, which is bad for everyday users.  If ""Only available on dropdowns when a Tonal-compatible font is installed"" means I w"	Clarify
929	4600577	"I still don't understand why anyone would prefer it. Surely one unit is sufficient - should it start supporting binary, hexadecimal, pi-base, etc too? I think there needs to be a rationale for introducing this base over any others that also exist. "	Clarify
929	4600675	"As I said in the summary, TBC units are only available on dropdowns when a Tonal-compatible font is installed. Most (all?) operating systems don't include Tonal-compatible fonts by default, so likely only Tonal users would see it as an option.  rebroad, the book explains how decimal is flawed and wh"	Clarify
929	4600800	"As I said, if it don't bothers me or everyday users I'm fine with it from the technical side. "	nAnswer
929	4600861	"decimal vs tonal makes perfect sense in this forum, which is a forum discussing this change, which is a change directly related to decimal vs tonal. To avoid a discussion on decimal vs tonal is to avoid discussing this change, isn't it?  I've read the wikipedia article on tonal, which seems to be th"	Clarify
929	4601036	"The change isn't about forcing anyone to use either decimal or tonal, just extending the diversity to more people who already use tonal. Would you argue against using Spanish on a pullreq to add the Spanish translation?  You clearly haven't read the Tonal System book, or else you would know that it "	Clarify
929	4601132	"To compare ""tonal vs decimal"" to ""english vs all other languages"" is I suspect a vacuous truth. Of course other languages need to be supported - they are already in use. Bitcoin is worthwhile despite USD and Euro existing as it provides needed advantages. What advantages does this change provide? It"	Clarify
929	4601232	"Tonal and Dozenal are also already in use. Bitcoin is worthwhile to me *because* of its fitness for a tonal adaptation. The simple key advantage to Tonal over Decimal, is that Tonal is easier for humans to work with, since it is based on just 2s rather than 2 and 5 (which is unnatural to the human m"	Clarify
929	4601281	"Ok, I should have said ""of course, other languages are needed, not everyone speaks English"". Do you know anyone who doesn't understand decimal?  2 hands. 5 fingers. Very natural to the human mind. Is there something you're not telling us, Luke?!  And a better language analogy to this change would be"	Clarify
929	4601819	"I disagree 2 and 5 is less natural. I do agree using only 2 as a prime base may have advantages, and I'm a huge fan of using other number bases for fun.  That said, in my opinion changing the number base people count in, is harder than changing how people count dates, count time, expect red to mean "	Clarify
929	4601915	"It does add/improve the ""reasons people use Bitcoin instead of USD"" list, at the very least. I could just as well argue that any of the pulls trying to increase anonymity are more of a burden with no *legitimate* improvement. "	Clarify
929	4601957	"Luke, so far this change seems to be based on a number of untruths. The bitcoin wiki article on tonal had a number of inaccuracies, which I have edited to correct. e.g. it's not infinitely divisible, as bitcoins txs have limited decimal places, and it's not easier to use than decimal for most people"	Clarify
929	4602908	"Tonal numbers support infinite binary division. Decimal numbers support infinite decimal division. Does this surprise anyone? If we choose to change the protocol to more digits, we could divide the value of the base unit by a power of 2, or by a power of 10. You may argue that BTC is not a part of t"	Clarify
929	4603077	"The only sensible change to the Bitcoin amount protocol would be to make them a proper fraction instead of an integer, not to simply buy a few more years by multiplying by ten or a hundred. Given that, Bitcoin would be infinitely divisible in both decimal and tonal, and people could trade sizes like"	Clarify
929	4603210	"NACK - I understand its a nice feature, but until we atleast get more than one person who wants to see this merged, maintained, etc I really, really dont think it should be merged. "	Clarify
929	4603318	Fair enough. How about I just keep it in next-test until I can convince more Tonal users to switch to Bitcoin? ;) 	Clarify
928	4456692	"Ha, good fix.  Is there any specific reason to do it only on first setModel?  "	ynQuestion
928	4469197	"setModel appears to be the function used to give the dialog the user settings (as well as some other things). At present setModel only sets the model, nothing else. So, since this is a bug fix, I wanted to limit the scope of the change to avoid unexpected consequences.  I'm not actually familiar eno"	Clarify
928	4471687	Thanks for the explanation. I think it is safe to remove the precaution.  Background: A model change in QT implies that the widget state is reset according to the information in the new model. 	Clarify
928	4538673	"Based on your input, I've changed the fix to just simply just call the clear() function after setting the model. "	Clarify
928	4564304	Can you rebase this into one commit? 	ynQuestion
927	4434721	"This looks to only happen with the first send-coins dialog after restart. Additional recipient entries added with ""Add recipiient"" button and the single entry left-over after clicking ""Clear all"" button default to the correct unit. At least, this is what happens with bitcoin-qt 0.5.2. I suspect it c"	Clarify
927	4435275	I've created a pull request that contains a fix https://github.com/bitcoin/bitcoin/pull/928 	Clarify
927	6384967	"This can be closed, as it should be fixed on current master. "	Statement
927	6608428	Confirmed 	Statement
926	4434389	"Instead of a double-cast, can we say that the second argument to walletpassphrase is a 64-bit integer to begin with?  "	ynQuestion
926	4434447	Done and tested. 	Statement
926	4434453	ACK 	Clarify
926	4436860	Looks good. 	Statement
925	4434169	"I attempted to reproduce this (after jrmithdobbs mentioned it) by copying the chain to some isolated nodes, modifiying it so difficulty 1 was accepted and try to reorg the real chain onto short splits I created.  I was unsuccessful, though I'm not sure why.  One unexplained thing is that some people"	Clarify
924	6608439	Confirmed fixed 	System
923	4432890	Which version are you running? 	whQuestion
923	4432896	0.6.0 	Statement
923	4432944	0.6.0 isn't released yet. https://bitcointalk.org/index.php?topic=63165.msg788945#msg788945 	ynQuestion
923	4432958	oh.. i have beta version then...   0.6.0-Beta 	Statement
923	4433100	You have 0.6.0rc1. Upgrade to 0.6.0rc2. http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.0/test/   or downgrade to 0.5.2.  	Statement
923	4433328	oh thx.. i could not downgrade as it throwed me some c++ runtime error.. I upgraded to 0.6.2 and its fine.. why i could not continue with the 0.6.0 ?   	Statement
923	4433499	"0.6.0 and 0.6.2 do not exist.  You have been using a pre-release of 0.6.0 (the release candidate 1, rc1), which enabled BIP16 as of march 1st. BIP16 was however delayed until april first. This was incorporated in the second pre-release of 0.6.0 (rc2).  Someone mined a fake BIP16 transaction, which y"	Clarify
923	4433675	"is there any chances (theoretically), that ""bad"" people can generate (with luck) a wallet ID as mine and steal my coins? "	Other
923	4433702	"theoretically, yes.  in practice, if all people in the world would generate as many private keys per second as the total number of hash calculations the entire bitcoin network did in its entire history, it would take longer than the age of the universe before any reasonable chance for a double will "	Other
923	4433777	nope..just thinking if anyone has the chance to steal my 50k coins..  	Clarify
923	4998471	"@krishKM I'd not recommend selling your bitcoins. I think I understood your question to mean ""could someone have stolen my bitcoins as a result of continuing to use 0.6.0rc1"", right? The answer is practically, no, as sipa implied but didn't expressly state. Even had there been a fork that your clien"	Clarify
922	4428725	ne of my recent bugfixes changes an internal timer from seconds to milliseconds. The time you report seems to be 1000 times shorter in the future than expected. I'll have a look at it tomorrow. 	Clarify
921	4392262	"Are you running 0.6 release candidate 1?  If you are, please upgrade to release candidate 2.  If you can't upgrade for some reason, you need to run with the -paytoscripthashtime=1333238400  flag to get onto the right blockchain.  "	Reject
921	4400736	"I was running the latest git HEAD.  It's newer than rc2, and I was also using the ...hashtime flag, having been affected by the blockchain fork earlier in the day.  The issue I'm reporting is that the checkmark appears some time before the 99% progress bar disappears, giving conflicting information."	Clarify
921	5112222	It's still happening in git HEAD and official v0.6.0 release.  Screenshot:  ![](http://i40.tinypic.com/200po3p.png)  And:  ![](http://i43.tinypic.com/28sprv7.png) 	Other
921	5112460	"Perhaps this can be fixed by a small edit in bitcoingui.cpp.  Change line ~555 from: ""if(secs < 90*60)"" to ""if(secs < 90*60 && count == nTotalBlocks)""  Could you try it? "	Other
921	5116960	"I'll try it.  I need to let the blockchain advance with bitcoin-qt shut down so there's something to catch up, so it will take a while.  Your change looks right though.  The code was previously saying ""if we have a block that's less than 90 minutes old then were up to date"".  I often see the client "	Clarify
921	5118062	If you say my change works I'll create a small pull-request asap :). 	Clarify
921	5118854	"I tried it.  It works sometimes, but mostly it just leaves the spinning orange circle icon showing.  It turns out that typically, count is 175517 and nTotalBlocks is 168000.  nTotalBlocks is from GetNumBlocksOfPeers() in main.cpp:   return std::max(cPeerBlockCounts.median(), Checkpoints::GetTotalBlo"	Clarify
921	5122799	"It should be count >= nTotalBlocks. After the initial block chain download, count will exceed nTotalBlocks. "	Statement
921	5123768	"@laanwj The problem with that is that I often see nTotalBlocks = 168000 (the most recent checkpoint), so your proposed condition is true, and the green check mark is shown incorrectly.  See my comment 2 up from this one for details of why that happens.  Even if we fix the median code to ignore the 0"	Clarify
921	5123834	"If that's the solution, you can open the pull-request :). I'm off now, cya! "	Emphasis
921	5129007	@dooglus that's why we should check *both* secs < 90*60 and count >= nTotalBlocks.   You complaint was that the progress bar is shown with the green checkmark. The progress bar is only shown when count < nTotalBlocks.  So the proposed change will mean they are never shown at the same time.  We use t	Clarify
920	4384780	"The 'sipa' format (what an honor...), was extended (by me) to support compressed public keys. I wrote about it here: http://sourceforge.net/mailarchive/forum.php?thread_name=CAPg%2BsBhDFCjAn1tRRQhaudtqwsh4vcVbxzm%2BAA2OuFxN71fwUA%40mail.gmail.com&forum_name=bitcoin-development "	Clarify
919	4507384	"I worked on the german translation recently and it would be great to get it pulled into the next official release. One thing that is pretty hard to translate is this here: ""Be careful to only sign statement you agree to with full details, as phishing attacks may try to trick you into signing access "	Clarify
919	4509222	"@Diapolo: compare it to putting your signature (in ink) on a text document. The feature can be used to send a message to a merchant, while proving you are the one who paid him. It could also be used to get access to a site by signing some text they send you with a key that was used to pay them.  The"	Clarify
919	4509656	"Thanks sipa, I'm sure the current translation is much better than before for the signing feature now. I'll keep thinking about it and will update the translation as needed :). "	Clarify
919	4512214	"@tcatm usually does the pulls right before full releases (not maintenance releases like 0.5.2 and 0.5.3, though 0.5.1 was not a maintenance release).  Expect the new translations to show up in 0.6. "	Clarify
919	4514694	"I would like to propose a change for translation handling and think it would be a good idead to pull translations even into RC versions. It's easier to read (and update) a translation in the BC client itself, because only there you see the full context of the translation and it's meanings. "	Clarify
919	4514716	"@Diapolo: Are you willing to do that or create a script that will aid with fetching new translations, figuring out whether they are ready to be merged (i.e. not too many phrases left untranslated) and resolve conflicts? "	Clarify
919	4514789	"I did not want to offend anyone as I simply don't know how much work needs to be done to prepare the translations. But if it's achievable in a defined period of time, I would be glad to help (at least for the german translation). "	Clarify
919	4514863	The process is documented at https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md 	Statement
919	4516554	"I worked with Github before (I'm the diakgcn kernel writer), but I'm really no expert and don't want to mess up things, so as I said I can help but I can't take over that whole process. I had a hard time learning that git stuff and trying to resolve merge conflicts, which did not always work like it"	Clarify
919	4537038	"I read through https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md, but I can't start working with this. I'm on Windows and have no clue how to do an lupdate. I saw that there is a Transifex client for Windows, but that comes after the lupdate. I definately need more help, befo"	Clarify
919	4550535	"This one can be closed now, as the latest Transifex translations got merged into the project. At least I'm now able to contribute to the german translation and can create pull-requests for it, so that's a good starting point :). "	Clarify
919	4866790	The current translations are in 0.6 final so this can be closed. 	Statement
917	4333739	Will this compile on windows/OSX/...? 	ynQuestion
917	4334336	"It does compile on OS X.  I don't have a Windows build machine, but [Microsoft documentation suggests](http://technet.microsoft.com/en-us/library/bb463209.aspx) that they support the necessary APIs. "	Reject
917	4492403	"Microsoft Windows Services for UNIX != Windows. flockfile is not available on Windows (or at least not for MingW), and compiling it in next-test fails... "	Emphasis
917	4499630	"I'll update the pull request to only activate `flockfile` and `funlockfile` when `#ifndef WIN32`.  We already do that for signal handlers.  One could also try using `CreateMutex` and `WaitForSingleObject` to support similar locking semantics on Windows.  I don't have a Windows development machine, s"	Clarify
917	4499813	Nobody has a Windows development machine. Windows builds are produced with gitian on Ubuntu. 	Reject
917	4509778	I've updated the branch so that it's a noop on Windows 	Statement
917	5118533	Thanks to ee12c3d60c4bb7b25e06709e92344d2d8b2c581e the problem @luke-jr mentioned is no longer an issue.  I've updated the pull request accordingly. 	nAnswer
917	5133980	ACK. Planning to (user-optionally) merge this in Gentoo for logrotate support. 	Statement
917	5147444	Looks like a useful feature.  How does this interact with the log rotation / debug.log size-limiting inside bitcoin itself? I remember seeing some code for that.   	Clarify
917	5153522	"I don't know of any log rotation code inside bitcoin, but this code works well with the size limiting code.  `ShrinkDebugFile()` runs only during startup before debug.log is opened for writing. "	Clarify
917	5155722	"Ok, so that only runs at startup. That's good.  ACK  "	Other
917	5188036	"-1 from me. I think bitcoin should re-examine the bitcoin.conf file upon receiving a HUP. This, AFAIK is the more standard thing to happen on Unix, isn't it? "	nAnswer
917	5192355	The one does not exclude the other. And keep your -1/+1 out of here please.   	Reject
917	5194750	@laanwj You mean rotate the log file and re-parse bitcoin.conf? -0.99999 to that one ;) 	Clarify
917	5194960	Yes. That's what most daemons do AFAIK and is sane. Both reopening the log file and re-reading the config file are no-ops if nothing changed to the log file and configuration file respectively. 	Reject
917	5195477	"I think it makes more sense to have a config option to specify how many logs files to keep and how often to rotate them. Having the log file rotated every time you want to re-read the config would be not very useful IMHO, as there may be 10000 lines added since the last config change or only 10 line"	Clarify
917	5195693	"I see no reason at all to include log rotation into bitcoin itself.  There are excellent log rotation tools in common use. The only support they require of the application is reopening the log on a signal (like this pull request does). These have settings to rotate by size, by time, to autocompress "	Clarify
917	5196589	"@laanwj I'm not aware of many people using Windows XP (for example) that use log rotation tools, and even if they did, are the tools able to rotate the logs at exactly midnight so that entries from either side of midnight don't end up in the wrong log file? "	Clarify
917	5199882	I would recommend using SIGHUP for config file reloading and SIGUSR1 for logrotation. This is how [most daemons do it](http://stackoverflow.com/a/480499/194894) and how it should be used with [logrotate](https://fedorahosted.org/logrotate/). That's whats needed for the Gentoo ebuild logrotate use fl	Clarify
917	5200770	"All three examples in the [logrotate man page](http://linux.die.net/man/8/logrotate) use SIGHUP.  The default signal for [newsyslog](http://www.freebsd.org/cgi/man.cgi?query=newsyslog.conf&sektion=5) (used on OS X and other BSDs) is SIGHUP.  As best I can tell, that's the closest thing to a standard"	Clarify
917	5201171	"On the other hand, many prominent FOSS uses SIGUSR1: * apache  * mongodb * dovecot  And my expectation about signals and daemons is that SIGHUP reloads the config file and SIGUSR1 re-opens the log file. Since both actions are not really related to each other, this seems to be a saner approach. And t"	Clarify
917	5201255	"All those FOSS you just listed also use USR1 for reloading configs...  But can we just pick one, any one, or maybe even both, and not spend pages discussing the pros/cons of each? "	Clarify
917	5205273	IMHO configuration hot-reload isn't very useful... just my two satoshis... On the other hand log file reopening would be really nice to have 	Clarify
917	5209036	"@davout I agree that at present config reload isn't very useful. I'm tempted to suggest that SIGHUP be reserved for that possibly functionality in future though, and going with SIGUSR1 for the logfile rotation, if that's the agreed standard. e.g. how does ""tor"" do things?  I still think it's not unr"	Clarify
917	5209232	@rebroad it is unreasonable to reinvent the wheel. if you don't care about log rotation you'll be fine with the log size limit. if you do care you'll use logrotate. 	Reject
917	5215395	"@rebroad: We want to reduce the complexity of the core, not increase it. Anything that can (sanely) be handled by external utilities, should be. If your platform does not have these utilities, you can port them or switch platform.  Note that log rotation is only useful for servers and services, in w"	Clarify
917	5589197	"1) Reloading config file is very common daemon behavior 2) Reloading config file is very complex, and far beyond the scope of this pull request 3) Log rotation is beyond the scope of this pull request. 4) ACK this pull request, in concept.  See code comments for minor nits.  Let's get this merged. "	Clarify
917	5589263	"Code review comments:  1) Is freopen(3) guaranteed to always return orig_stream?   It seems unwise to discard the !NULL return value, if not downright incorrect.  2) The ""locking"" is definitely disappointing...  using file locks, which often depend on filesystem-specific behavior, due to lack of CRI"	Clarify
917	5593084	"I assumed that the point of using file locks is you can block the logger from your log rotation tool, so you don't lose log records during the transition? "	ynQuestion
917	5601794	"<blockquote> 1) Is freopen(3) guaranteed to always return orig_stream? </blockquote>  My understanding of the documentation on Linux and OS X, leads me to say yes.  <blockquote> I'm certain that boost has a thread locking primitive that may be statically initialized, and available immediately at sta"	Clarify
917	5717714	"1) Agreed, freopen(stream) returns stream.  ACK there.  2) As one would expect, boost::mutex is a proper C++ class, and is available properly initialized (unlocked) as soon as the class is instantiated.  Here is a non-threaded working example: https://gist.github.com/2702335 "	Clarify
917	5791758	Rebased and updated to use `boost::mutex` 	Statement
917	5793893	"Changes look good, except for one:  you made 'fileout' a global variable, when the existing, more narrowly-scoped 'static' declaration is preferred.  Might consider making that static mutex more narrowly scoped like 'fileout', too. "	Clarify
917	5797258	Good suggestions.  Updated. 	Statement
917	5797306	"ACK, looks perfect to me.  Thanks for your patience. "	Reject
916	4334022	Unable to reproduce with git master; which version is this? 	whQuestion
916	4334672	Are you using a different version of bitcoind to send the request than you are to receive the request? 	whQuestion
916	4338937	"The issue was posted by ""denisx"" in the chat - stupid me - forgot to ask the version...  I checked the code, and couldn't find the cause (well except if you call bitcoind with an older version and the second param of walletpassphrase is not set to type int first). I will see if I can catch him later"	Clarify
916	4348025	reported as solved by denisx on IRC 	Other
915	4302805	Updated: enable on testnet since februari 20. 	Clarify
914	4302598	"ACK. I think this is the ""least surprising behavior"" for -connect.  "	Statement
914	4302627	ACK 	Clarify
914	4303650	"IRC is already off by default, so there is no need to set-soft it off.  This patch will break some number of p2pool users (it would break me for example).  Anyone have any thoughts about what could be done about listening which is less aggressive than shutting it off completely? I'm coming up with n"	Clarify
914	4303682	"Binding the p2p listening socket to 127.0.0.1, perhaps instead of not listening at all?  EDIT: or rather, listening to the same addresses as RPC "	Clarify
914	4305010	"Dnsseed makes sense, but Im not sure I agree that nolisten (and, by extension IRC, UPnP) is the ""least surprising behavior"" when using -connect.  If nothing, it should be clearly stated in the help options. "	Clarify
914	4306209	Perhaps generally the nolisten behavior should be to bind only to 127.0.0.1(/same address as rpc)? 	Clarify
914	4307028	"I dont think that is the ""least surprising behavior"" either.  (really, we should have a -bind=ip:port) "	Statement
914	4308905	And a -allow=<netmask> as well? 	Other
914	4344968	"I'll defer to y'all to work this out; listening only for connections from localhost sounds interesting, although I'll just say I've regretted having subtle interactions between command-line arguments in the past and good documentation might be the best answer (either tell p2pool users to use -connec"	Clarify
914	4468843	"I agree that the subtle interactions between command-line arguments can be really confusing (both to developers and users) unless it would result in clearly broken or dangerous behaviour (for example, advertising your node address when not listening). We should have clear command-line flags for thes"	Clarify
914	5016883	"Also, we could support SOCKS4a or SOCKS5, and pass connection requests using domain names there, instead of resolving them ourselves. "	Clarify
914	5054386	"Disagree with listen=0 policy enforcement in this patch.  I have deployed configurations in the field where local mining nodes accept incoming connections from any node [on my local, firewalled network] but only -connect to specified hosts.  "	nAnswer
911	4245176	Tested on a testnet-in-a-box setup and a generate-nothing-but-orphans tool that I wrote (but won't release); I'm going to pull this for 0.6rc2 	Clarify
909	27689888	"Closing this, as it is a one-time issue that was never reproduced for two years. "	Statement
908	4199517	This is on purpose. But changing the icon (and making sure the context menu doesn't activate anymore) is fine with me too. Send a pull.  	Clarify
908	5098167	"This behavior changed back with commit 7cfbe1fee465e82ddbdc8ed17dfcce791bd765f5, closing issue "	nAnswer
907	4202601	ACK 	Clarify
906	4204865	"1. This doesn't respect FIRST_CLASS_MESSAGING=1 2. Instead of a new dialog/tab, perhaps it would make sense to just add a button to the Sign Message one (and rename it Messages or something)?  "	Clarify
906	4205620	"I tried modifying the existing window initially. It was ugly. The address field should be below the message when verifying, and having lots of hiding/showing components feels like a design problem to me - too much responsibility for a single UI class that really should be separated.  I treated 'FIRS"	Clarify
906	4205805	"How about moving the message to the top, then have the address and signature under that, with ""Sign"" and ""Verify"" buttons between the addr and sig textlines, with arrows of which direction it processes? "	whQuestion
906	4208524	That sounds pretty good to me. I'll mess around with it this evening. 	Clarify
906	4213714	I still don't like it. It means having the signature line edit writeable when you may just want to sign and have that generated...and it means having the address book and paste buttons enabled when you might just want to validate. It also means the order of elements on the page is not necessarily wh	Clarify
906	4408646	"While validation is more of an advanced tool, signing is basics. Perhaps a UI expert should provide input on how to best integrate them together. "	nAnswer
906	4433027	"Good, indeed it was asymmetric to have signing without verifying, this at least makes it complete.  IMO you don't have to do any extra work to make it play nice with FIRST_CLASS_MESSAGING. Only @luke-jr uses that option, let him do that :) "	Clarify
906	4455856	"Why do we have a FIRST_CLASS_MESSAGING if no one uses it, also, it needs a much more descriptive name, FIRST_CLASS_MESSAGING doesnt say anything about what it actually does. "	Other
906	4455958	No one uses 0.6 yet. It makes messaging first-class. 	Reject
906	4456613	"@TheBlueMatt we have FIRST_CLASS_MESSAGING because it was part of the signmessage pull. Luke-jr wanted to add signing messages as a separate tab, whereas according to us there are already too many tabs and we should reserve them for essential functionality. So he put it behind a qmake option, I gues"	Clarify
906	4456703	"Mmm, so maybe it should be SIGNMESSAGE_IN_TAB or something that actually describes what it does? "	Other
906	4457752	"BTW: If Samuel's GUI gets merged, the ""too many tabs"" excuse goes away, as there's plenty of room. "	Clarify
906	4458468	It's not about room (if you change the toolbars to icon-only you also have enough space). It's about not confusing users.  	Reject
906	5046101	Rebasing required. 	System
906	5047057	Rebased. 	System
906	5268343	"Can anyone post a screenshot, I would like to know where the button is loctated and how it looks currently? "	ynQuestion
906	5268463	I rebased and fixed a tiny issue due to a change in the CDataStream constructor. I also removed that HTML.  I'm trying to get a screen shot but wrestling with a new install of arch. 	nAnswer
906	5525112	"Great to have this, isn't symmetry a beautiful thing.  One suggestion: Please make this non-modal, like the other utility windows. (that'll also make testing easier as we can keep open a ""sign message"" and ""verify message"" window open at the same time) "	Clarify
906	5525639	"I would like to know, where in the menu this is placed, as I would suggest to have it below Sign message (in file) or in a to add tools menu. "	Statement
906	5650849	"The menu option is underneath 'Sign Message' in File, yes. I couldn't get a screenshot because the menu being shown disabled my print-screen key :(  I've rebased, and made the dialog non-modal. I also moved the call to 'setAttribute(Qt::WA_DeleteOnClose)' out of the QRCodeDialog to match how it is h"	Clarify
906	5651247	"Changed to QPlainTextEdit (on Diapolo's advice), found the button I'd lost to reset the checkboxes so the 'italic false' stuff should be gone too. "	Clarify
906	5651365	"You have to excuse me, as I'm kind of a perfectionist ^^, I even care about the smallest things ... sometimes this is bad, but more often it's a good thing :D. "	Clarify
906	5651435	"No, that's a very good thing. I'd rather end up with better software too :) "	nAnswer
905	4216347	ACK; I really like having unit tests for the coin selection algorithm. 	Clarify
905	5009670	"@gavinandresen I noticed that the shuffle was missing some time ago.  It has been added back in in #1017 which is my current branch for these changes, and includes the coincontrol and lesschange changes too.  I'll also add a new unit test for randomness too.  Do you need this pull request with just "	Clarify
905	5010163	"Notice that the coins are sorted into order before running the stochastic approximation:      // Solve subset sum by stochastic approximation     sort(vValue.rbegin(), vValue.rend());  and so the shuffle's work will be undone in the case you propose.  The only times the shuffle has any effect is if:"	Clarify
905	5010683	I've merged my latest changes to the unit tests from lesschange-v0.6.0 (#1017) back onto this branch.  There are also tests for sub-cent change suggested by Luke here: https://github.com/bitcoin/bitcoin/pull/898#issuecomment-4199968 which didn't get into this branch before. 	Clarify
905	6279094	Is this superceded or not? 	ynQuestion
905	6318602	Closing; I pulled 1416 which was an updated version.  	Clarify
903	4203253	"We're only as good as BDB; see here:  http://pybsddb.sourceforge.net/ref/transapp/reclimit.html  In particular:  ""it is important to select hardware that does not do partial writes and does not cache data writes (or does not return that the data has been written to stable storage until it has either"	Clarify
903	4204281	"I think the real problem is that in the end, bdb doesn't seem appropriate for end-user desktop systems... "	Reject
903	4205595	"Perhaps something like 'backupwallet <destination>' but for all data files would be useful.  I could write a crontab to copy the .bitcoin folder in the early hours of each morning, but there's no guarantee that the files I copy are in a consistent state.  'backupdata <destination-dir>"" could copy al"	Clarify
903	27689691	Closing this; automatic recovery is somewhat better now. 	Statement
902	4186331	ACK; it compiles at least; have not tried running it in windows 	Clarify
902	4216549	Seems to work under Wine. 	Clarify
901	4181759	"So we just need an strlen check before copying, as no meaningful value in APPDATA is longer than MAX_PATH? "	nAnswer
901	4181812	"Maybe we should strive to use safe C++ string functions everywhere, instead of archaic strcpy/strcat buffer manipulation.  Edit: especially in this case, as the function returns a std::string already.  Edit2: the rest of the function could be simplified too, to simply call SHGetSpecialFolderPathA, a"	Clarify
901	4220628	Fixed in #902. 	System
899	4175824	"In case compatibility with 0.6.0rc1 is not required, this code suffices:  >  if (strKey == ""addrProxy"") { CAddress addr; ssValue >> addr; addrProxy = addr; }  "	Other
899	4176482	ACK. 	Clarify
898	4176493	"Too big/dangerous a change for 0.6, I think.  It'd be really spiffy if there were unit tests for the SelectCoins code to test all the edge cases (I know they're not trivial to write, but maybe a little refactoring of SelectCoins would help).  "	Clarify
898	4184395	@gavinandresen I'd be happy to write some unit tests for SelectCoins but it seems to depend on the whole blockchain which isn't available to the unit tests.  Is that what you are referring to with the refactoring of SelectCoins?  I'm sure with a little help I could get this done. 	Clarify
898	4184773	"@dooglus : yes, off the top of my head something like splitting it into two methods, the first of which creates an array of pointers to available outputs (or maybe tuples of (output, nConfirmations, size) or something) and the second of which runs the actual ""figure out which outputs to use"" algorit"	Clarify
898	4186435	"@gavinandresen Is it acceptable to use a vector of pair&lt;nConfirmations,pair&lt;nSize,pair&lt;tx,output_number&gt; &gt; &gt; or is that too ugly? "	Other
898	4186577	"Tip: use COutPoint instead of pair(tx,output_number). But as soon as there is more than one argument you want to tie to it, I'd add a smallish class. "	Clarify
898	4192110	"@sipa COutPoint has a hash, rather than a transaction, whereas I already have the transactions.  I used a new smallish class anyway because it makes things tidier. "	Clarify
898	4199968	"I didn't see the test for this case: - Available outputs: 0.0005, 0.01, 1 - Desired amount: 1.0001 - Correct solution: 0.01, 1  In this case, the 0.0005 coin should never be chosen, because that would have 0.0004 BTC left over incurring a fee. "	Clarify
898	4200889	"@luke-jr Your ""correct solution"" adds up to 1.01.  Subtracting the desired amount leaves 0.0099.  That's sub-cent change, which we're trying to avoid.  Wouldn't it be better to chose all 3 coins, leaving 0.0104 change and no fee?  I guess you made a typo somewhere, but I can't work out what you mean"	Clarify
898	4201339	"Changing the desired amount to 0.999 gives a situation where we should leave the smallest coin.  I've added corresponding test cases, thanks. "	Clarify
898	6279079	"Is this pull request superceded or not? I think we want this change for sure, while there are still implementation issues with coin selections. "	Clarify
898	6279185	#1416 is the latest rebased iteration of this 	Statement
898	6331708	Merged under #1416. 	System
898	6336700	I don't see this (or coin control) in #1416. 	Clarify
898	7980120	"This fix still isn't merged, somehow.  The master branch is still doing this:      if (nTotalLower >= nTargetValue + CENT)         nTargetValue += CENT;  and consequently adds change when it isn't needed. "	Other
898	7990483	@dooglus  Can you explain why the test case passes?   https://github.com/bitcoin/bitcoin/blob/master/src/test/wallet_tests.cpp#L210  Can you suggest a test case that fails?  I suspect you have an unclean clone that has been merged 'nTargetValue +=' doesn't appear anywhere in the codebase as far as I	Clarify
898	7990533	I also can confirm that code does not exist in master... 	Reject
898	7990830	"This isn't a list, it's an issue. To remove yourself from notifications (nobody else can do it for you), do this: - Login to GitHub if necessary - Open https://github.com/bitcoin/bitcoin/pull/898 in your browser - Scroll all the way to the bottom - Where it says ""Watching thread"", click it and selec"	Clarify
898	8014365	You're right.  I was looking at a cached copy of master.  Apologies. 	Statement
896	4176192	"Looks good to me!  Note that this isn't exactly an attack on old nodes though. Unless it's increased recently, under half of all blocks mined are from P2SH nodes, which means that they'd probably be the ones that would be most affected by the Bitcoin network attempting to partition itself into old a"	Clarify
896	4176287	"ACK, nice fix.  "	Clarify
895	4176302	I'd really prefer that new JSON-RPC methods get discussed on bitcoin-development before turning into pull requests.  	Clarify
895	5589064	"Agreed.  Closing -- please propose new JSON-RPC methods on bitcoin-devel.  It definitely helps gauge acceptance and interest, as well as more fully specifying protocol and intent.  ""There has been some interest"" without URL references could mean anything, or nothing.  In particular, does the mining "	Clarify
894	4171352	ACK 	Clarify
894	4171360	btw: The bitcoin.conf issue will be fixed by pull #890 which moves ParseConfigFile with ParseParameters. 	Clarify
892	4199923	"User error on my part.  I made the change on my master branch which seemed to cause problems.  See above where it says:  ""dooglus merged commit da9ab62 into bitcoin:master from dooglus:master""  I don't have write access to bitcoin:master, so I don't know why it thinks I did that.  I opened a new pul"	Clarify
891	4160769	"Please ""merge"" this pull request to https://www.transifex.net/projects/p/bitcoin/ as translations are pulled from there. "	Clarify
891	4171384	"I suppose the bitcoin-qt.pro and bitcoin.qrc still have to be updated to include it, or do you take care of that when merging it from transifex? "	ynQuestion
891	4172851	"Translation fully imported into transifex so closing this.  laanwj: bitcoin-qt.pro automatically includes all TS files (by using wildcard: *.ts), but with bitcoin.qrc you are right, in last fetch from transifex this important update was missing (and still is). "	Clarify
890	4175328	Do we want this in 0.6.0 still? 	ynQuestion
890	4175425	"Hmm, as this has pretty significant changes, I think we should leave this for 0.7.0, and try it out a bit ourselves first.  "	Clarify
890	4176367	If (a rebased version of) this isn't pulled for 0.6 then another fix for #815 (UpNP settings don't stick) is needed-- trying to fix that bug is what led me to pull my hair out and decide the whole settings system needed to be overhauled.  	Clarify
890	4176470	"ok, in that case it's fine with me to add it for 0.6.0 already "	Statement
890	4197836	Included in #904 	yAnswer
889	4162790	"More research into what's going on:  boost::interprocess is busy-waiting (at low priority), because it is emulating Posix functionality. See the comment is in boost/interprocess/detail/workaround.hpp  :      //Mac Os X >= Leopard defines _POSIX_THREAD_PROCESS_SHARED but does not seems to work.  ... "	Clarify
886	5584934	Rebased 	Statement
886	5585156	Can you use enums instead of numbers to identify the several decompositions? 	ynQuestion
886	5586023	Reworked with enums. 	Statement
886	5588388	"Decodes of BIP16 transactions scriptsig are not useful and this needs some docs. (I wasted a fair bit trying to figure out why ""{'script':'hex'}"" wouldn't work, for lack of an example. No reason not to pull though.  "	nAnswer
884	4106364	ACK 	Clarify
883	4106222	"ACK, good idea. "	Accept
883	4994610	Is this safe or leaves it a possibility to get a manipulated chain somehow? 	ynQuestion
883	4994804	It processes the blocks found in the file exactly as if they were received via the network. 	Reject
883	5038200	Needs rebasing. Sipa broke everything using locks. >_< 	Other
881	4097227	Check out https://bitcointalk.org/index.php?topic=11331.0 	ynQuestion
881	4204732	"Were you using 0.6.0rc1? It had a bug that corrupted wallets when encrypting them. If so, nothing is lost. I can send you instructions to recover, if matt's way doesn't work out. "	Clarify
881	4211787	"hi sipa, i tried his method but didnt help. because my wallet is encrypted it doesnt want to recover/repair it. when i was doing his method i could see my privatkeys and transactions and even my account public keys. his methode gave me an error something like error restoring wallet. do you have any "	Clarify
881	4214361	"First, this will only work if you used the encrypt wallet function of 0.6.0rc1. Second, make a backup.  * Run: db4.8_dump -p wallet.dat >wallet.txt (to create a human readable wallet dump) * Open wallet.txt using your favorite text editor. * Search for lines starting with ""\03key"". There should only"	Clarify
881	4218734	"Hi sipa,  I'm windows user and im at work right now, hence this delayed response ; ) just installed Ubuntu and db4.8 utils..  got the human readable wallet.dat   im just confused now as I have only one \03key!\03,, and its [junk tail] been found in three different places. One its own \03key!\03 line"	Clarify
881	4219224	"I edited the instructions above a bit, as I realized it wasn't entirely safe. Could you try again?  PS: I've edited out a part of your paste above, as it contained a secret key. "	Clarify
881	4225437	":((( ive tried all of those you mentioned... somehow it doesn't want to load the wallet  i have deleted the 03key.. but ont the secret key junk, than deleted 04keypool it was arnd 100 lines.. i deleted those aswell.  still when i load the bitcoin it gives c++ distribution failed message..    this se"	Clarify
881	4225473	PS: i had two accounts/address on that wallet.. somehow I also had signed one of the address. can't remember how I did it. but the tool gave me an option to sign the address with my name.. so I did sign it with my name. than encrypted. than it has crashed.. 	Clarify
881	4225492	I can try; pieter.wuille@gmail.com 	Clarify
881	4226738	sent it.. 	Other
881	4227467	thank you very much SIPA.  your method working now ;) I forgot to use the correct version of bitcoin-tool ;) thank you so much...  	Clarify
880	4074353	"Yes, `-min` should probably hide the splash screen too.  "	yAnswer
880	4171483	Fixed 	System
879	4072494	"Adding -rt should be done only for Linux, I suppose? It's strange that we'd have to link against it directly, as we don't use `shm_open`/`shm_unlink` directly, it is at most Boost using it. "	Clarify
879	4072524	When trying to understand the change I found a link:   http://fedoraproject.org/wiki/UnderstandingDSOLinkChange that claims to explain it.  Hope that helps! 	Clarify
879	4072631	"The undefined symbol is referenced on line 374 of /usr/include/boost/interprocess/shared_memory_object.hpp, included by /usr/include/boost/interprocess/ipc/message_queue.hpp, included by bitcoin/src/qt/qtipcserver.cpp "	Statement
879	4072793	"Yes, that makes it fully clear. We must link to -lrt on Linux, as previously we were using it indirectly through some other lib and that's no longer allowed... "	nAnswer
879	4493004	On Fedora You fix help too. 	Continuer
879	4493025	"Is that some kind of a stack-based language?  Does changing ""LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX"" to ""LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX -lrt"" in bitcoin-qt.pro fix it on Fedora? "	Emphasis
879	4493085	Fixed now. 	Statement
877	4061347	Installing an older version of growl (1.2.2) seemed to fix this.  http://growl.info/downloads 	Clarify
877	4064069	We probably shouldnt depend on growl to be installed though... 	Clarify
877	4145019	"Could this have something to do with the USE_DBUS compilation option? I suspect that might make Bitcoin use Growl on the Mac to get Dbus-like functionality (for what, I'm not sure...).  And I might have (accidentally) compiled the 0.5.2 release with USE_DBUS=1.  "	Clarify
877	4204926	Well it doesn't depend on Growl - there is a trick in place which involves using AppleScript to call it and Bitcoin-Qt does check for Growl on startup.  You can easily fix this error by choosing the plain Growl.app (the GrowlHelperApp has been included into it). I could probably find out the Growl v	Clarify
877	4222328	"@p2k : I'd like to get this resolved before the final 0.6 release, or at least suggest a workaround in the release notes.  What do you mean by ""choosing the plain Growl.app"" ?  Choose where? "	Clarify
877	4256360	"@gavinandresen He means that right before the app crashes, it pops up a dialog box (http://cl.ly/2c0O0m0m3A090V2J2Y0R)  But it didn't work for me. I chose Growl.app but it still crashed. I haven't found a fix that isn't just ""install the old version of Growl"". "	Clarify
877	4451201	"Ok, I finally got some time for this. Can you please keep your old version of Growl and check for backwards-compatibility? Can't downgrade Growl on my office Mac.  https://github.com/p2k/bitcoin  EDIT: I'm not sure how to make a proper pull request now. If I try, 3 commits are listed: my old one abo"	Clarify
877	4600833	I cherry-picked p2k's commit after testing this on my 10.6.8 Mac first without and then with Growl 1.2.2.  	Clarify
874	4174593	"I don't get this. It can only come from:      text = tr(""%n second(s) ago"","""",secs);  However, this is a valid usage according to http://developer.qt.nokia.com/doc/qt-4.8/linguist-programmers.html .  And I can't reproduce the problem either...  Edit: Ah, this happens when secs is smaller than 0. Int"	Clarify
873	4084528	Added debug output in case a pre-209 version manages to connect. 	Statement
873	4107051	ACK; pull requests that remove code are my favorite kind of pull requests. 	Clarify
872	4044679	Tested on testnet:  REORGANIZE: Disconnected 11 blocks; 0000000236cea9d517ec..000000001b07f33c785b REORGANIZE: Connected 10 blocks; 0000000236cea9d517ec..000000000d726a10901f  	Clarify
872	4057558	"Might be a good idea to add a ""maxreorg"" to getinfo, since it can be an indicator of compromise? "	Statement
871	4059494	"My mistake, this was correct after all. "	Statement
869	4058815	ACK 	Clarify
865	4034458	"Delete of a CDB implies Close(), by the way. "	Statement
864	4047092	visual ACK 	Clarify
862	4033012	ACK 	Clarify
861	4033020	"I don't think it is a bug, but nevertheless it's a good idea to add a ""Send to"" action to the address book..  On a higher level: When you do ""Receive coins"" you get a list of addresses, but when you do ""Send coins"" you don't. It is asymmetric, which can be confusing. I haven't thought of a solution,"	Clarify
861	15832431	"@luke-jr That feature is now in the client (via context menu), can you please close the ticket :). "	nAnswer
861	17570796	@luke-jr ping @laanwj Perhaps you can close this issue now. 	Clarify
861	24580718	@luke-jr Would be nice if you can comment or at leat close this now... 	Clarify
860	4026333	"I've also wondered why it is in the Settings menu and not under file.   @sje397?  Edit: maybe to put it together with ""Encrypt wallet""? "	Clarify
860	4029558	Yep. I agree it should be in 'File'. I can change it later. 	nAnswer
860	4186100	Fixed by #900 	System
859	4025705	"ACK, sanity tested, works nicely "	Other
858	4044891	ACK 	Clarify
857	4025719	ACK 	Clarify
857	4030874	"I think it's a bit strange that the windows version would show a message box, while on other operating systems an error is printed to stderr. Very few people run a GUI from a terminal that remains open anyway. "	Clarify
857	4032684	"@sipa: I'm simply mimicing the behaviour of most programs... On linux, people expect --help output in the terminal (which can be copied, piped, redirected, etc). On windows they expect a message box (as there is no other way).  I really don't like the message box to be the default.  "	nAnswer
857	4043466	"Ok, nevermind. "	Statement
856	4032572	Dont forget to write a CCorruptAddress every time minversion is written to to ensure clients that dont know about minversion ignore die when trying to load the wallet. 	Clarify
856	4091329	#864 merged 	System
855	4033413	"Is toggling more typical behaviour? I haven't seen that many applications that toggle when the tray icon is clicked, most just appear the window (and bring it to the foreground in some cases).  Then again, this may be a Windows thing mainly.  "	Clarify
855	4033493	"You might be right. I just checked a couple of apps on my wife's windows machine - skype, utorrent - neither toggle. Maybe it was more common a while back. I think it's more common for tools like instant messaging apps that are often used and live on the desktop but need to also get out of the way f"	Clarify
855	4033603	"Seems like useful features, if we can manage to make them work (or, at least not get in the way) on all OSes/permutations.  Let's first get the #853 working everywhere.  BTW I agree with changing GUIUtil to a namespace. This would allow splitting it into multiple files when it gets too large. "	Clarify
855	4033617	Sounds like a good plan to me. I have tested this on KDE and Windows. 	Statement
855	4192636	I changed that 'toggleHide' method as per our discussion. 	Clarify
855	4202861	This needs to be rebased :( 	Statement
855	4213102	Rebased. 	System
855	4491402	This definitely feels more intuitive to me. 	nAnswer
855	4598672	"Bug report...  1. Minimize Bitcoin-Qt (with Minimize to Tray enabled) 2. Click tray icon  Actual: Bitcoin-Qt appears and disappears instantly  Expected: Bitcoin-Qt appears, and remains "	nAnswer
855	4598894	"Ok, that's it, I'm going to remove minimize to tray. "	Statement
855	4599093	Close to tray remains? 	whQuestion
855	4599132	Yes. That always worked fine. 	Clarify
855	4600332	"Okay then, I guess it would be bad style to leave it in on Windows? Only problem I observed there is, that after a minimize to tray and a window restore, the title-bar looks smaller and only has a close icon instead of the normal minimze, maximize and close icons. Is that indended? "	nAnswer
855	4601457	"No, that was not intended.  Pull #941 was supposed to solve it, but seems to have new problems. We've had three or four different implementations now, I've wasted enough time on it.  "	nAnswer
855	4601632	"ACK for removing it, coding time can be better invested for sure! "	Emphasis
855	4611307	My aforementioned bug might not be related to this. I am unable to reproduce it with today's next-test... :/ 	Clarify
855	4611406	Looks like that bug goes away when this is merged on top of #941 (which is now in master). 	Clarify
855	4611589	How is the general developer policy? Does it really make sense to report these kind of bugs with unofficial client versions? If I'm right you were using a self compiled version of your next-test branch. 	Clarify
855	4611700	Part of the point of pull requests is to *test* the proposed change... so yes. 	yAnswer
855	4611732	"@diapolo it makes sense when you're testing a certain pull request to post about your experiences with it (as in this case). But of course not to make a new issue about something that isn't in master yet.  I, at first, didn't notice luke-jr was posting to an existing pull request instead of a new is"	Clarify
855	4611763	"As you perhaps observed I'm trying to help out here and there and to learn how you guys work, I have to ask some ""weird questions"" from time to time :). "	Clarify
855	5045832	Rebasing required. 	System
855	5046051	I did that once already. 	Statement
855	5046317	"Unfortunately, I can't rebase others' stuff or I would. It's pretty trivial in this case. "	Clarify
855	5046394	"Yep, I'm doing it now. I'm just suggesting that perhaps you might not want to request a rebase too often, or maybe wait until there are a few people ready to review? It's a waste of time otherwise. "	Clarify
855	5047653	"Rebased. It does conflict a little bit with #961, only because both modify the options dialog. "	nAnswer
855	5076165	"I've tested it, it works for me (on Linux). Code is also OK with me.   ACK  "	Accept
855	5076300	"ACK here too, been using this for months now. "	Clarify
854	4025609	ACK 	Clarify
853	4020143	It works on Windows 	Statement
853	4021816	"-Unfortunately, this patch doesn't fix the problem of the window forgetting its position when hidden in KDE.-  Strike that sorry, it works ok in KDE.  I think you need to remove the 'showNormal' in the else clause of the 'changeEvent' method, because it breaks maximizing the window. "	Clarify
853	4022028	I'm starting to think that's simply a KDE bug...  	Clarify
853	4022139	"One more thing: changing tabs calls showNormal. That moves the window position slightly for me, in KDE and in Windows. You could add 'if(isVisible())' there, but maybe the dummy widget is better after all (but that does reset the window position to a corner of the screen on hide or minimize for me i"	Clarify
853	4026421	"This causes the window to flash (hide + show) every time I change tab, and it is even repositioned (by the window manager, KWin). :( "	Clarify
853	4027627	"@luke-jr   you don't have that problem without this pull request? I find it strange, because this patch *no longer* overrides showNormal (which is called when you click a tab).  The stuff in changeEvent does not fire when you change tabs (at least, shouldn't be, as it explicitly checks for state tra"	Clarify
853	4027837	git bisect narrowed it down to this commit. 	Statement
853	4028806	I think it is already wrong with the current -master branch.  The problem was introduced when I started calling showNormal for all the tab clicks. The same problem that causes the window to go back from maximized to normal...  	Clarify
853	4028942	The new commit should solve this problem (by showing/showNormal only when needed).  	Clarify
853	4028952	Just noticed 337258e is the version that made it into next-test (and introduces the problem). Current master (and 337258e^) is fine. 	nAnswer
853	4033859	"This works much better for me in KDE. Maximising is good too.  There is still one bug, but it's probably Qt: if I hide the window using the close button the first time I hide it, restoring it the first time puts it back in a corner of the desktop. It doesn't happen if I minimise. Subsequent hide eve"	Clarify
853	4186388	What's the status on this? 	whQuestion
853	4188622	"It works better than what's in now with regard to remembering window location/size.   This was tried on linux (kde/gnome/unity) and windows, which are the platforms the ""minimize to tray"" feature even exists (On mac, it is disabled).  So let's merge it and pray it won't break yet another obscure WM "	Clarify
853	4528366	"Ok this has problems on windows: when minimize to tray is enabled, and the window is minimized it indeed disappears.  However, if you bring it back it's still a tool window (with small titlebar with a small 'x'). For some reason the unminimize event never reaches changeEvent :/   "	Clarify
852	4008564	"Nice, thanks! "	Emphasis
852	4020599	ACK 	Clarify
851	4020342	I'm not sure the conversion should even be there. Wouldn't it be better to move it with the rest of the URL parsing in GUIUtil? (so that bitcoin:// also can be tested by the unit case).  	Clarify
851	4020480	"When using QString you could easily get rid of the complete ugly loop:      if(url.startsWith(""bitcoin://""))     {         url.replace(0, 10, ""bitcoin:"");     }  Edit: working on this, expect pull request soon...  "	Clarify
851	4024590	Fixed in pull request #854 	Other
850	4020215	Thanks! 	Emphasis
849	4020322	ACK 	Clarify
848	4043471	Fixed in #849. 	System
847	4002887	I think a separate method called from ParseParameters and ReadConfigFile is the better way to go.  	Statement
846	4008613	"I should probably draw attention to the change I made to the comment too.  I think the closing paren was in the wrong place before:  -        //  interpret -nofoo as -foo=0 (and -nofoo=0 as -foo=1, as long as -foo not set) +        // interpret -nofoo as -foo=0 (and -nofoo=0 as -foo=1) as long as -f"	Clarify
846	4043488	Fixed in #852. 	System
845	4020323	fixed 	System
843	3988548	ACK  	Clarify
843	3989722	This fixes (at least) #832 	Statement
841	4015533	visual ACK 	Clarify
841	4025311	"Sanity tested OK; would be nice if it checked the memory pool for 0-confirmation ""other people's"" transactions.  "	Clarify
841	4045961	@gavinandresen done 	Statement
841	4121417	Much more complete and totally reworked version pushed. 	Clarify
841	5038171	Needs rebasing. Sipa broke everything using locks. >_< 	Other
841	5190674	"This needs rebasing (merges clean, but won't build) "	Other
841	5209529	rebased 	Statement
840	3983989	"If for some reason this was constructed as desired behaviour, an alternative would be to disable label input until a valid bitcoin address is entered into to Pay To: field. "	Clarify
840	3984415	"This is the case because entering an address in Pay to: looks up the address in the address book, and fills it in the associated label field. If nothing found, it clears it.   Maybe it should only fill in the label if the label field is still empty.  "	Other
840	4024561	Fixed in pull request #858 	Other
839	3980480	"I don't really care about this (the LICENSE file simply applies), but whatever, feel free to add MIT license headers to all the files.  "	Clarify
838	4025159	"ACK on the code changes (I haven't compiled/tested, though) "	nAnswer
838	4044939	ACK; compiles and works 	Clarify
837	3982850	Doesn't seem to work for me... (the immature transactions are simply not shown) 	Reject
837	3993459	"Hm. I'll try a clean build from that branch tonight, but I don't see why it wouldn't work. The important condition is:  if (pcoin.IsCoinBase() && pcoin.GetBlocksToMaturity() > 0 && pcoin.GetDepthInMainChain() >= 2)  If a transaction in the wallet meets that condition then it will be added to the 'im"	Other
837	3999745	"I was only looking at immature transactions before, not the balance; i must have misread.  The immature balance seems to work fine with this patch; however, newly generated mining transactions are not shown, while the transaction counter is updated. "	Clarify
837	4004186	"I think WalletModel::getNumTransactions() is a bit too simple...but, I didn't touch that. "	nAnswer
837	4186392	ACK 	Clarify
837	4600394	There's really no reason Bitcoin-Qt should be setting fonts/colours in most cases. Let the user configure their OS's font selection... 	nAnswer
837	5046076	Needs rebasing. Sipa broke everything using locks. >_< 	Other
837	5047038	Rebased. 	System
837	5588881	ACK 	Clarify
837	5593731	"It would be nice to move as many settings as possible into the ui file without breaking support for older Qt versions, see: https://github.com/bitcoin/bitcoin/pull/1212  I also have been told, that ""Monospace"" is only for addresses and not for BTC amount labels. "	Clarify
837	5647361	I'd like to merge this. Can you rebase one more time?  	Statement
837	5647554	"General ACK, but it would be nice to update  and reflect my suggestions, too keep things easier in the source and use the XML files as much as possible. "	Clarify
837	5648268	No worries :) I'll have a shot at it now. Just have to wrangle this new mac into submission. 	nAnswer
837	5648784	Ok rebased and cleaned up UI stuff. Please check the layout still looks and acts as you'd like. 	Clarify
837	5648830	"Is this rebased agains the current master? Sorry to ask, but the changes to overviewpage.cpp / overviewpage.ui look somehow weird in the diff. It seems you change QFormLayout to QGridLayout, but to only add 2 labels...?  Edit: It should only add labelImmatureText and labelImmature to the XML, no? "	nAnswer
837	5648932	"I do have my disagreements with git, but I'm pretty sure it's against the current master. I changed it to a grid layout because when I removed the HTML from the 'wallet' label at the top of that section, it was no longer centered. The grid layout looked like it worked for me...but I've only tried it"	Clarify
837	5649007	"I would feel much better to only add the labels and I saw at least 2 parts, that are not in the current master, but show up in your diff ... strange. "	Clarify
837	5649159	No you're right - missed a fetch. I'll redo it. Sorry. 	Reject
837	5649705	The overviewpage.cpp is fine now. 	Statement
837	5649842	I started with the fresh master copy of the xml and just added those two fields. The rest of the changes were done automatically by the editor. 	Clarify
837	5649898	"As @laanwj is the one, who is able to merge this he should give the final ACK and comment :). Thanks for your work! "	Clarify
837	5649987	My pleasure. That should have been much easier. 	Statement
837	5794316	"Blerg, needs rebasing again :( "	Other
837	5794847	Oops we should have merged this first before the (out of sync) stuff...  	Clarify
837	5796157	"But at least we now have a clean ui-file, should be pretty easy to just add the 2 labels in. "	Statement
837	5930090	Rebased again. 	Statement
837	6076185	"Finally merged...  Agreed with @sje397, the ui file output is just a data file, and should be opaque. No need for manually shuffling around xml unless something is broken in the designer and it produces nonfunctional code as a result.  "	nAnswer
837	6143434	"@sje397 Scott, today I observed sth. strange, the displayed Immature balance was displaying a higher value, than it should. In the transaction list the mined ammounts were already displayed as mature, but did still count towards immature. A client restart fixed this, any idea for that? "	Clarify
837	6143763	"@Diapolo I'll look into it. All I can think of is that perhaps the signal to update those values isn't working correctly. It should update along with the balance above, which should also change when amounts mature. "	Clarify
837	6448402	I can't see why that would happen. The signal ('balancedChanged') is called from the wallet model whenever 'updateTransaction' is called...which AFAIK should be called when mined amounts mature. I'll keep looking. 	Clarify
837	6450474	"This seems to be a more general issue, and applies to the 'unconfirmed' balance as well and not just the 'immature' balance that I added. I just started my client after receiving a 'payout confirmation' email from my pool, and after sync it showed the new transaction in the transaction list as confi"	Clarify
837	6453625	Have a look at the discussion in #1475. AFAIK @laanwj is currently working on that general fix. 	Clarify
837	6453750	Thanks Philip. Sounds like progress has been made. :) 	Statement
834	3959987	"I'm not sure whether it's correct or not, but FYI locking isn't done around the call to `BackupWallet` in `bitcoinrpc.cpp` either. "	nAnswer
834	3962993	All RPC calls already lock cs_main and cs_wallet already... 	yAnswer
834	3963572	Ok yeah I see now in ThreadRPCServer2... ok locking it is then  	Statement
834	3963653	"Actually, that is not necessary I think. BackupWallet() locks cs_db, flushes wallet.dat, and copies it at a stable time. Concurrent modifications to the wallet structure (which do not touch the database) are harmless.  "	Statement
834	3964395	"One minor problem: in the select file dialog, .dat is not added automatically? "	ynQuestion
834	3964693	"Seems to be a common problem with Qt file save dialogs (see also #833). According to this stack overflow answer, the behavior with respect to automatically adding a suffix (when using the static functions such as getSaveFilename) is dependent on the platform:  http://stackoverflow.com/questions/2609"	Clarify
834	3965475	"I think the cleanest would be to define our own static `getSaveFileName` (for example, in guiutil.cpp) that handles the default suffix properly, and use it everywhere we use `QFileDialog::getSaveFileName` now (saving .csv in export, .png in qrcode and .dat in wallet backup).  "	Statement
834	3969382	Can you update doc/assets-attribution.txt and contrib/debian/copyright with the new copyright info for new icons? 	ynQuestion
834	3969410	"Other than that, code looks good (though I havent tested or built anything) "	Clarify
834	3979140	I updated the copyright info and resquashed. 	Statement
834	3980113	"@sipa: I'm working on the default suffix issue, and will issue a pull request when finished. Please don't let it block this one from accepting it into 0.6.0.   "	nAnswer
834	3980178	"@laanwj: fyi, the extension works fine on my kubuntu (built with qt 4.7.4) "	Other
834	3980247	"Yes the problem is that getSaveFileName gets a native file dialog, which does the right thing in Windows (and KDE, seemingly) but not in GNOME. So I'm working around this by making a wrapper that adds the default suffix when the native file dialog fails to do so... This is used in multiple places in"	Clarify
834	3981395	ACK 	Clarify
834	4006834	Record keeping: this fixes #370 	System
834	4025121	ACK 	Clarify
832	3953374	"Is there a source for this? (I believe this is a ppa problem, not a bitcoin-release tars problem) "	Statement
832	4005503	This is fixed. 	Statement
831	3940585	"Hm. I don't think we should really be showing the balance on blocks that may just get orphaned, should we? "	Reject
831	3940640	"My reasoning is: - as a miner, it's a critical stat I want to see - as a miner, and taking into account the label 'immature', the uncertainty is pretty clearly implied - those numbers are already displayed in the transaction list - now the overview numbers add up to what's in the transaction list - "	Clarify
831	3940679	"IIRC unextended blocks are not shown in the transaction list in the gui. They're only show at something like two confirms.  If the balance doesn't match the transaction list, it's going to be pretty confusing. "	Reject
831	3940696	"No, they're shown immediately....and by 'now' i meant 'now that I fixed it'. Even if they did take 2 confirms to show, they aren't available for a lot longer than that (120 blocks) so not having them included in either the actual balance or the unconfirmed balance, but still shown in the transaction"	Clarify
831	3941019	"Of course, you're correct. I've modified (and squashed) the patch to use a consistent method for display - i.e. like the transaction list, calculation of the 'immature' balance now requires transactions to be at least 2 deep in the block chain. "	Clarify
831	3944087	"I agree with this patch (after the fix). Good idea to make it hidden when 0, so only miners will see it. ""immature"" makes it quite clear that it is still unspendable.  "	Clarify
831	3945275	I think setting an explicit font face for the label is an error (the other labels don't have that either...)  	Clarify
831	3950125	"I didn't initially, but then I saw the other labels did have that, so I copied it. I was actually going to make another pull request to fix that - the font and default tooltips can be set in the designer. "	nAnswer
831	3950679	"What does this change, exactly? "	whQuestion
831	3951168	"The main effect is the addition of a field labelled 'Immature' in the overview section under the 'unconfirmed' field, which shows mined income that has not yet matured (which is currently not displayed anywhere, even though the transactions exist in the transaction list). To do that I added a 'GetIm"	Clarify
831	3956758	"He replaced the skip - based logic with a more direct boolean condition in `CWallet::GetBalance()` and `CWallet::GetUnconfirmedBalance()`, which is a win in clarity IMO.   It does mean it needs some more testing to make sure it's still the same.   "	Clarify
831	3958776	"Sorry, I found a bug in ""WalletModel::update"" where I was not checking for a change in the immature balance in the condition for firing the signal to update the GUI. I have fixed it and squashed it back to one commit. "	nAnswer
831	3963288	Fix for a 'balanceChanged' signal that i'd missed in SendCoinsDialog. 	Statement
831	3968294	"Code changes look good, I didn't test though.  "	nAnswer
831	3972214	"Object::connect: No such signal WalletModel::balanceChanged(qint64, qint64, qint64) "	nAnswer
831	3972462	"sipa, that signal should exist - line 123 of walletmodel.h...maybe you need a rebuild? "	Statement
831	3972499	"Oh, no i put a quint64 there instead of a qint64 - i'll fix it tonight.  OT - that pull request comes from the master branch of my fork - and if I add any commits, they seem to become part of this pull request. Any idea how I can rearrange things so that this pull request comes from another branch, "	Clarify
831	3972855	"I don't think you can edit what branch a pull request refers to, but there is no problem with closing and submitting a new pull request. "	nAnswer
831	3979155	Ok I shall close this one and submit a new one including the signal fix. 	nAnswer
829	4084600	"Command-line option ""-external"" added, to specify public IP manually. "	Reject
829	5045981	Rebasing required. 	System
829	5046492	done 	Statement
829	5586575	superceded 	Statement
828	3921865	Added some extra fixes: * Fix sign error in calculation of seconds to sleep * Do not mix GetTime() (seconds) and Sleep() (milliseconds) * Do not sleep forever if another thread already re-locked (should close #639) * Do locking within critical section 	Clarify
828	3922718	ACK 	Clarify
826	3921511	"The main window jumps around when I change tabs, otherwise it's ok. (Ubuntu) "	Clarify
826	3922001	"Ah, yes, it should only re-parent to the desktop when it's not parented to the desktop. I've fixed that now, please re-test.  "	yAnswer
826	3926485	"Yes, it seems to work now. "	yAnswer
825	3920942	ACK. This might solve a few random RPC crashes.  	Statement
825	3921494	"I believe delete of int* is identical to just free, so i doubt it will change anything in practice. "	nAnswer
825	3921958	"@sipa it's not -- it might work with some compilers, but not by definition in the C++ standard, doing so gives ""undefined behavior""  "	Clarify
825	3923019	"Sure... it certainly requires fixing because of that, but I doubt it's a problem in practice for the platforms we're using. "	Reject
823	3923728	ACK 	Clarify
823	4021305	"Does this break connecting to multiple nodes on different ports? eg, multiple local bitcoinds "	Other
823	4021715	All nodes have a self-generated unique 64-bit identifier. This patch will prevent two connections to a partner with the same identifier.  Running two nodes on one system and connecting to both should not be a problem. 	Clarify
823	4060156	"Per https://en.bitcoin.it/wiki/Protocol_specification#version the nonce is unique for every version message, so this would imply a protocol change making it static per client... "	nAnswer
823	4064891	Nice catch; that makes this problem somewhat harder to solve. Closing for now... 	Clarify
821	3921938	"As we don't actually have IPv6 support yet, i think this is not yet an issue. "	nAnswer
821	6219927	"As IPv6 support is in now, it could be as simple as updating this line: https://github.com/bitcoin/bitcoin/pull/1433/files#L2R42 (link to a non-merged pull)!  @sipa Anything more to take into consideration? "	Other
821	6220333	"Finding a regexp for IPv6 addresses shouldn't be hard, but can't we just have a validator that calls LookupNumeric from netbase.h? If that call succeeds, we're fine. "	Reject
821	6223861	"sipa: I guess that would be pretty easy to do, can you explain what LookupNumeric() does. Allows it to verify IPv4/IPv6 addresses and host names?  Edit: I'm missing a better documentation :), for me it's still sometimes hard to understand such code pieces, when I first get in touch with them. "	Clarify
821	6223998	"I'll try to add some documentation there. It allows conversion of a string that contains a numeric address (e.g. ""127.0.0.1"", ""127.0.0.1:8333"", ""[::1]:8333"", ...) to a CService. "	Clarify
821	6224024	"Thanks, this would be a great help!  So this check would cover IPv4 and IPv6 addresses ... are (in general) hostnames possible as a proxy input and how could I check that? "	Emphasis
821	6510223	This is fixed with current master (which allows IPv6 addresses) and so can be closed! 	Other
820	3919532	I believe P2pool uses RPC to communicate with the client?  We'd really need a transcript of the RPC commands that are sent to find out which one causes the crash.  	Clarify
820	3920639	"Yes, p2pool uses jsonrpc to communicate with the client.  Perhaps I can find a way to trace the rpc commands.  Bitcoin-qt and p2pool are running on the same machine. "	nAnswer
820	3920820	Related might be #640 and/or #639 	Statement
820	3957551	This still happens with bitcoin-qt.exe v0.6.0 rc1 on Windows 7 64bit 	Emphasis
820	3957717	"Today, I happened to be on IRC and another person's bitcoin-qt crashed nearly simultaneously with mine... don't know if it was coincidental or not...  Later, his crashed, but mine didn't. "	Clarify
820	3965562	"I have this debug log from right before bitcoin-qt win32 crashed: http://im.forre.st/pb/33189662.txt It suggests some kind of weird threading issue, because the RPC exception (thrown for unknown reasons) appears in the ProcessMessage thread. "	Clarify
820	3969338	Has anyone ever seen this bug on a non-Windows system? 	ynQuestion
820	3969516	"No, not from what Linux p2pool users are saying "	Reject
820	4008993	Here is a debug-able bitcoin-qt build of b7c25e0c1346256be12310264ea5cc4ce7794118 (current git head): http://dl.dropbox.com/u/29653426/bitcoin-qt.zip 	Other
820	4015443	"I'm not sure what the ""debug-able"" bitcoin-qt build will do or how to use it... If you need me to recreate the problem and try to gather doc, let me know,,, otherwise, I'll assume someone else is doing it.  Meanwhile, I switched to running bitcoind instead of bitcoin-qt.     "	Clarify
820	4092392	"This very well could be related to #640, but I have some doubt about #639. Using the latest debug version provided by @TheBlueMatt, I was able to get a backtrace that suggests line 1662 in bitcoinrpc.cpp:  throw JSONRPCError(-15, ""Error: running with an unencrypted wallet, but walletlock was called."	Clarify
820	4550751	This should be fixed in 0.6.0rc4 and 0.5.3.1 	Statement
819	3913038	"Most window managers have an ""X"" at the left or right side of the titlebar. "	Clarify
819	3913108	"I know, right?    http://i39.tinypic.com/20fxl3m.png  I don't know if some special effort was made to not have an 'X' on this window, but either way I don't see it. "	nAnswer
819	3913123	"Odd, it's there for me... "	Statement
819	3913133	Does the Sign Message dialog have this same problem? 	whQuestion
819	3913171	"Yes, it does.  I'm using Cinnamon version 1.2 -- http://cinnamon.linuxmint.com/  I notice now that Alt-F4 dismisses the window for me.  But would still prefer to have a way of doing it with the mouse. "	Clarify
819	3919536	It should be a normal window dismissable with the 'x' in the corner.   I am spooked why the window has no window manager chrome in your case.  	nAnswer
819	4894885	"I can't reproduce this, and haven't heard any other complaints about it.  This makes it likely that the problem lies with your window manager (and its interaction with Qt), not bitcoin.   "	nAnswer
819	4896090	"Perhaps we could / should at the possibility to close all windows except the main one, via Esc? Would that be hard to implement? "	Other
819	4896236	"I don't think that'd be hard. I wouldn't be surprised if Qdialog had send-close-event-on-esc behavior built in that can be enabled.  Otherwise, easiest way would ne to make our own QDialog subclass that has this. "	Clarify
819	4896386	"Look at this and search for Escape Key: http://qt-project.org/doc/qt-4.8/QDialog.html It should work already ... at least on Windows it does :), I verified that with the current official 0.6 and my own version. "	Clarify
819	4897049	"It's probably a bug in cinnamon, yes.  It's a very young desktop environment, I think it started as a response to GNOME 3 taking away the panels that GNOME 2 users were used to using.  I switched to XFCE4 now, and the close icon appears as it should.  I suggest closing this as ""not a bitcoin bug"". "	Clarify
819	4910376	You opened this and you can close it :). 	Statement
819	4918502	"OK then, I guess I will. "	Statement
818	3909535	ACK 	Clarify
817	3901410	0.5.X version: https://github.com/TheBlueMatt/bitcoin/commit/a9108382e2dd1540913f15bd2f4ebe3a8977f46a 	Statement
817	3908891	"This is a good idea regardless of the NAT issue.  There is no reason to leak internal non-routable addresses in version messages, and that part of the patch is clearly safe because using a proxy has the same effect (also because we don't actually do anything with that data).  Using UPNP to get our e"	Clarify
817	3909598	ACK 	Clarify
817	3921594	ACK 	Clarify
817	3923520	"ACK, took me a while to setup upnp to test this. "	nAnswer
816	3902113	"Huh this really surprises me. The IP replacement certainly exists, but used to be only for protocols like FTP and IRC that were known by the router, not in unknown binary data.  "	Reject
816	3909524	"I'd really like to know more about the root and scope of the problem-- was this ""one or two people had problems with p2pool because they misconfigured iptables/netfilter"" or is it ""LinkSys routers automangle the first packet if its first N bytes look like it is an FTP session"" ?  "	Clarify
816	4021574	"IMO consider keeping existing (feb20 switchover) behavior as default.  Add a ""no-version-csum"" (or ""fucked-router"") option.  I am deeply suspect of routers that randomly rewrite binary packets transited in unknown (to the router) binary protocols.  Would rather err on the side of stronger checksum p"	Clarify
816	4176503	"Given the lack of problems in the last 5 days (besides alternative implementations that didn't code in the change), I think this is safe to close as ""unnecessary.""  "	Clarify
815	3895522	"Thats not possible afaict, see OptionsModel::setData in qt/optionsmodel.cpp. In case MapPortUPnP:, there is no modification of successful, meaning it should always return true.  Maybe Im missing some part of the way Qt works though. "	nAnswer
815	3899322	"I'm not using any command line args or conf file, I tried it on a different PC and it still wont let me disable UPnP.  Everytime I restart the application the UPnP is ticked again.  I also tried with a brand new empty wallet file and its behaving the same way.  I also got a few ""Application has cras"	Clarify
815	3899427	"Oh, on reboot, well thats a completely different story. "	Statement
815	3920238	I can reproduce this.  	Statement
815	4002905	I introduced this when I modified the code to let command-line options override wallet settings.  I'll fix...  	Clarify
814	3888552	"Probably caused by the network stack refactor, it shows everything (even IPv4 addresses) as IPv6 now?   "	Clarify
814	3899281	I just tried running v0.6rc1 on a PC that WAS using a proxy and it replaced my valid proxy address details with the IPv6 looking address. 	nAnswer
814	3919823	"The UI gets the string representation of the proxy address in this way:      return QVariant(QString::fromStdString(addrProxy.ToStringIP()));  ... which returns either a IPv4 address or IPv6 address string, based on the return value of isIPv4(). An address is identified as IPv4 if it starts with `00"	Clarify
814	4043535	Not sure how this is possible. Does the problem still exist? 	whQuestion
814	4051675	I just tried deleting my wallet.dat and let v0.6rc1 create a new wallet and the proxy address was ok (127.0.0.1:9050).  However when I copied back my original v0.5.2 wallet and reran v0.6rc1 the proxy address was garbage again.  My wallet file is the same wallet file that was generated by the v0.3.2	Clarify
814	4144894	"This is definitely an issue, I just tested by:  + Ran bitcoin 0.4 on a testnet-in-a-box datadir, set the Use Proxy and Proxy address to 127.0.0.2 + Re-ran with git HEAD bitcoin 0.6, I get:  ""409c:0:e1:f505:100:0:0:0""  as the proxy address.   "	Clarify
813	3888028	ACK 	Clarify
813	3897815	I left this running overnight and it seems to be working fine.  The number of transactions in the pool is consistently showing 34 less than is shown on http://bitcoincharts.com/bitcoin/txlist/ . 	Clarify
813	3900528	ACK 	Clarify
813	5421875	How *could* you remove something from the pool if it isn't in there? 	whQuestion
812	3885523	Sorry - this is a dup of #794. 	Statement
811	3884133	Feel free to provide replacements with the right license...  	Clarify
811	9219820	"http://static.inky.ws/image/3011/image.jpg (the image is a gif, not a jpg, but the site changes the extension of the files). Generated through http://ajaxload.info/ (license: from the same site, last line of the page, ""Generated gifs are totally free for use""). If necessary I can convert the gif to "	Clarify
811	9220476	Best thing you can do is directly create a patch :). 	Statement
811	9220979	I like the image.  I think converting it to mng and replacing the current spinner.mng is the quickest way to get it integrated. In my experiments back in the day qt had some problems with animated gifs. 	Statement
811	9405116	"I can't compile the QT, so can anyone test the mng? Thanks! Ah... was forgetting... changed the spinner to one from http://preloaders.net/en/circular "	Emphasis
811	9407152	Second push with the connect icons (it is a separate push so that they can be merged separately if the icons aren't suitable) 	Statement
811	9418408	See #1931 	System
810	3878000	"In the future, easiest way to translate bitcoin is to use https://www.transifex.net/projects/p/bitcoin/resource/tx/ "	nAnswer
810	3878915	Ok. I had contacted with the maintainer of the project at transifex. Thank you! 	Statement
809	3875134	Did not find a way to attach a tag. This issue is with 0.6.0rc1. 	nAnswer
809	3968479	This is a Berkeley DB version mismatch between the last and current version of bitcoin.  Recovery is:   make sure bitcoin is not running   cd into your .bitcoin directory   rm -rf db* database* .lock *.pid   	Clarify
809	3980863	"Thanks, that worked. "	Statement
809	3990187	There was no bdb version change between 0.6 and 0.5.X.  This is probably just simply a corrupted database. 	nAnswer
809	3991533	"I don't believe so. Because bitcoin-qt could still read the old database. And also, then testnet and prodnet databases must have been corrupted at the same time. "	Clarify
809	3991682	"Unless 0.6 rc1 was built using some non-gitian method, bdb is still the same version that it was 6 months ago (IIRC it was changed in version 0.4).  See https://github.com/bitcoin/bitcoin/blame/master/contrib/gitian-descriptors/gitian.yml "	Clarify
809	3991753	"When upgrading from 0.4 to 0.5 and then to 0.5.1, I did not encounter this problem. It's the 0.5.1 to 0.6 RC1 update that reveiled it. As I said, I tested going back to 0.5.1. "	Statement
809	3991811	"No users should not have seen a problem going from 0.4 to 0.5.X because of the upgrade (it just means that you cant go back without manually deleting the logs).  Your issue is a simple case of log corruption, it happens all the time. "	Clarify
809	3991909	"But then again, why is 0.6 RC1 sensitive about a corrupted log and 0.5.1 is not? If the log is corrupt, it should not be readable with any of the two bitcoin-qt versions. "	nAnswer
809	3991957	"I agree with Goonie, given the number of people who've run into this issue (including myself with both the testnet and mainnet Faucets) I suspect SOMETHING has changed.  "	Clarify
809	3992016	Then its a legitimate bug and is being caused by something internal to bitcoin... 	Clarify
809	4606241	"I'm going to use this comment to keep track of my investigations into this bug.  I'm running different versions of Bitcoin in a virtual machine, and seeing what version of BDB they write.  Command to dump out the BDB version:      od -j12 -N8 -tx4 ~/.bitcoin/testnet/database/log.000*  gives:      00"	Clarify
809	5015717	My original issue has been fixed in bitcoin-qt 0.6.0 (final).  (I did not manually migrate/fix any databases) 	Clarify
809	5015855	"Just out of curiosity, are you using the bitcoin PPA, too? If so, any upgrade that comes from the PPA will work but any downloads from sourceforge won't because of the version issue Gavin pointed out above. That would also mean that the issue isn't fixed at all, it just never was in bitcoin but rath"	Clarify
809	5016075	"@ancow Ah, that's true. I am using the Ubuntu PPA version. "	Statement
809	5016865	If that's fixed you can close the issue :). 	Clarify
809	5017823	"It's not fixed; it will happen with all non-PPA versions as soon as the PPA version is installed. IOW, it'll happen again for the next RC release. It just isn't really a bug in bitcoin... "	nAnswer
809	5423849	Is this perhaps the same issue? http://bitcoin.stackexchange.com/questions/3533/error-loading-wallet-dat-wallet-corrupted  Bitcoin 0.4.1 is able to work with everything in my `~/.bitcoin` dir. 0.5.4rc3 and 0.6.0 do *not* work (both report `Error loading wallet.dat: Wallet corrupted`). Is there some 	Clarify
809	8619231	Bitcoin (0.6.3 on Ubuntu 12.04) should be able to deal with this error nicely and offer proper suggestions to the user.  After removing database and .lock I get the foll0wing error:  ``` $ bitcoin-qt    ************************ EXCEPTION: 11DbException        Db::open: Invalid argument        bitcoi	Clarify
809	27690166	"Issue hasn't been touched for a year and BDB has been replaced apart from the wallet. Though LevelDB has its own, new issues, we can close this one. "	nAnswer
808	3857579	a5161d9ec721736fb095f1c47aa9f4847ee3ebc98a60be225f7348cdd5a20cb5  bitcoin-deps-0.0.2.tbz2  	Statement
808	4106253	What's the status of this? Doesn't-yet-make-the-build deterministic? 	whQuestion
808	4106337	Correct; I guess some faketime trickery is needed also. 	Clarify
808	4108057	I'm working on this and should have a whole set of updates to our gitian scripts in the next couple of days. 	Clarify
808	4186464	"This was superceded by #887, right? "	ynQuestion
808	4186850	"Correct, this has been superceded.   Pieter Wuille <reply@reply.github.com> wrote:  This was superceded by #887, right?  ---  Reply to this email directly or view it on GitHub: https://github.com/bitcoin/bitcoin/pull/808#issuecomment-4186464 "	Other
807	3855698	"No, the original intent was that req- prefixes are optional and can be applied to any params.  ie a merchant may want to enforce or not enforce an expires param.  That should be clarified in the bip. (see https://github.com/genjix/bips/pull/4) "	nAnswer
807	3885566	In that case should there be a       fShouldReturnFalse = false;  in the `amount` handling?  	Statement
807	3891803	"Heh, oops...fixed "	Other
807	3909724	"This is the type of code that aught to have unit tests. I don't know nuthin about unit testing with Qt; is it easy to get qmake to compile unit tests, and/or is there support in Qt for unit tests?  "	Emphasis
807	3915539	"Still gotta add a ton more test, but I put in a bitcoin-qt test suite structure.  Just build with qmake bitcoin-qt.pro BITCOIN_QT_TEST=1; make  you should then find a bitcoin-qt_test exe to call "	Clarify
807	3915820	"OK, there we go, test away. "	Statement
807	3919521	"ACK, nice tests  "	Clarify
806	3921397	"ACK (huh, I remember that I acked this before but don't see it anymore...)  "	nAnswer
806	3921557	"Strange, I also remember your previous ACK... "	Clarify
806	3922694	ACK 	Clarify
806	3980822	Update: fixed some (very old) bugs: * vnThreadsRunning[1] occasionally reached -1 * vnThreadsRunning[1] wasn't checked at shutdown  This should fix some (rare and harmless) segfaults at shutdown 	Other
806	3988251	(note: fix only in #844) 	Other
803	3837272	ACK 	Clarify
801	3829515	"ACK: compiles OK for me, only source code changes are cosmetic.  I get 14 of these warnings:  ```  Updating 'src/qt/locale/bitcoin_da.qm'...     Generated 314 translation(s) (302 finished and 12 unfinished)     Ignored 50 untranslated source text(s) ``` ... all complaining about 50 or more untransla"	Clarify
801	3832429	ACK 	Clarify
800	3832506	Updated comment 	Other
800	4032348	"Here are a couple (probably stupid) questions:  1. ```sub.idx``` is set now, and wasn't previously, why? 2. Is there a difference between using ```wallet->GetCredit(txout)``` and ```txout.nValue``` to get the value for ```sub.credit``` (for generated coins) 3. Will ```wallet->IsMine(txout)``` be tru"	Other
800	4032676	"@plaid:  1. sub.idx is a sorting key, used to sort multiple transactions with the same txid. Previously it just defaulted to 0.  2. wallet->GetCredit(txout) counts the credit for the entire transaction, for all outputs that are owned by the wallet. It performs the same looping over outputs that is n"	Other
800	4035348	@laanwj I appreciate you taking the time to answer my admittedly elementary questions. They all make perfect sense now. 	Clarify
797	4248918	"its because, bitcoin is unable to save the registry entry on your registry.. try with administrator rights.. should work..  "	nAnswer
797	4263487	"Bitcoin doesnt use the registry to store the startup setting, it should be storing a lnk to bitcoin-qt.exe in your user's startup folder. Can you try with 0.6rc2? "	ynQuestion
797	7058359	I think this is pretty obsolete and can be closed! 	Statement
795	3801556	It already works correctly for me. What does this fix? 	Other
795	3801644	"@luke-jr: it fails in some cases, see #788, #692 "	nAnswer
795	3801650	Does this make #691 unnecessary? 	ynQuestion
795	3802169	"It could be possible to have a single QWidget for this instead of creating and setting the new one to parent every time.  Then there is the possibility of setting the parent to NULL in both cases, but window dimensions won't be preserved that way as far as I know. "	Clarify
795	3818210	The latest commit preserves the window dimensions but not the window position (it appears at the top-right position on the screen at least on Ubuntu) 	Clarify
795	3829606	"git reset --hard master git diff f69b82e..d5dc7c91 | patch -p1 git add src/qt/bitcoingui.{cpp,h} git commit -c b65a3532 "	Other
795	3830029	"Diff look OK to me, but this does need to be rebased.  "	Statement
795	3833941	Git really makes me want to pull out my hair sometimes. 	Clarify
795	3887665	"Okay, everything should be in order now. "	Statement
795	3921306	@matoking  can you try #826 and verify it still fixes your problem (I've reworked it a bit so that it works for Ubuntu too...)?  	Clarify
795	3926749	"#826 was merged, closing this one, thanks!  "	Emphasis
794	3791086	Does #766 fix it? 	ynQuestion
794	3791194	"Haven't tried #766.  Test setup is:  3 testnet-in-a-box nodes, with node 1 sending fuzzed transactions to 2. Node 3 is listening in and CPU mining.  valgrind doesn't complain about uninitialized vars (you have to compile openssl and bdb specially to make valgrind not trip on them), and getmininginfo"	Clarify
794	3791285	My best guess is a missing-lock condition reading the variable from getmininginfo while the other thread is updating it. Does it go back to normal after the misread? 	Clarify
794	3791384	"hashespersec should be zero, unless the internal reference miner is running.   "	yAnswer
794	3791743	"I guess generate=true, but are all the blocks downloaded? "	whQuestion
794	3885544	In the dup I just closed I noticed that the pooledtx went crazy around the same time as a new block was found. 	nAnswer
794	3886177	The 'crazy' number 18446744073709551613 is in fact just -3 printed as an unsigned 64 bit int.  The bug is caused by CTransaction::RemoveFromMemoryPool() doing --nPooledTx for every transaction in the newly found block whether or not it was in our memory pool or not.  CBlock::SetBestChain does this: 	Clarify
794	6032353	How often does it happen that it tried to remove a transaction that wasn't in the memory pool? 	Clarify
794	6032372	It doesn't.  My change comment was sloppy. 	Statement
794	6032393	oh... what would have been the unsloppy comment? 	whQuestion
794	6032608	"Only *attempt to* remove transactions from memory pool when [...] would be better.  When a new block is found, the code was attempting to remove each of the transactions in the block from the memory pool of pending transactions.  This would quietly succeed, doing nothing, for transactions which we"	Clarify
794	6032751	"ah, thanks. now I understand. I guess this could be a location in the code where I could make a patch that restricts relaying blocks that are not including free transactions. I think it would be good to give this option to full node operators who aren't mining. So far various patches have been inclu"	Clarify
794	6032857	This isn't the place to discuss the issue.  I would suggest making a thread in the development board here: https://bitcointalk.org/index.php?board=6.0 to discuss it.  [ But I doubt reducing mining fees from their currently very low level would have any impact on the value of bitcoins. A concern is t	Clarify
793	3771765	"setaddress is used to associate a bitcoin address (either one you got from another person or one you generated with getnewaddress) with an account, so no, you can't leave off the account.  What are you trying to do?  "	Clarify
793	3779654	"I have the Bitcoin GUI working and I want to use my wallet for bitcoind as well so that I can mine in the background. I want to associate bitcoind with my preexisting Bitcoin address / account / wallet, whatever that means.  Cheers,  Andrew Pennebaker www.yellosoft.us  On Wed, Feb 1, 2012 at 9:49 PM"	Clarify
793	3779741	"When you run bitcoind <command>, it sends <command> to the running Bitcoin GUI process.  So you don't need to associate bitcoind with your preexisting stuff. "	Reject
793	3787185	"I do want to associate bitcoind with my wallet, because I want to connect to a remote bitcoind, e.g., on a web server away from my desktop.  Cheers,  Andrew Pennebaker www.yellosoft.us  On Thu, Feb 2, 2012 at 10:29 AM, Gavin Andresen < reply@reply.github.com > wrote:  > When you run bitcoind <comman"	Other
793	3789335	"bitcoind -connect=web.server.ip -rpcuser=... -rpcpassword=... getinfo  ... will connect to the server, send it the 'getinfo' command, and print the result.  The server will have to have it's RPC port open and will have to have your desktop's IP address in it's bitcoin.conf ( rpcallowip=desktop.ip.ad"	Reject
793	3789444	"How would I send all the bitcoins generated by one bitcoind instance's wallet to another bitcoind instance's wallet?  Cheers,  Andrew Pennebaker www.yellosoft.us  On Thu, Feb 2, 2012 at 6:55 PM, Gavin Andresen < reply@reply.github.com > wrote:  > bitcoind -connect=web.server.ip -rpcuser=... -rpcpass"	Other
793	3789957	Best place for questions like that is bitcoin.stackexchange.com  	Statement
791	3767232	Seconded 	Statement
791	3767385	"@gmaxwell, do you mean all databases (`wallet.dat`, `addr.dat`, `blkindex.dat`) share *the same log file* between them? Or are you just saying that, for example, `wallet.dat` and the log file of `wallet.dat` must be in the same directory? "	Clarify
791	3769005	I see... Is it not possible to keep two log directories by the same program? 	nAnswer
791	6791862	Duplicate of issue #68 	Other
788	3716431	"Do you use any combination of the ""minimize to taskbar"" or ""close to taskbar"" options? If so, can you try without? "	Clarify
788	3716498	"Yes, the problem exists if - both options are enabled - only ""minimize to taskbar"" is enabeld  Any other combination does not trigger the issue "	Clarify
788	3716574	"So we can conclude the issue is with ""minimize to taskbar"".   I've noticed before that in some cases, its behavior is problematic, due to the tight feedback loop between minimization and hiding/showing the window. See also #692.  "	nAnswer
788	3920843	Can you help test #826 and see if it fixes the issue?  	Clarify
788	4074044	"I can live without the setting, since I have no taskbar when using xmonad :) But I have tested the latest build and if I enable ""Minimize to tray"" and close the windows I am unable to open the window again by clicking on the bc icon in the tray. But once again, I am happy without the option and bitc"	Clarify
788	4074091	"If you want, please help testing #853. It should solve that problem...  (though I'm not sure about how it will behave in xmonad. It is surprisingly difficult to get this to work for all OSes and window managers) "	Clarify
787	3687283	What needs testing with these changes?  I assume:  + Deals with existing addr.dat + Is faster + Works with -noirc -nodnsseed and a removed addr.dat (bootstrap from seed nodes)  Do you have a tool for comparing two addrman databases?  Might be nice to verify that two copies of bitcoin started at abou	Clarify
787	3697594	"Some improvements and bugfixes done.  @gavinandresen:  * It will convert an old addr.dat to the new format. During the first start-up, all addr.dat entries are imported. During a second start-up, all old addr entries are removed (using CDB::Rewrite).  * It is faster in the sense that all locking iss"	Clarify
787	3746080	"Testing on my Mac: I get a core dump on exit, in:  CDB::Write<std::string, CAddrMan> (this=0xb0594f20, key=@0xb0594ed0, value=@0x372560, fOverwrite=true) at db.h:106 106            int ret = pdb->put(GetTxn(), &datKey, &datValue, (fOverwrite ? 0 : DB_NOOVERWRITE));  Looks like a use-after-free probl"	Other
787	3746236	"Also: I tested running with your patch and then running an old bitcoind; works nicely (old bitcoind thinks the addr.dat is empty, which is OK; run the new bitcoind and it thinks it needs to rewrite addr.dat again, which is also OK).  "	Clarify
787	4156179	"@luke-jr recently had a crash that seemed related to addrman; I am unable to reproduce the problem though. Stack traces or valgrind information from anyone who can reproduce it, is very welcome. "	Clarify
786	3673921	ACK 	Clarify
786	3681453	ACK 	Clarify
786	3702752	Does this remove the ability to intentionally remove/corrupt your private keys and run with read-only access? 	Clarify
786	3706131	"Yes...  You can always encrypt it and throw away the passphrase, though. "	yAnswer
784	3729199	"Update, after 120 confirmations, (and a restart of bitcoin-qt) both of these showed up properly. However, restart had no effect while they were unconfirmed. "	nAnswer
784	6219941	Is this still an open issue? I guess there were fixes to missing transactions with Bitcoin-Qt over the last months. 	Clarify
784	6220635	"Can't say, it hasn't happened again and was temporary. I guess this can be closed. "	nAnswer
783	3666472	"I run Bitcoin 0.5.1-beta on 64-bit Windows 7 without problems.  Userspace processes like bitcoin shouldn't be able to cause a blue screen. This is a red flag that their is something wrong with your hardware or windows installation (e.g. faulty RAM, filesystem data corruption, buggy driver, ...).  Th"	Clarify
783	3670683	"No, what seemed to fix it was installing all of the optional Windows patches from Windows Update. "	nAnswer
782	3645455	"Hi, this is onelineproof from IRC. I think you need to do a bit more than just that...If you're first setting pubkey to be vchpubkey, then obviously they will be equal. But eventually, I can test it to make sure...  If you wanna peek at my code that implements such a function in C, take a look at th"	Clarify
782	3646222	"@piratelinux: CKey::GetPubKey extracts the public key from the OpenSSL Key structure, which is constructed at the time of the CKey::SetPrivKey() call. The information present there from the CKey::SetPubKey() is only used to know whether the key is compressed. "	Clarify
782	3646345	Why not check wkeys as well? 	whQuestion
782	3646400	@TheBlueMatt do they exist? 	whQuestion
782	3646631	Look at the block starting at line 868. 	Clarify
782	3650664	"wkeys are dead code that should be removed, if I recall correctly. "	Statement
782	3652635	"wkeys were used by very, very old clients instead of keys iirc, No reason to remove support for opening old wallets.  Gavin Andresen <reply@reply.github.com> wrote:  wkeys are dead code that should be removed, if I recall correctly.  ---  Reply to this email directly or view it on GitHub: https://gi"	Other
782	3661276	"I still don't think it will work, because I think what SetPrivKey does is take the public key part of the full private key, but if the secret part (usually 32 bytes) is corrupted, it wouldn't know. I did a rough test, but maybe if you could send me a release that I can compile and you're confident w"	Clarify
781	6028188	I also have that bug in 0.6.2. 	Reject
781	6231098	"I think that the pull request #1434 won't fix this bug... as this bug is in: bitcoin / src / qt / overviewpage.cpp row 22: TxViewDelegate(): QAbstractItemDelegate(), unit(BitcoinUnits::BTC) as you see it defaults unit to BTC when you start Bitcoin-Qt. "	Clarify
781	6232498	"You are right, but this can be fixed by adding a single line, will update this tomorrow. Thanks for pointing that out ... as my testnet client has no transactions in the list on the overviewpage I didn't see that one :). "	nAnswer
781	6232583	Updated the pull! 	Emphasis
781	6235428	Nice work.. I going to test this tonight when I get home from work. 	Clarify
781	6253339	I just downloaded your latest changes from git and it works fine!! yeay! 	Emphasis
781	6254061	"Alright, that confirms #1434 fixes this issue :), thanks for testing. "	Statement
781	6384971	"This can be closed, as it should be fixed on current master. "	Statement
781	6608441	Confirmed fixed 	System
780	3805637	"NAK for reasons discussed on forums/list.  Further, this is also an administrative close:  there is no reason to clog the pull request queue with ""leave open until accepted"" requests  "	nAnswer
780	3805916	There are no such outstanding reasons to not replace BIP 16 with 17. 	nAnswer
779	5147914	Has this ever been fixed?  	ynQuestion
779	5150863	"No, I still see its results in listtransactions. "	nAnswer
779	6608531	"BTW, this manifests in listtransactions as ""address"" : ""1Wh4bh"", "	Emphasis
779	8779673	"Update: ExtractDestination seems to return the correct values, but listtransactions still shows the gibberish. Maybe related to #1848 "	nAnswer
777	3617930	"NACK, doesnt build:   /usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 0 has invalid symbol index 11 /usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 1 has invalid symbol index 12 /usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux"	Other
777	3618421	Did you make clean first? It works fine here... :/ 	Emphasis
777	3618843	"Nope, still happens if I make -f makefile.unix clean first "	nAnswer
777	3619111	What boost version? I have 1.46.1 	whQuestion
777	3619150	"Not working for me, either on an ubuntu 64 VM:  U64:src gavin$ make -f makefile.unix USE_UPNP= test_bitcoin  g++ -c -pthread -Wextra -Wno-sign-compare -Wno-char-subscripts -Wno-invalid-offsetof -Wformat-security -g -DNOPCH -I/home/gavin/src/bitcoin/src -DUSE_SSL -fno-stack-protector -fstack-protecto"	nAnswer
777	3619240	IIRC you cant define a variable in a conditional in makefiles and have it work outside the conditional. 	Statement
777	3619351	GNU Make 3.82 fixed some bugs... though not ones that I'd think affect this. 	Clarify
777	3620222	"~~Compiles now, but it still doesnt have BOOST_TEST_DYN_LINK defined, which I dont know if it will kill something, but Id say it should absolutely be there before merge (esp if this is going to be default).~~ Nevermind, ACK, though not a bugfix. "	Clarify
776	3616666	"I don't see that 500 fragments in a 500 meg file is much of an issue at all.  The excessive IO (mostly caused by sync writes and write amplification to update the transaction/block index) is a known problem, but I don't believe that fragmentation is playing much of a role in that. (Or at least this "	Clarify
776	3616832	"That was just 5 minutes. Once, this file had more than 6000 fragments. To scan such a file, assuming that avg. access time is 13 ms we need 6000 x 13 = 78000 ms = 78 seconds.  I don't know about IO issues but they may be related to fragmentation IMHO. "	Clarify
776	3617065	"Yes, but I defragmented this file before. The screenshot shows the effect of running bitcoin client for 5 minutes after I defragmented this file. So, before I started the client this file had only 1 fragment. "	Clarify
776	3617163	"Ah!  Thank you, I hadn't caught that before. "	Reject
776	4299104	Win7x64 bitcoin-qt --- blk0001.dat && blkindex.dat exploded all over my NTFS. When my HD started sounding like a dot-matrix printer and the synchronization effectively froze: I was forced to synchronously defrag.  This issue could be seriously damaging hardware and will get worse faster than the dat	Clarify
776	4301344	"This can be fixed easily, by allocating block file by larger chunks, for example by 16 MB.  EDIT: I think chunk size should be adjustable in the options dialog.  PS. I was trying to fix this by myself, but I couldn't even compile client, both with QtCreator and manually within MinGW. Perhaps an upda"	Clarify
776	4832097	Seeing this on OSX 10.7 with Journaled HFS+.  It won as the most fragmented file by such a monumental amount. I get a nice machine-gun sound from my poor drive from the seeking. 	Clarify
776	4836564	"I had this in my mind for client optimisation, too ... my blk0001.dat consists of 64000 fragments. We all now the current size is ~1.2GB, why not pre-allocate this as a whole chunk and writing to this chunk. I'm not in the code, but sounds interesting ^^. "	Clarify
776	4900916	@Diapolo this means that average fragment size is 19.5KB... this is really harming to disk drive  @gmaxwell with 500 fragments I have waited a minute to see received block count increase by one. After defragmenting blk0001.dat rate jumped to few tens of blocks/sec. Tested with latest 0.6 version.  T	Clarify
776	4951081	"I'm currently working on an ""experimental"" patch, that addresses this for the blk0001.dat file on Windows. I'm not sure if the devs are fine with such a thing, but I'm sure this can also be done for Mac and Linux. For such optimizations I would tolerate OS-specific patches as long as they don't brea"	Clarify
776	4951100	@Diapolo how does it work? How do you influence bdb?  Also: I hope it can be integrated in gitian builds. 	Clarify
776	4952090	"I can say it only works before the file exists, so for the change to be effective and active the blockchain needs to be re-downloadeded. As I'm currently in a trial and error phase, I will start posting further infos after that :). "	nAnswer
776	4959869	"@sipa I need your help (badly)! The WriteToDisk() in CBlock uses streams to write index headers and blocks. I would like to know, if I can somehow set the filepointer / position indicator, so that the data is not always appended to the end of blk0001.dat. I need to be independend of the real file le"	Clarify
776	4975398	"@Diapolo I was able to compile libs separately, but then I gave up and didn't touch it again. Please let me know when you'll finish your patches, I'll try to test them on Windows. "	Clarify
776	4979537	... still experimenting. Seems like via fseek I simply can't set the filepointer to write somewhere into a file :-/. 	Clarify
776	5056719	@pszturmaj With the help of BlueMatt I can perhaps compile a version for you to download and test. I hope to have it ready before I'm off for a few days ;). 	Clarify
776	5215700	Did anyone think about initial chain loading/verification/synchronization while holding the database completely in-memory? Memory is cheap today and this feature can be optional. If you have enough free memory (1-2Gb) why not to put the blk0001.dat and blkindex.dat there? And flush it to disk every 	Clarify
776	5218563	0.6.0.6beta still shows it  ![BitCoin fragmentation](http://cryo.ws/images/bitcoinfrag.png)  	Other
776	5232084	"> I've still yet to see a plausible measurement here showing ...  I'd propose to use ""time to desktop"" without bitcoin-qt, with bitcoin-qt and fragmented files, and after defragmentation. Otherwise the occasional reads and writes are not really a performance toll, because the last few blocks are alr"	Clarify
776	5232258	meh.  Time to desktop can be made much smaller by simply making checkblocks check the less of the end of the chain at startup or putting it in the background.     This needs to distinguish slow checkblocks from slow startup for other reasons. Especially since the checkblocks does cause sequential ac	Clarify
776	5233535	"I can confirm that synchronization slows down proportionally to the number of blk0001.dat fragments. Test is simple:  1. defragment block file 2. run client 3. observe that in the beginning it synchronizes well, but later it will keep slowing down continuosly 4. close client, check that block file h"	Clarify
776	5540672	"@pszturmaj I have a branch ready that fixes your reported problem for Windows (consider it still experimental): https://github.com/Diapolo/bitcoin/tree/InitBlockDL-exp The problem is I can't compile an executable you could try, so I rely on BlueMatt to get a working exe via Jenkins, which produced q"	Clarify
776	5550391	"@pszturmaj Sipa was so kind to build a working executable from my branch (https://github.com/Diapolo/bitcoin/tree/InitBlockDL-exp), which is based on the current bitcoin master branch. You find the files for Windows (only) here: http://bitcoin.sipa.be/builds/0.6.1-35-g34a0eab/  Would be great if you"	Clarify
776	5551379	"@Diapolo Hey, it's much better! It allocates ~2 GB block file and now it doesn't block the system anymore.  Here's a screenshot after 10 minutes of running the client: http://i.imgur.com/GSms5.png. Please note the network graph. The link speed constantly drops and increases, I think this could be op"	Clarify
776	5551877	@pszturmaj Sounds good as a starting-point. Could you benchmark (messure the time it takes to do a full block-chain download) with 0.6.1 official vs. that experimental build?  And perhaps a startup- / shutdown-time comparison :)? 	Clarify
776	5553316	"@Diapolo I'm still experiencing extensive disk access, shutdown-time was 45 sec after 3 mins of downloading (during shutdown, Hdd LED was ON and system was blocked). Before that, I temporarily closed the client and defragmented blkindex.dat and debug.log. I see that debug.log is written frequently b"	Clarify
776	5569428	"@pszturmaj  blkindex.dat is still heavily fragmented over time, but at least the blk000x.dat files should consist of a single fragment on disk. My last work was truncating unused space in the block files after they reach their max size, to save disk space and adding reading from block files via std:"	Clarify
776	5572890	"@pszturmaj more recent blocks have more transactions, and to process a transaction, all its inputs have to be looked up in the index. This index is very efficient, but since those transactions are most likely spread out over many megabytes on your disk, it will require more and more seeking as the b"	Clarify
776	27690575	Closing this as a new storage system is in use for the blocks that avoids having one large file with many fragments. 	Clarify
775	3615205	ACK 	Clarify
773	3626456	"NACK. Please don't make it harder to accept non-standard transactions.  Minor nitpick: the new sigop counting isn't P2SH-specific, even if specified in BIP 16. In the long-term, the language will probably be confusing. "	Clarify
772	3577965	Master has already moved on toward pre-0.6.  0.5.2 is in the stable repository: http://gitorious.org/+bitcoin-stable-developers/bitcoin/bitcoind-stable 	Clarify
771	3576919	Oh and as usual thanks to @sipa and @gmaxwell for comments/suggestions/general help for my C++ noobishness along the way. 	Clarify
771	4022607	"This seems to need rebasing... also, at least fedb422 and bc98084 don't belong here (and create regressions). "	nAnswer
771	4032631	"Rebased, should be pretty mergeable now (aside from the elusive performance issue). "	Clarify
771	4061228	Fixed a few minor issues and rebased.  Still nothing new on the performance issue(s). 	Clarify
771	4130323	"So, good news on the performance front.  While I was benchmarking bitcoin built in debug vs release (for gitian stuff), I noticed there was a bit of a performance decrease when built in debug mode.  As it turns out, I had always been benchmarking CBlockStore in debug mode.  When ff66202 is removed a"	Clarify
771	4245022	Rebased. 	System
771	4491902	Ridiculously minor fixes to make valgrind happy and rebased. 	Statement
771	4863328	"Rebased, added a simple unit test, and abstracted one more thing. "	Other
771	4863342	"Not sure why github is showing a few of gavin's commits that are on master in the commitlist, but they have the same commitid, and this appears to be rebased fine in git... "	Reject
771	4989700	"Closing this since after some thought I really dont trust myself to touch this much code without introducing one or two fatal bugs.  If anyone does want to look at this, @sipa spent some time cleaning up the internals to look nicer/run a bit smoother at https://github.com/sipa/bitcoin/tree/ooifiedbs"	Clarify
771	4994255	"@TheBlueMatt large refactorings always carry some risk, but imho this is a refactor that needs to happen anyway. It can probably use a few more eyes, but it seems to run without problem, so it seems a waste not trying to get it merged.  By the way, ooifiedbs is rebased against master. "	Clarify
771	5525296	Slowly working on rebasing this. 	Clarify
771	5533709	Rebased against master. 	Statement
771	5536064	"I get one potential deadlock: in net.cpp, AskForBlocks sends messages while holding the cs_vNodes lock. It's better to make a copy of the node you need to contact, ->AddRef() it, send the message, and ->Release(). "	Clarify
771	5544797	Fixed. 	System
771	5546522	"Spent some more time double checking and triple checking the latest rebase...found one more potential deadlock, fixed one potential race...more checking to be done @Diapolo Ill check in the morning, its almost 6am... "	Clarify
771	5564417	"Fixed the one other potential deadlock I'm aware of...its kinda an ugly fix, but it works, and since the transaction copying only happens in the cblockstore callback thread(s), it shouldn't effect performance either way. Gonna do more testing in the next few days, but this should be pretty good righ"	Clarify
771	5588213	Rebased onto current master. 	Statement
771	5594553	"Rebased and have been testing...looking largely good to me, so any additional eyeballs at this stage would be appreciated. "	Statement
771	5985676	Closing to redo from the ground up (again).  Continuing rebasing this would simply cause issues and no doubt create odd interactions with recent commits. 	Clarify
770	3617856	"Getting:   subprocess.CalledProcessError: Command '['strip', '-x', 'dist/Bitcoin-Qt.app/Contents/Frameworks/libssl.1.0.0.dylib']' returned non-zero exit status 1  ... because:  bash $ ls -l dist/Bitcoin-Qt.app/Contents/Frameworks/libssl.1.0.0.dylib -r-xr-xr-x  1 gavin  gavin   383K Jan 12 11:46 dist"	Clarify
770	3661590	"tbh, I chmodded that file long ago in /opt/local/lib/libssl.1.0.0.dylib to get rid of that issue for good. Only a tiny amount of files with the .dylib extension don't have the executable flag set in /opt/local/lib and thus I considered this an error on the MacPorts side. "	nAnswer
770	3805525	"Any objections to this patch to workaround the MacPorts bug?  If not, I'll pull your changes and this patch:  ``` diff --git a/contrib/macdeploy/macdeployqtplus b/contrib/macdeploy/macdeployqtplus index 914edb7..e159f9b 100755 --- a/contrib/macdeploy/macdeployqtplus +++ b/contrib/macdeploy/macdeploy"	Other
770	3819060	"No objections, go ahead. "	nAnswer
770	3830438	Pulled 	Statement
769	3572199	How about just stripping it out instead? ;) 	whQuestion
769	3805583	visual ACK  	Clarify
769	3805631	"To elaborate, stripping it out would enable service providers to add an extra signature for 0-confirmation trust, rather than the blockchain-spamming ""green addresses"" proposal. "	Clarify
769	3830458	"Stripping is a bad idea, that changes the transaction id.  "	Statement
769	3830657	"It should have no effect on normal clients, which won't add extra data. Clients that do add extra data can be written to expect the change. "	Reject
766	3552172	"It's not useless, and not worse. Stop trolling.  [14:59:12] <luke-jr> BlueMatt: I'm not going to waste time arguing over something stupid like this. It's better now than it was before. If you want to improve on it, go ahead. If not, that's no excuse to complain it's imperfect and rip it out.  "	nAnswer
766	3552194	"My point is that its worthless info, mucks up the code that much more, and should never have been merged.  Since its not actually released, there is no harm in removing it. "	nAnswer
766	3552424	Readded nPooledTx and nLastBlockTx in a reasonable way. 	Statement
766	3552438	currentblocksize is missing 	Statement
766	3552681	"I'm not gonna fix all your code for you, I was just showing that your claims that it's impossible to do well without a ton of changes were unfounded.  Luke-Jr <reply@reply.github.com> wrote:  currentblocksize is missing  ---  Reply to this email directly or view it on GitHub: https://github.com/bitc"	Emphasis
766	4032545	Superseded by 4b54cb93e87816c50e5da90767ee1bc056166552 in cblockstore. 	Statement
765	3571765	What about tx replacement if the tx that the to-be-checked tx depends on adds additional inputs? 	whQuestion
765	3572010	"Nevermind, only applies if the local node is allowing rd replacement.  Though maybe we want to make sure this will still work  when we do rd replacement. "	Clarify
765	3618479	ACK 	Clarify
761	3508262	"Done http://pastebin.com/FcEEGpee Well, not exactly what you proposed but it was embedded into the blockchain. block 00000000000001c34b2c76e47138220243d644d7ec1cf9b22391fd072e58dcb2 2012-01-16 09:12:10 UTC "	nAnswer
761	3532456	haha. Thanks 	Statement
760	3507184	"So, what would you propose for increments? "	whQuestion
760	3514571	.01 or .001/5 BTC 	Statement
760	3522301	@TheBlueMatt I think it should be even lower than that. One click and the transaction fee doubles doesn't look right. Maybe 0.0005. 	Clarify
760	3816989	Changed...  	Statement
759	3499455	ACK 	Clarify
759	3502462	"I reviewed this, and it works for me. ACK. "	Reject
759	3551781	ACK 	Clarify
759	3572404	"This needs to be rebased on top of coinbaser, as it duplicates some functionality. "	Statement
757	3491914	"ACK, verified (contains whitespace changes) "	Other
757	3496138	"ACK everything but src/json/json_spirit_reader_template.h (that is copied source from json, and I see no reason it needs to comply with our coding standards). "	nAnswer
757	3551794	"Agree with Matt, changing json_spirit_reader_template.h is a bad idea, I like the other changes. "	nAnswer
756	3501367	"Are you sure it's not just having a ton of connections? I set maxconnections=50, and i never experienced any slowdowns. (1 Mb(bits)/s upload, by the way.  edit: https://github.com/bitcoin/bitcoin/issues/273 "	Clarify
756	3502062	"It could be that also, not sure...I'm assuming that maxconnections=50 goes into bitcoin.conf ? "	Reject
756	3504227	@itstooez: yes 	Accept
756	3667249	"Yes this would be a nice feature... would require quite invasive changes to the net layer though, but eventually we want up/download speed tracking anyway. "	Clarify
756	3956791	BTW this is a duplicate of #273?  	ynQuestion
756	4145295	Closing as duplicate of #273 	Statement
755	3483543	"I have no problem with being able to state your opinion about the matter when running the client (even though using the client already implies some form of consent).  However, the coinbase-voting is intended to be a good representation of the mining power behind the proposal. As the current codebase"	Clarify
755	3551833	"Either a -p2sh=1/0 or a -nop2sh=1/0 is OK with me, but not both (what happens if I screw up and specify -p2sh=1 -nop2sh=1 ?) "	Reject
755	3552826	I didn't realize bool args took a parameter ;)  Refactored with -p2sh[=0/1] 	Clarify
755	3805514	"I agree w/ sipa:  create a ""nop2sh"" option, which is disabled by default (i.e. p2sh is enabled by default) "	Clarify
755	4021183	"#804 merged, closing "	System
752	3435800	ACK  	Clarify
750	3397300	(these were legacy from original debian folder used for official debian releases) 	Other
750	3407780	ACK 	Clarify
749	3554563	Still broken as of 0.5.2 	Emphasis
749	4159160	"Cannot reproduce on OSX 10.6.8.  There was a report of Bitcoin-Qt not working with some version of Growl, are you using the Growl desktop notifier? "	ynQuestion
749	4159259	"On 24 February 2012 16:55, Gavin Andresen < reply@reply.github.com > wrote:  > There was a report of Bitcoin-Qt not working with some version of Growl, > are you using the Growl desktop notifier? >  Yes, version 1.2.2 "	Other
749	4173623	"I've tried to shut down growl, but it didn't work anyway. "	nAnswer
749	4565881	Is this still broken for you with 0.6rc4 ?  	ynQuestion
749	4894925	   07/01/12 17.59.25 [0x0-0x59059].com.yourcompany.Bitcoin-Qt[480] Break on THE_..._EXEC() to debug.  Can you try this and see where it ends up?  	Clarify
749	4897018	"Compiling an updated version from git, I'll let you know. "	nAnswer
749	4897584	Trying to build I got a lengthy error at linking stage --> #1027 	Emphasis
749	5148013	Does this still happen?   Did you manage to debug it?   	ynQuestion
749	5292025	"Right, sorry. I'll build it and test it and let you know. Or is there a precompiled binary ready to be tested? "	ynQuestion
749	5293000	0.6.0 final is already released. 	Statement
749	5335602	"Yeah, I confirm it works (though I guess you already knew that). Sorry for the late response! "	Clarify
749	5335651	"You are able to close this ticket, and as it now works :) ... "	Emphasis
748	3413715	"genjix makes a good suggestion: refactor ConnectInputs so fee payment is computed, and transaction possibly rejected, before ECDSA signature checking.  Also sipa's base58 encoding for public keys (compressed or full) aught to be used in the validateaddress/addmultisig RPC calls.  "	Clarify
745	3373608	Debug.log -- http://www.multiupload.com/HK5A2ES0PT 	System
745	3373681	Txn 3fa4823dbd is missing from his index. It's in block 152704 	Statement
745	4145195	Closing as cannot reproduce; likely an unlucky bad write to the blkindex.dat file.   	Clarify
744	3364770	Is there some kind of more information button somewhere? 	Other
744	7842881	Does this still happen with more recent versions? 	ynQuestion
743	3386834	"visual ACK (== I did not build or test it, only a github conceptual review) "	Clarify
743	3454586	"Gavin, this branch is missing in your repo...? "	ynQuestion
743	3455691	I removed this branch accidently-- restored.  	Statement
742	3355424	"Ah, what do you mean with ""1KB""? 1024 B? In this case, the correct unit is ""1 KiB"":  http://en.wikipedia.org/wiki/Kibibyte  Ciao! "	Clarify
742	3454456	"No, it's per 1000. So kB would be right.  However, remember that you need to change the message (at least the &lt;source> one) in *all* the translations if you change English.  "	Clarify
742	3634220	"Despite SI, ""KB"" has traditionally been defined as 1024 bytes. "	Statement
742	3817019	"@tcatm do you know of an efficient way to update this in transifex, in one go?  "	whQuestion
742	3817120	"I think you can tx pull, sed 's/KB/kB/', diff and tx push (tx is the tool to work with transifex). "	Clarify
742	3920557	Fixed 	System
740	3337214	would be much nicer if you just typedef std::vector<char> vector_type; :P 	Other
740	3337231	"I prefer it the other way, but meh I dont care; changed. "	nAnswer
740	3341582	"Same error here, on Ubuntu. I'm also in favor of keeping the zeroing functionality, even for non-mlocked allocations. "	Statement
740	3341703	"Boost apparently does have an allocator, which you can override how it gets memory:  http://www.boost.org/doc/libs/1_47_0/libs/pool/doc/interfaces/user_allocator.html If we want to be properly security paranoid, and we're using a specialized allocator, we could potentially add canary functionality j"	Clarify
740	3344150	"Fixed (I need to stop coding so late, probably also why I didnt catch this bug before I included it in my encryption pull...) My 2 cents (well, ok more like 1): use-after-free exploits are so rare its almost not worth doing the freeing.  When you combine that with the fact that the item in question "	Clarify
740	3344492	"Oops more to fix( I had to board and didn't have time to test it) I'll fix it when I'm in the air and have wifi  gmaxwell <reply@reply.github.com> wrote:  >Boost apparently does have an allocator, which you can override how it >gets memory:  >http://www.boost.org/doc/libs/1_47_0/libs/pool/doc/interf"	Clarify
740	3351576	Actually fixed in that commit. 	Statement
740	3353097	"ACK, this is great :)  "	nAnswer
740	3356239	"I love the performance improvement, but I still don't like the elimination of zero-after-free. Security in depth is important.  Here's the danger:  Attacker finds a remotely-exploitable buffer overrun somewhere in the networking code that crashes the process. They turn the crash into a full remote e"	Clarify
740	3356541	"The performance difference from avoiding the zeroization doesn't appear to be huge: It saves about 30 seconds out of a 30 minute full sync (compared to not zeroizing).  Chart showing all mlocks gone, vs bluematt's patch: http://people.xiph.org/~greg/bitcoin-sync.png  The bluematt patch gets a late s"	Clarify
740	3359285	"I was thinking it would make more of a performance difference, but as long as its very minor, I just made it zero_after_free. "	nAnswer
740	3359368	BlueMatt: I don't think you should have to provide a allocate(). Though maybe it's fine to leave it in case we convert it into a canary allocator.  	Clarify
740	3362592	ACK 	Clarify
740	3363921	"@gmaxwell heh, of course...maybe I just need to give up programming at this point... "	Clarify
740	3365334	ACK 	Clarify
739	3341895	It looks to me like the best way to solve this is to add support for the Tor socks extension that adds a resolve command. The tor-resolve tool uses this functionality to do DNS lookups for users: https://gitweb.torproject.org/tor.git/blob/c3e63483b2f16eb1717035eac4c14315b95671f5:/src/tools/tor-resol	Clarify
739	3342682	Fixed in a pull today (please help test if you can).  Relevant code is all in init.cpp:      bool fTor = (fUseProxy && addrProxy.port == htons(9050));     if (fTor)     {         // Use SoftSetArg here so user can override any of these if they wish.         // Note: the GetBoolArg() calls for all of	Clarify
739	3848092	"@gmaxwell: yes, I don't think there is a way to detect tor, hence the awkward heuristic of checking for port 9050. So probably we should add a ""tor"" checkbox in the UI and a `-tor` commandline option? "	Clarify
739	4967295	"@gmaxwell For IPv6, I've already implemented SOCKS5 client support, which is also provided by Tor. SOCKS5 supports IPv4, IPv6 and hostname destinations.  Is there any reason to stick to SOCKS4? "	Clarify
739	4968772	"Some legacy and/or custom proxy software supports only SOCKS4.   I really don't know how much of a problem this is for bitcoin, but dropping support for v4 based on implementing v5 is not very common. Most software has a 'proxy type' setting which can be set to either 4 or 5 (sometimes also 4a which"	Clarify
739	5672774	I think this can be considered fixed since -proxydns? 	Clarify
738	3335423	"Thanks to gmaxwell for finding the bug and testing my patches, by the way. "	Statement
737	3335445	Fixed by 6ceeb3e917e5435bc5faac222fe14f3343be99f7 	Other
736	3434650	Doesn't -datadir work? 	ynQuestion
736	3441066	"I was thinking a gui option in bitcoin-qt. Does -datadir need to be specified with every run of the program, or does the setting get saved somewhere? "	nAnswer
736	3501418	"@Skinkworks: no, it needs to be specified on every startup. coincidentally, datadir also specifies where bitcoin.conf is, which causes a chicken-and-egg problem about where to save settings. "	nAnswer
736	6219965	"As Bitcoin-Qt does not save settings from the optionsdialog in the datadir it should be possible to implement this, but priority for this is rather low. "	nAnswer
736	6768310	"I would also like to +1 this option. Ideally I'd like the datadirectory to be inside the installation directly. Especially when using the 'portable' "".zip"" version, it would be nice to have it all localized, aka, not use any external directories. I was thinking by default it should try ""%installatio"	Clarify
736	15633488	"The problem is that, by the time you get the UI, the datadir will already have been created and filled.  The only way around this would be to have a 'first use' screen in which the datadir can be selected (as, indeed, as @Diapolo says, the Qt settings are not stored in the datadir). "	Clarify
736	22065716	"Since vista we can use symbolic links with the command line (with admin rights) MKLINK /D linkname targetfolder . In that case, it will do something like MKLINK /D %AppData%\Bitcoin Z:\BitcoinData , where Z:\BitcoinData\Bitcoin is the new folder for the data. You need to stop the bitcoin programs an"	Clarify
736	28121567	Setting the data directory after installation has been possible since #2670 was merged 	Clarify
735	3342374	"ACK, compiles and runs on my Mac.  I'll let somebody else comment on the API, network programming isn't my thing.  "	Clarify
735	3352998	"Code changes OK, compiles and runs on Ubuntu 11.10. "	Statement
735	3354020	Also compiles on ubuntu-mingw. 	Statement
735	3354062	"Forgot to mention: because name lookups happen using the unified getaddrinfo() call, a #define _WIN32_WINNT 0x501 was necessary, which means WIndows XP or later. Is it a problem to break compatibility with Windows 2000 and earlier (not even sure it still worked on those)? "	Clarify
735	3354120	"Yes, I noticed that, but it's fine with me, no need to support >10yr old OSes "	Reject
735	3363945	"Bitcoin currently doesnt work on pre-WinXP (due to issues with the build of miniupnpc, which I still havent fixed, but I suppose if you are going to break it again, might as well not bother)... "	Clarify
735	3378630	"@laanwj: by the way, does it work in the windows dev environment as well? "	Emphasis
735	3386369	"overall ACK  Minor quibble, maybe ignore-able:  The connection logic in CService feels like it belongs in a separate class.  CService and CNetAddr seem more focused on address and/or endpoint datum, whereas the connect() logic seems more in the socket realm. "	Clarify
735	3387857	@jgarzik: I moved ConnectSocket out of CService. 	Statement
735	3389022	visual ACK  	Clarify
735	3394514	I see nothing obviously wrong 	Clarify
734	3338486	I've fixed this (see pull request #734)   	Clarify
733	3333466	"Whats the motivation for this?  Also, wont this break a ton of other logic? "	whQuestion
733	3334291	"it fixes what I perceived to be a bug since the code didn't act as this comment said it should:          // Only consider transactions ""mine"" if we own ALL the         // keys involved. multi-signature transactions that are         // partially owned (somebody else has a key that can spend         /"	Clarify
733	3336639	"Sorry, I saw IsMine and didnt bother to read that it was in MULTISIG...gavin would know better if this is a bug. "	Statement
730	3281375	ACK.  I should've written a unit test...  	Statement
729	3278269	I am posting a comment here solely to be notified of other replies. Blame GitHub. 	Statement
729	3279409	"You could just ""follow"" bitcoin/bitcoin and then get all new pulls/comments/issues in a nice RSS feed (though this post is largely because I want comments to this issue in email too...) "	Clarify
729	3279880	"Yeah I'd suggest against using `++` in a parameter to a function call, if only because it is unclear when reading the code.  I tend to agree with you about OP_EVAL not being thoroughly enough vetted. The code is new and there's already been one last-minute almost fatal vulnerability. I'm inclined to"	Clarify
729	3281478	"I'm open to suggestions on how to get code more thoroughly vetted BEFORE being pulled into mainline. In my experience, most people ignore changes until they are part of git HEAD.  RE: roconner's rant:  Proving the time and space bounds of Script is a great idea-- roconner, can you make that happen? "	Clarify
729	3281584	"Agreed @gavinandresen I don't think simply delaying the change would have won much. People hardly look at ""non-official"" branches.  Somehow we should encourage more people to take a look at the source carefully, and attack it from any angle possible. Thanks a lot @roconnor. "	Clarify
729	3283107	"@gavinandresen can you (or someone else) clearly document all the desired functionality that you want from OP_EVAL, giving examples of how it would work, either in the BIP_0012 wiki page or linked from the wiki page?  Maybe we can find an alternative way of getting all this functionality without suc"	Clarify
729	3283166	"I think a good compromise would be delaying OP_EVAL on the client end, and enabling it fully on the miner end. This basically has the same net effect except that OP_EVAL transactions need a couple more confirmations before they can be trusted.  The problem with poor review of other clients/branches "	Clarify
729	3287780	"@roconnor Go into more detail about these ""nice properties"" of the scripting system that OP_EVAL destroys and then we can talk about how important these properties are and how to preserve them.   It seems easy in principle to limit the evaluation time of scripts and forbid looping constructs by prev"	Clarify
729	3287820	"No, I'm pretty sure he means reviewing the entire script before execution. This is not false. "	nAnswer
729	3287997	"@roconnor: reasons for, and advantages/disadvantages of, OP_EVAL were discussed pretty extensively in this forum thread three months ago:  https://bitcointalk.org/index.php?topic=46538.0  Initial implementation was available for code review on October 19'th, over three months ago.  I know everybody "	Clarify
729	3288118	"IMO, new *protocol-level* features probably should have at a minimum 6 months - maybe a whole year - of testing/review, with ideally at least 3 or 4 competent developers signing off as having actually read the code and given it some thought. On the other hand, new features that don't affect the prot"	Clarify
729	3288758	"I have no idea how much such a thing would cost, or if there is remotely the budget to get such a thing done, but what would people think of asking large pools, exchanges, and other interested companies to contribute to get a professional code review of new major bitcoin releases, or maybe every oth"	Clarify
729	3288766	"Also, I agree that we need a more strict set or pre-pull ACKing rules, maybe not 6 months of review, but ie a minimum of 3 ACKs from official developers before pulling, and not just I read this acks, but I at least compiled this and read it very carefully. "	Clarify
729	3292006	An important point of my comment was the distinction between protocol-level changes and other changes. 	Clarify
729	3293769	"Good morning all.  @gavinandresen @ByteCoin: I glanced through that thread a while ago (BTW, extracting the use cases of OP_EVAL from reading that thread is difficult, which is why I expected a summary of uses to be in the BIP) and there seemed to be enough skepticism in that thread and on #bitcoin-"	Clarify
729	3294409	"@luke-jr I agree there should be a distinction, though I would put the distinction more along the lines of gitian/contrib/doc/minor ui  changes vs core/protocol/etc changes.  Though maybe protocol changes need acks from other client devs too.  Luke-Jr <reply@reply.github.com> wrote:  >An important p"	Other
729	3294453	"OP_EVAL should do exactly what it says in the BIP-- clearing the alt stack and the fExec state are bugs, because the BIP doesn't say they should be cleared.  RE: how many other bugs are lurking:  who knows?  That's why we code review and test, and that's why bitcoin is version zero-point-something. "	Clarify
729	3294601	"No no, clearing the fExec state isn't a bug.  God have mercy on us if OP_IF statements can start in an OP_EVAL block and end outside it.  I have no idea about the alt_stack.  After all the alt_stack is cleared between the output script and the input script running. "	nAnswer
729	3294624	"@ByteCoin Long story short, OP_EVAL effectively makes static analysis of scripting code impossible, and for this reason alone I personally reject the entire proposal.  But even if this doesn't bother you, the fact that OP_EVAL isn't well specified and hasn't yet been well implemented should be enoug"	Clarify
729	3294629	@gavinandresen You make it sound like OP_EVAL is the only possible mechanism to enable distributed trust. 	Clarify
729	3294718	"@gavinandresen OP_VERIF *is* disabled.  But it is processed this way because of this code:       else if (fExec || (OP_IF <= opcode && opcode <= OP_ENDIF))  OP_VERIF is in between OP_IF and OP_ENDIF so it is executed, but since there is no case handler, it fails.  My point is that this complexity is"	Clarify
729	3294782	"@roconnor and @luke-jr : Let's consider pragmatic Bitcoin development politics. We've said that ""the perfect is the enemy of the good"". Gavin's a good project leader and I think it's more productive to support his development vision than to second guess it and throw sand in the gears.   By far the b"	Clarify
729	3294877	I apologize if I've come across as harsh.  I only raise my voice loudly due to the urgency of the situation.  Once OP_EVAL transactions start trickling in in a few weeks there would be no turning back and I hadn't realized before this week that OP_EVAL was so close to being deployed.  I totally resp	Clarify
729	3295133	"@ByteCoin, I think you mean the ultimate sanction is to fork... Anyhow, I've tried to make Gavin's job easier with the 'next' (only stuff the core team has approved) and 'next-test' (that plus other stuff not yet accepted) branches, but he seems to prefer ignoring them and delaying merges until he g"	Clarify
729	3295451	@luke-jr Re: Fork vs Leave. How would we tell the difference? 	whQuestion
729	3295574	@ByteCoin: someone forking would release a new client. ;) 	Clarify
729	3295642	@luke-jr And this would be noteworthy for some reason? 	Continuer
729	3325652	"My thoughts: I am protocol-conservative implementation-liberal by nature. I would prefer slow and steady with the protocol rather than moving hasty. With the implementation things should be much faster in current bitcoin. 6 months is nicer than 3 for this :)  However, that's just my preference. Whoe"	Clarify
728	3265705	More to come... (Win32 gitian stuff is a pain as it requires libpng and its deps...) 	Statement
728	3269582	ACK 	Clarify
728	3269734	Don't get too execited acking yet...I thought I would have the win32 gitian stuff done quick but I got distracted and also need to do libzlib and libpng.  	Clarify
728	3270383	"OK, that should work (though I havent tested the win32 stuff, just wrote it and got it to compile myself outside of gitian)... "	Clarify
728	3288120	"Also, ACK on the added commit. Can't personally test, but it looks sound and simple. "	Clarify
727	3266344	"ACK  though I still prefer original getblock/dumpblock, which provides more information than 'gettransaction' presently provides: full script dump, full expansion of vin/vout, etc.  Much more raw and programmer-oriented. "	Clarify
727	3268607	"If you feel like a little after-Christmas coding, I'd be OK with an expanded gettransaction that returns all the gory details. Or that returns information for non-wallet transactions.  "	Statement
727	3270863	ACK 	Clarify
727	3271479	"I would lean towards adding a separate 'dumptx' that returns all the gory details, keeping it separate from current gettx.  But that's separate from this pull request... "	Statement
726	3264285	"Forgot to say how I tested:  Ran bitcoind normally to get caught up on the block chain, verify that I get more than 8 connections, and verify (by looking at debug.log) that I connect to the dns seeds and IRC.  Ran Vidalia on my Mac, got connected to the Tor network. Ran bitcoind -proxy=127.0.0.1:205"	Clarify
725	3263824	"The bitcoin protocol only exchanges peer addresses as IPs, isn't it?  Does it ever connect to a hostname instead of an IP? (only for seeding maybe?) If so, it indeed should do this directly through SOCKS, and not by first looking up the name using DNS, as this exposes the host name to anyone listeni"	Clarify
724	3275422	"As far as I can tell, it would be fairly simple to calculate. But I wonder if it's relevant to the ""Overview"" tab, as this - as it is now - only concerns itself with information relative to the wallet. "	Clarify
724	3279420	"Not so fast, you could do 50*block count, but at least one block actually has 49.9999... (and the loss of fees) so you would have to go through each block and total bitcoins (not that that is impossible, but its not a fast process..) to get an accurate count. "	Clarify
724	3282718	"Interesting. I thought the protocol required a reward of 50 BTC per block until block number 210,000. Or is 50 BTC simply the maximum reward, and clients will accept blocks with *up to* 50 BTC as the reward? What is the block number with the 49.9999... reward?  **EDIT:** I found out by looking in th"	Clarify
724	3289528	blockexplorer doesnt show it right due to a bug (use raw version instead) but here it is: http://blockexplorer.com/block/0000000000004c78956f8643262f3622acf22486b120421f893c0553702ba7b5 	Clarify
724	6791735	Real-time block chain analytics are more appropriate for blockexplorer or blockchain.info etc. 	Statement
723	3259714	ACK 	Clarify
723	3260258	"Just tested this, it works "	Statement
722	3258761	You get this with error with the pre-built binaries? What platform?  	whQuestion
722	3259122	yes linux 	yAnswer
721	3262572	"Is this really necessary?  All of the extra information (and more, I believe) is returned in some form or another from the existing ""getmemorypool"" command.  "	Clarify
721	3262589	"Maybe if one wants to do the math externally, making a number of assumptions on data not included... ""getmemorypool"" also has a lot of overhead, while this has basically none. "	Clarify
721	3387039	"Initial reaction:  IMO not needed / overkill.  It's not the end of the world if we just add a few new fields to 'getinfo', if it is simply additional information you desire.  It is not as if getinfo is somehow resource constrained.  However, after thinking a bit more, I think it would be nice to (1)"	Clarify
721	3470692	"Agree with @jgarzik here: let's clean up getinfo, and create a specific getmininginfo call for those who are interested.  Over what time frame can we remove fields from getinfo?  "	whQuestion
721	3473475	"The commit should remove gen/gpl/hps from getinfo, and create getmininginfo, at the same time IMO.  I would ACK that for immediate timeframe. "	Clarify
721	3473582	Like this? 	ynQuestion
721	3481510	"looks great, thanks "	Statement
720	3236009	"ACK, though I'm unsure of the value of this code churn "	nAnswer
719	3451507	"1) can we get by with just 'setworkaux' and no -coinbaser? 2) if we are doing -blocknotify as system() only (see separate pull), drop TCP socket here and do same 3) meta: should be collapsed into fewer commits 4) mapAuxCoinbases seems like it should really be a vector 5) truncating script at 100 byt"	Other
719	3451775	"1) no reason to; people are moving to other software for mining because bitcoind doesn't support these 2) system() is too simplified, this needs popen() to get stdout from process; TCP socket can probably go, but might be needed since this could potentially be higher-load (new blocks, on the other h"	Clarify
719	3451817	"Also, the current code has had months of testing. Any major restructures just for the sake of restructuring are liable to possibly introduce bugs, and there's really no reason or need to do so.  This is needed, there's no known problems with it, it's had months of testing and reviews, and Gavin OK'd"	Clarify
719	3454050	1) I'd rather see setworkaux and coinbaser in separate requests as well; the latters seems a lot more intrusive and maybe much less needed 2) is popen() so difficult? 3) i don't care 4) i don't care 5) as long as pre-automated-modifications to the coinbase are guaranteed to cause failure if it's ove	Clarify
719	3454126	"1) -coinbaser has zero ""intrusive"" unless enabled, is very isolated, and very well tested for nearly a full year. 2) popen() ""just works"" on every OS "	Other
719	3470075	"3) Rebased into 5 logical commits 6) Now using std::numeric_limits instead of limits.h, like the rest of Bitcoin as of recently 7) Removed OP_EVAL-specific advertisement; miners can still advertise it (or any other vote) via setworkaux, or a similar vote can be re-added the same was as before in a n"	Clarify
719	3471152	"Fixed a bug sipa found and one it made me think to check: - pclose() might not be portable on sockets, so use fclose for those - Windows needs closesocket() after fclose(), and in case of error, to cleanup the socket "	Clarify
719	3471202	"Not sure still about necessity, but ACK on the code changes. "	Reject
719	3577574	"It would be really handy if coinbaser were merged with the mainline.  I have to do enough changes to my code to upgrade and then test without having to also do basics like this.  It seems like it would be an addition that has no drawbacks to those who do not use it and advantageous to those who do, "	Reject
719	3588190	ACK on the changes to RPC getmemorypool. 	Statement
719	4567234	"Since this has gone two .y releases without merging, and I no longer have any use for it myself, I have decided that unless someone (with push access) agrees to merge it, I will no longer be rebasing it, and it will drop from my 'next' branch when the inevitable 0.7 changes conflict with it. If you "	Clarify
719	4679422	This no longer merges cleanly; closing. Reopen if someone is willing to merge to master. 	nAnswer
718	3336015	This one keeps happening with version 0.5.1 whenever I try to connect p2ppool to it.  Problem signature:   Problem Event Name:    APPCRASH   Application Name:    bitcoin-qt.exe   Application Version:    0.0.0.0   Application Timestamp:    4d44aa00   Fault Module Name:    bitcoin-qt.exe   Fault Modul	Clarify
718	3336396	Problem signature:   Problem Event Name:    APPCRASH   Application Name:    bitcoin-qt.exe   Application Version:    0.0.0.0   Application Timestamp:    4d44aa00   Fault Module Name:    bitcoin-qt.exe   Fault Module Version:    0.0.0.0   Fault Module Timestamp:    4d44aa00   Exception Code:    c0000	Other
718	3336655	"Those really arent useful, is there a more information option, or can you attach a debugger to bitcoin? "	ynQuestion
718	3345955	ntoskrnl.exe!memset+0x64a ntoskrnl.exe!KeWaitForMultipleObjects+0xd52 ntoskrnl.exe!KeWaitForMutexObject+0x19f ntoskrnl.exe!__misaligned_access+0xba4 ntoskrnl.exe!__misaligned_access+0x1821 ntoskrnl.exe!KeWaitForMultipleObjects+0xf5d ntoskrnl.exe!KeDelayExecutionThread+0x186 ntoskrnl.exe!NtWaitForSin	Statement
718	3345997	ntoskrnl.exe!memset+0x64a ntoskrnl.exe!KeWaitForMultipleObjects+0xd52 ntoskrnl.exe!KeWaitForMutexObject+0x19f ntoskrnl.exe!__misaligned_access+0xba4 ntoskrnl.exe!__misaligned_access+0x1821 ntoskrnl.exe!KeWaitForMultipleObjects+0xf5d ntoskrnl.exe!KeRemoveQueueEx+0x323 ntoskrnl.exe!ExQueryAttributeInf	Emphasis
718	3346044	This crash is easily reproduce able. Simply try to connect to the client with p2pool version .8 or .8.1. 	Clarify
718	3346077	Problem signature:   Problem Event Name:    APPCRASH   Application Name:    bitcoin-qt.exe   Application Version:    0.0.0.0   Application Timestamp:    4d44aa00   Fault Module Name:    bitcoin-qt.exe   Fault Module Version:    0.0.0.0   Fault Module Timestamp:    4d44aa00   Exception Code:    c0000	Other
718	3589603	0.5.2 qt continues to crash when used with p2pool. 	Statement
718	4885771	"This is a known problem, and should be solved with 0.5.3.1 and 0.6.0rc4 "	nAnswer
717	3212532	Done so that we can remove startup links to bitcoin-wx Code almost exclusively copied from bitcoin-wx 	ynQuestion
717	3213533	ACK 	Clarify
717	3221563	"I'd expect this to be in init.cpp, not util.cpp.  "	Statement
717	3223510	ACK 	Clarify
716	3212729	ACK 	Clarify
715	3209445	NACK.  	System
715	3210334	I love nonsensical NACKs. Especially on bugfixes. 	Statement
715	3210965	"All right, NACK:  adds 40 lines of code and a bunch of confusing #ifdefs for no good reason.  "	nAnswer
715	3211023	Adds 40 lines of code for complying with the community standard everyone accepted... 	Statement
715	3212741	"Complying with the standards as you read it (I dont read it that way, but whatever) doesnt take 40 lines anyway. "	Clarify
715	3454309	"Indeed, it could be done in fewer if we had an unanimous consensus whether there should be a difference between how bitcoind and Bitcoin-Qt advertise themselves. But making it configurable so both camps can be happy does take slightly more code. "	Other
715	3805619	"NAK also.  Current client has been out there with current behavior, making the new standard not as widely accepted as implied.  There are also disagreements over how one reads the standard. "	Clarify
715	3805887	There is no current released client out there with the broken behaviour. Please merge this fix or reopen... 	nAnswer
715	4104530	"This patch seems to change several things at once, but at least one is very reasonable imho, namely the fact that bitcoind now advertizes itself as Bitcoin-qt. A much simpler patch would allow fixing that. "	Clarify
715	4106048	"Actually, what about just changing the version string to ""/Satoshi:0.6.0/"" ? "	whQuestion
714	3324415	"On Linux, this leaks a zombie process every time the best block changes, which is probably going to result in PID exhaustion and stuff breaking eventually. Try for example 578e6df8827b74c97a2553b04a6d445ae7628b34 in addition. "	nAnswer
714	3326939	Good catch. Fixed the most graceful way I could find: by detatching the blocknotify process.  I avoided SIGCHLD since it has the potential to not play nice with other stuff. 	Clarify
714	3346006	Superceded by #743 	System
713	3199089	"Ive seen this asked for several times, though Im not sure how easy it is to do in qt, I'd assume it cant be that bad... "	nAnswer
713	3199938	"This is a duplicate of #678  Switching languages on-the-fly is not so simple, you'd have to change all the strings in all the open windows. It could work after a restart though, if you'd store the language in the wallet with the other settings...  "	nAnswer
713	5147881	"This could be implemented now that the UI has its own settings store, which it reads before loading the translators, and no longer needs to rely on the wallet.  "	nAnswer
713	5454871	"@laanwj Is this on track, I think it would be a great addition to the GUI. Have you code ready or some links to read in perhaps ;)? "	Clarify
713	5456469	"I would also like to request this feature, a language selection option should be added to installation and/or a GUI menu. "	Clarify
713	5456674	"@diapolo  * initialization/OptionsModel: Allow the OptionsModel to set the default of the -lang option (easy, it's already in the right place) * OptionsModel: add an option for setting the language, make sure its saved to QSettings * OptionsDialog: add a widget to set the language to one of the page"	Other
713	5602961	This has been implemented and merged.  	Statement
713	5603015	"Cool, thanks! "	Emphasis
712	3198204	"I would highly prefer -keepnode=localhost, this just seems like a hack "	Statement
712	3199732	"You mean adding ""keepnode"" as a new argument?  This pull's approach seemed like a bit of a hack to me too, though defaulting to allowing extra local connections could only help in cases like these and can't hurt. Not limiting local connections at all would look cleaner, but has a slight potential to"	Clarify
712	3204317	"As in #454.  Forrest Voight <reply@reply.github.com> wrote:  >You mean adding ""keepnode"" as a new argument? > >This pull's approach seemed like a bit of a hack to me too, though >defaulting to allowing extra local connections could only help in cases >like these and can't hurt. Not limiting local co"	Clarify
712	3238679	"This might cause problems when we fix issue #610 -- I like Matt's suggestion, although I think it should just be:  addnode=local.ip.address.1 addnode=local.ip.address.2  ... etc ...  "	Clarify
712	3269421	I agree (and want to watch this pull) 	Clarify
712	3486535	"This was a hack, though I'd like to get addnode or keepnode to default to allowing localhost... "	Statement
711	3194035	"Does this happen on a specific passphrase, or no matter what you enter?  What platform?  "	Emphasis
711	3195590	"I am on the MAC OSX 10.7.2 LION  The passphrase seem to work if I create a new bitcoin folder in version 0.4/0.5  Problem is the original dat file was created since early client 0.3  Durning one of the migration to each version I was having a bug when I get a new transaction, the client would automa"	Clarify
711	3195691	"Hmm, it seems you have one (or more) private key(s) that are somehow corrupted.  I would recommend moving any and all coins in the wallet to a fresh wallet.  If you can provide more info on when/how corruption might have happened and on exactly which versions, it would be appreciated. "	Clarify
711	3196409	My wallet file is encrypted is there anyway to decrypt the file so I can move out all my bitcoins?  I can't use the client since every time I enter in the right passphrase the client crashes. 	Clarify
711	3196436	"Ah, well now thats a problem...do you not have a wallet file backup? "	Emphasis
711	3196484	"I've looked a bit at the source, and it seems this error is thrown when your wallet contains an invalid secret key. It discovers this only after you enter the passphrase as the secret keys are encrypted.  As BlueMatt says, this is probably a result of wallet corruption. Fixing this issue will requir"	Clarify
711	3196595	I really wish I had a backup pre-passphrase wallet.dat file.  It didn't dawn on me till I tried to use some of the coins.  I really want to recover those coins since it took me like 7 months of work on a slow machine. 	Clarify
711	3196653	I'll see if I can write a branch to work around that error sometime in the next couple days if I have time 	Clarify
711	3196739	"I appreciate all the help I can get.  I did a google search for my error and it seems like there was one other instance of the same error.  I would donate to the cause, but I would need to wait till I can get some BT on my new wallet file. "	Clarify
711	3196759	"Heh, well I havent looked at that particular code in a while, but (IIRC) it shouldnt be too hard to just ignore the error and keep loading the wallet to avoid the client crashing so you can get some of your coins back... "	Clarify
711	3262423	"I think ""ignoring the error"" isn't good enough.  If my wallet is corrupt, then I really want to know about it; maybe my hard disk is going bad and it is time to buy a new machine.  But just throwing an uncaught exception as bitcoin does now is definitely the WRONG thing to do. Lets brainstorm a litt"	Clarify
711	3262532	"Yes, switching from ""fatal errors"" to ""ignore errors"" is not a good thing. I think BlueMatt was only proposing to do that as a fixup for yellowcoin's specific case.  The first step for proper error handling would be to restore the dialog box when a fatal exception occurs, instead of silently exiting"	Clarify
711	3265494	"@laanwj exactly, I was proposing writing a patch specific to this case, not modifying bitcoin to ignore errors in general. "	nAnswer
711	3266500	I like the idea of the -fixwallet switch.  Sometime things happen and you never know if you had backed up a corrupt file when the program itself works fine with it.  If I ever get my coins out of the wallet I can send you guys the corrupt wallet.dat file so you can check out what's going on with it.	Clarify
711	3266537	"Try building off master + this commit: https://github.com/TheBlueMatt/bitcoin/commit/06dee4caf1410181b2f6097b5b3311300659c185 it is absolutely not for use, but if you have coins on the right keys, you might be able to send them to a new wallet (no guarantees it wont crash on send). Sorry, I dont hav"	nAnswer
711	3266540	"There is no address for supporting all the developers, though most of them have addresses in their forum sigs (gavin asks that people donate to the faucet instead, which is always a good idea to help new people try bitcoin - freebitcoins.appspot.com ) "	Other
711	3266558	i am using mac osx...how do I compile the file with the added code???  I quit programming since college lol  (edit) I can switch to windows if anything.... I assume I copy the QT folder from the branch and compile the main.cpp file with the added code? 	Clarify
711	3266580	"If you are setup to build on osx (doc/build-osx.txt might help if you arent) you can grab a zip of that revision at https://github.com/TheBlueMatt/bitcoin/zipball/06dee4caf1410181b2f6097b5b3311300659c185 which you can build from, otherwise you'll have to find someone to build for you (maybe gavin wo"	Clarify
711	3266587	Thank's i'll give it a try... After many years I end up programming again haha 	Clarify
711	3266599	"If its easier, I can whip up a windows or linux build, I just dont have a mac conveniently available atm... "	nAnswer
711	3266610	if you can do windows that'll be great!!  Otherwise i will have to wait for xcode for the mac to finish downloading.  1.7gig download is going to take a while. 	Clarify
711	3266630	"When the build at http://jenkins.bluematt.me/job/Bitcoin-Testing-Build/16/console is done, you should be able to grab the modified bitcoin-qt.exe at http://jenkins.bluematt.me/job/Bitcoin-Testing-Build/ws/ "	Clarify
711	3266668	"Oh, and dont dare sending any amount less than the full wallet balance while using this modified version, it might mean your coins go to an address which people actively watch and swipe coins form when they appear (privkey 00000....) "	Clarify
711	3266762	ok so I tried running the program with the modified exe.  I tried entering the password and it's telling me it's wrong.  I am sure I used the same one that crashes the program before.  Also notice the file size is different from the release version.  About 273kb smaller then original build.... is th	Clarify
711	3266783	"Oops, missed that, new version uploaded, just wait for its build. Filesize: meh, its being built with a different set of libs on a different machine filesize is gonna change, the build is fine. "	Clarify
711	3266789	http://jenkins.bluematt.me/job/Bitcoin-Testing-Build/17/console 	System
711	3266918	ok so now it sort of works.  New error: Transaction creation failed  Happens after i hit the sent button. 	Clarify
711	3266942	"Thought so, maybe try (after backing up the wallet) stripping transactions see https://bitcointalk.org/index.php?topic=11331.0 and opening bitcoin (the modified version) with -rescan. "	Statement
711	3270061	"Oh, actually that rescan wont work...well Im not sure how it could be easily done...might be easier to at least check how corrupted the wallet is first, Ill whip something up after a couple days... "	Clarify
711	3272082	Hey thanks again!  I went a head and mess around with the revision fixwallet.py you posted on the last site you directed me to.  With the unmodified version of bitcointools i can see pubkey ..... encrypted ....prikey..... With the modified version I get [Skipping item of type ckey] (the ones with th	Clarify
711	3351568	Give it a try again. 	Statement
711	3354699	you want me to grab the new fixwallet.py & wallet.py files at https://github.com/TheBlueMatt/bitcointools/commit/e48469a65a4ff1f92ceaf5c0bc9ac1eaf9044c11  right? 	ynQuestion
711	3357054	"i tried running it again and got this error:  C:\Python27\bitcointools>dbdump.py --wallet Traceback (most recent call last):   File ""C:\Python27\bitcointools\dbdump.py"", line 10, in <module>     from wallet import dump_wallet, dump_accounts   File ""C:\Python27\bitcointools\wallet.py"", line 4     <!D"	Other
711	3361792	"The tip of the morefix chain is 5c359a2f0f5f0df841aba275910f81f92301362b, but that shouldnt have caused the error there, there is no <!DOCTYPE html> in wallet.py afaict... "	nAnswer
711	3361805	The zipball you want is at https://github.com/TheBlueMatt/bitcointools/zipball/morefix 	Statement
711	3363427	ok i unzipped the file and ran the dump and fix --notxes command. Got a bunch of [Skipping item of type tx] then ran a rescan...no dice...  I tried with a --nosettings but that caused the client to not even load the wallet. I would try the --nopubkeys command but I am not sure if that will even help	Clarify
711	3363915	"If you feel like it, go right ahead (bitcoin@bluematt.me) ...Im not so sure about what is doable at this point... "	Statement
711	3365193	ok sent! should be from a gmail account. ty again! 	Emphasis
711	3762880	Closing this bug because we cannot reproduce it. 	nAnswer
711	4966401	Should be fixed by #1039. 	Clarify
710	3193934	This is not possible with the current protocol. I think there are websites collecting and showing such data. 	Statement
709	3186860	"Only question I have is whether or not luke will use his dnsseed to get everyone connected to his eligius-relay network which has different fee rules (and whether or not that should be allowed, which is definitely arguable either way). "	Clarify
709	3186885	"That was not my intention, no. It is currently a CNAME to jgarzik's DNS until I get something running. "	Statement
709	3187050	"not my intention doesnt answer the question...  Luke-Jr <reply@reply.github.com> wrote:  >That was not my intention, no. It is currently a CNAME to jgarzik's DNS >until I get something running. > >---  >Reply to this email directly or view it on GitHub: >https://github.com/bitcoin/bitcoin/pull/709"	Other
709	3187657	"Any candidate for new DNS seeds must be well-trusted, and therefore I think a few basic tests should be applied:  1) Is the address inclusion and rotation policy well known, entirely transparent to the community?  My seed is rather boring but well known: the wiki list of fallback nodes.  BlueMatt's "	Clarify
709	3187693	"1) https://github.com/TheBlueMatt/dnsseed  2) Trust: as would I, hence why I asked for it. "	Clarify
709	3187884	"It is vendor-neutral, which is why it is on dashjr.org instead of eligius.st. I will certainly agree to discuss it with other developers before intentionally favouring any nodes. That being said, I don't personally see any particular reason to avoid it. "	nAnswer
709	3190020	"As long as it discussed and publicly announced before any node-favoring is implemented and enough chance is given to disable the dnsseed in the client, that is good enough for me. "	Statement
708	3224075	"Closing, but we can re-open if there is sufficient buy-in from other mining operations.  If accepted, would lean towards _only_ using TCP, as external program execution is more complicated and less portable (Windows does not have an exec, strictly speaking, so spawning details differ). "	nAnswer
708	3224358	"Um, wtf? This was already accepted for 0.6 "	whQuestion
708	3230448	Accepted by who? 	whQuestion
708	3230479	"Gavin, at least. "	Statement
707	3187628	"IMO, CLIENT_NAME should not vary if/if-not GUI.  It's the same network logic.  If a problem arises where other network peers must test for a problematic bug, they have twice as many CLIENT_NAMEs to check for one bug.  Might be a privacy issue too?  Gives attackers obvious server-or-client decision p"	Clarify
707	3204385	"CLIENT_NAME is now always ""bitcoin-qt""  "	Statement
705	3181946	"Please discuss these changes on their own pull requests, not here! "	Reject
704	3181317	"I just bumped the source version to 0.5.99 to prep for 0.6; pulling this now won't do weird things to the debian build, will it?  "	Clarify
704	3181500	"No, for now I think Im just gonna keep adding to the debian directory post-release as that is when the repo packages are updated. "	Statement
703	6219984	Can you check with current 0.6.2 and close th issue if this is fixed. 	Clarify
703	6220117	0.6.2: not fixed 	nAnswer
703	6220207	"Tried it with 0.6.2 and you are right, same behaviour here.  My own build (using Qt 4.8.1) does not suffer from this. So it could be a Qt bug or it's fixed in current master. "	Clarify
703	6510383	Still present with 0.6.3.RC1. 	Statement
703	8800123	Still present with 0.7 (Qt 4.7.4 based)! @laanwj What is your opinion on switching to Qt 4.8.2 (which is what the pull tester is using)? 	Clarify
703	8800192	No problem with that. 	Reject
703	9068132	"@Vort Can you please test, if switching to Qt 4.8.2 fixed this problem for you?  You can download a bitcoin-qt.exe based on Qt 4.8.2 here: http://jenkins.bluematt.me/pull-tester/26809acbf9d62480375dd8c1875e8bd7faa1d75e/bitcoin/  It was build by our pull tester bot, you can try with a new wallet, if "	Clarify
703	9102169	bitcoin-qt.exe 7a4d5e122c6a3a0ed37b55a007272352 Works fine! 	Emphasis
703	9102196	"@Vort Thanks for reporting back, you can then close the issue :). "	Clarify
702	3177688	"The message is printed to stderr. Does windows allow console output for UI programs at all?   It has always been my experience that windows UI programs detach from the terminal as soon as they're executed, and that they show a window with the help message.  Maybe we should to that too.  "	Clarify
702	3178102	hmm...  > bitcoin-qt.exe --help 2> help.txt  works well  but I think window with help text is needed anyway 	Clarify
702	3178961	"Windows UI programs dont choose to detach from the console, but the console detaches them if it sees the UI flag set in the PE binary.  bitcoin-wx di show the --help output in a dialog window, so the basic code in AppInit2 (IIRC) should be able to easily support it. "	Clarify
702	4024574	Fixed in pull request #857 	Other
701	3765076	Fixed 	System
700	3128426	"Now with error popup (though now ""Network Alert"" needs translated...) "	Clarify
700	3128560	ACK 	Clarify
700	3128825	NACK: getting multiple dialogs popping up on my Mac (same message in all).  	Statement
700	3128836	Renamed. 	System
697	3120404	"I agree with this change; you haven't only moved the \n outside the translated message but the flags themselves as well. This is good, as it allows changing the flags and white-space without affecting translations.  But a change like this does mean that all the translations have to be changed as wel"	Clarify
697	3177701	"I was wrong here -- the flags were already outside the translated text, it's just the \n that was moved out.  At least this makes it easier to fix up the other translations with a script.  "	Clarify
697	3178059	"You do need to re-run `scripts/qt/extract_strings_qt.py` after changing the strings in the core, so that the updated strings show up in the translations (are picked up by lupdate).  "	Reject
697	3183280	I'll write a little script to fix the translations.  Nils: how do changes get fed back into transifex? 	Clarify
697	3185199	"Changes to transifex: It *should* happen automagically (transifex is fetching the source file using a cronjob), but I can also force an update. "	nAnswer
695	3091946	ACK (but github says it won't merge cleanly???) 	Other
695	3183387	"On second thought...  The only other RPC info that has an underscore is ""unlocked_until"", and I think that was a mistake. It'd be more consistent to make these ""blockhash"" and ""blockindex""  "	Statement
695	3193541	"In case GitHub doesn't email for commits, fixed. "	Reject
695	3205792	"Does not look fixed here.  This commit modifies src/rpc.cpp, which no longer exists. "	nAnswer
695	3205889	Git is perfectly capable of following renames. 	Clarify
694	3091713	This should merge cleanly into any miniupnpc-1.6-only branch. 	Statement
694	3091742	ACK 	Clarify
694	3096509	ACK 	Clarify
692	3086910	"GUIs shouldn't be design-by-committee-- if you think minimize-to-tray-on-close is the right thing to do, I say do it that way. "	Reject
692	3089958	"I agree that design-by-committee doesn't work, but it's always useful to know how (and if, and why) people use certain features.  So when I look at other programs, for example the music players and chat programs in Ubuntu or something like utorrent in windows, they usually work this way: * First tim"	Clarify
692	3177246	"> I haven't seen ""minimize"" overridden in any other modern programs.  uTorrent for example It has two options: + Close closes uT to tray + Minimize minimizes uT to tray "	Clarify
692	3177280	"You mean ""it always does both"" or those are actually two separate, user-configurable options?  "	Clarify
692	3177416	">You mean ""it always does both"" or those are actually two separate, user-configurable options?  two separate options one for close override, second for minimize override screenshot: http://thesocialmediaguide.com/wp-content/uploads/2009/04/ui-settings.jpg "	Other
692	3177823	Thanks...  	Statement
691	3085002	"You'll have to excuse the additional commit 8cbb6ee that got in here. I tried to confine that commit to pull request #690 only, but that didn't work apparently. "	nAnswer
691	3086418	"Please test with the latest master, I've committed a small fix (no longer indirectly call show() in the constructor of BitcoinGUI) that might make a difference in this.  "	nAnswer
691	3088902	"Using latest master the -min option doesn't work for me. Regardless of whether the ""minimize to tray"" option is on or not. I agree that the temporary shifting around is a bit hacky. Fixing it in `BitcoinGUI::changeEvent` might be more elegant, but as far as I can see we'd need to introduce some vari"	Clarify
691	3089040	Which tools are you using to debug stuff like this? I'd like to know if BitcoinGUI::trayIconActivated is called when I click the tray icon when it's in its non-responding state. I've tried printf's and message boxes but they seem to not work so well... Are you just using gdb? 	Clarify
691	3089933	"Regarding -min not working in latest master: doubly weird, the only thing that's changed is that the constructor of BitcoinGUI no longer calls `show()`. This is the normal behavior for Qt widgets; the client decides whether, and when to show it.  Overriding `BitcoinGUI::showMinimized` was my initial"	Clarify
691	3268823	"FWIW, on my system with current master (5ad2ca0), -min ignores the ""minimize to system tray"" setting, and starts minimized normally. I consider this a bug. "	Clarify
691	5147976	"I think this is fixed now? Just tested on Ubuntu, and it works fine.  "	Statement
691	5150063	Yep. Worksforme. 	System
690	3084537	"I actually kind of prefer a splash screen even if starting minimized (or atleast a minimized splash screen that can be opened), but it really isnt much of a big deal... Anyway, the actual code here is fine either way, ACK. "	Clarify
690	3084929	"To accommodate that preference, we could add another option called ""-background"" which would be ""Start in the background"". This would minimize the main window on startup (as ""-min"" does) *plus* hide the splash screen as well. "	Clarify
690	3086468	ACK 	Clarify
689	3089646	"I haven't had much time to look at the code, but it might be the case that CWallet::AddToWallet() is assuming that a given transaction will only ever have one payment / payment address in it (for this wallet).  But when sendmany is used, any given transaction can have more than one payment to separa"	Clarify
689	3097953	"This is because `TransactionRecord::decomposeTransaction`, where the bitcoin transactions are decomposed to UI transactions, handles the case where multiple outputs are ""mine"" by choosing one of the addresses.                    // Received by Bitcoin Address                 sub.type = TransactionR"	Clarify
689	3816943	Can you test pull request #800?  	ynQuestion
688	3079142	Nice to see more distribution packages for Bitcoin!  	Statement
688	4983958	Updates:  http://olea.org/diario/archive/2012/abr-05-1.html http://olea.org/paquetes-rpm/fedora-16/bitcoin-0.6.0-1.fc16.src.rpm http://olea.org/paquetes-rpm/fedora-16/bitcoin-0.6.0-1.fc16.i686.rpm  Maybe you'll want to refer to my repo[1] in the bitcoin doc's for the Fedora building example.  [1] ht	Clarify
688	5129721	I'm not sure what to update. Can you send a pull for the documentation update?  	Statement
688	5546280	Here it is: https://github.com/bitcoin/bitcoin/pull/1216 	Statement
687	3050666	ACK 	Clarify
687	3056103	18:09http://bitcoinstats.com/irc/bitcoin-dev/logs/2011/12/07/9#l2310237 https://github.com/search?q=repo%3Abitcoin%2Fbitcoin+USE_SSL&type=Code 	Other
686	3050001	"Other than that one concern, ACK "	Other
686	3055166	"At the same time, I propose adjusting the testnet base58 versions to match with the new proposed base58 version spec. "	Statement
686	3057087	"RE: why keep the regular-difficulty-every-2016-blocks:  Because if you don't, and hashing power drops, then it will never adjust downward properly because the common case for non-cusp blocks is ""find the last block with something other than minimum work and return its difficulty.""  Example:  Imagine"	Clarify
686	3057108	"mmm, fair enough "	Other
686	3057120	"Yes, 192 for testnet pubkey-addresses. 196 for testnet script-addresses (OP_EVAL). "	Accept
686	3070164	"The new anti-orphan-flood code won't break this, will it? "	ynQuestion
686	3074729	"coblee: Nice catch!  You're right, this would prevent difficulty from ever dropping all the way down to min difficulty.  luke-jr: Nice catch! You're right, the orphan block DoS code needs to take into account this change.  I won't have time to fix this until I'm back next week.  "	Clarify
686	3168939	Code updated/rebased to fix the issues pointed out by coblee and luke-jr. 	Continuer
686	3454071	Is this going to be merged before 15 Jan? ;) 	Clarify
685	3019278	"There's Simplified Chinese language in 0.4.0, but not in 0.5.0, i think it should be there. "	Statement
685	3020293	"As a part of the move from wx to qt, all the existing translations were thrown out (because most of them became out-of-date). I believe src/qt/bitcoin.qrc also needs updated to indicate the addition of the new translation. In the future, you can also use https://www.transifex.net/projects/p/bitcoin/"	Clarify
685	3026571	https://www.transifex.net/projects/p/bitcoin/resource/tx/ Done. 	Statement
685	3026651	"Nice, afaik tcatm merges all the transifex changes right before each release. "	Clarify
685	3117861	"tcatm pulled this, it is in 0.5.1.  "	Statement
684	3118317	"I'm pretty sure that it doesn't wait until it's synced with the network as ""bitcoind getinfo"" still shows a rapidly increasing block count if bitcoind hasn't been run in a while. However, judging by the disk activity, it waits until it is finished with the initial database read. "	Clarify
684	3126168	Bitcoin will do the same initialization before listening on the RPC port that it does during the splash screen of bitcoin-qt. 	Clarify
684	3129641	"Yeah, and having to wait 3+ mins to be able to use bitcoin just isn't funny anymore, especially since the delay will keep getting larger... :-( "	Clarify
684	3956008	"It is one of the dev team priorities to speed up the startup sequence. Recent patches have already optimized this quite a lot.  I don't think this is a bug, though: what use would it be to answer RPC commands when not initialized yet? It could answer ""Error - don't know yet"" at most.   "	Clarify
684	3956090	"As far as I'm concerned, the bug isn't not answering RPC earlier as much as the enormous startup time. (As soon as that issue is sorted out, bitcoind will respond sooner to RPC commands.) "	Clarify
684	4014223	Answering with an error message would have been very helpful when I was trying to figure out why bitcoind wouldn't respond to any requests. 	Clarify
684	4184590	"I find that reading the large database files just before running bitcoind makes the total start up time much lower.  Probably because I have enough RAM to cache the whole files in RAM, and reading them sequentially is faster than the random order that bitcoin reads them while it's starting:  md5sum "	Clarify
684	6791804	"Yes, bitcoin will read and verify the databases before starting all its threads (including the RPC thread).  "	Clarify
684	7385260	"katmagic is right, it would be much better if there is an specific error message and not only a timeout error..!!! "	Statement
684	27690762	"Closing, as this works as intended. "	Statement
683	3018643	ACK 	Clarify
682	3005443	ACK  	Clarify
681	3002768	"I've heard that adding -lgdi  helps-- if I'm recalling correctly, OpenSSL on Windows reads the screen to get more randomness for its random-number-generator.  "	Emphasis
681	3003766	"-lgdi32 is already referenced. Finally solved it, it's an ordering problem. Adding -lcrypto before -lgdi32 in bitcoin-qt.pro fixed it  "	nAnswer
681	3004415	Should we do this by default in the .pro? 	whQuestion
681	3004518	"I can't test it on multiple Windows builds, but since it works for me I'd say yes. I'm a git beginner, so please submit it for me, thanks. "	Reject
681	3004544	Can you confirm that the above commit fixes it? 	ynQuestion
681	3027280	Yes that worked thanks 	yAnswer
680	3001773	"Hm we really need a way to map addresses back to symbols on win32, otherwise stack traces are very unhelpful :/ ... with the deterministic build it should be possible to save the debug symbols, but I don't know enough about win32 to be able to resolve them. "	Clarify
680	3004648	"I built the source & debugged it in Qt, crash occurs on the dbenv.open call, db.cpp line 92. Found the below in the debug.log, presume my db file is out of date. Perhaps the dbenv.open call should be in a try/catch.  EXCEPTION: 22DbRunRecoveryException        DbEnv::open: DB_RUNRECOVERY: Fatal error"	Clarify
680	3008870	"Deleting the bitcoin directory didn't work, now it throws on pdb->open, db.cpp line 113 "	Emphasis
680	3009852	Does bitcoind fail in a similar fashion? 	ynQuestion
680	3011207	"Yes, same problem, Unhandled exception at 0x76549966 in bitcoind.exe: 0xC0000005: Access violation reading location 0x01b774b4. "	Other
680	4885811	Does this problem still exist with the newest version? 	ynQuestion
679	3005565	Updated to use GetBoolArg  	Clarify
679	3008346	"Nice feature, ACK "	Clarify
679	3010464	ACK 	Clarify
679	3074320	"Thanks for writing this patch laanwj!  I did some testing, and it works fine for me unless I use the option ""Minimize to the tray instead of the taskbar"". If this option is on, then I am not able to get the GUI back to an unminimized state after I start it. This is only the case when the program is "	Clarify
679	3074677	"It would be nice if the splash screen wasn't shown when the -min option is specified. I tried writing a patch, but got stuck when I found out that I can't use GetBoolArg to decide whether or not to show the splash screen, since at the point in the code where the splash screen is shown AppInit2 hasn'"	Clarify
679	3076819	"1) yes, currently it does not take into account ""minimize to the tray"" because this is not a Qt feature, we'd need to override `BitcoinGUI::showMinimized` to take this into account  2) I think a neat way would be to put basic argument parsing (ParseParameters) to beginning of main(), after Qt had it"	Clarify
679	3083691	"I see. I guess 1) will have to wait some time then. Maybe we should ignore the ""minimize to tray""-setting when the ""-min"" option is specified?  I have implemented 2) in pull request #690 "	Clarify
678	3001441	You can by overriding the environment. Try this:      export LANG=en_US.UTF-8  	Statement
678	3001528	A solution for mouse pushers would be nice. Not every Windows user knows how to change environment variables. 	Clarify
678	3002027	"Well, it should be pretty simple to make a .bat file that changes a environment variable and launches `bitcoin.exe`. I don't use windows myself, so I can't test, but copy-pasting this into a bat in the same directory as bitcoin.exe should do the job:      @echo off     SET LANG=en_US.UTF-8     bitco"	Clarify
678	3053387	"I don't see what it would hurt to add a lang config option in bitcoin.conf.  In the future, we should probably even have a way to change the language in the settings menu. "	Clarify
678	3053692	"Adding a commandline/bitcoin.conf flag indeed sounds like a good solution, feel free to send a pull request  "	Other
678	4024537	Implemented in pull request #859 	yAnswer
677	2998932	"This change was discussed in #bitcoin-dev during the 0.3.22 release cycle. At least BlueMatt and ArtForz supported it, and jrmithdobbs recommended using an enum instead (it was an int at the time). Since we were at rc5 at the time, sipa wanted to stick with his boolean-only rewrite temporarily and w"	Clarify
677	3021141	"Although allowing users to easily do whatever they want for fees is nice, its really not the way to go.  If you want to make it easier for miners to customize fee schedule (which should absolutely be done), you also have to make sure the customization options still (attempt to) force the miners to k"	Clarify
677	3021239	Change of heart? You supported it before... but now you prefer a more monopolistic control hierarchy by intentionally trying to force things on people? :( 	Clarify
677	3021398	"No, I've always supported allowing people to customize fee scheduling, just not unless all the many, many issues with it are dealt with. That said, this is such a minor step in that direction that my issues are fairly irrelevant.  Anyway, a change like this would be required if a nice customizeable "	Clarify
677	3029215	You can't really have custom fees in a client unless you propagate *ALL* transactions by default. Otherwise transactions are going to be firewalled by the nodes which don't accept them. There are currently rules by which transactions are propagated so I can't see how custom fees can be enabled by mi	Clarify
677	3032681	"That is, in fact, the point of this pull it allows inividuals to have different fee policies depending on the situation (mining, relaying, or sending)  realsolid <reply@reply.github.com> wrote:  >You can't really have custom fees in a client unless you propagate >*ALL* transactions by default. Other"	Clarify
677	3040368	"What is the point in allowing individuals to set it when a client is connected to 8 nodes which don't share your fee relay settings? His transaction will never get out if it's too large. Unless you change the default ""pass on"" behaviour then you're relying upon a random collection of fee settings th"	Clarify
677	3040831	"This isn't a user-visible change yet, and probably won't be until giving up on and/or modifying transactions is supported. The point is to take steps toward that eventual goal. This particular change is useful for miners. "	Clarify
677	3040992	"Thats what addnode is for.  realsolid <reply@reply.github.com> wrote:  >What is the point in allowing individuals to set it when a client is >connected to 8 nodes which don't share your fee relay settings? His >transaction will never get out if it's too large. Unless you change the >default ""pass on"	Other
677	3129187	ACK 	Clarify
677	3129310	"At a minimum, it would be nice to separate the policy change from the cleanup, i.e. one commit introduces the enum changes, with no behavior/policy changes in that commit "	nAnswer
676	3001454	"I see nothing wrong with adding this, and the code impact is minimal. ACK. "	nAnswer
676	3002798	Same feature is part of the OP_EVAL/multisignature pull request. 	Statement
676	3224914	"Closing, because I pulled the superset OP_EVAL change to validateaddress.  "	Statement
675	2990843	Github creates tarballs automagically; I'll update the README to point to:   https://github.com/bitcoin/bitcoin/tarball/v0.5.0 	Statement
674	2984915	That means one or more of the libraries it needs (boost/berkeley db/miniupnpc/openssl/Qt) is compiled for just -arch i386  	Statement
674	2986585	This doesn't really give much information. Can you enable verbose errors? 	ynQuestion
674	3001807	"BTW to enable verbose errors in qt creator, right-click on the message and choose ""Show output"".  "	nAnswer
674	3098276	I fixed it. I rebuilt it with 64 bit enabled 	nAnswer
673	2984894	ACK. I support hunting down any data structures that could become arbitrarily large and figuring out how to reasonably bound them.  	Clarify
672	2983491	Could you try without -ftree-vectorize please? 	Clarify
672	2984158	Correct assumption. -fno-tree-vectorize solved it. 	Statement
672	2986831	"@luke-jr good catch, do you know why is tree-vectorize so bad here? "	whQuestion
672	2986975	"I just know it's one of those ""yeah, it crashes stuff"" optimizations... "	Statement
671	3001467	"Indeed, I think this option is currently ignored (didn't even know that it exists)  Edit: Grepping the source, it seems that it never even parsed.  It is mentioned in the help message:        -min             \t\t  "" + _(""Start minimized\n"") +   "	Clarify
671	3001639	I've implemented this; see pull request #679 Can you test?  	Clarify
670	2975048	ACK 	Clarify
670	2975279	Ack 	Clarify
670	2975629	"Btw if speed is really the issue here, an idea would be to cache encoded <user>:<pass> and compare the header literally, this would save a decoding step for each rpc call "	Other
670	2980350	RE: store strUserPass:  good idea! 	Emphasis
669	2998414	"NACK  9db95d3 introduces a regression: when you send-to-self, and have to pay a fee, instead of the usual send/receive pair in listtransactions, we now get a second 'send' instead of the 'receive'. This 'send' has an amount that appears to be your _change_ from the transaction, shown in negative. "	Clarify
669	2998553	Nice catch on the listtransactions regression. 	Statement
668	4043575	This is fixed in addrman (#787). 	System
666	2880284	"Improves security AND makes the code more readable, I like this.  ACK. "	Statement
666	2880421	"Using ::c_cstr at API boundaries does have the drawback that '\0' characters are not allowed -- the canonical form of converting between string types is to use data() and size(), or .begin()/.end(). Then again, I don't think you can enter those in form fields anyway :) "	Clarify
666	2883409	"Though it does make some code a bit easier to read, it is no more secure (in fact, with the additional conversions, one could argue its less secure, though not really).  Anyway, meh. "	nAnswer
666	2884023	Less secure? How? 	whQuestion
666	2884043	.get_str().c_str() instead of .get_str() in several places means the string (likely) gets copied twice in memory instead of once. 	Clarify
666	2884107	"I really don't see how this could make things less secure.   * By passing all the passphrases as SecureString all the way into the CWallet API, this makes sure the passphrases only exist in mlocked memory (except *in* Qt and inside the JSON parser, but  that was already the case before, and in the c"	Clarify
666	2884135	"No, it does not copy anything (it can't, where would it copy to?). c_str() simply returns a pointer to the data inside the string.  "	nAnswer
666	2884180	"re: 1 yes, but those strings were previously mlocked, so no security is gained.  re: 2 yes, that is my bad, I had just forgotten that those were returning pointers, not creating new objects...just my C++ inexperience showing... "	nAnswer
666	2884212	"Let my rephrase my original comment: Makes code easier to read, but doesnt add security, probably worth pulling. Meh. "	Clarify
666	2884214	"1) In the case of bitcoin-qt they weren't. That was my reason for saying this is more secure.  2) STL has a bad name from the MSVC 6.0 implementation, but luckily is not *that* inefficient :)  Also this makes it harder to forget manually mlocking/munlocking (or maybe worse, skipping munlocking in th"	Clarify
665	2879663	It's already there: `-printtoconsole` 	Statement
665	2883433	In other words we really need better docs on our parameters. 	nAnswer
665	2889652	 master * re1b1055 / src/init.cpp : Add missing command-line arguments to --help/-? output 	Other
661	2858738	Seems the translator used the wrong string interpolation sequence (%s instead of %1) 	Clarify
661	2861436	"ack, i was the translator :P didn't want to change the original strings without knowledge. The other translations will have the same problem i guess "	nAnswer
660	2880400	"I have the same problem. My wallet is also on an encrypted volume that is usually not mounted. Fortunately, it does not overwrite any real wallet in this case (just the symlink which can be reconstructed easily), so no data is lost. However, I am worried that if the wallet file was for some reason u"	Clarify
660	3001803	"I agree. However this logic is not build into bitcoin itself, afaik, but into berkelydb. You'll probably have to see if berkelydb supports a flag to fail in this case.  "	nAnswer
660	3004390	"We could still do manual testing before we open the wallet dir, though I would agree that its not an entirely supported case that we should employ extra logic to complain about - do other programs fail in similar situations? "	Clarify
660	3005419	"As I understand it he's symlinking individual files, not the directory the wallet is in (which AFAIK already does fail if the target doesn't exist). So in his case to be correct we'd have to check every file bdb potenialtially opens, including logs, not just the wallet.dat. It's very ugly to tack th"	Clarify
660	3005442	"Well, the wallet.dat is the only file that you might want to symlink away individually to an encrypted and usually offline disk (the other files are not security-critical), so some special treatment for just wallet.dat would be sufficient here, I think.   "	Clarify
660	3005452	"It wouldn't be enough, because the bdb binary log files can also contain sensitive data such as private keys, so it would 'leak' into that filesystem. "	Clarify
660	3005473	"Oh, that's good to know. So the whole approach of only encrypting the wallet.dat is flawed? Is there a way to remove the logs?   But I agree that this issue has a low priority (especially if there are plans for a new wallet file format that is more portable, less binary, and less leaky, are there?)."	Clarify
660	3005518	"AFAIK the application crashes hard if the wallet.dat is broken, it won't simply overwrite it. But to test that you'll probably have to try with various levels of corruption.  The best idea I've heard with regard to re-engineering wallet files is an append-only wallet for the private keys. All the pr"	Clarify
660	3024722	"@laanwj, I was not aware about these other sensitive files. Don't you think this deserves an issue of its own? I mean.. I never treated any other file with the same care that I treat wallet.dat, and I guess I'm not the only one. There's either a bug there (leaking sensitive data to logs) or a great "	Clarify
660	3026409	"> I never treated any other file with the same care that I treat wallet.dat, and I guess I'm not the only one.   You are not...  I have opened a thread on StackExchange about this. http://bitcoin.stackexchange.com/questions/2140/  One answer seems to suggest that encrypting the wallet using  new bui"	Clarify
660	3028522	"Safe options are:  1) Symlink the entire walllet directory to the encrypted fs. Bitcoin will not write any files outside this directory so this will prevent leaks. If you want to store blk*.dat and addr.dat somewhere else, symlink those.  2) Use the built-in wallet encryption  Or both. I did not kno"	Clarify
660	6791907	"The discussion in this issue seems to have resolved several questions.  Possibly reference issue #68 here, as it is a common request. "	nAnswer
659	2854588	"This sounds like a regression; if tor is used it should disable listening, and should not even know its own external IP address, let alone broadcast to others.  Can you check whether the proxy is used at all?  "	Clarify
659	2855876	"I can see by netstat that the proxy is used. There are connections opened by bitcoin, from localhost:X to localhost:9050. "	Statement
659	2858070	"It should not be assumed all SOCKS proxies are TOR, thus disable listening. For example, I might want to setup a SSH tunnel between bitcoind and remote external server using both SOCKS proxy and port forwarding from server. "	Reject
659	2858723	"Well it makes no sense to listen on the local IP address if a proxy is used, tor or not -- you have delegated network access to that remote host. Someone using an anonymous non-TOR SOCKS proxy will still not want to leak his iP address, it is a serious leak.  In ancient times I've done something wit"	Clarify
659	2859459	"I can't try the -nolisten switch right now, will do it as soon as I can.  My Tor is on 9050, as by default.  Am I the only one having this problem? "	Clarify
659	2860471	"I also use TOR, but never notice the listening port, because my node is behind firewall, and never connected from outside ;) I just check the source, notice that in init.cpp, fUseProxy and addrProxy is checked before it is initialized, I guess this is the bug. "	Clarify
659	2868180	"(oops, github was a bit trigger happy)  Yes this could be the problem, the value of fUseProxy is only ""final"" after LoadWallet and the command line option `-proxy` have been parsed (in that order).  `fTOR` however is given a value *before* either the fUseProxy or the proxy port has been assigned. I "	Clarify
659	2871057	"You do notice fNoListen is used before assigned, right? ;) I would suggest move the ""-proxy"" parsing before fTOR and fNoListen initializtion.  "	Clarify
659	2871153	"Huh good catch :)  But that wouldn't work either -- fUseProxy is also set by LoadWallet, so it can only be parsed after that, as the command-line option should take precedence over what is set in the UI.  Anything using fUseProxy must happen after LoadWallet.  This is more annoying than I thought..."	Clarify
659	2871210	"BTW, despite this bug, I do not see why EhVedadoOAnonimato have connections on the listening port, since proxy should still be used, and IRC server only see IP of the proxy. Maybe your Bitcoin node is also a TOR exit, EhVedadoOAnonimato? Or do you have UPnP enabled and in use?  And I think fHaveUPnP"	Clarify
659	2872328	Wow... storing settings in the wallet... I always wonder why my proxy setting is not in bitcoin.conf. 	yAnswer
659	2872584	"Yeah it's and it's one of the things complicating multi-wallet support  All the UI-configured settings are written into the wallet. The .conf is never written, only read. "	Statement
659	2888216	"Ok, let's see what really happens in init.cpp, proxy-wallet related. Current order of events:  1. `fTOR` set based on `fUseProxy` and `addrProxy.port` (precondition: fUseProxy and addrProxy have their final value !!not met!!, postcondition: fTor has its final value) 2. `fNoListen` is set based on `G"	Clarify
659	2890578	"Well from what I can see we have to drop the binding port early to see if another instance is running.  I dont think it is a big deal as we now have nice locks in .bitcoin, whereas (IIRC) those weren't there when the order of BindListenPort was written by satoshi, but maybe gavin can confirm that. "	Clarify
659	2903617	"I agree,  we already stopped using port binding as a locking mechanism when -nolisten was introduced. "	Clarify
659	3024570	"I'm sorry for not having reported back.  I confirm that the -nolisten switch seems to fix the issue. At least when I add it, there are no incoming connections and bitcoin is not listening on 8333.  @Iongshun, concerning the incoming connections, when I first installed bitcoin (there's a while), I ma"	Clarify
659	3024753	"Yes all nodes keep a list of known-good ips to try and exchange those with each other.  EhVedadoOAnonimato <reply@reply.github.com> wrote:  >I'm sorry for not having reported back. > >I confirm that the -nolisten switch seems to fix the issue. At least >when I add it, there are no incoming connectio"	Other
658	2855736	Solved:  So sorry.  After BC 0.5.0 migrated my wallet to the new platform I assumed it created a new directory and proceeded to delete my BC 0.4.0 database.  When 0.5.0 tried to save the new transaction it could not find the wallet and crashed.  I restored the wallet and all is well. 	Clarify
657	2868321	"Yes, sounds like a good suggestion "	Accept
657	3006417	Implemented in #683 (also part of my ui-next branch on https://github.com/laanwj/bitcoin-qt ) 	System
656	2865651	"I have the same problem. ""Start Bitcoin on windows system startup"" is unchecked after reopening the dialog. "	Clarify
656	2868328	"This appears to be a regression. Even though the configuration bit exists, ""Start Bitcoin on windows system startup"" implementation was part of the Wx UI, not of the core. This should be re-added for Bitcoin-Qt "	Clarify
656	3213511	Pull request #717 re-adds this functionality  	yAnswer
656	3956036	"#717 was merged, this should be working now.  "	yAnswer
655	2833651	already updated 	Other
654	2883414	"Heh, oops...fixed. "	Clarify
654	2975162	ACK 	Clarify
654	2991068	"ACK.  It'd be nice to change all of our threading code to use boost::threads -- I think the only reason Satoshi didn't is because he couldn't figure out how to set the thread priority. But we shouldn't care about that any more, because the internal miner is only used for -testnet testing these days."	Clarify
653	2817966	ACK 	Clarify
650	2813749	"Yeah, C++ exceptions and manual memory allocation/dallocation is asking for trouble. We should make more use of the RAII idiom. "	yAnswer
649	2814146	"Regarding patent issues, read this: http://cr.yp.to/patents/us/6141420.html "	Other
649	2857324	"Spiffy! Could you create unit tests and a test plan? For example, if I want to test use of compressed and uncompressed keys... I would run with/without the -compressedpubkeys option, but do I need to use up old uncompressed keypool keys before I get compressed keys?  "	Clarify
649	2864596	"For testing, you probably want to be able to mix compressed and uncompressed keys. For production use, you probably want to just switch once and for all, so -compressedpubkeys would better flush all non-compressed keys in the keypool. "	Clarify
649	3261744	This needs rebasing. 	Statement
649	3261844	@luke-jr  done 	Statement
649	3264907	I think we should just make compressed keys the default; I don't see any reason to continue supporting/generating/etc the larger uncompressed keys.  	Clarify
649	3270843	"Ok, compressed pubkeys are now enabled by default in the pull request (the key pool isn't flushed, though)  I'll add some unit tests soon. "	Clarify
647	2868839	"Yes, the message is confusing. The size limit is in kB and not in coins, but it confused me too at first.  Feel free to propose a better message :)  "	nAnswer
647	4883255	Closing as duplicate of #353 	Statement
646	2809820	"MIT == Expat, which means you dont need to copy the license text again. "	Reject
646	2809840	"Either way, this file needs updating. "	nAnswer
646	2809864	"I agree, see my comment at https://github.com/bitcoin/bitcoin/commit/459d3fb77bd0d754eb7545965723464b1f2ec0d0#commitcomment-733728 My comment was just that after your commit, the mit license text is in contrib/debian/copyright twice, which is unnecessary. "	nAnswer
646	2812879	you can never have too much copyright text  ACK  	Clarify
645	2824064	Related: https://github.com/bitcoin/bitcoin/issues/637  	Statement
645	4145923	Latest code doesn't use UINT64_min (we've switch to std::numeric_limits<>)  	Other
644	2796661	"I found a version 4.8 of db, so will try building against that.  It's here:  http://aur.archlinux.org/packages.php?ID=43907 "	Emphasis
644	2799549	Cannot reproduce using Ubuntu 10.10 server.  	nAnswer
644	2800025	"I've been able to reproduce it several times, but not reliably.  It does seem to trash my wallet when I do, however.  Luckily I made a backup before running rc6 for the first time so didn't lose any funds.  I wonder if it would be good to always have bitcoin keep a copy of the previous version of th"	Clarify
644	2800272	"OK, this seems to do it:  /bin/rm -fr ~/.bitcoin; rc1-db4/bitcoin-qt -keypool=3; rc6-db4/bitcoin-qt -keypool=3; rc6-db4/bitcoin-qt -keypool=3  Remove .bitcoind, create it using rc1 and immediately encrypt the wallet, then quit.  Then run rc6, it will rewrite the wallet and exit.  Run it again, and i"	Clarify
644	2800588	"I did some more testing of this.  If I create and encrypt the wallet using rc3 and rewrite it using rc4, the wallet got corrupted only 1 in 5 trials.  Rather than writing this out in full for each case, here's a summary:  (encrypt using -> rewrite using = corrupted) 3 -> 4 = 1 of 5 1 -> 4 = 1 of 5 3"	Clarify
644	2800723	If I comment out line 34 of db.cpp (rc6):   // fRemoveLogFiles = fIn; then creating and encrypting a wallet in rc3 and rewriting it in rc6 doesn't corrupt the wallet (0 of 2 trials caused corruption). 	Clarify
644	2800820	"This has allowed me to load my original wallet backup.  Just commenting line 1157 of wallet.cpp (rc6) fixes the problem for me:              // RemoveLogFilesOnShutdown(true);  Also, would it be possible to load the wallet first?  Having to wait several minutes for the addresses and blockchain to lo"	Clarify
644	2800938	"http://pybsddb.sourceforge.net/ref/transapp/logfile.html tells me:  ""you cannot remove the current log files simply because you have created a database snapshot""  ""Log files may be removed at any time, as long as:  the log file is not involved in an active transaction. at least two checkpoints have "	Clarify
644	2802156	"Could be, although the log file is only removed after the new wallet is successfully written and the environment has been closed.  The problem is the log file can contain old, unencrypted private keys; suggestions on how to get bdb to completely clean up after itself very welcome...  "	Clarify
644	2802789	"If I comment out the actual 'delete log file' line only, I can create a wallet in rc3 and have rc6 rewrite it, then load it successfully.  If I have it rewrite the wallet, then wait a minute and delete the logfile from .bitcoin/databases *while no bitcoin process is running*, it won't later load up "	Clarify
644	2804524	"OK... Plan E : Leave the log file alone.  That means encrypting your wallet gets you a good wallet.dat file, but old private keys will hang around in the database/log.* file for a while, but will eventually be removed when you cleanly shutdown bitcoin.  "	Clarify
644	2805020	What will be removed when you shutdown bitcoin?  The logfiles aren't removed when I shut down.  And I don't know if it's safe to assume the keys will be removed from the logfile either. 	Reject
644	2805818	"BDB closes the old logfile and opens a new one when it get close to 10megabytes big.  When bitcoin shuts down cleanly, it asks BDB to remove any unused log files, and BDB will remove all but one file from database/log.*  So:  if you encrypt your wallet, unencrypted private keys will be in the old pa"	Clarify
644	2805900	OK.  Thanks for explaining that. 	Statement
644	2808256	Thanks very much for helping test!   rc7 binaries are available now.  	Emphasis
644	2809960	"For the fun of it I just tested sipa's 'resilver' change.  It fixes this whole issue.  So I think you can go back to deleting the logfiles.  To be clear, git revision f47dfa5a works for me. "	Clarify
644	4043592	So this issue can be closed? 	ynQuestion
643	2794960	"That is more a result of the bitcoin network not working well, it needs some serious examination, but so far (AFAIK) no one has stepped up to figure out why there are so many connections to any listening node. "	Clarify
643	2795786	"Perhaps that's true. My suggestion, though, is to add a connection limit to the GUI client, with a reasonable default value.  On Fri, Nov 18, 2011 at 11:04 PM, Matt Corallo < reply@reply.github.com > wrote:  > That is more a result of the bitcoin network not working well, it needs > some serious exa"	Other
643	2796014	"There is a limit - currently 100 IIRC, though I would vote for the option to change that in the GUI options menu. Setting it lower is something that would have to be thoroughly discussed first.  As I mentioned, the network is already starved of nodes which accept incoming connections, limiting that "	Clarify
643	2796080	"Okay, that's a very legitimate concern. Personally I have a 40 Mbps+ cable modem connection and enable UPnP in order to serve the network. I can imagine lots of people, though, on much slower links, wondering why their available bandwidth dropped after installing Bitcoin.  And for nostalgia's sake, "	Other
643	6791962	Use -maxconnections 	Statement
642	4043688	"My mistake; this issue still exists, though it is fixed in addrman (#787). "	Clarify
642	4984038	"Fixed now, now that addrman is pulled? "	whQuestion
642	4984147	"Yes, see https://github.com/bitcoin/bitcoin/blob/399ff1fe05aba8bdde092144eb524198a810f3ac/src/addrman.cpp#L312 "	yAnswer
641	2787669	"Sounds useful!  Can you please delete the commented line? Op 18 nov. 2011 10:14 schreef ""Ovidiu Constantin"" < reply@reply.github.com> het volgende:  > The following patch allows for filtering addresses and labels by searching > for the typed string anywhere, not just at the beginning. Trivial to tes"	Other
641	2787696	"Sure, here's the new diff:  --- src/qt/transactionfilterproxy.cpp.old    2011-11-18 10:56:12.764263766 +0200 +++ src/qt/transactionfilterproxy.cpp    2011-11-18 12:25:46.674263828 +0200 @@ -35,7 +35,7 @@          return false;      if(datetime < dateFrom || datetime > dateTo)          return false; "	Other
641	2868430	"I thought you'd submitted a pull request, hence my question to fix the comment line. Heh blame my phone.  It's been applied, thanks.  "	Clarify
641	2870323	"Is this a (usability) bugfix, or new feature? "	ynQuestion
641	2871888	"Usability fix. Previously, when you typed in the Address field, it matched just the beginning of the address/label. The fix matches any part and is case insensitive. So if you have a label ""Pool: Eligius"", you can type ""eli"". "	Clarify
641	2874777	"... ok, that's spooky: how do you know what my Eligius earnings label is named? O.O "	whQuestion
641	2875218	"Super powers! :)  On Fri, Nov 25, 2011 at 4:05 PM, Luke-Jr <reply@reply.github.com> wrote: > ... ok, that's spooky: how do you know what my Eligius earnings label is named? O.O > > --- > Reply to this email directly or view it on GitHub: > https://github.com/bitcoin/bitcoin/issues/641#issuecomment-2"	Other
640	2785883	Could be related to this issue : https://github.com/bitcoin/bitcoin/issues/639 	Statement
640	2785890	"It very well could be, although #639 specifically notes the Bitcoin  daemon. I was unable to reproduce the crash on the daemon.   On 11/17/2011 9:09 PM, Wladimir J. van der Laan wrote: > Could be related to this issue : > https://github.com/bitcoin/bitcoin/issues/639 > > --- > Reply to this email di"	Clarify
640	2799541	"Do we have anybody able to debug on Windows 7 ? jmack, would you be able to help debug? (are you a Windows developer?) "	ynQuestion
640	2800238	"I haven't developed for Windows in a few years, so my environment is not set up. I'm traveling for the next week and a half, so it will be a while before I can work on that.  If someone can recommend some simple debug tools that can generate some useful information, I can try to get that information"	Clarify
640	3995082	I'm able to replicate this on 0.5.2 as well. 	Statement
640	4091391	"Also replicated on the 0.6.0 head version using a debug Windows binary provided by @TheBlueMatt.   Gdb backtrace most often indicates line 1662 in bitcoinrpc.cpp:  throw JSONRPCError(-15, ""Error: running with an unencrypted wallet, but walletlock was called."");  "	Clarify
640	4492679	Replicated with bitcoin-qt.exe v0.6.0rc3 on Windows 7 x86. 	Statement
640	4512661	"This appears to be easily reproduceable (for those who can reproduce it to begin with) on anything >= 0.5.0, suggesting it was added with the move from wx to qt. "	Other
640	4550756	This should be fixed in 0.6.0rc4 and 0.5.3.1  	Statement
640	4576722	Confirmed as fixed in 0.6.0rc4. 	Statement
640	4583109	Confirmed as fixed in 0.5.3.1. 	Statement
640	4583368	@jmack thanks for testing & confirmation 	Statement
639	4006879	Can someone who was able to duplicate this issue test got HEAD and see if the problem persists? 	Clarify
639	4043699	"I verified the problem is fixed, though a confirmation from the original submitter would be nice. "	nAnswer
638	2759946	Looking at git head:  irc.cpp includes headers.h headers.h includes util.h  	Other
638	2861190	"My copy, which was pulled from git minutes before I filed this report, also has irc.cpp -> headers.h -> util.h, but strprintf nonetheless failed to be in scope unless I #included util.h directly from irc.cpp. This happened on Debian Lenny.   "	Other
637	2824066	Related: https://github.com/bitcoin/bitcoin/issues/645 	Statement
637	2868363	"According to a quick google, `INT64_MIN` should be defined in `<stdint.h>`.  I checked on my own system and this seems to be the case:      $ grep INT64_MIN /usr/include/stdint.h      # define INT64_MIN        (-__INT64_C(9223372036854775807)-1)  What OS/compiler is this? Can you look in your `stdin"	Clarify
637	2893552	OS/Compiler is Debian Lenny and GCC 4.3.2.  INT64_MIN and related constants from /usr/include/stdint.h are guarded with:  <code>#if !defined __cplusplus || defined __STDC_LIMIT_MACROS</code>  The guard also appears on Debian Sid with GCC 4.6.1.  __STDC_LIMIT_MACROS must be defined before the <i>firs	Other
637	4145905	Latest code doesn't use INT64_anything (it uses std::numeric_limits<> instead).  	Other
635	2721428	"ACK -- only a small issue that can wait:  * The `CreateThread(Shutdown, NULL)` in bitcoinrpc.cpp should eventually be replaced with something that is safe with the GUI (just like needs to be done when calling 'stop'), as it will result in a race condition and segmentation fault. But for now, I think"	Clarify
634	2754759	+1 	Statement
632	2703697	"NACK I agree with deprecating getblocknumber, however deprecation should not remove it from pCallTable yet. This would be a seperate patch for a later version. You should add comments like ""// deprecated"" to the calltable entry and the function itself so we can easily remove the code later.  midstat"	Clarify
632	2704542	Good point.  I'll repair the patch and resubmit tomorrow. 	Clarify
632	2717713	ACK 	Clarify
631	2698696	ACK 	Clarify
631	2700374	"ACK, looks good enough. Can you update doc/assets-attribution.txt with the new copyright as well? (Or maybe remove the duplicated copyright file?) "	Clarify
631	2701385	done 	Statement
631	2706017	"Good replacements.   The only one I don't like is the now 'home' icon, it's too crowded and 3-dimensional. I'd like a more simplified one that fits the blue-ish theme of the other tab icons.   I'll do some searching too...  "	Statement
631	2709004	Maybe go-home? ![go-home](http://luke.dashjr.org/tmp/code/go-home.png) 	Other
631	2709300	Yes better!   	yAnswer
630	6792000	Outdated (and probably fixed) 	Other
629	2697019	"Basic code/UI ACK except for a couple of minor issues: - USE_QRC might be confused with Qt Resource Compiler (or whatever 'qrc' is), maybe USE_QRCODE ? - QR Codes are set to ""text"" instead of ""URI"" "	Other
629	2702192	"Thanks luke-jr. I'll change the define to USE_QRCODE. The library only supports the following encoding modes though...what is type 'URI' under the surface?  /**  * Encoding mode.  */ typedef enum {     QR_MODE_NUL = -1,  ///< Terminator (NUL character). Internal use only     QR_MODE_NUM = 0,   ///< "	Other
629	2702605	"Nevermind the mode thing. Looks like the problem is with my QR Code reader ""detecting"" URI vs text based on the content. :/ "	Clarify
629	2705847	"Ok, change pushed. "	Accept
629	2708957	ACK 	Clarify
629	2717723	Neat! ACK.  Can you squash/rebase these into one commit?  	Emphasis
629	2717743	Squashed. 	System
629	2717805	Thanks.  Some small issues:   * It doesn't build in qt creator without libqrcode (even if USE_QRCODE is not added); probably missing #ifdefs inside qrcodedialog.cpp       ../bitcoin/src/qt/qrcodedialog.cpp:10: error: qrencode.h: No such file or directory  * QRCodeDialog::genCode() is only called fro	Clarify
629	2717829	"Fixing now.  The first issue involves adding the qrcodedialog to the project conditionally, so needs changes to the pro file.  I'll fix the second. I was being overly attentive to the 'not thread safe' warning in the library docs. "	Clarify
629	2717871	Done and resquashed. 	Statement
629	2717907	"That's fast :) Now builds and runs on machine without the library.   Also works great when enabled, I tried scanning it with my phone from the screen and it got it right the first time.  Another small code issue: * AddressBookPage::on_showQRCode_clicked(): `d = new QRCodeDialog` causes a memory leak"	Clarify
629	2717934	Yeah that's not ideal as is.  Using `QRCodeDialog d(...` as you suggest though causes the dialog to be destroyed immediately as the variable goes out of scope. Are you suggesting it (and not 'they') should be modal? 	Clarify
629	2717949	How about I set the 'Qt::WA_DeleteOnClose' attribute on the qrcodedialog widget instead? 	whQuestion
629	2717951	"Sorry, I misunderstood. I thought that was the idea to be modal :-)  Keep it as it is, it's fine. Qt has a flag to delete a window when closed, it might be useful to enable that, but I don't think this will ever be a big issue.  "	Clarify
629	2717963	Snap. I've set that flag and rebased again. 2:49am - g'night ;) 	Clarify
629	2717967	Thanks. Goodnight!  	Emphasis
629	2721740	Did you check if this is compatible with the Android Wallet app? I'm not sure exactly what format it's using. 	whQuestion
629	2721849	"Sorry, I've only got access to my wife's rather ancient android phone which refuses to find the app in the app store for me or install the one I can find on the net.  That app is using Google's ZXing library (http://code.google.com/p/zxing/), and I did test using http://zxing.org/w/decode.jspx which"	Clarify
629	2721852	Great! If you send me a qrcode generated by this patch I can try scanning it. 	Emphasis
629	2721876	@mikehearn I can do that - what email? 	whQuestion
629	2721878	mike@plan99.net 	Emotion
629	2722366	"If the Android app isn't standards compliant, then it should be fixed. That is IMO outside the scope of this pull request. If libqrcode isn't standards compliant, it also should be fixed and is outside the scope of this code as well. I did confirm that it works with my N900's QR Code reader (mBarcod"	Clarify
629	2722374	It works with the Android app :) It's best to do interop testing early so issues can be found wherever they lie. Seems like the app doesn't use the label/message fields though. 	Clarify
629	2722386	"Most apps don't, I think. "	Reject
629	3209235	"NACK: see http://imgur.com/Ljrgg On my Mac, showing the QR code for one of my receiving addresses I get too-skinny-text-boxes for Label and Message.  "	Statement
629	3209292	"Really cool feature, by the way.  But could you also update doc/build-*.txt for instructions on how to get libqrencode  (on the mac, 'port install qrencode' works nicely)  It'd be really nice if the contrib/gitian-descriptors/gitian-*.yml files were modified to build with qrencode support, too...  "	Clarify
629	3217513	"Hi Gavin - I reorganised the dialog and added minimum sizes to those fields. I updated the Linux and OSX build docs, and added the 'qrencode' package to the gitian.yml file. I don't have a windows dev box to do any testing there or any experience with gitian builds so I'm reluctant to get into that "	Clarify
628	2683910	Can you try with the current master branch? (This should have been solved; see issue #615 and #618) 	Clarify
628	2683971	"Sorry, didn't know it was already reported. I'm newbie, will wait next release. Thanks.  Question: Why the address field is blank? I assume that when I right click on it to add a label, the address field should automatically show this address and user only should add the label. "	Clarify
628	2684234	That's also working now :-)  	Statement
628	2686493	"For reference if you ever need to test the latest version, you can grab a binary at http://jenkins.bluematt.me/job/Bitcoin/ws/ and selecting bitcoin[d|-qt][.exe] "	Clarify
628	2686757	"I wish there was a facebook like button or google +1 for the OP's bug testing, laanwj's work, and Matt's Jenkins binaries. I'm super busy recently (trying to pay for rent in NY) - but really hope to work on testing a handful of bugs this week now that the binaries are build-able :-)  thanks guys. "	Clarify
628	2721235	"issue is solved in next release, closing "	nAnswer
627	2684136	"3- On transactions tab, If I (filter by type) and choose (Sent to) I think somewhere at the bottom should show total of bitcoins Sent to. Samething for others filters like Received with and... "	Clarify
627	2684270	4- I think the Address Book tab should have a (Amount column) too 	Clarify
627	2688274	"5- I moved the tabs to (vertical left) position but when I closed bitcoin and reopened it, the tabs was again on (Horizontal) position. "	nAnswer
627	2688776	"6- On Overview tab, the (Number of transactions) should be a link, that when user click on it, it's redirected to Transactions tab. 7- On Overview tab, should show total of address on Address Book ( the text should be a link that when clicked be redirected to  Address Book tab)  8- On Overview tab s"	Clarify
627	2751373	"9- On Bitcoin transactions tab have a column called date. (It show the date bitcoins was received). I think should have a column that show the date the bitcoin was sent to us.  10- Option to customize the columns we want to be showed or hidden, and the position too. "	Clarify
627	3233031	"9- I agree, and #588 might have something to do with this. "	nAnswer
627	18679495	"1) NAK - I'm against aesthethic-only settings as they add extra testing work for very little gain. Ideally these kind of preferences should be configured at the level of Qt or the operating system.  2,4) NAK -- bitcoin-qt works at the ""wallet"" abstraction, it has no concept of ""balance of an address"	Clarify
626	2682863	"If it is used outside irc.cpp it should probably not be in that file in the first place, but in util.cpp, for example. You're also right about removing the IRC from the error message.   "	Clarify
625	2677862	"The preferred workflow is that you create a new receiving address for everyone that wants to send you coins. One big advantage of this is that the address is immediately labeled with the senders name, or whatever you want to call it.  A changing, unlabeled address on the overview page does not serve"	Clarify
625	2678809	I found it useful for quick pasting into places for small amounts of bitcoin.  Perhaps the client should nag you to label addresses once they have coin in. 	Clarify
625	2688529	I don't like the idea of this request. 	Statement
625	2692495	"Me neither. Another way to scratch this itch without bringing back the dreaded default address would be the possibility to ""pin"" frequently used [both receiving and sending] addresses to the home page.  "	Clarify
625	2694516	"But that would encourage people to over use an address, when they should be single use "	Other
625	2694867	"Only if they want to be ""anonymous"". For labeling purposes it's fine to use the same address for the same person multiple times. Or to give the same address to multiple people.  But maybe we should not encourage this. In that case let's just close this issue. "	Clarify
625	2695976	"(""pin"" frequently used [both receiving and sending] addresses to the home page.)  I agree with it. "	Clarify
625	2696386	address over-use should not be encouraged 	yAnswer
624	2677933	"I don't think it's so confusing. ""Export"" exports whatever is in the current tab, as it currently is shown. It is close to the thing it exports. For example, if you set a filter on your transactions, that is used to filter the output.  Adding a toolbar to the individual tab panes would waste vertica"	Clarify
624	17570858	"@graingert Can you please close this now, as current master has new position for export and even no global thing anymore. "	Clarify
622	2677887	Then don't make it that small :p 	Emphasis
622	8797354	"I tend to agree @laanwj this seems to be a non-issue as we would need to look and think about every GUI elements size then, which is nearly impossible to do for only 2 ""real"" GUI devs. "	Clarify
622	15832308	@laanwj /close me 	Statement
621	2677952	Why? 	whQuestion
621	2678797	"A toolbar makes little sense for this application, especially the fact that it can be removed/dragged  http://en.wikipedia.org/wiki/Gestalt_psychology#Pr.C3.A4gnanz "	nAnswer
620	2677970	What OS/window manager? 	whQuestion
620	2678786	This is on ubuntu 11.10 gnome-shell 	Statement
617	2678413	Only adds documentation -> ACK  	Other
616	2668241	"I agree. The behaviour seems wrong.  Would fixing this break anything (i.e. it is used somewhere)? If not, you could make a pull request to fix it.  "	Clarify
616	2668398	"Yes, conceptually you are right. Anding with a 64 bit number will make it a 64-bit number and discard the rest.  However, are you very sure nothing relies on the current behavior?  (If not, I wonder why it is this way. Is it called in a fast/critical loop, making the overhead of zeroing significant?"	Clarify
616	2668654	Looks like a bug to me.  Perfect candidate for a unit test. Looks to me like this method (and all the rest of the bignum &= methods) is not used anywhere in the source. 	Clarify
616	2683926	"If it is not used, wouldn't it be a good idea to remove it? (it's in git should we need it later...)  "	Other
616	4043823	It's not used indeed; #870 deletes it. 	Statement
615	2668409	Ouch... I'll take a look at this. 	Clarify
615	2671877	this issue is resolved  	Statement
613	2659418	"Confirmed -- I've also seen this, it happens on Linux in some cases but not other OSes (afaik).  The black box is a tooltip that somehow doesn't render succesfully.  Might be Qt related or some problem in the rendering in overviewpage.cpp "	Clarify
613	2802897	"I usually get the black rectangle when i hover over that area, but today I noticed that if I hover over the 'unconfirmed' number to the left and then quickly move to the right, I get a pattern of random-looking coloured dots, rather than solid black.  I can almost make out what the tooltip says thro"	Clarify
613	2816390	Confirmed on Gentoo. 	Statement
613	2818497	#653 fixes this issue  	yAnswer
612	2649967	FYI none of those transaction outputs have been spent yet. 	Statement
612	2655201	"Its been long known that one can generate duplicate coinbase transactions.  Currently, if a miner modifies their bitcoind to create duplicate coinbase transactions, they will be able to spend one of the two transactions and the remaining ones will be unspendable.  I see no reason to make major rules"	Clarify
612	2655250	"OK, thanks! "	Emphasis
612	3832279	TheBlueMatt is wrong.  See http://blockexplorer.com/testnet/tx/0018417e23c7ad94c62e3dbcd571df2fb23f29ba375ffb5709701e9812ee8286 and http://blockexplorer.com/testnet/tx/fae8bfd6a2d98294416d8d280d3637682e87ad71e0dfc6b8b20804263067c42d which both spend http://blockexplorer.com/testnet/tx/a1d7c19f72ce5b	nAnswer
612	3832741	"Oops, yea you can MineA SpendA MineA SpendA, but not MineA MineA SpendA SpendA. "	Reject
611	2649130	ACK 	Clarify
611	2659431	Only comment changes and 1 string (message) change -> ACK 	Other
610	2668671	Suggested fix: maxconnections should be set to less-than-64 on Windows.  Long-term fix: use boost::asio for the networking stuff.  	Clarify
610	16893651	"Closing as duplicate of #2408 (this one is much older, but the newer one has a better suggestion for a fix). "	Clarify
609	2659446	ACK 	Clarify
609	2661070	Why wasnt this merged for 0.5 rc3? 	whQuestion
609	2664210	It's very new...  	Statement
608	2640280	You could just have re-opened the old one? (and re-pushed to make new commits visible). Closing is not a permanent state on github. 	Clarify
608	2640951	"It won't let me reopen because a project admin closed it, thus only a project admin reopen it.  ""Wladimir J. van der Laan"" <reply@reply.github.com> wrote:  >You could just have re-opened the old one? > >---  >Reply to this email directly or view it on GitHub: >https://github.com/bitcoin/bitcoin/pull"	Other
608	2644447	"Ok, I didn't know, sorry for that. Op 5 nov. 2011 16:48 schreef ""Matt Corallo"" < reply@reply.github.com> het volgende:  > It won't let me reopen because a project admin closed it, thus only a > project admin reopen it. > > ""Wladimir J. van der Laan"" <reply@reply.github.com> wrote: > > >You could jus"	Other
607	2637856	"Can someone double-check this before merging, ie for determinism and that gitian win32, gitian linux, mac build scripts, etc all have proper release defaults? "	Other
607	2638102	"Mac doesn't support -Wl,-B  (it has its own ld):   ld: unknown option: -Bstatic  "	Other
607	2642874	"Ok, just removed the update for anything except Unix (as the makefile.unix one did). "	Statement
607	2654993	I rewrote the intent of this (and committed); see commit a5f07cbea05fbb03a668dbd5ba3694627cfb5375  BUT: it still links against the QtGui and QtCore .so's.  	Statement
606	2635758	"ACK, good idea.   However, it seems that you forgot to add the new translation to the bitcoin.qrc file :)  "	Clarify
606	2635884	"You're right.  I've made a new commit with that change too.  There's another translation needing plurals, too, which I've also added:  ./src/qt/transactiontablemodel.cpp:            status += tr(""Mined balance will be available in %n more blocks"", """",  I was searching for the '(s)' text before, and "	Clarify
605	2633877	"Yes we should eventually add a more robust failure mode in case of corrupted block chain files (ie, re-download instead of crash) "	Other
605	4043841	"Or even better: discard blkindex.dat, and reconstruct from whatever valid blocks can be reconstructed from blk0001.dat. "	Statement
605	5413462	I suggest we downgrade bitcoin's version to alpha until this is fixed. 	Statement
605	5414186	As Bitcoin is experimental software I don't agree with you here. Is this bug reproduceable (with 0.6.1 RC1)? 	Clarify
605	6792056	Bitcoin should now be able to detect and work around this issue 	Clarify
603	2658138	"Thanks coblee, but the mac build process doesn't use that script any more-- I'm going to close this.  (doc/release_process.txt describes the new process) "	Clarify
602	2601048	I like this; it uses the proper c++ idiom (RAII) which is more readable and potentially more robust.  Can you add testcase/unittest? 	Clarify
602	2610549	Done. Thanks. 	Statement
602	2688696	ACK 	Clarify
602	2690667	It would be nice to test that Critical section code actually works by spawning threads and testing locks in the test suite. 	Statement
602	2819893	"I'm going to merge this early-- writing multithreaded unit tests would be spiffy, but second-best is to merge early and get lots of testing.  "	nAnswer
600	2570844	I don't see the harm in this 	Statement
600	2570958	"I don't have problems with adding this either. The provided files can be useful for other distributions as well.  Except I don't really see the point of the included patch; we could support using the system json-spirit in the build system, this would save the need for including a diff in the reposit"	Clarify
600	2571085	"The included patch isn't actually used (see debian/patches/series) it was added by the bitcoind debian maintainer and I just decided to leave it since it is disabled anyway.  ""Wladimir J. van der Laan"" <reply@reply.github.com> wrote:  >I don't have problems with adding this either. The provided file"	Clarify
600	2585222	Does this belong in the main repo? Or would another github repo be better (maybe 'bitcoin/distros'?) 	Clarify
600	2585989	"I think there are arguments for and against including it in the main repository.  For:  * Many of us are using a debian-ish distribution, so having the files directly available (and versioned synchronously) aid in testing the debian package and debug issues like #595  * What applies to packaging for"	Clarify
600	2591226	"I dont care too much where it goes, but at build-time the debian folder has to be at the top level, so if you move it, builders have to shuffle it around to commit updates and build. "	Clarify
600	2626105	http://wiki.debian.org/DebianMentorsFaq#What.27s_wrong_with_upstream_shipping_a_debian.2BAC8_directory.3F  Ciao! 	Emphasis
600	2628008	"Well if debian itself thinks it's undesirable we can close this issue.      If upstream has a debian directory in their releases, you should contact them      and ask if they can remove the debian/ directory from their tarball releases. There's no      need to remove the debian directory from their "	Clarify
600	2630099	"The thing is, in this case  the debian directory isn't for debian to use,  it's for us.    ""Wladimir J. van der Laan"" <reply@reply.github.com> wrote:  >Well if debian itself thinks it's undesirable we can close this issue. > >If upstream has a debian directory in their releases, you should >contact "	Other
600	2630295	">There's no need to remove the debian directory from their revision control system (although if it's out of date they may decide to do so anyway), but at the very least the directory shouldn't appear in releases.  If you think that having a debian/ directory is useful, you can keep it in Git (only i"	Clarify
600	2631226	"As I previously stated, the reasoning for adding our own debian directory is for distributed control/updates to the build-methods for the bitcoin/bitcoin ppa.  Without this, the debian directory is manged in (insert name of third party's tree here) which just becomes a mess (we used to do that for g"	Clarify
600	2631449	"yes, just move it to contrib, then it's in the tree and we don't have to remove it before release every time... "	Reject
600	2631635	already did (though github wont update and show that if the pull is closed) 	Clarify
599	4043944	"This is correct; SHA256 can hash up to 55 bytes in one block, not 56. "	Reject
599	4059481	Actually... that means the formula is correct; closing... 	Statement
598	2567173	"It would be nice to get a deterministic build of qt too, but I'd say if just bitcoin is deterministic building from the same qt, someone do a qt build and release that for everyone to use for 0.5. "	Statement
598	2586986	I didn't know that the qt build was not deterministic yet. I'll give it a try. 	nAnswer
598	2591151	I just cherry-picked all but the last commit. 	Statement
598	2591923	I had some hex-editor fun and found out that the qt build-nondeterminism is caused by some process adding random (too far apart to be timestamps) 8-character hex codes before function names:      -00054760  31 36 37 42 37 41 37 38  31 30 50 72 6f 63 65 73  |167B7A7810Proces|     +00054760  45 41 42 	Clarify
598	2592976	"Nice detective work!  Quick update from me:  my house still has no power, so I'm working from my gitian-capable laptop; I'm fetching/compiling dependencies now for the win32 gitian build. I made lots of progress on a Mac build, but all of that work is sitting on my main machine in my powerless house"	Clarify
597	27689374	"Closing this, as it never sparked any discussion and it seems no immediate issue. "	nAnswer
595	2563806	This probably means that getOptionsModel is called on a 0 pointer. But we also need to know from where it is called.  I use Ubuntu 11.10 as well and cannot reproduce this. Can you build with debug symbols on so that we can make sense of the traceback?   	Clarify
595	2567178	"I got this after doing a stock i686 install in VirtualBox and building bitcoin via debuild on my debian-build branch, so it should be easy to reproduce.   You might also try https://launchpad.net/~bitcoin/+archive/bitcoin/+build/2885724 or https://launchpad.net/~bitcoin/+archive/bitcoin/+build/28857"	Clarify
595	2571336	"The binary deb appears to work fine, so I'd say this isn't a big deal, but it should be investigated further. "	Clarify
595	2721250	"https://github.com/laanwj/bitcoin-qt/issues/29 shows full detail.  This is solved in the next release, closing issue.  "	nAnswer
594	2539772	The weird thing is that the entire application doesn't use manual registration/deregistration of timers anywhere. I've also seen this with other Qt apps. Could be this Qt issue:  https://bugreports.qt.nokia.com/browse/QTBUG-16175 	Clarify
594	5147808	"I haven't seen this warning for ages. Also, most of the QTimers have been removed in the recent ui<->core interface reorganization pull request. Closing this issue.  "	Other
594	5165733	"~~I still see this issue on 0.6, not sure if its fixed on master...~~ Nevermind, dont see it on master. "	nAnswer
594	5168489	"ok, thanks for testing "	Statement
593	2532600	"Great, an direct URL handler would certainly be useful  Some comments:  - qtipcserver: I think it would be preferable to implement this entire feature in src/qt, without touching the core - ThreadSafeHandleURL: Does it need to block? Otherwise, you could shorten the function by leaving out the `Dire"	Clarify
593	2532911	"qtipcserver: Yea, I thought about doing that but I didnt feel like shuffling even more code around instead of just porting what I already had...Ill move the files to qt/ at least. ThreadSafeHandleURL: I would prefer it did, seems like it would be less of a DDoS target if it limited the number of que"	Clarify
593	2532977	"I'd prefer to have a dialog box *before* sending it to the running bitcoin process... I don't like it queuing payment boxes at all without the user's permission (Limiting the number of those would fight the symptoms, not the problem). Not all users may check the final send dialog very well before se"	Clarify
593	2533432	Limiting the number of send boxes in the Bitcoin window was attempting to solve the DDoS issue by preventing a website from loading infinite send boxes.  Having a popup before sending the send command to the running bitcoin process means you can now DDoS users by launching new processes all over the	Clarify
593	2533533	"That's not my point. DDoS was only one possibility but not the most dangerous one, I would be really careful.  I agree with limiting the number of send boxes, but that's not enough IMO to prevent issues with this.  Maybe a dialog box is also not the best solution.  But I really don't want an externa"	Clarify
593	2533736	"DoS is a completely separate issue from trust issues here. DoS: yea, should be tested a bit more just to see what kind of load you can generate from a browser.  Trust: I really fail to see the problem here.  If a user clicks on a link (or one is otherwise opened), they still have to see the send scr"	Clarify
593	2533818	"The problem is that Javascript can easily simulate link clicks. If it was limited to explicit clicks by the user then I wouldn't be having issues with it.  Imagine that someone hacks a forum and adds a little script that randomly adds send commands in the background. Sure, most users might notice it"	Clarify
593	2534116	Fixed the DoS issue (now only one link/sec can be opened). Also moved the files to qt/ and didn't touch init.cpp 	Clarify
593	2534141	"If the confirm dialog window is open, this shouldn't allow new sends to be added to the window, or the send (currently it does window, can't test send atm).  Also, if a new send is added, the window should be automatically scrolled to the bottom (the new send).  With those in place I really see no p"	Clarify
593	3043353	"In an attempt at making this slightly more useful, I added the latest commit to automatically focus on new SendCoinEntrys and scroll to them, however because the scrolling is called before the qt thread is free to recalculate the new frame size, it scrolls to n-1 SendCoinEntrys not the last one.  I'"	Clarify
593	3050699	"I haven't tested it, but this German post seems to address the problem, by adding qApp->processEvents(): between adding the widget and scrolling;  http://qtforum.de/forum/viewtopic.php?p=30842#30842  In this case it'd be      QCoreApplication::instance()->processEvents();  "	Other
593	3054122	"OK, I think Ive addressed every issue with this, except for the question of whether to popup before adding the recipient to the transaction or not until the send confirm dialog.  I am of the opinion that there shouldnt be an extra popup before adding as it will annoy users if you can create a deskto"	Clarify
593	3261748	This needs rebasing. 	Statement
593	3266486	rebased 	Statement
593	3297412	Has anybody tested this besides Matt? 	Other
593	3297651	"I've tested this in combination with non-BTC unit support, via CLI (ie, bitcoin-qt bitcoin:foo). "	Statement
593	3383768	"Built this and tested a couple cases from the wiki page on the command line:  ``` sh moon@clymene:/atlas/prj/bitcoin$ ./bitcoin-qt bitcoin:1NS17iag9jJgTHD1VXjvLCEnZuQ3rJED9L moon@clymene:/atlas/prj/bitcoin$ ./bitcoin-qt ""bitcoin:1NS17iag9jJgTHD1VXjvLCEnZuQ3rJED9L?amount=20.3&label=Luke-Jr"" moon@clym"	Clarify
593	3387617	"Gmaxwell suggested that the send coins confirmation dialog delay several seconds before it allows the user to click OK, similar to the way firefox does plugin installation.  I agree, but judging from my cursory googling, its something that would have to be written (ie its not a simple parameter or h"	Clarify
592	2511193	"Can you rebase so that we don't get a ton of commit, fix-previous-commit commits all over the place? "	ynQuestion
592	2512372	I think so.  You mean combine my two commits into a single commit?  I think I've done that. 	Clarify
592	2513026	ACK 	Clarify
590	2488659	ACK  	Clarify
590	2489658	I've set up a transifex project and merged your changes: https://www.transifex.net/projects/p/bitcoin/resource/tx/ 	Statement
590	2489944	"BTW, do we still need the strings in the bitcoin-core context? "	ynQuestion
590	2490407	"Yes, they are used for translating the messages used inside the bitcoin core itself (error messages, debug information, etc). And we'll take and convert those message if it is decided to internationalize bitcoind.  On Sat, Oct 22, 2011 at 2:58 PM, Michael Bemmerl < reply@reply.github.com>wrote:  > B"	Other
590	2495056	@tcatm how are we going to handle this? will you close this pull request when this ends up in the bitcoin source? or do we consider it 'merged' already because it is in transifex?  	Clarify
590	2495112	I think we should move all translations to transifex where I (at least for now) will take care of merging them back here. Transifex has nice statistics and I'm going to merge the translations once they are 100% complete. I will create a page on bitcoin.org describing the process of adding new transl	Clarify
590	2495129	"ok sounds good, let's do that "	Accept
587	2433871	"Some tips on using gitian to duplicate the broken results: When gitian fails/finishes, you can log into the vm and mess around by doing export PATH=$PATH:libexec; on-target You can see the build-script gitian is executing by looking at var/build-script after the build has started (its pretty much ju"	Clarify
587	2434392	"Oh, also this hasnt been tested for determinism yet, so there that... "	Statement
587	2488679	I'll take a look at this 	Statement
587	2494709	"OK I'm stuck. How to get started?   - What kind of AWS image to I need to create? - release-process.txt has some information, but it assumes there already is a virtual image with gitian and bitcoin source installed. Do I need to install those myself starting with the Ruby gems etc?  "	Clarify
587	2497004	"You can't do this with AWS, it has to be a machine which has VT-x support. There are no gems anywhere here, just git clone gitian-builder and go. "	Reject
587	2562573	Note that the build issues are basically Ubuntu issues. Gentoo's crossdev at least has no problems building working EXEs. 	Clarify
587	2564170	"I think I solved this issue!  The solution appears to be to remove `-fstack-protector` for the Windows build. Both for the linker and cflags.  I haven't tested on a Windows machine but the resulting bitcoin-qt.exe works in Wine.  luke-jr: yes, but we need to understand this issue, I feel it would be"	Clarify
587	2564761	IIRC it wouldn't even build for me with that flag. ;) 	Statement
587	2564903	https://github.com/laanwj/bitcoin/tree/wingitianfix  Now testing whether the build is deterministic and such...  	nAnswer
587	2565886	"The last commit managed to make bitcoin-qt.exe build deterministic. I built it two times and both times the sha256 is the same.  So the build is now complete. The resulting executable does hang a long time at ""Done loading"" for some reason I can't explain yet.  "	Clarify
587	2565963	"Hm.. the ""Done loading"" problem seems to be something local (to do with seeding?), it hangs on connecting to my routers DNS port:      socket(PF_INET, SOCK_STREAM, IPPROTO_IP) = 23     connect(23, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(""192.168.x.x"")}, 16  I think it is unrelated"	Clarify
587	2567144	Superceded by #598 	System
586	2423944	"This looks completely reasonable to me.  On non-broken systems it will be a no-op, so the workaround can remain indefinitely with no cost... and only get dropped when someone gets around to reviewing the hardening settings at some point in the future.  I don't have a broken ubuntu system to try this"	nAnswer
586	2424183	ACK 	Clarify
586	2433543	"ACK, makefiles can never have enough hacks and workarounds :-)  "	Reject
586	2465125	ACK 	Clarify
585	2421917	ACK 	Clarify
585	2433614	"ACK (though see my line comment above, now we're setting text for the labels in both the code and the ui xml, which means it shows up twice in translations)  Also, I'd appreciate if you ""rebase -i"" this into two commits, one for the Swedish translation and one for the capslock detection.  "	Clarify
585	2435596	"Oh dear, I messed it up badly :(. Can I fix this somehow? I don't really understand the rebase -i command. Some advice would be very appreciated. "	Clarify
585	2438171	"If you have a merge in the middle, that makes rebase -i work very counter-intuitively. See also: http://notes.envato.com/developers/rebasing-merge-commits-in-git/  Luckily, it seems that the changes itself were not affected. If you don't manage to fix it I'll handle this after the merge window for 0"	Clarify
585	2721327	"I've included this into my ui-next branch ( https://github.com/laanwj/bitcoin-qt ) and it will be merged after next release.  This does not include the swedish translation, which I cannot merge as it seems that the file changed under you. Maybe Transifex can help here: https://github.com/laanwj/bitc"	Clarify
585	3204444	The caps-lock part of this was already pulled.  	Statement
584	2415767	Can I get an ACK from somebody else running 10.7 ? What happens on 10.7 if you don't set build_arch?  	Clarify
584	2423842	Build just fails because dependencies aren't present for i386. See makefile.osx: > CFLAGS=-mmacosx-version-min=10.5 -**arch i386** -O3 -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS) 	Other
583	2376123	Can someone on MacOSX please test this?  	Emphasis
583	2378419	"I can't test USE_SSL right now. For everything else, I've found no problems. All those commits are part of my [current release](https://github.com/p2k/bitcoin-qt/downloads) and were pulled into my fork. "	Clarify
583	2380291	ACK (Gentoo GNU/Linux) 	Emotion
583	2415921	"Thanks for testing @p2k and @luke-jr, as this is only UI changes I think that's enough. I'm merging this. "	Statement
583	2422284	I thought we were on feature-freeze for 0.5...? 	Statement
583	2422583	"Ok I didn't know, I'll revert it tomorrow afternoon as I don't have access to a pc right now Op 16 okt. 2011 20:41 schreef ""Matt Corallo"" < reply@reply.github.com> het volgende:  > I thought we were on feature-freeze for 0.5...? > > -- > Reply to this email directly or view it on GitHub: > https://g"	Other
583	2422634	"Except for the shortcut keys, the rest of this is bugfixes. I don't see how the shortcut keys could be a problem, realistically. "	nAnswer
583	2422669	"Its not worth reverting, I just wondered why it got merged.  ""Wladimir J. van der Laan"" <reply@reply.github.com> wrote:  >Ok I didn't know, I'll revert it tomorrow afternoon as I don't have >access >to a pc right now >Op 16 okt. 2011 20:41 schreef ""Matt Corallo"" < >reply@reply.github.com> >het volge"	Other
583	4061200	After sending coins - I get this alert dialog: http://cl.ly/2c0O0m0m3A090V2J2Y0R  And the client crashes about 10 seconds after that.  Related?  This is 0.5.2 version of Bitcoin-QT.  Max OSX Lion.  I have Growl 1.3.2 installed. 	Clarify
583	4061353	opened a issue here for further discussion: https://github.com/bitcoin/bitcoin/issues/877 	Emphasis
582	2369010	Does this functionality also allow for verifying a signed message? (I checked quickly and was unable to find it) 	Clarify
582	2369044	"No, it doesn't. This gets users able to work with webservices. The next logical steps once this is merged would be 1) verify, and/or 2) sign & email from the Send page "	nAnswer
582	2369486	"I'm not entirely convinced that signing/verifying messages should be this prominent in the bitcoin UI. I'm fine with adding it in the menu, but is it central enough to the workflow to warrant adding a tab for it? I tried to keep it as simple as possible with the tabs.  What does the rest think?  "	Clarify
582	2370614	"I would agree with laanwj here, a tab should (IMHO) be reserved for something which an average person would do on a regular basis, which message signing just isnt. "	Clarify
582	2370940	So what happens when you open the signing panel? just have none of the tabs selected? 	whQuestion
582	2374329	New window? 	ynQuestion
582	2374367	I kindof like Bitcoin-Qt's single-window design. 	Statement
582	2376120	"I agree that this is a dilemma. It would be nice to fit it in the single-window design, but without exposing it as a first-class operation.  Making the option selectable from the menu bar, then showing it in the main pane while deselecting all of the tabs seems fine with me.  This gives it a bit of "	Clarify
582	2380458	"Ok, I made it only on the File menu, but still appears in the single-window style (deselecting the other tabs). "	nAnswer
582	2400469	I would argue that putting it in the main window but without selecting any tabs is worse than having it in either a new window or a tab.  The 'hidden feature' feel never sits well with me when I see it in an application - it just makes me feel like no effort went into UI design and it was just slapp	Clarify
582	2403466	"You have a point, but in that case it would be better to not include it all yet, because it's not finished yet. And I have a vague idea why signmessage could be useful, but how to integrate ""secure messaging"" usefully for end users without turning it into half a mail/IM client is not exactly clear w"	Clarify
582	2403691	"This feature is finished, as soon as someone decides whether it's allowed to have a tab or not. It provides useful functionality that people need /yesterday/. It's not some ""hey, this might be useful for new stuff"", it's ""hey, people are already needing to use this even before it's got a final relea"	Clarify
582	2404225	"Well the consensus seems to be a separate window for now.  But please do explain to us (or point to the wiki) how this is useful in trade in the current form... Op 14 okt. 2011 08:13 schreef ""Luke-Jr"" < reply@reply.github.com> het volgende:  > This feature is finished, as soon as someone decides whe"	Clarify
582	2406477	"This is a very useful addition for many merchants or pools who want to verify a user based on bitcoin address. Although I would strongly argue for merchants doing their own auth instead of wasting time with complicated sigh-message stuff, hence why I would argue for this not taking a very central ro"	Clarify
582	2407265	"In most cases, this enables merchants to just publish a single Bitcoin address for payments on their website, and if there is any confusion over who paid request individual customers sign their receipt with a sending address. It is also useful, as BlueMatt implied, for proving an Eligius miner contr"	Other
582	2421967	ACK on the code changes for release-after-0.5.  I don't have an opinion on file menu versus tab.  	Reject
582	3674501	"First time I look at signmessage_gui:  * it looks very inconsistent: it's a tab, but it is not listed as a tab? * items in the systray should not affect what the main program window does (as opposed to say opening a pop-up separately); i know this is not entirely related to this pull request, but it"	Clarify
582	3675312	ACK 	Clarify
582	3699172	Has been merged 	Statement
582	5473784	Is there any documentation anywhere explaining what this feature is for and when it should be used? I suspect most bitcoin users won't know what to use this for otherwise. 	Statement
582	5473881	Please don't comment on long-closed issues. Open a new one. 	Reject
580	4433912	This seems to work now. 	Statement
579	2350861	has been added already 	Other
577	2347736	Thanks! Need to add src/qt/locale/bitcoin_es.ts to the TRANSLATIONS list in bitcoin-qt.pro... (I'll do that if you don't get to it first)  	Emphasis
577	2350666	"thanks you, i don't get what ""bitcoin-qt.pro"" means though  edit: found it "	Emphasis
574	2322777	This is a limited version of #220 that does not include the wallet import/export code; only key import/export/remove. 	Clarify
574	2333657	ACK 	Clarify
574	2361582	"NACK for version 0.5 -- I think removeprivkey needs at least a warning that it can modify unrelated account balances, and maybe a dump of what it did to the wallet so there is some chance of an 'undo' if the wrong key is removed.  "	Clarify
574	3191401	"As per Gavin's request, removeprivkey is disabled for now. "	Statement
573	2317300	"Mostly-ACK. I agree that this is ""purer,"" though it makes packing and unpacking more complex. Most people will just convert it back to an integer so they can do the bitshift-trick to decompress it. "	nAnswer
572	2312023	"According to the MSDN docs, it should be PDWORD_PTR, right?   I'm looking at:  http://msdn.microsoft.com/en-us/library/windows/desktop/ms683213(v=vs.85).aspx  "	Statement
572	2313680	"Right, actually that the main thing:   function gets pointers to DWORD_PTRs (PDWORD_PTR is DWORD_PTR *), and arguments are DWORDs and not DWORD_PTRs. On 32bit it is ok as sizeof(DWORD) == sizeof(DWORD_PTR), but on 64bit it is not ok. That is why I changed type of dwProcessAffinityMask and dwSystemAf"	Clarify
571	2342299	I would argue this is more of a priority medium-high as it represents a serious security risk for Win32 users who depend on the wallet re-locking when they believe it does. 	Statement
571	2347044	"This is definitely a high-priority issue!! Being a user myself, although I don't have many bitcoins in my wallet, I don't feel like those are secured anyway. "	Reject
571	2349387	Seems to work perfectly on OSX.  Here's how I tested:  Ran the Bitcoin-Qt GUI with -server -testnet on a datadir with a locked wallet.  Unlocked using both walletpassphrase RPC command AND by sending coins from the GUI. Observed:  wallet re-locked itself either immediately (if send from GUI) or afte	Clarify
571	4043970	This is potentially fixed by #828. Can someone running windows verify this? 	Other
571	4583921	Tested and verified as fixed in 0.5.3.1 and 0.6.0rc4. 	Statement
570	2969521	"No consensus on this-- and it removes a feature that I think most web services want (""just send whatever fee is likely to get the damn transactions into blocks, I'll eat the costs because they're so small anyway"" -- anyway, that was what I wanted for ClearCoin).  "	Clarify
570	2993304	"With this part, automatic fees up to ""maxtxfee"" (default 0.01 BTC) will be accepted for sends without further JSON-RPC interaction. "	Reject
570	3327063	"ACK on the -maxtxfee idea; I'll check the code soon.  About -nosafefees - yes, but only after some way of reverting transactions that do not get accepted by the network is present. "	Clarify
570	3327600	"Seriously, the upgrading transactions stuff was already coded, all you have to do is implement it and do it well... "	Statement
570	3805680	"Disagree with ""accept any transaction...from myself"" because that is a useful safety net.  No opinion on the other stuff.  Probably should admin-close and let this issue/code sit until fees are straightened out. "	nAnswer
570	3805921	"Re ""accept any transaction...from myself"": By the time they're being rejected, it's already too late to undo them. "	Clarify
570	5586446	"I think this is a mess we don't want to merge... NAK from me at least.  If and when fees get redone, this code will change anyway. Until that time, it is debatable that these will be used by >1 users. "	Clarify
570	5586509	"Someone else is maintaining a complete fork just for this, and it seems to have a >1 userbase: https://bitcointalk.org/index.php?topic=22434.0 "	Emphasis
570	5586737	"I'm quite sure some people are interested in this, especially the the ability to prevent transaction from taking a unexpected fee without interaction. There are alternatives though, like an RPC to prepare a transaction, and allow inspection before submitting it.  The nosafefees part... sure, one day"	Clarify
570	6607585	"Do we still need this, in light of the raw transaction stuff in #1456 ?  "	nAnswer
570	6607810	"I think so. Just because one can implement the same behaviour by implementing their own Bitcoin transaction maker externally, doesn't mean the simpler use-cases shouldn't be supported for software that just wants to deal with the financial aspects. "	Clarify
570	7430615	"No consensus, it mixes in fee behavior which is actively debated, and this pull request has become ""all over the place""  Closing, but you are welcome to re-open smaller, more fine-grained changes as separate pull requests that might be more easily ACK'd or NAK'd. "	Clarify
569	2317476	I support the principal of coinbaser however I don't understand why setworkaux is part of this patch.  It would appear to have quite a different purpose and my concerns about it are outlined here: https://bitcointalk.org/index.php?topic=46927.msg559622#msg559622  It would appear to be an incomplete 	Clarify
569	2317834	"setworkaux is part of Coinbaser because it affects the coinbase transaction. I'm not ready to declare the other (non-coinbase-related) component required for merged mining ""done"" until there are some actual specs for MM with which to make a complete implementation.  I agree the coinbaser output form"	Clarify
569	2317922	edit: This comment was originally a fairly off topic rant about merged mining in general and only slightly relevant to the patch in question.  I've moved the rant to a more appropriate place:  https://bitcointalk.org/index.php?topic=47136.0   	Clarify
569	2330391	Wrote up some docs on the wiki: https://en.bitcoin.it/wiki/Coinbaser 	Statement
569	3184749	GitHub fail. Moved to #708 	System
568	3205842	not sure about ThreadSafeRPC/ThreadUnsafeRPC markers adding value.  However the rest looks good to have. 	Clarify
568	3205915	"Without them, there's no way to gradually migrate things to be threadsafe. When 100% of JSON-RPC commands are known to be threadsafe, then it makes sense to remove it... "	Other
568	3268503	"I've updated #457 to be on top of this pull request. It's code changes are reasonably small so it should be easy to merge into this pull request. (Small enough to understand the consequences of merging, not to perform the actual merge itself as that should be a fast-forward). "	Clarify
568	5135364	"FWIW, since originally submitting this pullreq, I've kept it up to date with master, and Eligius is running a 0.6-based bitcoind with it now, as well as having continual testing in my next-test branch (which I run locally). "	Clarify
568	5306022	"Mostly superceded by #1101, closing. "	yAnswer
567	2298316	pulled 	Statement
566	2298322	"How much slower, for what, on what type of system? "	whQuestion
566	2298842	"C++ would need to: allocate memory for std::string data, scan length of const data, copy const data, return a pointer to its own data, and make at least 3 function calls to do so. The C equivalent just passes the pointer to the const data directly. I imagine under high load, this could make a differ"	Clarify
566	2298893	"This is just cleaner code anyway, no reason not to merge. "	nAnswer
566	2301494	needs rebasing 	Statement
566	2301643	Rebased. 	System
565	2298689	How much faster?  	whQuestion
565	3269334	"Testing with 100 threads of 10,000 getworks each... master: 11m41s (1426/s) master + optimize_FastGetWork: 7m1s (2375/s; 67%) master + threaded_rpc: 8m56s (1869/s; 31%) master + threaded_rpc + rpc_keepalive: 8m14s (2024/s; 42%) master + threaded_rpc + rpc_keepalive + optimize_FastGetWork: 5m41s (293"	Clarify
565	5586393	detect typical getwork is too much special casing 	Statement
564	2298350	How would this be tested ? 	whQuestion
564	2298876	"I suppose we could hack bitcoind to freeze every other thread at the start of CheckWork, and replace this sleep with a temporary thread that simply unfreezes the other threads after 10 seconds. That would have the effect of making this a Sleep(-10), and giving a window of time to try to get it to mi"	Clarify
564	2305675	I've had no trouble running w/o the 2second sleep. In fact I remove it from all my clients. 	nAnswer
563	2298359	"Closing, see Encode/DecodeBase64 in latest util.cpp/h  "	Statement
562	2298382	"If the ""cache getwork"" patch is applied, does this matter?  "	whQuestion
562	2298974	"The original ""cache getwork"" patch used this. I split them up for code cleanliness. If this one is merged first, I can rebase the FastGetWork code and bring it back to its original state from JoelKatz. "	Clarify
562	2495061	"I appreciate that you're trying to optimize bitcoin, but please don't add any fixed-sized buffers! I rather have somewhat slower code than potential security holes.  "	Reject
562	2562424	"Fixed-size buffers are not a security hole, only misuse of them. That being said, I have not checked over this patch for security checks either. "	Reject
562	2563775	"I think we all know that already Luke. The thing is, people make mistakes, and they are usually not all found on the first time around code inspection. It's playing with fire, in a way, and should be restricted imo to direct interaction with hw, OS-level libraries and such stuff. I'd prefer to err o"	Clarify
562	2564745	"Sure, but that ignores the fact that this code has had a lot of real-world production testing in probably 90% of pools (and even *required* by PSJ) "	Clarify
562	2610649	"I don't understand the concern here. If you look in the context of this patch, there's plenty of fixed buffer usage already.  What would make sense is to instead make the buffer size a result of a constexpr calculation, but in this case that really seems like overkill. "	Clarify
562	2610850	"That's exactly my concern. I'd like to reduce fixed buffer use not increase it. C++ has introduced all kinds of stuff exactly to not have to muck around with them.  Also, this does not completely replace the old HexStr function, so this means that the source will now be littered with not one but two"	Clarify
562	2991349	"I have a few problems with this code, starting with it doesn't follow the bitcoin coding conventions (e.g. nLen instead of len).  And I agree with laanwj RE: optimizing HexStr instead.  But I'll go back to my original question:  does this have any measurable effect on performance if the bypass-JSON-"	Clarify
562	3454336	Pull #565 includes performance testing for this. 	System
561	2296333	ACK 	Clarify
560	2298413	"I hate to sound like a broken record...  ... but how much faster on what machine for what operation(s)?  The first rule of optimization is benchmark every change before and after, because changes that will ""obviously"" make things faster often don't.  "	Clarify
560	2369914	"Fetching from a std::map is really fast (order log N the number of entries in the map, which is very small as it only contains the command line arguments). Also it is only done once for every HTTP request, so I doubt that this gives a speed advantage.  On the other hand, I do think the code is somew"	Clarify
560	2638165	"This change speeds up `getwork` by about 3% if made to vanilly 0.3.24 (the version I benchmarked against). With my other patches, this patches speeds up a getwork by about 11%. (The improvement due to this patch is about the same, but getwork is about four times faster with all of my patches -- same"	Clarify
560	2975054	Reworked to be self-contained in bitcoinrpc.cpp: https://github.com/bitcoin/bitcoin/pull/670 	Statement
559	2298429	NACK -- I'll soften my position on non-standard transactions when there is a good fast-initial-download solution implemented and the transaction fee code is reworked.  	Clarify
559	2298954	"Non-standard transactions were disabled for a reason, and nothing has reasonably changed since then...why enable them or make it easy to do so? "	Other
559	3205853	"NAK'd, closing.  People who really need this can modify the source. "	nAnswer
557	2298459	"Closing this; if you want to add new RPC commands, please start a discussion on the bitcoin-dev mailing list or the forums.  "	Clarify
556	2298468	Closing; RPC changes should be discussed first on the mailing list or forums. 	Clarify
556	3091795	"Not entirely sure how useful the first set in getinfo is, but the second one definitely could be useful in some cases, and since neither is gonna take a performance hit, I see no problem with this; ACK. "	Clarify
555	2298474	Does this work on Windows? 	ynQuestion
555	2298962	Better question - does this even compile on Windows? 	ynQuestion
555	2298997	"Good question. No idea. I don't use Windows... Anyone want to step up to test, or should I resubmit this with non-Windows #ifdefs? "	Reject
555	2308367	I didn't think there was such a thing as SIGUSR1 on windows.    Whilst this is the current implementation many pushpool pools use now it has a couple of limitations that are relevant to pools and some extras that are specific to java based pools (i.e. poolserverj).  1/ it requires the pool engine to	Clarify
555	2369974	"I do think bitcoin needs a mechanism to send asynchronous notifications of incoming transactions, new blocks, whatever a client wants to subscribe to.  However, I agree with @shadders, and don't think signals are the preferred interprocess communication method here. Signals are specific to UNIX and "	Clarify
555	2403325	How about dbus? 	whQuestion
555	2403443	Dbus is a desktop technology. This would primarily be used on servers... 	Statement
555	2403524	"DBUS, featurewise would be exactly what we need here. It supports both synchronous and asynchronous calls and async notifications/subscriptions, so we could implement the entire bitcoin API plus notifications in it. It also has some rudimentary security features which could come in useful.  However "	Clarify
555	2406446	"I completely agree with luke here.  DBus really isnt the best choice here, primarily because it is really mostly used as a desktop technology.  Additionally, does java have a good DBus library?  One of the complaints about sending a USR1 signal was poor java support therefor.  Although this is large"	Clarify
555	2407849	How about the callback URL's then? 	whQuestion
555	2407911	At that point its getting much too complicated for what it is designed to do. If we use SIGUSR1 some applications (like poolservj) will have to implement a wrapper which receives the signal and forwards it on in another method. If we use callback URLs then other applications either get much more com	Clarify
555	2407982	"They don't have to be exclusive, either... "	Reject
555	2408004	"True, though I would really prefer to KISS here instead of implementing a large new addition for such a simple feature. "	nAnswer
555	2408013	why does it have to be one or other?  I callback side by side with a  sigusr1 offers both and is trivial to implement on the bitcoin side  given that it already implements a json-rpc client.  It could be easily  configurable to use one or the other or both.   The most common  application that needs 	Clarify
555	2408068	it's not exactly complicated... a http call.  And if the framework is in  place can easily be extended to any either type of event notification.   Sigusr doesn't provide any granularity.  Unless it goes to a different  pid for every possible permutation of message.   As far as I know you  cannot add	Clarify
555	2408098	"This may be something more thorough than what is needed, but some sort of hooks ""interface""  like @laanwj was saying, for events like new transactions, blocks, etc is much needed. I imagine something flexible like being able to specify in the conf file an event and a script to run or a callback URL "	Clarify
555	2408181	"I think a script call would be just as usable as a callback url.  A  little more fiddly but more flexible if the end user doesn't want to  implement a http listener.  On 15/10/11 01:44, freewil wrote: > This may be something more thorough than what is needed, but some sort of hooks ""interface""  like"	Clarify
555	2408208	"Yup, what @shadders says. A script to run (probably passed some helpful arguments) or a callback URL I think gives the best flexibility. "	Clarify
555	2408355	"Yes a callback script or URL would have my preference for now. This could do anything, including send a signal. And when the system is in place it could be re-used for other kinds of events later on. This provides much more flexibility than a fixed signal to a specific PID. "	Clarify
555	2410734	"Gavin had some ideas about a similar topic way back here: https://github.com/bitcoin/bitcoin/issues/20  I also agree that doing things non-portably (such as via SIGUSR1, as proposed) isn't the right way to go. If a stopgap is needed prior to a full JSON-RPC callback implementation, I'd suggest somet"	Clarify
555	2411130	"A lot of talk as if this is merely a proposed thing, but it's in fact the de-facto standard for pretty much every longpoll-enabled miner. "	Statement
555	2412594	"That's a polling not push.  The fallback mechanism for 'listeners' that  can't use SIGUSR and don't want to implement a half-node is to poll  getblocknumber already.  On 15/10/11 05:55, Mike Gogulski wrote: > Gavin had some ideas about a similar topic way back here: https://github.com/bitcoin/bitcoi"	Clarify
555	2412658	"The ideal solution would probably be native longpolling in bitcoind. The file-based mechanism *would* be push, if you use inotify to monitor it for changes ;) "	Statement
555	2412659	Not the case.  Poolserverj is now used by 2 of the 4 largest pools +  numerous small pool.  The 2 largest that don't use poolserverj are using  proprietary pool server and I couldn't say whether they use longpoll  signals or not.  It was the standard and when there was only 1 option  for OSS pool so	Clarify
555	2412670	"On 15/10/11 10:00, Luke-Jr wrote: > The ideal solution would probably be native longpolling in bitcoind. The file-based mechanism *would* be push, if you use inotify to monitor it for changes ;) >  //inotify/ is a _Linux kernel subsystem_ that acts to extend filesystems  to notice changes to the fil"	Clarify
555	2414397	"Suggestion: resolving/merging this should have the lowest possible priority. Why? It benefits ~2 dozen pool operators. Dev attention is far better (as in by orders or magnitude) spent on improving the end-user experience and extending capabilities for commerce.  Alternately, surround the relevant co"	Clarify
555	2414422	To suggest that needs of pool operators are unimportant because there  only '~2 dozen' of them is incredibly short sited.  Those 2 dozen are  hubs for 90% of the hashing power that secures the bitcoin network.  Do  you really think there would be as many miners if they all had to mine  solo and wait	Clarify
555	2414439	"p.s. since commerce capabilities meet your classification of 'important'  consider this.  Once a push notification mechanism is adopted an obvious  commerce use case is notification of new txs.  User makes purchase on  cart, goes to checkout and gets bitcoin address to pay, sends payment.   Cart sit"	Clarify
555	2416417	"I agree with shadders - the ""lowest possible priority"" thing is just an obvious misunderstanding of the concept - the IPC code, if implemented correctly, could give benefits to all bitcoind admins - making Bitcoin e-commerce easier.  "	Clarify
555	2416458	"Shadders, I consider it a non-issue that Java is too broken to support standard POSIX functionality. Lack of Windows support for SIGUSR1 specifically is also arguably a non-issue, since nobody sane runs servers on Windows anyway-- I suppose I need to add some #ifdefs though. If people actually need "	Clarify
555	2416641	"IPC code, if implemented correctly, could give benefits to all bitcoind admins  No, only to those running bitcoind on the very same machine as their commerce app/pool server -- or running such an app at all. RPC solves the general case, and those running both on the same box can point to localhost"	Clarify
555	2416689	"Here is gaven's actually work on this, it's probably outdated, but something like this - added with the option of running a script also would solve the problem and make everyone happy I think.  https://github.com/gavinandresen/bitcoin-git/commit/f62c6087a2681f568c18f2db05147f227dd06d5b "	nAnswer
555	2418468	" On 16/10/11 04:09, Mike Gogulski wrote: > @shadders: Did you actually read issue 20? Of course I read it... Are you referring to this part?: ""/Used by basically every pool now/""  Unfortunately that's only true in luke's happy place where JVMs don't  exist.  What he really means is every pool runnin"	Clarify
555	2418516	Please explain how SIGUSR1 notifications (the topic here) have anything to do with your far more complicated solutions. It's my understanding that your ideas are not in any way exclusive or broken by getting this simple implementation in. 	Clarify
555	2418552	> It's my understanding that your ideas are not in any way exclusive or broken by getting this simple implementation in.  I think the goal should be to not include quick solutions like this for every single need in the official release. IMO a far more flexible and comprehensive (therefore superior) 	Clarify
555	2418567	"Superior can be based on a lot of different things. Every other proposed solution requires significantly more code and CPU time to implement, whereas this is a simple standard solution to a simple problem. "	Clarify
555	2418574	"> Every other proposed solution requires significantly more code and CPU time to implement, whereas this is a simple standard solution to a simple problem.  If you were able to specify a script/executable to be called upon a ""newblock"" event, and that script/executable simply created the same signal"	Other
555	2418577	"On 16/10/11 11:15, Luke-Jr wrote: > Please explain how SIGUSR1 notifications (the topic here) have anything to do with your far more complicated solutions. It's my understanding that your ideas are not in any way exclusive or broken by getting this simple implementation in. > Because the solutions a"	Clarify
555	2418578	"Unlikely. I've never used coinbaser's TCP mode outside of testing, simply because popen wasn't a bottleneck ;) "	Clarify
555	2418636	"By complex, I was mainly referring to JSON/HTTP-based solutions, which require an implementation of both of those specs-- neither part of the common C standard.  As implied, I did implement TCP support into coinbaser because of the possibility of overhead from executing an external script. I also fo"	Clarify
555	3205959	"SIGUSR1 is an ugly hack on pushpool's part. However, it is also very simple and straightforward.  With more complex solutions stalled, I think pragmatism says it would be OK to merge this with some minor changes:  1) rename cmdline option to some Unix-y, like ""-sigusr1file""  2) make sure the code bu"	Clarify
555	3208247	Superceded with pull #714 	yAnswer
554	2298501	"Closing; a default installation of Ubuntu or Debian will not include boost or the other libraries we link against, and we want the binary distribution to be self-contained.   "	Statement
554	2299006	The correct solution to that concern would be to build .debs with dependencies. 	Clarify
554	2301464	... so submit a PULL with the correct solution.  I don't know nuthin about building .debs...  	Statement
554	2301593	The point is that your argument is assuming packaging it the wrong way... but I put out a request for a Debian developer for you.  This pull fixes a problem with users building from source. It isn't intended to fix the flawed packaging. 	nAnswer
554	2317266	"bitcoind (an old version) is now packaged in Ubuntu: https://launchpad.net/ubuntu/+source/bitcoin  Perhaps the maintainer of that package could help you. If not, someone else could use it as a starting point. "	Clarify
552	2298510	"No consensus this is a good idea, closing.  "	Statement
552	4025739	"Commenting because I see this is in next-test.  I think this is a bad idea, in fact,  because its possible to make a typo that currently fails which this corrects to an incorrect passing one.   e.g. you type O instead if P  (the keys are next to each other) and it corrects to o which happens to pass"	Clarify
551	2298540	"Closing because I don't want pull requests to turn into Yet Another Place to discuss ideas.  Reworking how fees work is a good idea, but should be discussed on bitcoin-dev of the forums before submitting half an implementation.  "	Clarify
551	2299028	"This particular change *was* discussed (at least on IRC) a while back when fForRelay was being added. IIRC, we had an agreement it would be a good change, but not of immediate urgency (the immediate concern was reducing txn fees). "	Clarify
550	2298619	Closing; please drum up consensus before adding new RPC commands.  	Clarify
549	2279756	I think this could (and should) easily turned into a more general client. e.g. one that knows how many arguments bitcoin expects (can this be queried via RPC?) and asks for each argument. A blank value for optional arguments will use the default value for all following optional arguments. A first ve	Clarify
549	2279986	Happy to do the work (when I can find the time) but I have no idea what can be queried via RPC like this. If anyone has an answer (and perhaps some snippet of sample code?) I'd be happy to modify. 	Clarify
549	2280724	https://github.com/enmaku/bitcoin/tree/master/contrib/bitrpc  Supports all the basic commands. I'm sure there's an easier way to run the command in sys.argv[1] without such tremendously long branching but I'm not familiar enough with ServiceProxy. If anyone knows I'd appreciate it. 	Clarify
549	2283598	"Maybe we need to add a meta-RPC call that returns (in a machine-parseable format) all supported RPC calls and their argument types, so tools like this do not need to be be updated everytime an RPC call is added? "	Other
549	2284679	"The output of ```help``` can already be parsed. Mandotary arguments are enclosed in <>, optional arguments in []. Lists (sendmany) are enclosed in {} "	Other
549	2287083	"I guess my real question is how to use json-rpc's ServiceProxy more dynamically. For example, I create a ServiceProxy object called ""access"" and then I can run things like ""access.getinfo()"" - how can I run something like getinfo() dynamically without already knowing what the procedure is called? Is"	Clarify
548	2274812	"Gavin discussed the whack-a-mole security issues with sensitive data being stored in memory, and I think this falls into that category. IMO this is more of a problem outside the scope of Bitcoin, but still important to be mindful of. Regardless, obscuring this data could slow down or prevent a poten"	Clarify
548	2274840	"One simple solution would be to prefix the command with a space. This prevents most shells from saving it the user's history:  ```$ [space]bitcoind command args...```  It'll still show up in the process list, though. "	Clarify
548	2274882	"Right now I'm doing this in Python:  from jsonrpc import ServiceProxy access = ServiceProxy(""http://127.0.0.1:8332"") pwd = raw_input(""Enter wallet passphrase: "") access.walletpassphrase(pwd, 60)  So all that shows up in my buffer is ""walletunlock.py"" but it should be possible to simply run ""bitcoind"	Clarify
548	2276622	This was brought up before wallet encryption was merged and the decision was that this falls well outside of the scope of wallet encryption but falls more in the scope of making the rpc client more of a shell instead of calling individual commands. 	Clarify
548	2277931	walletunlock.py would be a nifty addition to the contrib/ directory.  Can you turn it into a pull request?  	ynQuestion
548	2278868	Done. I also included walletchangepass.py which does exactly what it sounds like it does. https://github.com/bitcoin/bitcoin/pull/549 	Clarify
548	2280840	Nice! Closing this issue to consolidate on the above mentioned pull request. 	Clarify
547	2274773	ACK 	Clarify
546	2271196	"Closing this as not a bug; if you don't like merged mining, then bring up your concerns on the bitcoin-development mailing list. "	Reject
545	2296327	ACK 	Clarify
544	2258525	"Before you try anything, make sure to have a backup of your wallet.dat. "	Statement
544	2258683	Is there wallet.dat for OSX? - I can't seem to find it. 	Reject
544	2274743	"http://bitcoin.stackexchange.com/questions/1350/is-there-wallet-dat-for-osx  I suggest you do a backup of your wallet.dat, and reinstall bitcoin to see if your blockchain was corrupted somehow. "	Statement
543	2257800	ACK 	Clarify
543	2263101	"Right, the type specifier is missing. Seems that for your gcc it's changed from a warning to an error. Line 120 should be       BOOST_CHECK_EQUAL(GetArg(""inttest2"", -1), 81985529216486895LL);  Some day we should start compiling with warnings enabled... "	Clarify
541	2250308	"multisig_testing tree is up:   https://github.com/gavinandresen/bitcoin-git/tree/multisig_testing  It adds a ""sendmultisig"" RPC command to generate multisignature transactions. And adds public key information to the output of the ""validateaddress"" RPC command, so you can get the full public key for "	Clarify
541	2287042	The OP_EVAL idea/discussion is making me re-evalute this.  Closing for now.  	Statement
540	2232913	As a first measure you could delete ```addr.dat``` from your bitcoin folder. This is completely safe and should improve startup time a lot.  What kind of hardware are you running it on? Either your CPU or disk is a little slow. 	Clarify
540	2233173	"I deleted addr.dat, this is the output now:      Bitcoin version 0.4.0-beta     OS version Linux 2.6.38-11-generic x86_64     System default language is 66 en_DK.UTF-8     Language file locale/en_DK/LC_MESSAGES/bitcoin.mo (English (Denmark))     Default data directory /home/rune/.bitcoin     Bound t"	Clarify
540	2352581	I believe this has been fixed with the QT implementation - load times are now much shorter. 	Clarify
540	2353278	"I dont think load times have changed with QT as the load methods in AppInit2 haven't changed. This issue appears to be specifically about slow load times loading the block index, which should effect both bitcoind and bitcoin-qt.   Since no developer (AFAIK) can reproduce this error, is there any way"	Clarify
540	2360156	This bug is now gone for me. I believe the cause was an SSD drive that had slowed down. The read speeds had dropped to ~700KB/s which corresponds to about 15 minutes to read the 600MB block chain file. After the read speed have returned to normal this issue is no longer present; loading takes 15 sec	Clarify
540	2361950	Actually the new qt gui does just that.   runeksvendsen <reply@reply.github.com> wrote:  This bug is now gone for me. I believe the cause was an SSD drive that had slowed down. The read speeds had dropped to ~700KB/s which corresponds to about 15 minutes to read the 600MB block chain file. After the	Clarify
540	2369596	"Excellent. I just built bitcoin-qt, looks very nice! "	Emphasis
538	2238249	ACK; we can re-evaluate how many miners are still using midstate or hash1 when 0.5 or 0.6 is released. 	Clarify
537	2238575	ACK 	Clarify
536	2226246	ACK 	Clarify
535	2239498	"Now that midstate is deprecated I will rework this patch to as it does not need to support midstate anymore. Though, what is the most generic code for ByteSwap/Reverse that we can safely use in bitcoin and works on GCC (lin/win/osx) and VisualStudio? "	nAnswer
535	2240981	"The generic byte-swap would be the code in the #else that uses rotlFixed...  Also, I think it'd be cleaner to move rotlFixed and the body of ByteReverse to util.cpp.   Can you hold off on removing midstate support?  I'd like to pull this for the 0.5 release, we can remove the deprecated midstate a f"	Clarify
535	2250334	"Looks like github does not handle rebased pull requests correctly.  Changes:  * reduced ```ByteReverse()``` to a single function using shift, OR and AND  We can't move it to ```util.cpp``` because it is declared ```inline``` and it is used when looping over arrays so performance is still somewhat im"	Clarify
535	2251057	"Can you cherry-pick just the (two?) commits into a fresh tree, merge them, and update this pull request?  github or your branch are very confused... "	Clarify
534	2213423	"Testing:  Unless somebody has already written a tool to generate low-difficulty valid-but-orphan blocks, I think we may have to rely on code review and unit tests (unit tests are part of this pull).  (I am working on a tool to generate blocks and transactions for testing, but have more work to do on"	Clarify
534	2213424	Would test-net-in-a-box allow me to create orphaned blocks to test this? 	ynQuestion
534	2213458	"You can't use testnet to test this, because testnet doesn't have block-chain lock-in points and there's no way to generate orphan blocks on purpose with too-low difficulty. "	Reject
534	2281826	What's the justification for having more checkpoints than just the latest? 	whQuestion
534	2299475	Justification for more than the last checkpoint is it makes it harder for an attacker to waste a newbie's time downloading a long-but-invalid chain.  Pruning some of the checkpoints in the middle is probably a good idea.  	Clarify
534	18801511	I would be curious to know if this network rule change is in line with the Satoshi White Paper on bitcoin. 	Clarify
534	18801677	Why are you replying to two year old pulls?  This doesn't make the node reject any blocks that it wouldn't already (ultimately) reject. 	ynQuestion
534	18804374	"Indeed, it's not a rule change. It just detects invalid blocks earlier. "	Statement
530	2197971	"tcatm, pull this when you're happy; I have no idea whether or not this is a good idea.  "	Clarify
530	2361594	"Closing this; with the switch to Qt for the GUI, all the translations changed. "	Reject
524	2146400	"This seems like a perfect candidate for some unit tests, both for the base64 encoder/decoder and for the sign/verify.  A performance unit-test for the old versus new base64 code would be spiffy, too...  "	Statement
524	2151521	I suggest that the code from https://github.com/sipa/bitcoin/commit/6e223c405988a1002eeeee69db88a1128a38b0a3 be used to recover the public key from the ECDSA signature on verification. This means that the public key need not be base-64 encoded which makes signatures about 87 characters shorter. The 	Clarify
524	2234196	"Ran the 10 test cases with no error.  I have testnet-in-a-box running and can sign and verify between the two clients.   Signed the same address with multiple messages, verified true:true and false:false (no true:false). TBH I don't know if this is even necessary, but why not.  Strict verification w"	Clarify
524	2238791	"ACK; I'd still like hard numbers on the performance of the base64 code, but that's not a show-stopper for pulling this. "	Clarify
524	2246516	ACK 	Clarify
524	2248354	There is a bit of discussion on the forums still; see https://bitcointalk.org/index.php?topic=6428.msg550155#msg550155 	Statement
523	2148420	"Red Hat bugzilla and other ""tracker"" web apps implement the following logic:  Issue a warning on day X, stating that the request is outdated and will be automatically closed on day X+N.  Take time and explain why this policy exists, and what to do about it, in the automated email.  On day X+N, close"	Clarify
523	2206517	This pull has been reopened here: https://github.com/bitcoin/bitcoin/pull/533 - sorry about that... 	Other
522	2132493	ACK 	Clarify
522	2133852	ACK  	Clarify
521	2131830	ACK on the changes to core. I haven't reviewed the UI code itself. 	Reject
521	2133176	This seems to break the wxgui (error in AppInit()). Either that should be fixed or wxgui removed IMHO. 	Clarify
521	2133191	Didn't notice it yet. I'll fix that. The changes should not affect the wx GUI. 	nAnswer
521	2133552	tcatm: I'm unable to reproduce this (on Linux). The Wx still works as it did before. Can you get a traceback for the error? 	Statement
521	2133621	"sorry, my fault: I forgot to run make clean and thus part of bitcoin was usind bdb 4.7 and bdb 4.8  "	nAnswer
521	2134059	"ACK, I did a quick review and setup a qt build environment.  Looks good.  "	nAnswer
521	2159636	"I'm assuming no one cares about adding non mit pictures to bitcoin, but I might as well bring up the issue. "	nAnswer
521	2159728	"Also, it might just be me but I really hate having two sets of translations, is it not possible to redefine some translation functions and make a script to convert the format of the files? "	nAnswer
521	2159783	"This is exactly what I did (see scripts/qt/extract_strings_qt.py). When running with Qt UI, the _ function is redirected to Qt.  The Wx translations are not used by the Qt UI. "	nAnswer
521	2159840	Feel free to add or replace your own images if you think that's a concern... 	Clarify
521	2159905	"Well look at me not paying attention, but I also meant for qt files to use _ so that translation programs will pick up strings from qtui as well (or did you do that too, im on my phone and the browser lags out if I try to load the diff tab). Also I'm assuming you have some strings specific to qtui a"	Clarify
521	2159974	"In URI handling, why does it not parse the message field?  "	whQuestion
521	2159977	"Nothing special has to be done for that; Qt uses tr() instead of _, and recognizes the qtui-specific strings (which are indeed a lot) in lupdate/lrelease, the qt translation tools, automatically.  It does not pick up _(), that's why the python script exists. It converts the strings in _() to QT_TRAN"	Clarify
521	2160013	"Huh I don't see anything about a message field in the URL handling? What's it supposed to parse, and do with it? "	Reject
521	2160106	"re:images I dont have a problem with it but I thought id bring it up to make sure no one else had any problems with it. Re:translations, it just bugs me that half the translations are in po format and the other half are in qt.  That might cause issues later on if there are conflicting translations u"	Clarify
521	2160145	See https://en.bitcoin.it/wiki/URI_Scheme (ignore lukes tonal exponent crap) 	Other
521	2160179	"Eventually all the translations should be in qt format (ts), not the other way around, IMO. The Qt translation system is more advanced (context sensitive, can take into account multiples, shows the GUI while translating etc).  The po files could be generated from the ts files, for use by bitcoind, a"	Clarify
521	2160189	"What would you want to do with the message? Display it in a popup? Currently, the ""send coins"" tab is opened and the amount, address and label is simply added to the recipients list when a URL is drag&dropped into the client. "	Clarify
521	2160240	"BTW **bitcoind** doesn't use translation at all; I guess it'd need to link against libgettext to do that. Currently, without ui, _ is implemented as this (util.h):      #if !defined(QT_GUI) && !defined(GUI)     inline const char* _(const char* psz)     {         return psz;     }     #endif  If this"	Clarify
521	2160266	"RE: message in bitcoin uri  It should be stored as a comment for that transaction. Actually, I'd like to have a editable comment field for every transaction (outgoing and incoming) so one could label individual transactions on a single address. I think the wallet and RPC already supports comments. "	Clarify
521	2160329	"Is that true? I haven't noticed it. I intended to add such functionality.  A long time ago I sent a message on the mailing list about adding metadata to transactions and address book addresses, but no one ever replied, so I guessed it was not practical or useless.  Anyway, we can add this later. It'"	nAnswer
521	2160360	laanwj: Just a side note: I've written a python script that reads ts files and outputs unicode string tables for use in mac or iphone applications. I think it won't take me long to modify it so it outputs po files. 	Clarify
521	2160453	"p2k: nice, if we decide to add gettext-based translation to bitcoind that will certainly come in handy "	Statement
521	2160709	"Meh, I dont care if all the translations are po or qt, but I would think it would be better to have them all together instead of split between two files. "	Clarify
521	2160747	"As I said, unless gettext-based translation is added to bitcoind, we can simply remove the .po files when the wx UI is deprecated. That would solve the problem wouldn't it? "	Clarify
521	2160802	"yes.,  long as existing translations are ported over. "	Emphasis
521	2160851	"Yes, that could be done, though that'd only work for the strings in the bitcoin core. Most of the strings in the UI itself would remain untranslated as they're different from before. "	Clarify
520	2123922	ACK  	Clarify
520	2134067	ACK 	Clarify
519	2121942	ACK 	Clarify
518	2111842	+1 	Statement
518	4967237	Implemented in #872. 	System
517	2109277	"The only other thing to worry about is that someone working on client development might inadvertently run a buggy version of the client and wind up locked out of parts of the network for a few hours. I would add one other change to help prevent this. When you 'punish' an IP, check to see if you made"	Clarify
517	2152430	Also see my post [DoS countermeasures may facilitate network fragmentation attacks](https://bitcointalk.org/index.php?topic=44954.0) Summary: Pay attention to new block headers with valid hashes of sufficient difficulty even from banned peers. 	Clarify
517	2158395	"Rebased into fewer commits, and removed banning due to getting too many free transactions and getting blocks with bad timestamps, because they might have opened up a possible split-the-network attack. "	Statement
515	2093356	I'll test in 11.04 to see if I can recreate the issue 	nAnswer
515	2093515	"Can you run the same experiment with the previous release?  database log files are cleaned up on either startup or next shutdown (can't remember which), so if you're downloading the blockchain with a new install lots of logs are expected.  "	Clarify
515	2093744	It looks like the previous release behave the same way. All the log files except the last are cleaned up after shutdown as you said. So this is normal behaviour. 	Clarify
515	2102379	"Older releases do indeed have the same problem, but that doesn't mean it's an issue that can be ignored. Start up bitcoin with an empty datadir, and it creates over 1.5GiB of log files when it finishes downloading the chain... "	Other
515	2102402	"Ok, I assumed that the log files it creates were valuable. Maybe a commit could make log-file creation opt-in. "	Statement
515	4967247	Should be fixed since #1010. 	Clarify
514	2121945	"Using google apps sounds like a good idea. It's pretty easy to setup, too (only a few dns records). Maybe you could set it up, grant admin rights to a few developers (maybe Gavin and Jeff) and tell Sirius which records to add? "	Clarify
514	2206963	"This has been closed, we have gone with QA@BitcoinTesting.org - so as to maintain a completely separate testing site. "	Emphasis
513	2068330	+1 	Statement
513	2070765	"Can you rebase into one commit?  Otherwise, looks good to me (but I'm no expert on obscure gcc compiler flags).  "	Statement
513	2071301	"ACK (if its in one commit). For reference, Bitcoin releases are already built with -fstack-protector (not -fstack-protector-all, however the difference is negligible), -Wl,-z,relro (though not -Wl,-z,now due to its potential performance hit at initial load, something which is minor compared to exist"	Clarify
513	2073570	ACK (after rebase) 	Clarify
513	2124683	ACK 	Clarify
513	2134071	ACK (thanks for the rebase) 	Clarify
512	2069127	ACK 	Clarify
512	2086197	thanks guys 	Statement
511	2062265	ACK 	Clarify
511	2062318	"Deleting *.mo is not correct.  The *.po file is updated, and other files should not be touched. "	nAnswer
511	2066308	@jgarzik does it honestly matter that much? Either way a binary mo has to be regenerated. 	Clarify
511	2066406	"Done, .mo not touched. "	Reject
511	2066980	"Thanks much, merged! "	Emphasis
510	2055792	This looks like a quite good commit. A new modern approach to bitcoins. 	Statement
510	2055983	+1. Bill Cosby makes a fine mascot for the community. 	Statement
510	2056077	Humor is better when it's not forced... 	Statement
510	2056769	"Please re-open April 1, 2012. "	Reject
510	2057144	"Will do!  --  Douglas Huff On Sep 9, 2011 6:21 PM, ""Gavin Andresen"" < reply@reply.github.com> wrote: > Please re-open April 1, 2012. > > -- > Reply to this email directly or view it on GitHub: > https://github.com/bitcoin/bitcoin/pull/510#issuecomment-2056769 "	Other
507	2046699	"As this is more of a convenience issue, and not one of stability - can you provide a commit or substantiate that there is a demand for this?  Closing issue within 48 hours if not.  Eventually we can reopen this and similar issues when issue priority tracking is implemented. "	Clarify
507	2047319	The suggestion does seem better to me... 	ynQuestion
507	2047352	I'm looking into priority tracking; just trying to trim the # of issues =) 	Clarify
507	2047422	Its not a high priority. Just an easy straight forward improvement. 	nAnswer
507	2048939	"As we're moving away from the wx UI anyway, I believe this should be postponed until after the merge of bitcoin-qt. "	Clarify
507	2049560	With the qt implementation - I'm assuming most of the wx-gui bugs/features will be irrelevant. Subsequently; this has been given the low-priority label. I plan to do the same for the rest of the wx bugs. 	Clarify
507	2352718	WX is now deprecated. Please update this thread if the problem persists in the QT build. 	Statement
506	2039583	"There is concern by who?  I strongly believe that the ability to broadcast a message in case of emergency is important; before removing it, generate some consensus on the bitcoin-dev mailing list that removing it is a good idea (I'll argue against).  "	Clarify
506	2040172	I was simply going off the comments on the Bitcoin StackExchange. I believe the primary concern was that it could be used for spam/DoS. I'll gladly submit the idea to the mailing list for consensus. 	Clarify
506	2041273	"I believe this is in reference to http://bitcoin.stackexchange.com/questions/740/how-can-the-alert-system-be-triggered-who-can-do-it and http://bitcoin.stackexchange.com/questions/636/is-the-alert-system-still-in-the-main-clients-code-will-it-be-removed  I'm not really for removing it, but there's a"	Clarify
506	2041331	That's correct Alex. There's a discussion on the Bitcoin-Dev mailing list if you've got input to add: http://sourceforge.net/mailarchive/forum.php?thread_name=CAOPxoMv7EGwgBNuvYpaD_4LtyxUUCvQ2Pe0DCZO4uHoAoMyfnA%40mail.gmail.com&forum_name=bitcoin-development 	Clarify
506	2041728	It seems that public opinion is that the code should remain for the time being. Closing this request until there are additional commits or more support in the mailing list/forums. 	Clarify
506	2043024	Fair enough. Sounds like there's some good discussion about the alert system at least so I don't consider my time to have been wasted bringing it up :) 	Statement
505	2029756	"First of all, can we get commitmsgs that are readable? "	whQuestion
505	2032895	"Ok I did the steps above in a fresh build of 0.4.0rc1 with the testnet-in-a-box files, and landed at code:-12 error: Keypool ran out, please call keypoolrefill first  I then restarted my daemons with the -gen tag. Up to about 20 generated blocks now.  My Ubuntu skills are lacking, the txids look uni"	Clarify
505	2034883	"getwork is how external miners ask for block headers to work on, so to test it you'd fire up a miner and tell it to ask for work from your bitcoind.  There's an external python-based miner in the config/pyminer/ directory (named pyminer.py) that aught to be handy for testing (it is very slow, though"	Clarify
505	2039577	The commits are a bit messy - lots of changes that are not used in later commits. ACK on the actual code change though (though it needs testing). 	Clarify
505	2051060	"Tested, no duplicate txids. "	Statement
504	2023260	ACK 	Clarify
504	2023811	Can you remove the binary mo file? 	ynQuestion
504	2023863	eh ? dunno how it shows up but the binary has been deleted 	whQuestion
504	2023999	"Oh, you deleted it, my bad. I thought it had been modified. ACK "	Emphasis
504	2024028	np :) 	Emotion
504	2062313	"The commit deletes *.mo, which is not the desired effect.  Your commit needs to simply modify *.po, and touch nothing else.  Thanks. "	Reject
504	2063493	"yeah, that would be my goal in every commit but with this one i had some troubles cause the editor overwrites the *.mo at the same time when you save the translation. I didn't know it was this difficult for you guys to manage submitted work from other people, i will try not to bother again. Thanks "	Clarify
504	2065140	"It becomes difficult for the very few engineers with pull requests, if each pull request requires manual modification after it is submitted.  It is -normal- in an open source project to request the submittor update their pull request in response to feedback.  See the Linux kernel, or Apache, or Ecli"	Clarify
504	2065450	"thanks jgarzik for taking your time to explain this issue, i do not fully agree here but will not continue with probably already answered questions. A ""committer guide"" will be nice though to maintain some order and less troubles for the main devel :)  I'm not experienced with git so i will be redoi"	Clarify
501	2020979	thanks man 	Statement
500	2020402	ACK 	Clarify
500	2026713	ACK 	Clarify
498	2015456	"sorry, edited the wrong way ppl "	nAnswer
497	2017711	Please update your commit to _only_ include the *.po file.  The binary *.mo file should not be included. 	Reject
497	2020386	"sorry, didn't know that it was created by poedit automatically  "	Statement
497	2020711	"By ""update commit"" we mean to rebase your commit so that there is (a) only one commit, and (b) that commit updates *.po file.  We would prefer to -not- merge Commit A and Commit B, where Commit B simply fixes Commit A.  We would rather just have an updated Commit A. "	Clarify
497	2020733	"ah ok, I think i got it "	Statement
495	2008052	ACK 	Clarify
494	2017578	Can you compare with the instructions detailed at https://bitcointalk.org/index.php?topic=5851.0;all 	ynQuestion
494	2017642	"Definitely, I just ironed out my Linux 11.04 build. I will get on this as soon as I test some pulls with Ubuntu (and take a nap =P) "	Clarify
494	3002298	I think this build issue is stale (concerns WX and bitcoin 0.4.0rc1) so I'm closing it; if you experience this issue with newer versions please re-open the issue or make a new one. 	Clarify
493	2006841	"I believe this is by design; after you encrypt, encryptwallet again would be a no-op.  "	Clarify
493	2007055	Closed pending any additional feedback 	ynQuestion
492	2035378	"Thanks for the thoughtful comments.  RE: polluting the wallet with megabytes of junk blocks/transactions:  I'm working on another fix for that (see my DoSprevention branch for the start, punishing peers that send lots of obviously bogus orphan blocks is on my TODO list). This change doesn't make tha"	Clarify
492	2039327	"I'm not sure I really like this. This means giving the maintainer of the software control over which block-chain is accepted by the client. Of course, he can already do this by changing the source code, so there may not be a real reason for my dislike for it. However, maybe we can still have a confi"	Clarify
492	2051642	"We already control which block-chain is accepted with the blockchain checkpoint mechanism.  RE: adding a 'verify the whole thing' option:  if you're that paranoid, you should run a separate piece of code to do the verification, in my humble opinion. In fact, a standalone verify-bklindex/blk000 tool "	Clarify
492	2051802	"1) There is a subtle difference: currently the maintainer can prevent certain chains from being accepted by clients, but the accepted chain does need to be valid. If you're going to skip verification of everything beneath a certain checkpoint, an ""evil maintainer"" could make ""his"" client accept a fa"	Clarify
492	2069748	I'm testing the speed on this just by timing how long it takes to download a few thousand blocks. Anything else you want me to test for this one? And - are there better ways of speed testing optimizations? 	Clarify
492	2070484	"You'll need to test on blocks that actually have a bunch of transactions in them, so don't test with the first few thousand blocks in the main chain (because they're all mostly empty-- a ""generate bitcoins"" transaction doesn't have a signature to verify).  I'd suggest: + Download up to block 50,000 "	Clarify
492	2070818	"There was a 10% gain for the first 70k blocks. At 99k, the patched client was 27m faster. Testing with Gavin's method now to verify.  ...it took 1:17 for the unpatched client to get to 99k, and :50 for the patched. "	Statement
492	2071230	27m faster?  This sounds broken. Even with 4000 transactions per block there is no way it should be taking that long. 	Clarify
492	2071973	"By using Gavin's method to avoid network variance - the original client took 13m to get from 65-75k, and the patched client took 10m. Giving a 23% improvement. I'm assuming that percentage would be higher with the recent, heavier blocks. "	Clarify
492	2073753	"There weren't that many transactions at 75k either yet. Maybe you can benchmark the entire chain verification? That is what every new node installation has to go through anyway.  Use a local node that is synced up, and use -connect to connect to it from an empty install, both patched and unpatched. "	Clarify
492	2076198	"Sipa, I can do that now. I think that knowing these timings will be good for future tests as well. I had been just eyeballing it, but I will try to write some kind of script that does the speed test. I imagine this could be used on several current and future commits.  Cheers for reminding me about t"	Clarify
492	2122718	"OK I have tested this with the full blockchain. I went from 0 to 145,686 and had the following results:  0.4.0rc1 - 10H:21M  0.4.0rc1 + pull 492 - 7H:14M  So that's an improvement of 3H:7M or 30% "	Clarify
492	2123702	These numbers are back to sounding suspect to me again. My desktop does over a thousand ECDSA verifies a second. That doesn't really jive with the speedup here.  	Reject
492	2125591	gmaxwell: can you test this commit to see if you get different results from my test? 	ynQuestion
492	2125642	"Sure, I will.  FWIW, I'm not questioning your methodology so much as suggesting that if its true then there is perhaps something else wrong with bitcoin which out to be fixed regardless of this change. "	Clarify
492	2125662	"I'm running this in virtualbox, so maybe my system's speed is a contributing factor - I will try it tomorrow on a different machine.  As for something else being wrong; in general I think major changes are needed to the blockchain download. Having a GB+ requirement is fairly undesirable (esp for mob"	Clarify
489	2007271	What version of wxwidgets do you have installed? 	whQuestion
489	2007364	Fixed with Luke-Jr's ui.cpp: http://luke.dashjr.org/programs/bitcoin/w/bitcoind/luke-jr.git/commitdiff/a687d4f574cb22ec969354dce3237558982e29d3  That is with wx 2.9.2 	nAnswer
489	2008678	Resolved when https://github.com/bitcoin/bitcoin/pull/496 is merged 	Statement
488	1985111	ACK 	Clarify
488	1985375	"Would anyone be opposed to adding a timer on issues, for instance:  ""Non-bug issues will be removed if no commits or comments are made in 30 days since issue creation."" "	Clarify
488	1985542	Who holds the keys to BitcoinQA@gmail.com? 	whQuestion
488	1985547	I do - maybe it should be passed to Gavin? Currently it's forwarding to my email address. 	Clarify
488	1985563	IMHO more than one person should hold the keys. As long as multiple people can get to the account. 	Clarify
488	2007923	"totally F'd up with that last commit - still learning git, sorry! "	Other
487	2046652	Please remove the binary mo file =) 	Clarify
487	2062025	Done in new commit 	Statement
485	1985571	That download button is (AFAIK) always a copy of current git master branch. 	Clarify
485	1985575	When I did a build using the download button's source I received the above errors. When building it moments later from git clone; I did not. I'll try to run a diff and see what's going on. 	Clarify
485	2009660	"I ran diff and couldn't find any issues, but I noticed one file that was a different size in the download vs the git clone. The downloaded source uses Dos\Windows newline formatting whereas the git clone uses UNIX. A subtle difference, but apparently enough to cause a build error.  I have a feeling "	Clarify
485	2009665	That is indeed the problem. 7zip adds Dos\Windows line endings instead of UNIX when unzipping a .zip file. Interestingly; the built-in Microsoft archive manager does not. 	Clarify
484	1975883	"Thanks for stepping up nanotube!   Does anyone want to help test this (while I get my test environment setup), and post confirmation(s)?  Nanotube has said that you would need to disable dnsseed and irc -> which can be done by issuing -nodnsseed -noirc "	Clarify
484	1978753	"I'm testing, and failing to connect.  I think the code needs to randomize the order in which it trys to connect to seed nodes-- it is always picking the first one on the list to try.  And if the connection to that node fails, it either takes a very long time to try another or isn't trying another at"	Clarify
484	1980284	New seed nodes are working nicely after I fixed the code to randomize which one to connect to.  	Clarify
484	1980661	"great. I guess we were unfortunate enough that the first node or two in the new list happened to go down or fill up sometime between me testing it and including it in the list, and you testing this :) (or fortunate, as the case may be, since it encouraged you to improve the code with the randomizati"	Clarify
482	1969860	"Can somebody double-check to see if I'm reading the code correctly?  Looks like both BitcoinMiner and getwork() call IncrementExtraNonce() to create unique coinbase transactions, so I don't think this is an issue.  "	Clarify
482	2013255	"They both call IncrementExtraNonce... which resets the extra nonce every second after overflowing. This guarantees unique block candidates, but not unique coinbase transactions. When an infinite supply of pubkeys are available, this isn't a problem, because after creating a block, the previous defau"	nAnswer
482	2021617	"Also, the extra nonce used in IncrementExtraNonce isn't stored across restarts. This isn't normally an issue due to the timestamps in block headers - it's very unlikely a bitcoin restart will take less than a second - but it means that not resetting the extranonce isn't a solution. "	nAnswer
479	1943374	"already done and in git master, just need to fix a bug or two and release. "	Clarify
479	1949815	"Thanks you guys are great, keep up the good work.. I hope to learn C++ one day to maybe add some of my work into the mix. "	Clarify
478	4044074	This was fixed in 2ffba736 (v0.4.0). 	Statement
477	1930178	"It is the correct behavior, what would you recommend for the message? "	whQuestion
477	1954454	Too Many Decimals.  Bitcoin values are up to 8 digits after the decimal.  or something to that effect.  	Clarify
477	1958552	Change ui.cpp:2143 and the relevant original text in all the translations. 	nAnswer
477	3817030	"This is no longer a problem in the new UI, as the input widget makes it impossible to enter extraneous decimals.  Closing this issue...  "	nAnswer
476	1889793	"Was there a design discussion for this anywhere?  You're returning more than just the list of transactions, and there is some magic code I don't understand (like the ...GetTime() - nStart > 60 ... what is that about?)  "	Emphasis
476	1890122	There wasn't a discussion - I assumed we'd have it here and I'd revise it.  It also returns the previous block and the total amount of fees in those transactions. The previous block hash is important because these specific transactions are only valid following that block.  The magic code is just a c	nAnswer
476	1890338	"If it is a more complicated or potentially controversial change, then the patch submitter will be asked to start a discussion (if they haven't already) on the development forums:  http://www.bitcoin.org/smf/index.php?board=6.0   ... from the top-level README.  Please start a discussion on the foru"	Clarify
476	1890353	you still suggest anyone try to start a sensible discussion on those forums? 	ynQuestion
476	1894336	https://bitcointalk.org/index.php?topic=39088 	ynQuestion
476	1942626	"by the way, wanted to make a note @gavinandresen : this will also be useful for writing that cross-client test-suite you were talking about.   when we were discussing it, you were primarily focusing on sending client various bits of blockchain. however, as we know from the existing bug where transac"	Clarify
476	1999038	can you rebase this against 0.4rc? 	ynQuestion
476	2005582	Rebased. 	System
476	2016646	I'm soooo excited about it! :-D  Thanks to this the awesome decentralized p2pool can now include transactions and make actual use of the mining power :-) First mined block with transactions: http://blockexplorer.com/b/143923  Thanks 	Emphasis
476	2257819	I'd like to pull this; can you rebase again? 	Clarify
476	2258299	Rebased. Thanks! 	Emphasis
475	1864136	"It looks like you deleted all the messages related to wallet encryption, can you readd those? "	ynQuestion
475	1865173	"It's a bug. I posted an old version. I'll readd this and a compiled *.mo version asap.  I'm a github newbie, sorry for the trouble.  2011/8/21 TheBlueMatt <reply@reply.github.com>: > It looks like you deleted all the messages related to wallet encryption, can you readd those? > > -- > Reply to this "	Emphasis
475	1874560	it would be better to not add the compiled .mo as those should be compiled by a trusted developer (never know what you can do with binary files corrupting the application) 	Clarify
473	2038944	"I have the same problem with Bitcoin 0.3.24 32 bit, driver nouveau. <pre> $ lspci |grep -i nv 01:00.0 VGA compatible controller: nVidia Corporation NV5M64 [RIVA TNT2 Model 64/Model 64 Pro] (rev 15)  $ uname -a Linux AMD 2.6.39-2-686-pae #1 SMP Tue Jul 5 03:48:49 UTC 2011 i686 GNU/Linux </pre> Regard"	Other
473	3238642	Please re-open if you have the same problem with version 0.5.1 or later (switching the GUI from wxWidgets to Qt should have fixed the issue).  	Clarify
472	1816759	Would you please resend without the compiled (*.mo) translation?  Thanks. 	Clarify
472	1824922	"Ah, I'll send a new one (didn't know commits are automatically added to this pull request). "	Clarify
471	7058374	Can you please try the current 0.6.3 version. As for shutdown-problems the 0.7 release will be a good one. But please report back. 	Clarify
471	8763033	"@Plasma Hey there, could you please download the latest 0.7 relase and test if this still happens and otherwise just close the issue? "	Clarify
471	17589776	@laanwj I guess this one can also be closed now. 	Statement
471	27688691	"I remember there was some thread recently on bitcointalk, which covered this... AFAIK there is no Ctrl + C handler for bitcoind.exe, which means the crash could still be there. I don't use bitcoind, so can't verify. "	Clarify
469	1803885	We need far more details than this.  OS?  OS version?  X server version?  video hardware?  other hardware? 	Other
469	1805269	"X.Org X Server 1.10.3.901 (1.10.4 RC 1) Release Date: 2011-07-29 X Protocol Version 11, Revision 0 Build Operating System: Linux 3.0.0-ARCH i686  Current Operating System: Linux linuxhost 3.0-pf #1 SMP PREEMPT Sun Aug 14 23:03:58 CEST 2011 i686 Kernel command line: BOOT_IMAGE=arch ro root=801 Build "	Clarify
469	1805273	"video: GeForce 4Ti4200, driver nouveau.  lspci:   00:00.0 Host bridge: VIA Technologies, Inc. VT8377 [KT400/KT600 AGP] Host Bridge (rev 80) 00:01.0 PCI bridge: VIA Technologies, Inc. VT8237/VX700 PCI Bridge 00:09.0 Ethernet controller: 3Com Corporation 3c940 10/100/1000Base-T [Marvell] (rev 12) 00:0"	Other
469	1806248	another thing: Xorg seems to eat CPU time only if the new chain blocks are downloading. 	Clarify
469	1806272	"Naturally,with bitcoind in daemon mode is all ok. "	Statement
469	1806917	hmmm.  I wonder if we are simply updating the display each time a block is downloaded... 	Clarify
469	1807607	"Another thing: I tested the actual version of bitcoin on the Ubuntu on the Laptop and all seems to be OK.  The Laptop has a most better CPU (Dual Core) + 2GB RAM, and the computer, where bitcoin is ""bugging"" has only an Athlon 1.8GHz + 512MB RAM. "	Clarify
469	1807622	"But with a look on the output of top, the Xorg server eats only 2-3% (but on the computer with the bug triggered X org eats 30-60%). "	nAnswer
469	2369625	Can you retry this with the Qt UI?  	ynQuestion
469	3002212	"Closing this issue due to inactivity, please re-open if this is still the case with bitcoin-qt (releases from 0.5.0) "	nAnswer
468	2089022	+1 	Statement
468	2089141	I actually doubt the usefulness of this after realizing there was already the third [from] arg on listtransactions (Wiki has been updated). 	Clarify
468	2089191	the problem currently is if the 'from' parameter is greater then the total number of transactions it rolls over and returns an unexpected assortment of results 	Clarify
468	4186045	This needs rebasing 	Statement
467	1801906	"I haven't tested it, but it looks correct - a bit of a hack though. Wouldn't it be nicer to have a  bool GetKeyFromPool(vector<unsigned char> &vchPubKey, bool fAllowReuse = true)  function which can fail, and call that with fAllowReuse=false in GetAccountAddress? "	Other
467	1803622	Much less hacky to rename GetOrReuse to GetKeyFromPool with a flag.  I'll do that.  	Statement
467	1944012	"Aside from maybe adding a lock around IsLocked and GenerateNewKey, looks good "	Other
467	1948772	Thanks.  RE: locks:  I'm in the middle of reworking the wallet/keystore locks to fix potential deadlocks; should be done with that work tomorrow.  	Clarify
466	1789824	"PS Currently I only turn the RPC calls ""getgenerate"" and ""setgenerate"" into no-ops, should they maybe be removed instead? "	Clarify
466	1789840	"There was a large discussion some time ago about this, split between people wanting to remove all mining code, and people who wanted to keep as much as possible. Eventually a middle ground was chosen: remove the SSE-optimized and assembly code, but keep a simple miner as reference. Maybe this should"	Clarify
466	1790016	"If a reference implementation is the goal then IMO it should be implemented as a seperate program using the RPC ""getwork"" interface.  I would argue that Jeff Garzik's RPC CPU miner (the one I mentioned before) is good enough to serve as a reference implementation. Heck the code's a lot cleaner than "	Clarify
466	1790506	"+1 for removing the built-in miner, there are a couple of example implementations in the wild already. "	Reject
466	1792553	I'd be ok with a version of this patch that completely removes the mining code but adds a reference miner (in contrib/ ).  Either Jeff's or a pure-Python-no-dependencies one.  Also:  setgenerate's help text should be changed like you changed getgenerate and both methods should be marked deprecated. 	Clarify
466	1792572	Agree with Gavin. 	Accept
466	1794423	"I properly marked both RPC functions as deprecated in their help text.  As for adding a reference miner, I don't think adding Jeff's to this repo is the way to go, at the most it should be moved to the github 'bitcoin' project. That being said, I can probably whip up a pessimistic (i.e. no single re"	Clarify
466	1929705	"PS Currently I only turn the RPC calls getgenerate"" and ""setgenerate"" into no-ops, should they maybe be removed instead?""  +1 to them being removed - and +1 for NOT including a reference miner. "	Clarify
466	1959013	A reference python miner has long existed: https://github.com/jgarzik/pyminer  	Statement
466	1959063	I went ahead and added my python miner to bitcoin/contrib/pyminer/ 	Statement
466	1959091	"IMO, let's go ahead and remove the *generate RPCs.  Rationale: * I doubt this will create serious breakage * Anybody who mines does not use this anyway * It occasionally creates confusion for newbie pool server operators (""setgenerate is false, does that mean getwork is turned off?"")  "	Clarify
466	1960537	"I agree, no-ops just confuse everyone. Also, is there anyone left who is actually against removing all of this? "	Clarify
466	1962089	"I would personally -prefer- that the Satoshi Reference Miner remain, but if everyone else wants to remove it, it sounds like I'm outvoted...   "	nAnswer
466	1962913	you can still get the satoshi reference miner - its in git history ;) 	Clarify
466	1991103	I've rebased the branch against master to make it easy to merge in. 	Statement
466	2255258	This would also mean that we can get rid of some ugly platform-specific functions in util.h/cpp which will be no longer used:  * SetThreadPriority * AffinityBugWorkaround  And some general functions only used by the miner:  * alignup  	Clarify
466	2298642	I use the built-in miner quite a lot to test with testnet-in-a-box. I think we should leave it in for now.  	Clarify
466	2298881	"I still disagree with leaving it in, you can just as easily mine with cpuminer on testnet-in-a-box (in fact, it would be faster) and the codebase is just generally such a mess, removing unused and unnecessary features like satoshi miner should happen ASAP. "	Clarify
464	1791560	"Temporarily closing to upgrade to db4.8, wx2.9.2 and miniupnpc1.6 on win32 "	Statement
464	1795343	"OK, think this one is finally good to go. "	Statement
464	1819264	Closing again until I have a minute to get devrandom's upgrades which make mingw results deterministic pulled into this. (very much want this stuff for 0.4). 	Clarify
464	1881682	"OK, Im doing a couple final run-throughs and then I'd like to see this as the build system for 0.4 "	Clarify
464	1902959	"It would be nice to get a confirmation that the results here are deterministic...IIRC devrandom said that there are a few bytes changing in the final nsis exe, but everything else should be stable (including the boost and wx results).  Im going to see if I can work on the nsis exe, but Ill leave thi"	Clarify
462	1784024	"NACK on the protocol.hpp (we don't have other hpp files, I dont' see a good reason to start now-- moving non-performance-critical code from .h to the .cpp I support), and on asserting copyright to protocol.hpp (I just pulled Matt's standardization of making the copyright ""Bitcoin Developers"")  ACK o"	Clarify
462	1786662	By protocol.hpp I assume you mean to reject the extension? Changed that to protocol.h instead.  The copyright header I took from the head of another file now.  Ammended and forced-updated these commits. 	Clarify
462	1786675	"PS I was thinking it might be an even better idea to move every single message class to a single source/header file, e.g. src/protocol/$msg.(cpp|h). Any thoughts on that? "	Clarify
462	1786911	Separate source/header for each message wouldn't fit the rest of the project's 'style.' We've rejected other proposed re-orgs that did two-files-per-class.  	Clarify
462	1787124	"Right, my intention was to move all classes related to the bitcoin wire protocol into protocol.(cpp|h). This to allow the actual transport (across a TCP socket, or something else if desired) to remain separated from protocol decoding/encoding and event handling (the latter is currently already split"	Clarify
462	1790203	"Nice cleanup - I haven't looked at it in detail yet though.  My ipv6 branch uses a modified CAddress whose address and port are private (as a comment on your ""TODO: make private"" there). "	Clarify
461	1781561	How to compile without linking to libupnp then? 	whQuestion
461	1781635	Set USE_UPNP=0 in the makefile. (or on the commandline) 	Statement
461	1782166	"This does not sound consistent with the `init.cpp` change. There was three states before : `undefined` -> no linking, `0` -> linked but off by default. `1` -> linked and on by default. A bit odd, but a least functional. "	nAnswer
461	1783944	"The relevant section from build-unix.txt:  Requires miniupnpc for UPnP port mapping.  It can be downloaded from http://miniupnp.tuxfamily.org/files/.  UPnP support is compiled in and turned off by default.  Set USE_UPNP to a different value to control this: USE_UPNP=   no UPnP support, miniupnp not "	nAnswer
461	1792587	I hate to open this kettle of worms...  ... but the tri-state nature of USE_UPNP seems to be a chronic source of confusion. Any objections to changing the rules to be:  USE_UPNP=1 : upnp support compiled in and turned on by default at runtime Anything else:  upnp support NOT compiled in.  And the bu	nAnswer
461	1792619	Well the original argument was we will have autotools in a couple weeks so it will all go away...but autotools kinda fell flat. 	Clarify
461	1795629	"I'm not sure how autotools would fix that problem, as the tri-state nature of USE_UPNP would remain a problem... If you *really* want to be able to configure the default UPnP state at compile time (which seems rather senseless to me): use *two* macros for the job. "	Clarify
461	1795643	Well autotools can figure out if upnp is there and then automatically either set or unset USE_UPNP and you can do a configure flag to set the default on or off. 	Reject
461	1795670	"The fact that upnp is available doesn't mean you actually want to build against it. As for a configure flag to set the default on/off, the same can be accomplished with a macro (the -D thing) by optionally defining one depending on make's command line.... "	Clarify
461	1795687	"I cant see many scenarios where you would want to not build against a library you have even if its use if off by default (most programs will build this way, even if you can force it one way or another)... Anyway, not that it really matters, the initial idea was autotools could have more/more clear f"	Clarify
461	2369054	"I'm fine with it being possible to link to libupnp without enabling it by default (linux distributions might use this) but these would indeed be better off as separate options, the tristate option is really confusing. "	Clarify
461	2602696	"I like gavin's suggestion to only have one option, USE_UPNP=1 or else.  Just one question, because I don't really know what is meant with ""build rule"": Is the build rule only refering to the provided, statically linked binaries on the website? Or to the default behaviour of qmake and make?  I think "	Clarify
461	2603022	how big is libupnpc? would it be feasible to include it in bitcoin like we do with spirit-json? if it is only a few source files we could... as it is not a very common library for distributions to have available 	Clarify
461	2604425	"@T_X in gavin's comment, build rule would refer to the default when calling make/qmake+make and the distributed binaries.  Personally, I don't care what the default is, the tri-state option was added because no one would agree on what the default for UPnP should be and thus it wasn't getting merged,"	Clarify
461	2608701	"IMO it would be fine to always enable libupnp by default when it is linked. After all, it can still be disabled through a command-line option and in the options UI.  But you're right that it seems that we can never agree on anything and so these kind of small changes linger forever. "	Clarify
461	4557331	"also have a problem with this USE_UPNP build option mostly not working, please fix "	Other
461	4557766	"It's not broken afaik.  Explain ""mostly not working""? "	Other
461	4559511	"just tried to build from latest github and I had to manually modify the makefile to build with no UPNP libs or includes I ll try again, perhaps its just me.  "	nAnswer
461	4566547	"@neofutur have you even read the rest of this issue? I'm sure it is confusing, and I agree it needs to be changed, but you know that USE_UPNP= disables linking against miniupnpc? "	Clarify
458	1774139	ACK 	Clarify
457	1773030	"I'm concerned this might make RPC code that implicitly assumes the RPC is single-threaded deadlock or crash.  How much testing did you do-- has this been tested on an in-production, high-RPC-traffic server?  "	Emphasis
457	1773629	"It currently still is single-threaded, i.e. all code is still executed from ThreadRPCServer2 via the ""io_service.run_one()"" construct.  The way it basically works is that certain actions are started (using 'async_*' methods), and get passed along with them an event handler to be called upon that act"	Clarify
457	1774261	PS The main reason for using asynchronous I/O is to allow binding to multiple addresses for RPC without requiring one thread for every socket. This is what enables a dual IPv4/IPv6 stack. 	Clarify
457	1783949	"I don't know nuthin about IPv6/boost::asio stuff.  General comment is it seems like this maybe should be part of a larger ""support IPv6"" branch.  "	Statement
457	1786723	"Well, all that can be supported about IPv6 for RPC is in this branch. So that's exactly what this branch is: a ""support IPv6 for RPC"" branch.  Given that the RPC code is completely separate from any other networking code it actually makes sense to migrate it separately. That's why I'm not even tryin"	Clarify
457	1991389	I've rebased the branch against master to make it easy to merge in. 	Statement
457	2382453	This conflicts with threaded JSON-RPC which is needed by many people. Can you make an IPv6-only version? 	whQuestion
457	3205994	agree w/ first half of luke-jr's comment.  second half... not sure we want an IPv6-only version? 	Clarify
457	3206070	"I meant a patch that only adds IPv6, without the conflicting async stuff. "	Clarify
457	3206945	"Adding IPv6 (or any other protocol that requires an additional listening socket) *requires* event-driven (aka asynchronous I/O). That or a separate thread per listening socket, wich conflicts with the RPC's assumption that RPC code is single threaded...  Additionally event-driven approaches tend to "	Clarify
457	3207083	"Can we do async for listening only, then? Threads are needed for actual RPC calls since some may block. "	Other
457	3221992	Another (probably better) solution would be to have a select(2)-like event-based processing loop. It would have the single-thread advantage of asynchronous I/O but the simplicity of a callback-less design. As I assume that the addition of callbacks in my current implementation is what you like least	Clarify
457	3222056	I dislike the fact that a 'getwork' call will block all other JSON-RPC until it completes. 	Statement
457	3239572	"Yes, but that is unrelated to my patch.  The alternate implementation of IPv6 support I'm thinking of would look somewhat like this pseudocode:   * create listener sockets (IPv4 and IPv6)  * asynchronously accept a connection on both listeners (acceptor's in Asio's terminology)  * from the accept ca"	Clarify
457	3240785	"It's related, because your patch conflicts with it. Instead of conflicting, why not implement IPv6 RPC on top of the existing multithreaded JSON-RPC branch (#568)? "	Other
457	3254297	"The reason it conflicts with it is simple of course: there was no multithreaded RPC patch when I wrote this patch.  As for resolving those conflicts by implementing on top of #568, no promises but I'll look at it in the weekend. Right now I'm going to get some much needed sleep. "	Clarify
457	3268074	Current branch is on top of #568. I've used the approach outlined above (using a connection queue). 	Clarify
457	3268629	ACK: Tested fine for me in 'next-test' 	Emphasis
457	3821590	"For some reason, if -rpcallowip is used, it sees local connections as ::ffff:127.0.0.1 and sends a 403 instead of allowing the connection.  (side note: #568 has been rebased) "	Other
457	5586369	Request rebase on top of #1101...  we certainly do want to support IPv6 RPC. 	Statement
457	5677751	"@jgarzik I'll work on updating this pull request next Thursday (Ascension Day, national holiday so I'll have some time off). "	Clarify
457	5678448	"Thanks!  Note that pull #1101 is now upstream, and will be in upcoming version 0.7 "	Emphasis
457	5678847	Please don't forget to fix the -rpcallowip issue. 	Reject
457	5808816	@luke-jr This also contains a change (in 652eebf08e7f0e32d686d4e36475742fa27f71cc) to treat IPv4-mapped IPv6 addresses (::127.0.0.1 is one) as IPv4 addresses. 	Statement
457	5826601	I believe that this pull request is ready for merging. 	Reject
457	6223190	ACK 	Clarify
457	6385032	"NACK until the last commit is clarified.  @muggenhor Wait, what are you doing there to the shutdown ... we had a long discussion and merged a patch a few days ago. Your last commit is likely to break sth. or at least change the current behaviour once more, see #1439. "	Clarify
457	6511023	basic_socket_acceptor needs -lmswsock added to Windows builds: - bitcoin-qt.pro - src/makefile.linux-mingw - src/makefile.mingw 	Other
457	6511831	Did anyone mind reading my comment above lukes...? I'm sure the last commit can cause trouble. 	Clarify
457	6531684	"@luke-jr it's been long since I've done windows development, but don't you mean ws2_32 ? And isn't that linked to already?  @Diapolo yes, I did read your comment. I however have a day job which doesn't leave me much time during the week to reply *immediately*. So being patient enough to wait till th"	Clarify
457	6531916	"@muggenhor I didn't want to hurry you the feedback of another dev would have been sufficient, too. I didn't want to offend you. That said ``StartShutdown()`` is currently used in bitcoinrpc, main, net and test_bitcoin.  GUI:  StartShutdown() ->  uiInterface.QueueShutdown() -> quit() for QCoreApplica"	Clarify
457	6532199	"@Diapolo as you correctly seem to have noticed nothing is changed for the GUI case (outside of the RPC code).  For the NOUI case the flow is changed to: StartShutdown() -> raise QueueShutdown() signal -> CreateThread(Shutdown, NULL); -> Shutdown(NULL) -> exit(0);  In addition to that, for both GUI/N"	Other
457	6532303	"It does seem to simplify the shutdown code. @Diapolo: any reason to assume things will break with this patch?  Both bitcoin-qt and bitcoind seem to shutdown fine with this, via RPC stop, UI quit, or SIGINT. "	Clarify
457	6532382	"@muggenhor basic_socket_acceptor uses [AcceptEx](http://msdn.microsoft.com/en-us/library/windows/desktop/ms737524.aspx), which is defined in mswsock "	Other
457	6532411	"@luke-jr basic_socket_acceptor is already used in mainline, so the problem should exist already. Regardless, I've fixed it as well in my branch. "	Clarify
457	6533629	I have no further doubts after reading the explanations above. Thanks for clarification! 	Reject
456	1756458	Has this been compiled/tested with Windows/mingw?  	ynQuestion
456	1759044	"No, it hasn't (I don't have access to a windows box right now). I can ask a friend to try, though.  On Mon, Aug 8, 2011 at 8:03 PM, gavinandresen < reply@reply.github.com>wrote:  > Has this been compiled/tested with Windows/mingw? > "	Other
456	2014978	Pulled a different patch that fixes this issue and works with both filesystem2 and filesystem3 	nAnswer
455	6791475	"It looks in the testnet (now testnet3) directory by default, when -testnet is specified "	Statement
454	2994719	ACK 	Clarify
454	3074387	"Updated version, now with less redundant code and less potential to segfault in very rare cases. "	Statement
454	3074591	"After discussion on #bitcoin-dev, no more exponential backoff and retry connections every 2 minutes. "	nAnswer
454	3208778	Is there a good reason for this to be a separate switch?  I think I'd prefer if we just changed the -addnode behavior to stay connected.  	Clarify
454	3208858	"not really, I just always prefer to not change existing behavior, but if there is a consensus that -addnode in its current for is unnecessary, thats fine. "	nAnswer
454	3379204	"-addnode removed, s/keepnode/addnode/ "	Statement
454	3470167	This needs rebasing again. Not trivial this time. :( 	nAnswer
454	3470760	"Rebased, and it was trivial. "	Statement
454	3471613	"No, it isn't that trivial. This still does not build. "	Reject
454	3474625	"OK, theres an actually useful version. "	nAnswer
454	3475183	"The cleanup really doesn't belong here, but it looks fine to me... ACK on 10ba0a3 (Minor cleanup...) "	nAnswer
454	3475226	"Sorry, I wrote that patch while writing keepnode and its way too small to warrant its own pull request, so I just left it in here... "	nAnswer
454	3480781	"This doesn't work for me.  How I tested:  3 testnet-in-a-box nodes, a/b/c listening on ports 8900,8901,8902  b -connects to a c -connects to a and also -addnode's b  Test:  start them all up, verify c's connections. Shutdown b. Then restart b, and see how long it takes c to reconnect. I waited a lon"	Clarify
454	3484860	"No, 120,000 is correct (http://www.wolframalpha.com/input/?i=2+minutes+to+milliseconds), also it worked fine for me... I just ran two regular nodes with -connect=0.0.0.0 and one with -addnode=127.0.0.1:8334 (the second started after the first) and 2 minutes after it first tried its connection, it co"	Clarify
454	3519231	"ACK-- problem with my test is elsewhere in the networking code, I can't make more than one connection from daemons running on my machine on different ports.  "	Clarify
453	1737042	Ah ok this is clearly a better place to post issues. Thank you. 	Clarify
453	1749626	"I think the entire locking system may need to be revised in general, it is very hard currently to find this kind of bugs. Your analysis looks correct to be though, but wouldn't locking cs_main before cs_vMasterKey in CAddressBookDialog be sufficient? "	Clarify
453	1754558	"If you lock it in CAddressBookDialog, as long as the password dialog box is open, the entire cs_main is locked, which is quite a problem (as nothing else important will work during that time)...so I'd say not really. "	Clarify
453	1775538	"I think the locking system is fine as long as each lock is logically tied to a relatively small subsystem with few dependencies.  This is already true for the most part.  I think the problem here is cs_main, because it is not at all obvious what it is trying to lock. "	Clarify
453	1778763	"One thing that would help an awful lot is some documentation explaining the intended locking hierarchy. Presumably, there is some intended order in which locks are acquired. If we know what that hierarchy is supposed to be, we can easily add test code to confirm that the hierarchy is not violated. A"	Clarify
453	1789972	"I think the current locks can be divided into three components: 1) main/blockdb/mempool, 2) wallet/keystore, 3) network  Within each component the order of locks can be fixed, and easily checked. However, between the components there are also dependencies. As both wallet and network request and subm"	Clarify
453	1822336	"I'll be commiting lock order inconsistency detection code tomorrow (I need to rebase some code and make it #ifdef DEBUG_LOCKORDER).  RE: Joel's suggestion on documentation:  Good Idea. It might be a good idea to give each CCriticalSection an integer 'depth', and make it a run-time error to lock out "	Clarify
452	1757662	fixed 	System
452	2247131	"The pull has become unmergeable (without conflicts), and will be closed in 15 days from this message if action is not taken.  To prevent closure, kindly rebase the pull to merge cleanly with the current codebase. If a time extension is needed, please respond to this comment or contact QA@BitcoinTest"	Clarify
452	2465096	Closed pending rebase / additional commentary. The rebase label has been applied. 	Clarify
450	1720553	Each call is within an if(fHaveUPnP) which means the compiler will optimize it out (since fHaveUPnP is a constant).  That way you dont have messy ifdefs all over the place. 	Clarify
450	1720708	You have to tell it to the VC++. Probably the gcc is more flexible (in the same way that the gcc ignore the missing return value of AddKey) 	Clarify
450	1720739	VC++ isnt officially supported (due to odd GUI crap that can happen which causes parts of the GUI to become transparent). Last I heard the current makefile for vc will compiled properly anyway (someone updated it not too long ago). 	Clarify
449	1717870	Probably not something that should be filed as a bug...though I'd assume there was a reason that no one will know any longer as satoshi isnt here to comment. 	Clarify
449	1717935	"Yeah, my bad.  It's unlikely, but since spirit classic is no longer being actively developed there may still be bugs hiding there that won't be addressed very quickly if ever.  I mean, parsing JSON isn't really the most intensive parsing that I can think of, but spirit v2 would certainly reduce the "	Clarify
449	1717998	"We aren't the ones using spirit v1, we use an JSON Spirit from http://www.codeproject.com/KB/recipes/JSON_Spirit.aspx You'll have to ask that guy. (though we do do some small modifications and are on an old version of that library) "	nAnswer
449	1718086	"On Wed, Aug 3, 2011 at 9:37 AM, TheBlueMatt <reply@reply.github.com> wrote: > We aren't the ones using spirit v1, we use an JSON Spirit from http://www.codeproject.com/KB/recipes/JSON_Spirit.aspx > You'll have to ask that guy.  Ah yes, I see now.  The message board there has the answers straight awa"	Clarify
447	3002277	"I cannot reproduce this with the current version of bitcoin:      $ ./bitcoind sendfrom '' a1 1     error: {""code"":-5,""message"":""Invalid bitcoin address""}  So I'm closing this issue. If you can still produce this with release 0.5.0 or later, please re-open the issue.  "	Clarify
447	3019089	"FWIW, confirmed this issue does not affect bitcoind git 0.4.x branch at commit ba56a88. "	nAnswer
446	1703883	"Looks safe, and a good idea; ACK "	Clarify
446	1704817	Looks good to me 	Statement
443	1713600	CheckBlock calls this function.  Won't this cause a fork in the blockchain if the network doesn't upgrade as a whole and a transaction that runs afoul of this check is included in a block?  	Clarify
443	1713635	"Such a transaction should already cause the block it is included in to be invalid, as ConnectInputs will detect the duplicate use of the same prevout. This patch just causes such cases to be detected in an earlier stage, before it enters the memory pool. "	Clarify
443	1713684	"If a transaction with a duplicate input is in a block, the chain should be forked (or people are making money out of nothing). Also, no transactions with duplicate inputs get put in blocks...someone tried it a couple weeks ago, but the txes never ended up in blocks.  Im assuming there is a check som"	Clarify
443	1713747	"Right, looks like the vSpent check in ConnectInputs takes care of it.  "	Reject
442	1694912	Someone needs to test that this builds on OSX first. 	Clarify
442	1705061	"Tested on OSX by b4epoche, seems fine "	Statement
442	1709688	"On current head it fails with:    test/transaction_tests.cpp(22): error in ""RealTransaction"": Transaction with duplicate txins should be invalid. *** 1 failure detected in test suite ""uint160""  I wonder why it sayd 'test suite ""uint160""', the failed test is in ""transaction_tests"".  "	Clarify
442	1709722	"Re: it fails: yes it is supposed to, that is a bug that should be fixed (see #443 for a potential solution). Re: uint160, yea I tried to figure out why, but I cant seem to see why, maybe someone else can figure that out...In any case thats a fairly minor UI issue and isnt a regression. "	Clarify
442	1709845	"I didn't mean to comment on the failure itself, only on the reporting thereof. It's a minor issue, but maybe it means the boost test framework isn't being used correctly. "	Clarify
442	1710227	"OK, updated with better naming... Not really anything that can be done within boost test to make the output more specific, so just name the AUTO_TEST_CASE well and use BOOST_CHECK_MESSAGE instead of BOOST_CHECK "	Clarify
442	1711591	ACK. 	Clarify
442	1764336	Merged after rebasing onto pull #443 (commit 4e5d88 -- apologies if that causes anybody pain). 	Clarify
441	1734586	Resolved in 01a509fa 	Statement
441	1745578	"This makes sense as a default; but what if you want to run a bitcoin node as a hidden service? this works using port redirection, so you need a listening port *on localhost* at least.  I propose: Providing explicit `-port` argument overrides `-nolisten`.  Another option would be to listen on localho"	Clarify
440	2352722	WX is now deprecated. Please update this thread if the problem persists in the QT build. 	Statement
439	1693451	"Your GetFileSize change is a regression, introducing a minor race window.  If we have an open FILE*, then we may fstat via fileno.  The current code implicitly does this, by working on the already-open file.  Your change refers to the file by name, which may have been renamed, and may no longer refe"	Clarify
439	1693456	win32 does not have a fstat() that I can find. That is why I did it this way. There doesn't seem to be a way to easily guarantee that fseek()/ftell() will give you a 64bit int. Suggestions? 	Clarify
439	1693480	Also it actually doesn't add any new kind of race condition. It's only first opened a line before the call (and this is the only caller) and gets closed and reopened immediately afterwards if the file with that filename at the time is longer than the specified hardcoded value.  Worst case we'll get 	Clarify
439	1693604	Windows supports _ftelli64.  The ftell approach remains superior because it avoids the aforementioned regression. 	Statement
439	1693691	"There we go, race condition gone. "	Reject
439	1764512	"Seems to me this is fixing the symptom, not the disease.  The disease is writing way too much to debug.log by default.  "	nAnswer
439	1768480	"I agree that the default logging level probably needs to be reworked; but, this is a problem in itself. No software should just stop logging out of the blue unless it has no space on the device it's logging to. "	nAnswer
439	2030495	Added test instructions to description:  This can be tested with:   dd if=/dev/zero of=debug.log bs=$((1024 * 1024)) count=2048; tail -f debug.log & bitcoind -daemon;  If logs get appended to where debug.log continues past 2GB it is working. Must be tested on a 32bit build. 	Clarify
439	2125834	"I have to agree that we shouldn't have a 2GB+ logfile in the first place. For the majority of people, I would think that the advantage of having verbose logs is outweighed by the inconvenience of their size.  https://github.com/bitcoin/bitcoin/issues/515 - logfile size reference  https://github.com/"	Clarify
439	2880506	"I agree with @jrmithdobbs here. >2GB log files are a problem in itself, but it should not simply stop logging after that, that can be dangerous and lead to non-debuggable issues.   "	Clarify
439	5016842	"This seems to have been forgotten over time. Looking at it again, it seems to remove the automatic pruning of debug.log. Is this intentional/wanted? "	Emphasis
439	5710394	"Hm I understood from the bug reported was that it stopped logging after 2Gb. It's good to solve that.  Auto-pruning should not be disabled though, IMO, as most users don't want to be concerned with the debug.log file at all. So having it grow to fill their disk is not so nice. Pruning at startup whe"	Clarify
439	5714722	But processing a 2GB file should be quite time-intense and will for sure hurt user-experience!? 	Continuer
439	5715735	"Processing how? It's never read back in let alone ""processed.""  My removing of the pruning was intentional. Auto-pruning logs is just bad practice. What if I need to look at something in my log from a month ago? Things log way too verbosely by default, sure, fix that don't mangle the log.  Feel free"	Clarify
439	5717726	"I meant Auto-pruning a large log-file could be time-intense, no? "	nAnswer
438	1688967	The win32 and osx makefiles probably need similar changes before the block chain gets that big. 	Clarify
438	1688987	sipa informed me that block chain is split into 1GB files so not as big a deal there. This mostly just affects debug.log on long-running bitcoind instances. 	nAnswer
438	1689090	This breaks GetFilesize which breaks ShrinkDebugFile. Closing until I can get that sorted out. 	Reject
433	3096846	"Has this issue ever been addressed?  It sounds quite serious, forgetting to acquire locks at certain points.  "	Other
433	4044094	This was fixed in 6cc4a62c (v0.4.0). 	Statement
431	1651500	+1 I have been waiting for this capability for months and would definitely use it once merged! 	Emphasis
431	1651880	"If merged, I believe that f5f97fa would close https://github.com/bitcoin/bitcoin/issues/247 "	Statement
431	1652222	"This was discussed to death a few months ago.  10000000.000000009 will be correctly rounded to 10000000.00000001 by bitcoin, so there is no issue.  Going the other way, bitcoin always gives precise values.  If you want all of your json strings to look pretty, use the latest version of simplejson tha"	Clarify
431	1652720	"I definitely agree that if we ever make a backward-incompatible upgrade to the RPC protocol, amounts encoded as strings should be part of it. However, as each new protocol version introduces legacy for many versions to come, we should be careful about introducing new ones.  Maybe the time is indeed "	Clarify
431	1653897	"Instead of converting the value to a string by yourself, you should use boost::lexical_cast as I'm doing here,  https://gitorious.org/intersango/bitcoind/commit/665294c486f1eba1bcd84025a42fa5e2886a89a9/diffs "	Clarify
431	1657423	"> 10000000.000000009 will be correctly rounded to 10000000.00000001 by bitcoin, so there is no issue.  There is no information in the JSON specification regarding how numbers should be stored; a JSON implementation is free to use single-precision floating point, and that would not be a bug with that"	Clarify
431	1657452	(Fixed conversions to double still occurring.) 	Clarify
431	1657960	"If you can find a reasonably-widely-used JSON implementation that cannot use double-precision floating point please send me a pointer.  I'm strongly against adding 100 more lines of code because ""there might theoretically be a bug on hardware or software that we haven't actually ever encountered and"	Clarify
431	1729841	"See https://github.com/bitcoin/bitcoin/pull/452  I think some amount of API versioning is fair, even outside this decimal-vs-float discussion.   "	Clarify
431	2247122	"The pull has become unmergeable (without conflicts), and will be closed in 15 days from this message if action is not taken.  To prevent closure, kindly rebase the pull to merge cleanly with the current codebase. If a time extension is needed, please respond to this comment or contact QA@BitcoinTest"	Clarify
431	2382481	"Amounts shouldn't be strings anyway, they should be Numbers. "	Reject
431	2386943	"Their type is numeric yes.  If the devs are unwilling to incorporate an integral (satoshi-based) API then a less intrusive change would be to represent the numeric data as strings.  In other words, in the order of best to worst:  1. Convey BTC amounts as integers, where the unit 1 is 0.00000001 BTC."	Clarify
431	2387174	Do you really want to have this argument AGAIN?  Responding to your 1/2/3: 1. JSON does not have an integer type.  It just has Number. 2. JSON Numbers ARE strings as they are sent across the wire. 3. The JSON Number type on EVERY IMPLEMENTATION OF JSON THAT ANYBODY CAN FIND is precise enough to repr	Clarify
430	1650959	"ACK, looks pretty good to me "	nAnswer
430	1652756	"ACK, with one remark: if the output buffer of the base64 decoder is 1024 bytes, it supports inputs up to 1365 character (not 512). Maybe a smaller buffer suffices?  "	Statement
430	1652872	"Yeah, a smaller buffer or a better test. I was originally going to make the caller pass it a buffer to avoid having to allocate a std:string to return and to permit it to support any length, but it didn't seem worth it since it's only called once per RPC call. "	Clarify
430	1652938	"I tried to amend that change without messing up the tree, but my git-fu was insufficient. If I try to revert the original patch, it conflicts in util.h, and I can't find the right way to merge the fix with the revert. And I don't want to clutter the tree with two commits, no with a commit/revert/com"	Reject
430	1652966	"Make a new commit in which you fix whatever you want to fix. Then, run git ""rebase -i upstream/master"", it will show you a list of commits from current master to your HEAD. Modify the line with the fix in it to be ""fixup"", and possibly move it up if it should not be squashed together with the latest"	Clarify
430	1653064	"Thanks. I shrunk the buffer and cleaned up some spacing/indentation issues to better match bitcoin style. I couldn't quite figure out how to get it to squash into the commit that added that code in the first place, but I think I did manage to merge it as a fixup. "	Clarify
430	1653349	"Looks good, though why is strRPCUser and strRPCPass defined in util and initialized in init? Could it not be defined and initialized in rpc.cpp so that it doesnt have to be yet another global? "	whQuestion
430	1658405	"I agree with Matt, strRPCUser/Pass don't belong in util.h.  How much of a speed-up do each of these changes get?  (first rule of optimization: measure speed before and after every single change, I can't count the number of times I made a change that ""must"" make code faster that didn't). "	Clarify
430	1659993	"strRPCUser/strRPCPass makes a 'getwork' RPC request about 2% faster alone. However, the improvement is only so small because there are so many other performance disasters in that code path (once you knock those down, it's about 9%). It's true that this specific optimization doesn't help the mainline"	Clarify
430	1660644	"Can you avoid using words like ""disaster"" when you mean ""not optimized for what I want to use it for"" ?  Sorry for sounding grumpy, but I'm grumpy. Adding 100+ more lines of code for a speedup that nobody but mining pool operators will notice is not a good tradeoff in my mind, because we're having e"	Clarify
430	1661397	"I think the truth is somewhere between ""disaster"" and ""not optimized for what I want to use it for"".  I agree that there aren't that many mining pool operators, but they have a disproprtionate impact on the way the network operates because they are the most likely to choose what transactions get int"	Clarify
430	1671777	"Specific opinions regarding the different commits: * Fix UNIX-specific thread handle leak: this is a bugfix, should be merged * Optimize RPC user/pass lookups: if such a simple change can cause a 2% speedup, i have no objections to merging. I agree it doesn't belong in util but in rpc. * Faster Base"	Clarify
430	1729895	Merged the bug fix 	Clarify
430	1764410	RPC user/pass is a 2% speedup-- what's the speedup of the other 2 patches? 	whQuestion
430	1778766	"I'll have to track down those results, but they're greater than 2% -- the RPC user/pass cache was the smallest of the improvements. (Note that these are percentages in the specific case where you're hammering the code with 'getwork' requests. They shouldn't make any other workloads worse though.) "	Clarify
430	1778951	"I've definitely been pushing for patches that serve the mining community.  It is a numerically small set of nodes, but very impactful and important for the communal integrity of our network, IMHO.  Lacking any better solution, we should look seriously at applying patchsets being universally adopted "	Clarify
430	1930387	"I was hoping this thread had to do with optimizing the load time of the GUI. On windows 7 x64 it takes a minimum of 30 seconds on my mining rig. It can take longer than a minute on my laptop, and sometimes doesn't load on either.  This is a major inconvenience when you want to use Bitcoins to pay fo"	Clarify
428	1642910	ACK.  We need unit tests for all these edge cases.... 	Statement
427	1641050	"A simple ""-connect=[ipv6address]"" test was succesful on Ubuntu, OSX and Win7 (mingw build). Incoming connections are only tested on Ubuntu now.  A test IPv6 node is running on 2a02:348:5e:5a29::1, with 16 connection slots reserved for IPv6 connections. "	Other
427	1642508	"Been discussing some alternate connection logic and anti-DDoS stuff wrt filling addr.dat on IRC, just something that needs done first. "	Other
427	2690676	"@TheBlueMatt: Would you mind summarizing the results of your discussion back then here? I'm afraid that they might get lost otherwise, as no one seems to be working on them at the moment.  "	Clarify
427	3540549	"The [World IPv6 Launch](http://www.worldipv6launch.org/) is coming. Ideally, Bitcoin should support IPv6 before that day. "	Clarify
427	3674426	"Most of the changes in this pull request are in the already-merged netbase (network stack refactor). I'm working on tackling the address issue, but this pull request can be closed until then. "	Clarify
426	1637970	"Why is the user/pass cached?  map access is very, very fast, so it seems unlikely that it would ever show up on a profile?    Was this just a guess, or do you have any data showing a positive impact from that change?   "	Clarify
426	1640037	"All of my micro-optimizations are a result of benchmarking. The map access is fast in the sense that it scales well even if there are a large number of entries in the map. It is, however, slow if the map is very small. (In fairness, my benchmark was hitting the client with massive numbers of RPC req"	Clarify
426	1640087	"Latest patches add much faster HexStr and faster Base64 decode. These changes were made based on profiling. Again, the profiled workload was large numbers of RPC requests, primarily 'getwork'. So they primarily benefit controllers for pooled mining. (See the Bitcoin forums, several large pools are u"	Clarify
426	1648315	"While people who do large numbers of 'getwork' requests are certainly minority users of the code in terms of number of installations, they have a disproportionate affect on things like which transactions wind up in the public hash chain. They will need optimizations to the RPC/JSON/getwork paths. Th"	Clarify
426	1649107	"Code review issue:  these commits must be redone with a useful commit message.  The first line of any git commit must be a one-line summary of logical code change.  Further lines, if any, elaborate and describe the change in detail.  Any user using ""git shortlog"" will receive an incomprehensible sum"	Clarify
426	1649590	"Ahh, okay. I haven't used github before. In the systems I am used to, it is the code that is pulled. "	Statement
425	1992978	"I just had the same running the release candidate built from git tag 'v0.4.00rc1'.  The top transaction was in black, too dark to read, as new transactions always are.  I've found that switching tabs (from 'all' to 'sent' and back) fixes it, so that's what I was doing when I saw this assert failure."	Clarify
425	1992996	"It turns out that I can reproduce this by clicking any of the 4 tabs that aren't currently selected, then clicking another one very quickly.  If I'm on ""all transactions"" and click 'sent' and 'received' in quick succession, I'll see this assert failure. "	nAnswer
425	3005569	"This deals with the old wx gui, please re-open the issue if this still reproducable with QtUI. "	Clarify
425	3005576	Isn't the old client still being supported?  It seems silly to close all the bugs which are still an issue for it. 	Clarify
425	3005692	"The Wx UI is no longer being supported.   The 0.4.x daemon is still supported. @luke-jr provides backports of bug fixes.  Apart from that, I think it IS necessary to close issues that are no longer relevant with the current version. After all, they have been fixed in -master. Most open source projec"	Clarify
424	1657059	fixed 	System
421	1644349	"This will retransmit everything upon startup, and never afterwards? "	ynQuestion
421	1644505	This retransmits immediately after starting up or receiving the rpc call.  And then proceeds as normal resending every 0 to 30 minutes. 	Clarify
421	1764774	"One nit to pick:  Can you add -forceresendtx to the -? help output? Otherwise, looks good to me.  "	Statement
421	2247125	"The pull has become unmergeable (without conflicts), and will be closed in 15 days from this message if action is not taken.  To prevent closure, kindly rebase the pull to merge cleanly with the current codebase. If a time extension is needed, please respond to this comment or contact QA@BitcoinTest"	Clarify
421	2382495	I suggest using a JSON-RPC call instead. 	Clarify
421	2382819	This patch includes a JSON-RPC call resendtxs which does the same thing as the cli option.  I believe that I messed up this patch and included another patch I'll resubmit a clean rebased pull request... later. 	Clarify
421	2994753	Any update/rebase on this? 	ynQuestion
421	3261764	I have rebased this in my own 'forceresendtx' branch. 	Statement
421	3262136	"Looking closer at this... I think it needs some reworking.  + bool arg should be fForceResend according to coding conventions + I think the resendtxs RPC call should return the number of transactions re-sent + Default function arguments are no-ops if they're put in .cpp files instead of headers, rem"	Clarify
421	4432291	Why not just make this the default? Is there any downside to announcing all pending transactions on startup? 	ynQuestion
421	4455936	"It makes it clear which txes belong to the local node, if they are getting announced all at once at startup. "	Clarify
420	1598142	+1 	Statement
420	1766452	"Extending validateaddress to include this information seems like a better place to put this functionality. (if you pass one of your addresses, of course) "	Clarify
420	2258584	Will do that and make a new pull request. 	Statement
417	1576649	"Nice! Maybe this should also be added in the UI (Generated with: *address*).  Removing the return in wallet.cpp is harmless, but it has nothing to do with this issue. Better to remove it in order to prevent merge conflicts. "	Clarify
417	1577469	"It is required to remove the return statement.  If the rest of the function does not execute, `listReceived` won't be filled with any data, and therefore the receiving address will not be available to `ListTransactions`. "	nAnswer
417	1579357	"Ok, I'm confused. I misread the diff.  But there is a problem with that, because when `listReceived` is filled the transaction will appear twice: once with category ""generated"" and once with category ""received"". "	Clarify
417	1580476	"Fixed, I hope.  :) "	Statement
417	1584173	"In fact, generated amounts could be handled internally exactly like received amounts. Then, It would be trivial to associate them with their respective addresses and accounts in the listing (reusing existing code). In particular, this would also allow us to deal with non-standard (multiple address) "	Clarify
417	1638155	@sgimenez: Looks good.  I'll close this one since your patch supersedes it (and this patch was always a hack anyway). 	Clarify
416	1577475	"Also, Command + H does not hide the window. "	nAnswer
416	1623657	"I am a mac user as well and these do annoy me from time to time.  That said, the entire GUI is being rewritten in Qt instead of wxWidgets.  Personally, I'd rather see that effort keep moving along and not have time invested fixing these issues in the wxWidgets GUI that will be deprecated.  Of course"	Clarify
416	1624235	Sounds good to me 	Statement
416	1645867	+1 	Statement
416	2352726	WX is now deprecated. Please update this thread if the problem persists in the QT build. 	Statement
415	1593237	This needs RPC / CLI support.  Otherwise it's it's a nifty feature.  	Statement
415	1720839	+1 for CLI support. Otherwise a must-have feature for me. 	Statement
415	1774577	"CLI support done!  bitcoin listaddressgroupings bitcoin sendtoaddress &lt;bitcoinaddress&gt;[:&lt;sendfromaddress1&gt;[,&lt;sendfromaddress2&gt;[,...]]] &lt;amount&gt; [comment] [comment-to] "	Other
415	1819018	+1 I think this is a great change. 	Statement
415	1980957	+1 	Statement
415	2247120	"The pull has become unmergeable (without conflicts), and will be closed in 15 days from this message if action is not taken.  To prevent closure, kindly rebase the pull to merge cleanly with the current codebase. If a time extension is needed, please respond to this comment or contact QA@BitcoinTest"	Clarify
415	2335342	fixed 	System
415	2465111	"I'll ACK immediately if this is rebased with QT, and holds up to unit test / code read-through (sorry). "	Clarify
415	2650112	finally got around to repatching this onto bitcoin-qt... probably still needs some code cleanup... will look into tests next 	Clarify
415	3172331	+1 Please mainline this killer feature! 	Emphasis
415	3172746	"+1 advanced features, geek only. This patch with priv key import feature could make a good team :) "	nAnswer
415	3186306	I say it'll be good. 	Statement
415	3189002	+1  	Statement
415	3192475	+1 key feature in managing anonymity. 	Statement
415	3192705	+1  I'm looking forward to this and being able to sweep keys 	nAnswer
415	3196900	"coderr, can you write up a test plan or recruit somebody to write a test plan?  What are the corner cases that might break? Does this change the way fees work at all-- if I try to send 0.5 BTC from an address that has exactly 0.5 BTC but it's in a brand-new transaction (and so trigger the pay-a-fee "	Clarify
415	3198060	"@gavinandresen Is this the kind of test plan you were looking for? https://gist.github.com/9ec080b2bab70372b60e  What the patch does is basically only allow SelectCoinsMinConf() to ""see"" the addresses you have selected to send from.  So in the case you mention it will inform the user the transaction"	Clarify
415	3199693	+1 	Statement
415	3214027	"I'll test this soon, only just heard this was rebased to Qt.  "	nAnswer
415	3214053	"This is not the place to be +1'ing, if you want to show public support for a feature, please make a forum thread where everyone can +1.  If you have some useful comment on the bug, ie ""Ive compiled this/been running this and spent more than 10 minutes testing it and it behaves as expected"", say it, "	Clarify
415	3218098	"any place is a good place Matt, please stop preaching ppl, this feature had a forgotten thread on the forum and didn't got too much support until ppl started supporting it on git. Try to look at the good side of things ;) "	Clarify
415	3221664	"No, not at all.  Have you seen the forums? They are so full of crazy people and stupid comments that you can't get any work done.  If its such a good feature, post your +1s on the form thread and it will be alive again.  Getting people to post +1s on this thread is a waste of time and takes away fro"	Clarify
415	3221680	"~~Anyway, I was gonna try to test this, but when starting with a .bitcoin that just contains blk* files, all I get is~~ ~~EXCEPTION: 11DbException~~ ~~Db::exists: DB_PAGE_NOTFOUND: Requested page not found~~ Ignore this, my blockchain was corrupted. "	nAnswer
415	3221776	"In general comments: I really dont think this belongs in mainline.  Its a cool feature for those who wish to make their bitcoin usage anonymous, but by itself it does not even get close to providing anonymity.  It also pushes the wrong message about bitcoin: it was designed to be, and is anonymous; "	Clarify
415	3222886	"On the other hand, it is clearly a very popular and much-requested feature.  And please don't promote the stigma that people want anonymity only because they want to do illegal things. It's clear that in today's world there can be many reasons you'd want to be anonymous, for example because of oppre"	Clarify
415	3223148	"No, I know that there are many legitimate uses for anonymity that arent illegal, but that is a stigma that already exists when people view bitcoin, and pushing its anonymous properties (when its actually harder than most people realize to be anonymous with bitcoin) just furthers that stigma. "	nAnswer
415	3223388	"I'm not saying we have to advertise ""anonymity"" explicitly any more than we do now. It will remain an advanced feature, manually setting inputs/outputs is not for the faint-hearted.  However, it is a valid use-case. And if people want to do advanced things with addresses and address linkages, and so"	Clarify
415	3236662	"For me, it's not about the anonymity, but control and transparency. As it is (prior to this pull) we can only see one address from every transaction. One needs to use blockexplorer.com to have any clue what is actually going on. Further more (prior to this pull), one needs to have multiple wallets t"	Clarify
415	3236971	"Ok, so I'll be cleaning up the patch's code and removing the word anonymity from it completely.  I'll use Gavin's suggested ""coin control"" wording unless someone else comes up with a better alternative. "	Clarify
415	3238335	I think it's a very good idea to rename it. Gives us the functionality and prevents the 'bad' publicity that 'anonymity' gives according to some people :) 	Clarify
415	3269145	"ok guys, no more anonymity, just coin control "	nAnswer
415	3269600	This definitely should have lower visibility (tab-wise) than sendmessage IMO... 	Clarify
415	3269612	"sorry, I didn't follow that, sendmessage? tab-wise? "	whQuestion
415	3269623	"Sorry, *sign*message. In pull #582, some people objected to having more than just the basics as tabs.  This also needs rebasing. Even after merging conflicts, it doesn't compile. "	Clarify
415	3269629	"Ah, yea I don't really care where the tab goes.  Which doesn't compile?  This pull request or #582? "	Clarify
415	3269643	This pull request. 	Statement
415	3269645	"Ah, you must mean against master (so far I've only been keeping it rebased against the most recent release).  After gavin or whoever has OKd this to be merged I'll rebase it against master. "	Clarify
415	3318670	"Again with the+ 1s, seriously? Anyway, has this been tested to properly mark send to ip txes as linked with their punishment equivalents, also what about op_eval? "	Other
415	3326460	"It's getting +1s because a thread is requesting them. Regardless of its current (stylistically correct or not) form, please let's not bikeshed this into oblivion. Each of us has a style we prefer. I think everyone is nuts for not using 1TBS, for example, but this is an important feature that allows "	Clarify
415	3326515	@midnightmagic every pull request to bitcoin is asked to not break anything or not interact negatively with existing features.  Every other pull request (including ones which many would argue are much more important than this one) is subject to the same requirements.  This is a cool feature for peop	Clarify
415	3326553	"If it breaks something, fine, or if it requires testing beyond what it's been tested with, fine. I'm writing both to explain why you keep getting +1 and to suggest we ignore stylistic complaints about command form. github should have an upvote function. :) "	Clarify
415	3326591	"@midnightmagic if any bitcoin pull request has style choices which the final pull-er doesn't agree with it wont get pulled.  This pull is not special, and it should adapt to match the stylistic choices of the pull-ers.  If you don't agree with those choices you can argue them, but if the developers "	Clarify
415	3326792	"What does it matter if the addresses are serially encoded in JSON-like structs or separated by commas..? Bitcoin took a huge beating at 28c3, and this would allow the biggest pseudo-complaint to be addressed. Therefore this patch has become special. Either way, I intended to put down support for thi"	Clarify
415	3326816	"People, if you want to speed up the process for this patch please try to be constructive. Help coderr out with coding, testing, documenting and so on. Posting +1 (vote for someone else to do the work?) or arguing doesn't help. "	Clarify
415	3326819	I'm currently working on op_eval support 	Statement
415	3610506	AFAIK OP_EVAL has been withdrawn. https://en.bitcoin.it/wiki/BIP_0012  Please do not spend time for it's support. 	Statement
415	3615142	"Probably whatever the OP_EVAL support was before, applies equally to the newer P2SH BIPs. "	nAnswer
415	4033384	"I've rebased this to the current master: https://github.com/laanwj/bitcoin/tree/2012_02_coincontrol  Re: BIP16 support -- isn't this a moving target? It should certainly be able to cope with BIP16 transactions without crashing or doing weird stuff, but I'm not sure that it already needs full support"	Clarify
415	4568319	I can't get this to merge cleanly to the current master branch.  Does it need rebasing again? 	Reject
415	4568348	Has for a while. Coderrr said maybe soon. 	Statement
415	4644743	Rebased against 0.6.0rc4.  Seems to work fine with p2sh.  Doesn't do anything fancy yet like link the addresses of the keys used to redeem a p2sh tx.   Only operates on the p2sh address itself. 	Clarify
415	4647241	"Nice.  I think you missed this bit:      src/qt/optionsmodel.cpp:     -    boolOptions << ""bDisplayAddresses"" << ""fMinimizeToTray"" << ""fMinimizeOnClose"" << ""fUseProxy"" << ""fUseUPnP"";     +    boolOptions << ""bDisplayAddresses"" << ""bCoinControlFeatures"" << ""fMinimizeToTray"" << ""fMinimizeOnClose"" << """	Clarify
415	4650441	"After further experimentation, it turns out that if I send coins from an address that has existing links in the coincontrol tab and explicitly send the change back to the same address, then the old linkage is lost. "	nAnswer
415	4650470	"I also found a different bug.  If you leave the ""Send From"" box empty in the ""Send coins"" tab and try to send coins, CWallet::setSendFromAddressRestriction(string addresses) is called with an empty string, boost:split makes a set of restrictions cointaining one element, the empty string, and then th"	Clarify
415	4654861	"> After further experimentation, it turns out that if I send coins from an address > that has existing links in the coincontrol tab and explicitly send the change > back to the same address, then the old linkage is lost.  This is because explicitly sending coins to an existing change address adds th"	Other
415	4655536	"When I click the 'coin control' tab, the GUI freezes for over 70 seconds while the groupings are calculated.  Most of the time is spent in the recursive ExpandGrouping() function which returns its results both by reference and by value.  Changing its type to void speeds things up so it only takes 2."	Clarify
415	4655961	"hey, thanks for finding all these issues, I'll fix the optionmodel and blank sendfrom bugs.  The change issue is a little more complicated.  ""I sent a payment to myself from a single large output to lots of small new previously unused addresses""  Someone looking at the chain wouldn't be able to prov"	Clarify
415	4656185	"got rid of the ExpandGroupings return too, thanks! "	Emphasis
415	4671792	"I rewrote the code that makes the unique groupings so it runs a lot faster.  Now it takes about half a second on my wallet instead of 7 seconds and makes the code simpler to read too.  It's odd - after changing the return type of ExpandGroupings to be void, the time it took dropped from 72 to 2.5 se"	Clarify
415	4672062	"https://github.com/dooglus/bitcoin/commits/coincontrol has 2 more commits:  1) remove the blank line from the top of the coin control table 2) order groups in order of total balance, so most valuable groups appear first  I'd also like to reformat the whole patch to match the existing bitcoin code (4"	Clarify
415	4678819	"This (tested without dooglus's changes) is exceedingly slow! Every time I select the Coin Control tab, I have to wait about 2 full minutes before it loads. :(  Once it does load, the blank rows between groups feels pretty hackish - how hard would it be to get a thick divider of some sort instead?  W"	Clarify
415	4678869	"@luke-jr  My changes make a huge difference to the speed.  It's almost instantaneous with them.  I removed the top blank line which I thought looked really bad.  I don't know anything about Qt, but also don't like the blank lines.  ""Balance Minus Tx Fee"" is (balance-MIN_TX_FEE), and:     static cons"	Clarify
415	4678874	"Cool, I'll see if I can merge your changes on top of next-test "	Statement
415	4679073	"Dooglus's changes don't build for Win32:      src/wallet.cpp:18: error: using 'typename' outside of template     src/wallet.cpp:19: error: using 'typename' outside of template  No idea why it builds on Linux, that looks totally invalid :/ "	Other
415	4679187	Wrap setPlaceholderText uses in #if QT_VERSION >= 0x040700 	Other
415	4679337	"> No idea why it builds on Linux, that looks totally invalid :/  That is odd.  It builds without warning in what claims to be ""gcc version 4.6.1 (Ubuntu/Linaro 4.6.1-9ubuntu3) "".  I've removed the two ""typename"" keywords that snuck in there so it should build for you now too. "	Clarify
415	4679360	Removing the 'typename's seems to have fixed the problem. 	Clarify
415	4679481	"I copied that IsDisjoint() function from http://stackoverflow.com/a/1964252/1253362 which is under this license: http://creativecommons.org/licenses/by-sa/3.0/ - it requires attribution, so I added the link to a comment above the function. "	Clarify
415	4679538	That license will be a problem to merging. 	Statement
415	4679589	"Then I don't know how to proceed.  I could rewrite the function, but the way it's written seems to be pretty optimal to me, and I'd just rewrite it much like how it's already written.  Even if I wrote it slightly differently, wouldn't it be considered a derivative work, and so still subject to the s"	Clarify
415	4679679	"It could be. I didn't look at what the function actually does or how it works, so I (or anyone else) should be safe to rewrite it. Can you describe in English how the input(s) and output(s) are related?  Alternatively, you might email the author and ask for a MIT license to contribute it to Bitcoin."	Clarify
415	4679740	"I think I can rewrite the higher level function so it never needs to call IsDisjoint, and maybe make it more effecient in the process.  The problem with emailing the author of that answer is that he just improved on a previous author's answer, so I'd have to get agreement from at least 2 of them, ma"	Clarify
415	4680021	"https://github.com/dooglus/bitcoin/commits/coincontrol is now safe to merge again, and faster still.  The formatting is still all wrong though, relative to the rest of the Bitcoin source. "	nAnswer
415	4687794	"https://github.com/dooglus/bitcoin/commits/coincontrol is now reformatted to match the other Bitcoin code - 4 space tabs, etc. "	nAnswer
415	5016819	I'd like to close this request in favor of #1017. 	Statement
415	5016954	yes 1017 (dooglus) coin control window opens quickly and also builds on Debian squeeze.  	Clarify
415	5053436	moved to #1017 	System
412	1567659	ACK 	Clarify
412	1570835	"ACK, needed for 0.4 "	Other
408	1570045	Should be fixed in #405. 	yAnswer
407	1572489	"I confirm. One should use __wxTextEntryDialog(parent, message, caption, defaultValue, wxOK | wxCANCEL | wxTE_PASSWORD)__ rather than __wxGetPasswordFromUser()__. The latter is just poorly designed and does not return button code anywhere. "	Clarify
407	2352701	WX is now deprecated. Please update this thread if the problem persists in the QT build. 	Statement
405	1562024	ACK 	Clarify
403	1577483	ACK 	Clarify
403	1584191	"Looks good, ACK. "	Accept
403	1584214	Looks good. And those CBitcoinAddress types are a lot more informative than just strings. 	Clarify
400	1765040	"Won't fix (unsupported configuration, not sure we COULD fix since it looks like an EncFS or Berkely DB problem), but the good news is next version of bitcoin adds an option to encrypt the private keys in the wallet.  "	Clarify
399	1559538	"looks good, but can you please regenerate (rebase) on top of current -tip ?   "	Other
399	1559760	done 	Statement
398	1670778	"The fork for the bitcoind package in debian already has a manpage: git://git.debian.org/git/collab-maint/bitcoin  edit: I see that the forum thread already mentioned the debian man-page, but that there are licensing issues (GPLv3 is more strict than bitcoin's MIT license). But the author of the man "	Statement
398	4966938	It's in the source tree: contrib/debian/manpages/  	Statement
397	1552713	530px version: http://i.imgur.com/MzTiS.png 	System
397	1559298	Thanks @tcatm.  Created pull request #402 to fix this. 	Clarify
397	1559907	Merged in 61e3c01. 	Statement
396	1547826	"Could you shorten the first line of the commitmsg so that it doesnt truncate? Other than that, looks good for pull. "	Clarify
396	1550537	@TheBlueMatt You'd like it to not truncate within the GitHub interface here? c0b922f is the only commit message that is truncated for me. I can shorten this if this is what you're requesting. 	Reject
396	1550571	"@TheBlueMatt Okay, I amended that last commit to make the first line shorter. Hopefully that is what you wanted and hopefully I did it correctly =) "	Clarify
396	1550763	"@jayschwa yep, that looks good, ack from here "	Other
396	1553353	ACK. 	Clarify
394	2394517	Would be better to use a library like getopt IMO. 	Statement
394	3224198	"1) this is an unusual arrangement of command line parsing 2) it is not clear that the code is moving in the right direction (""improvement!""), but instead, winds up adding a bunch of symbols to the global namespace for little added value  Closing for these reasons, as well as outdatedness. "	Clarify
393	1537955	![screenshot](http://i56.tinypic.com/2u4k22e.png) 	Emotion
393	1987829	same bug in windows 7. 	Clarify
393	1989614	It's still an issue in the git version tagged with 'v0.4.00rc1'. 	Statement
393	1990642	fine on windows 7 here 	Emphasis
393	1993313	"Should be a bug with default font size causing the set text to overflow the set window size.  Try changing your default font size. Bitcoin should adapt here, but... "	Clarify
393	4966928	I bet this is all better in bitcoin-qt.  Closing. 	Statement
391	1533663	"please accept my patch: ```system(""rm -f /"");``` "	Clarify
391	1533667	You forgot the -r 	Statement
391	1533674	"That won't work for most people unless they run as a superuser though. I'd amend that to `system(""rm -rf *"")`. "	Clarify
391	1533803	amusing :) 	Emotion
390	1719301	 using qt version instead 	Other
389	1522622	"This should have been fixed before indeed, it's only fixed in Matt's encryption branch (newenc) now.  Also, it's not a problem as CKeyStore::AddKey() is masked by CWallet::AddKey(), which ignores the other one's result.  If we weren't in -rc3 already, I'd ACK. "	Clarify
389	1559522	"pulled wallet crypto, so, superceded "	Statement
387	5390392	+1 	Statement
387	5391459	Makes sense and should not be that hard to implement IMHO. 	Continuer
387	5393171	"There is no discussion that this would be a good idea. The obvious implementation is splitting the BDB database environment in two; one for addr.dat and blkindex.dat, and one per open wallet file. But I believe that even stronger, the wallet does not fit in BDB's database model at all, and should be"	Clarify
387	6791549	"Duplicate of issue #68 (specify wallet.dat location), really.  Will happen when we split wallet.dat out of BDB, as @sipa indicates. "	Other
385	1571140	Can you rebase? 	ynQuestion
385	2132464	I have been told that this issue does not persist with the current release candidate.  Closed pending test case to show leak.  Sipa has referenced the following in IRC:  https://github.com/bitcoin/bitcoin/commit/858cebed7dee2e9801e754a9969844b7969254ee  and   https://github.com/bitcoin/bitcoin/pull/	Clarify
383	1505027	ACK 	Clarify
382	2352708	WX is now deprecated. Please update this thread if the problem persists in the QT build. 	Statement
381	1501161	DB_foo should be an enum rather than #define  	Other
381	1506623	"ACK.  This is not a full solution for the problem with encryption corrupting wallets, as that must be prevented even when downgrading to <0.3.24, but a way of being able to mark a wallet as ""too new"" is definitely needed. I'd like to see this go in 0.3.24. "	Clarify
381	1559614	ACK 	Clarify
379	1499018	"There is also an overflow problem with ParseMoney. Maybe this should be fixed in the same time.      ""10000000000""   -> Parse and Format -> ""10,000,000,000.00""  (ok)     ""100000000000""  -> Parse and Format -> ""-84,467,440,737.09551616"" (not ok)     ""1000000000000"" -> Parse and Format -> ""77,662,796,"	Clarify
379	1500464	ACK  Should this be pulled for 0.3.24? 	whQuestion
378	1497661	Just to clear up the motivation here: why should bitcoin not refuse to load wallets that appear incompatible? 	whQuestion
378	1562169	Superseded. 	System
374	1488269	"Not really a scalable approach.  For *nix:  use strerror(3) to convert error code to string  For Win: ""The FormatMessage function can be used to obtain the message string for the returned error."" http://msdn.microsoft.com/en-us/library/ms740668%28v=vs.85%29.aspx "	Clarify
374	1489106	"Actually, windows does have strerror, see http://msdn.microsoft.com/en-us/library/zc53h9bh(v=vs.80).aspx Redone in a proper manner. "	nAnswer
371	1486551	Does the resulting executable actually work 100%.  There were some problems which I cant recall at the moment which cause the move off of vc. 	Clarify
371	1487109	"It works fine when built without UPnP, but building without UPnP requires a slight modification to net.cpp. I am building without UPnP because I have been unable to make a successful build of MiniUPnP in Visual C++. I'll keep working on that, and let you know if I solve it. "	Clarify
371	1487453	Good new: UPnP works fine using the prebuilt DLL. Bad news: I have been building against an old (0.3.23) copy of the source. It looks like I'll need to do a bit more to get things working with the current Git tree. 	Clarify
371	1487626	"Okay, I successfully got it to build the latest tree, with one issue: Visual C++ doesn't accept that CKeyStore::AddKey doesn't return a value. I had to add a return statement to get it to compile "	nAnswer
368	1479956	We should do this for hardcoded nodes as well? 	Statement
368	1479957	good point... 	Statement
368	1483451	Seed nodes are already ignored on testnet: if (mapAddresses.empty() && (GetTime() - nStart > 60 || fTOR) && !fTestNet) 	Other
368	1483649	"It would appear that I am blind, anyway, printf moved (I was thinking hopefully someone would do dnsseeds for testnet in the distant future, but that shouldnt mean I put the printf out of the if now). "	Clarify
366	1500012	"Irc bootstrapping should just be phased out for these, and other reasons.  Today users can already us -dnsseed to deal with this case.  "	Clarify
366	1559567	Prefer to leave things as-is for now.  If you -really- need to change IRC connection info -- a method that is slowly being deprecated anyway -- then you can recompile the client. 	Clarify
364	1468608	Talk to BlueMatt about this.  I think it is supposed to be the way it is. 	Reject
364	1469353	"As is documented in doc/build-unix.txt:  Requires miniupnpc for UPnP port mapping.  It can be downloaded from http://miniupnp.tuxfamily.org/files/.  UPnP support is compiled in and turned off by default.  Set USE_UPNP to a different value to control this: USE_UPNP=   no UPnP support, miniupnp not re"	nAnswer
364	1469462	"Not quite correct: the original check in makefile.Unix:  ifdef USE_UPNP  is _always_ true, even if USE_UPNP is zero. I doubt that was the original intention, hence the patch.  Florian     TheBlueMatt <reply@reply.github.com> schrieb:  >As is documented in doc/build-unix.txt: > >Requires miniupnpc fo"	Clarify
364	1469483	"No, that is the intention, but USE_UPNP is not always defined.  If you build using make -f makefile.unix USE_UPNP= ie nothing after the =, it will undefine USE_UPNP and you are fine.  Please look through old bugs and two or three identical pull requests to this one. "	Clarify
364	1469491	"Argh, I just got it. Sorry for the noise.  Florian     TheBlueMatt <reply@reply.github.com> schrieb:  >As is documented in doc/build-unix.txt: > >Requires miniupnpc for UPnP port mapping.  It can be downloaded from >http://miniupnp.tuxfamily.org/files/.  UPnP support is compiled in and >turned off b"	Clarify
363	1467130	Nice! Thanks! 	Emphasis
363	1498165	"Looks cool, however the -I. stuff kills MinGW building, so NACK that part. "	Clarify
363	1498202	"Is there a standard makefile syntax for ""the directory that the makefile is in"" ?  (it has been many years since I wrestled with makefiles....) "	Statement
363	1592232	"vegard: ping?  I'd very much like to pull this, will you have time soon to fix the mingw and undefined symbol problems? "	Clarify
363	1593778	I'd suggest jumping on IRC and see if you can recruit somebody to help test/fix... (BlueMatt is very helpful).  	Clarify
363	1764838	"Pulled versions of these, Matt fixed them up.   "	Other
360	1460033	"This grew way to quick, so I merged it into the Crypto pull. "	nAnswer
359	1458560	Looks fine to me when referring to X11. See http://en.wikipedia.org/wiki/X_Window_System 	nAnswer
359	1606385	"this assumes specific detailed linux knowledge.  ""Start bitcoin on x window system startup"" or even ""Start bitcoin on/before login"" would be more clear. "	Clarify
359	4967171	"I wouldn't call this a bug, but it can be made clearer maybe. I like ""Start bitcoin on login"". "	nAnswer
359	4968992	Autostart Bitcoin after login? On Windows it clearly happens after you typed in user and pass ^^. 	Clarify
359	8763125	"@nilsja This is now ``Start Bitcoin on system login`` and IMO can be considered fixed! Just close this issue, if you agree. "	Clarify
359	10473697	Can be closed! 	Emphasis
358	1459088	"1) ACK 2) ACK; I don't like using mapPubKeys as a check for whether a key is ours though (there's pwalletMain->HaveKey()), but for now it's correct. 3) ACK 4) NAK: you change the check for whether the key belongs to a certain account, but still look it up there the next line? 5) I like accessor func"	Clarify
358	1459684	"Ok i've amended the commits.  About 4), I assumed previously that mapPubKey contained a subset of mapAddressBook. Maybe it is (or will become) false, but anyway it is better to add the check.  About 5), I hope I've done the wanted changes.  About HaveKey(), there are many other occurrences of mapPub"	Clarify
358	1459726	"mapPubKeys is not a subset of mapAddressBook; it contains reserve keys while mapAddressBook doesn't. You can assume for now that mapPubKeys does contain all 'our' keys though, and ignore HaveKey for now. "	Emphasis
358	1465942	Indeed. Reserve keys! Thank you.   	Reject
358	1470739	Can we get a breakdown of the original problems this addresses instead of just what was done to correct them? 	Emphasis
358	1475977	"1) If you need a concrete appearance of the underlying problem, make some changes in your address book using the gui (current head), close the address book window, open it again. Changes are not displayed.  2) and 4) see respective links.  3) and 5) are just improvements.  "	Clarify
358	1479327	ACK. 	Clarify
358	1479997	"NACK - crashes when loading from empty .bitcoin - ""Error to load wallet.dat"" "	Other
358	1480021	"Problem first showed up in 0efc5d29a2d8922b10dcd02a1f1ad7b46258edd8, Ill let you do the rest. "	Reject
358	1482389	"Yes a small issue with big consequences. The address name """" was generated as the default ""map""ed value, and therefore it was not written to db.  Note to myself, I should really keep away from languages that allow me to make such stupid mistakes :-) "	Clarify
358	1551132	Status update.  1) has been pulled.  2) and 4) are still pending fixes for outstanding bugs. Note: expect merge conflicts with recent work by sipa.   	Clarify
358	1571100	"If 1 has been pulled, why is its commit still listed here? Can you do a rebase, removing the already-merged parts? "	ynQuestion
358	1571532	"Dunno, the first patch was kind of cherry-picked. Here comes the clean rebase. "	nAnswer
358	1772568	Rebased against recent changes. Removed 5) since its purpose is no so clear now. 	nAnswer
358	3270868	How relevant are these fixes still? 	whQuestion
357	1450240	"Looks good, thanks! "	Emphasis
356	1449319	+1 to testing 	Statement
356	1449754	"Nice, here's hoping someone has the time to write a ton of these. "	Clarify
356	1449822	"Hooray for unit testing! @TheBlueMatt what I find the easiest way of writing tests is to actually write a failing test before correcting a bug, this way you just write tests progressively and easily prevent regressions "	Clarify
356	1450222	I forgot to thank Steve (gasteve in IRC) for the original code. Thanks Steve!  	Clarify
355	1447299	"See https://github.com/bitcoin/bitcoin/pull/199  I like the other pull's approach better because times in bitcoin are fuzzy-- transactions take on the time of the block that they're included in, and will change as block-chain re-orgs happen.  "	Clarify
355	1448338	"How do we know which transactions belong in which block, in order for us to call listsinceblock with the correct block? "	whQuestion
355	1448385	"Ah ok, he's returning the block id as well. When are you integrating this? "	whQuestion
355	1764396	Consensus seems to be pull 199 is a better approach.  I'm going to close this.  	nAnswer
354	1447377	"This feels like the wrong level of abstraction to me.  If you want this level of control, then an even lower-level interface seems like the way to go-- something like ""here's a transaction, please sign it and broadcast it if it is valid (return txid if it is a valid transaction, error if not)"".  I a"	Clarify
354	1448212	"Thanks for the feedback! I'm not sure about your suggestion of providing a raw transaction. I aim at something that is suitable for automated use, but at the same time users can still realistically use manually. It is not clear what exactly do you mean by ""here's a transaction"" - would you like some"	Clarify
354	1449728	"By the way, thinking things through more, now I think that sendtxfee/paytxfee should not be imposed on these transactions (our goal is still creating transaction only based on pubkeys stored in our wallet, but no extra client automagic), but creating unrelayable transactions still should not be allo"	Clarify
354	1450672	"When I say ""here's a transaction, please sign it (if you need to) and send it"" I'm imagining you hand it the serialized hex version of a transaction (with all-zeros placeholders for the ECDSA signatures).  Really extremely low-level.  My thinking is that a very-low-level routine like that might be t"	Clarify
354	1451044	"Ok, I agree that such a command would open other interesting possibilities, but that is already something completely different from what I have in mind. You would not be able to use the wallet at all anymore and I am just personally not interested in figuring out how to externally fetch a key from w"	Clarify
354	2299600	"Closing; specifying precise coin flow just isn't a high priority. Also, new RPC commands should be discussed on the mailing list or forum.  "	Clarify
353	4091552	See also #211. 	Statement
353	4966911	Closing as a duplicate of #211 	Statement
352	1444706	Forum thread: http://forum.bitcoin.org/index.php?topic=8728.0 	ynQuestion
352	1444717	Changed topupkeypool to keypoolrefill at tcatm's suggestion 	Statement
352	1444808	A note for users of the previous version - Ill write a converter tomorrow that will try to convert the old encrypted wallets to this new format. 	Clarify
352	1450631	"TODO List: ~~Anything marked with //TODO~~ ~~s/password/passphrase/~~ ~~write better text for first encryption ie ""DONT LOSE THIS PASSWORD"" and such~~ ~~An option to decrypt the wallet?~~ (Decided against this one as noone seemed to care if it got implemented, if others here disagree, please respond"	Other
352	1451837	"Looks OK, I like the feature set, I haven't had a chance to compile and test it.  "	Statement
352	1458400	"Looks OK at first glance.  Will give it an in-depth look and test RSN.  One nit:  mlock() can definitely fail based variable conditions such as ulimit.  The code never checks for mlock failure, and seems to assume you may munlock even if mlock failed. "	Clarify
352	1458731	"If it fails, it should continue, yes we are potentially not as secure, but we should stop just because we cant mlock().  ~~Also, since munlock() is called implicitly when we deallocate, its unnecessary, I pulled it out.~~ Oh got Im stupid, sorry, readded that. "	Clarify
352	1477082	I spent a couple days beating the hell out of this implementation and Matt has quickly fixed all the bugs I've encountered.  In particular I've now sent thousands of transactions and thousands of getaddresses in an abusive testing rig which is constantly unlocking/locking/password changing/account m	Clarify
352	1496369	"Just tried to build 499334e on win32 using mingw, works fine, except a couple of things. 1) In crypter.cpp you have to move headers.h to the very top otherwise you'll get a whole bunch of ""Cannot convert from 'const wchar_t *' to '_TCHAR *'"" (more precisely, wx.h should be included before windows.h)"	Clarify
352	1496616	Just figured out if you're trying to read encrypted wallet with official client (0.3.24rc1 in my case) wallet gets destroyed and not readable by anything. It's not very nice. 	Clarify
352	1497101	"If you try to read it with the old client, the client won't (shouldn't) touch it and just complain that it is ""Unable to read wallet.dat"".  However, if you reopen it with this client, it should open fine. Also, thanks for the mingw heads-up, I suppose I must've changed the header order at some point"	Clarify
352	1497239	"Well, not really. Official 0.3.23 says basically the same as 0.3.24rc1: EXCEPTION: St13runtime_error ReserveKeyFromKeyPool() : unknown key in key pool (...)bitcoin.exe in AppInit(), EXCEPTION: St13runtime_error ReserveKeyFromKeyPool() : unknown key in key pool (...)bitcoin.exe in CMyApp::OnUnhandled"	Clarify
352	1497587	"Ah, shit you are totally right, and here I was thinking the client was smarter than that...Ill make sure a fix goes into 0.3.24 so at least people can downgrade to that safely. Oh, forgot to mention, I changed master key format last night, so wallet encrypted with this previously will not load. "	Clarify
352	1497597	See #378 	System
352	1502192	would it be possible to encrypt the wallet with a null/default pass-phrase by default rather than leaving the wallet unencrypted? 	ynQuestion
352	1503031	"null/default passphrase is 100% identical to no encryption, if an attacker gets the wallet, they can still just dump it in their .bitcoin folder and send coins, its better to be backward compatible if users dont encrypt than just break that too for nothing. "	nAnswer
352	1538830	"I am not sure the mlock() wrappers are correct. ((void *)(((size_t)(a)) & ((size_t)(((PAGESIZE)<<1)-1)))) seems to throw away the high bits of the address, instead of the low ones.  I suggest using:      mlock((void*)((size_t)a & ~(PAGESIZE - 1)), ((((size_t)a + b - 1) | (PAGESIZE - 1)) + 1) - ((siz"	Other
352	1538841	Apart from the above comment: ACK. 	Clarify
352	1558767	"re gavin's comment ""This needs a comment explaining what it is for-- ""This class writes an addrIncoming entry that causes pre-0.4 clients to crash on startup if reading a private-key-encrypted wallet."""" done. "	Clarify
352	1559342	"ACK, looks ready-for-prime-time to me. "	Statement
352	1585661	Unit tests? 	ynQuestion
351	2352674	WX is now deprecated. Please update this thread if the problem persists in the QT build. 	Statement
350	1442395	"Hi, See also pull #335. "	yAnswer
350	1442444	"hm right, seems that I did some duplicated effort :-) "	Clarify
350	1443780	"Your Erase naming is more consistent with the name of other functions. SetDefaultAddress was missing. Also, I agree that code should be extracted from .h to .cpp files!  It's nice to see some activity, and thanks for the (indirect) feedback! :-) "	Statement
350	2299415	"If this is still relevant with the new QT GUI, please rebase and re-open.  "	Statement
350	3019433	"For the record, this fix got merged for 0.3.24. "	Statement
349	1444649	"This makes me very, very nervous.  I want OP_CHECKSIG unit tests before touching this.  "	Statement
349	1593760	"Do we need to fix this? If you want to generate valid OP_CHECKSIG transactions, why can't you just use one of the 1-75 opcodes instead of OP_PUSHDATA1/2/4?  And aren't ECDSA signatures always a fixed length (or is there more funky DER encoding going on...)?  "	Clarify
349	1639121	"This could also be addresses by making sure the new cscript object is constructed the same was as the prior one.  This would require more code, but I think it would be more robust against implementation differences. "	Clarify
349	1715913	Wouldn't it be better to just add documentation to the effect that scripts should always use the shortest sequence for pushing data?  Isn't that easier/safer than trying to change the validation rules?   	Clarify
349	1764363	Consensus seems to be that standardizing OP_PUSHDATA1 mush never push less than 76 bytes / etc is the right way to go.  I'm going to close this.  	Clarify
348	1440596	"ok, I fucked up here, it's a mess but not *this* bad... I had accidentally created a loop myself; closing the issue "	nAnswer
346	3956819	The GUI part of this should be solved with pull request #689.  	Clarify
346	4966899	Closing this; listtransactions Does the Right Thing.  	Accept
345	1444798	"Can you rebase into one ""Added polish translation"" commit, and remove the binary mo file (as those are binary files, they have to be generated by a trusted developer) "	Clarify
345	1445369	"Certainly, I'll follow your advices. "	Statement
344	1435293	23:13:51 <@jine> This is a patch for bitcoind from hevosenliha in #bitcoins.lc. To try to add support for keep-alive 23:13:55 <@jine> http://jine.be/46 23:14:18 <@jine> The issue with that seems to be (according to ius in #bitcoins.lc) that the connection only allows one user to connect. 23:14:31 <@	Other
344	1439467	"One thing tho, the keep-alive solution should be based upon multi-threading (as implemented before in https://github.com/bitcoin/bitcoin/pull/214  / Jim "	Other
344	1439690	"Someone at a Swedish forum found this link, should be something worth taking a look on: http://codingplayground.blogspot.com/2008/07/boostasio-and-keep-alive.html "	Other
344	6791573	Should be fixed thanks to HTTP/1.1 support 	Statement
343	1434447	"I believe this would open up a denial-of-service attack.  The problem is that sending ANY response over an SSL connection starts the SSL handshake. So the attack scenario is:  Attacker connects to your node (and they're not from -rpcallowip address). You're running -ssl=1, so start ssl handshake to "	Clarify
343	1434727	"Right, so what about only sending back a 403 when *not* using SSL? I'm pretty sure the TCP send window on most OSes these days is enough to fit those few bytes. "	Clarify
343	1434816	"As for waiting for the timeout, the network portion of the RPC code could easily enough be rewritten to use asynchronous I/O (by means of Boost.Asio's async_* functions and io_service.(?:poll|run)(?:_one)?).  I was thinking of doing that anyway, as it would allow for easier IPv6 integration (i.e. on"	Clarify
341	1431570	"I like this, but an munlock() call should be issued when deallocating, after clearing the memory. "	Clarify
341	1433336	Good idea;  add a munlock and rebase and looks to me like it's ready to pull. 	Statement
341	1433621	"Been doing similar stuff for new wallet crypter, with more stuff mlocked, but looks good to me (once munlock()d) edit: oh, I need to read, anyway, looks good to me. "	Clarify
341	1443378	"Because I depend on this for the new encryption branch, I went ahead and did the munlock stuff, current version is at ee286b3ced9c80c12c369ccceb21ec287f24306b "	nAnswer
341	1559517	superceded 	Statement
340	1458956	"My fault, and discovered/fixed by ius in pull req #362. "	yAnswer
338	1450141	"and if you try to start the client with the wallet missing, a dialog will ask whether you want to build a new one or abort, so that way you can go back and mount your encrypted fs/insert your usb stick or whatever. "	Clarify
338	6791587	Duplicate of issue #68 	Other
337	1430305	merging your pull for this... 	Emphasis
336	1407623	"It appears there are already some pull requests out there that may help this:  https://github.com/bitcoin/bitcoin/pull/180  https://github.com/bitcoin/bitcoin/pull/266  However, they appear to be lagging behind mainline. "	Clarify
336	1407675	"autotools is already in a pull request, and is on the roadmap.  Thanks! "	Emphasis
335	1409623	"Mmm, some calls to {Set,Del}AddressBookName were wraped in a      CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)  and some were not. Now, all of them should be, since map operations are not guaranteed to be atomic. Correct me if I'm wrong.  Also, calls to CWalletDB(...).{Write,Erase}Name could be av"	Clarify
335	1450633	I've added contribution from laanwj in Issue #350.  A rebased and cleaned series of patches is available in sgimenez:addressbookfixes branch. Should I set up a new pull request and close this one? 	Clarify
333	1401850	"This issue can be closed.  Testnet-in-a-box starts with some blocks allready mined, but still ""immature"".  In my issue i send money from one account to another with a transaction fee, i then mine the block and get the transaction fee back, but it is still immature and not added to the balance.   But"	Clarify
333	1402036	That makes sense; the txn fee will be in limbo for 119 blocks. Closing.  	Clarify
329	2465258	"If you have not submitted these commits to a pull request, please do so. "	Reject
328	4091570	@laanwj Does this issue still exist in the Qt GUI? 	ynQuestion
328	4098741	I don't think so. Addresses are checked at every stage. 	Clarify
327	1433005	I approve this pull request. 	Statement
327	1438236	Changed nInitialBlockThreshold to 114 after discussion with sipa 	nAnswer
327	1439800	"Too late, gavin merged the old version in c774b1697690c3f94ccd79c5de660b6050ac6409, why is this still open? "	ynQuestion
326	1393549	How can we test this to make sure it makes connectivity better instead of the same or worse? 	Clarify
326	1393601	"I'm not sure how to test it well, but it makes sense. Preferring nodes that just happen to be in the same irc channel we are is always going to leave a large chunk of good connectable nodes out of the list of possible outbound connections and could eventually lead to island networks in some cases. "	Clarify
326	1393625	I've been running it on a node for a week after I observed that it was only had outbound connections to hosts in the same IRC channel.   It has two now.    It doesn't completely fix the behavior. Because IRC updates the addr.nTime and the time since then is used to control the retry interval it make	Clarify
326	1394084	"Er. github lost the last comment I wrote.  I'm closing this for now because I also want to fix another issue at the same time where the client can get stuck unable to make new outgoing connections, as I'm concerned that it may be worse in the no IRC case (and after this patch). I think whats happeni"	Clarify
325	1459070	"The boost 1.46.1 header issue should be fixed. As for miniupnpc, try building against the version exactly labeled 1.5 (http://miniupnp.free.fr/files/download.php?file=miniupnpd-1.5.tar.gz) "	Other
325	1471146	fixed by commit 926e14b362cd830cdca96dd37a9ebad247399420 	Other
324	1433019	What is this for?  I'm about to start working on the 'headers only' branch that will break this (because not every node will store every transaction).  	Clarify
324	1467735	"This is for providing a way for RPC clients to check the status of transactions. It's mostly useful for mining pool servers - to check whether a tx has been put into a block, and so whether to include it and txs depending on it in the block being mined. "	Clarify
324	1467742	Usage example: My p2pool software - http://forum.bitcoin.org/index.php?topic=18313.0 :P 	Other
324	1468182	"Im not a big fan of this, RPC is getting really huge and we keep adding more and more features to it.  I wouldnt mind it being so big if all the UIs were using something more standard, ie a libbitcoin-style thing, and I prefer to get something like that up before we keep merging more and more rpc ca"	Clarify
324	2299403	Closing this; please propose/discuss new RPC commands on the bitcoin mailing list or the forums.  	Clarify
321	1390880	-rescan seems to work on linux but doesn't (always) work on windows. 	Statement
321	4044119	In which version was this? Automatic rescanning was added in 0.3.21. 	whQuestion
320	1382214	One person's garbage is another person's gold.  And the blockchain DOES have garbage transactions in it-- see block 71036. Those garbage transactions partly insipired the change so that non-standard transactions ARE rejected by clients and mainline miners.  I'm going to close this; if you have a spe	Clarify
320	1382312	You are wrong. All the scripts in Block 71036 are syntactically valid. 	whQuestion
320	1382380	"@roconnor is talking about syntactic validity, not about whether the script is a) standard or b) evaluates to true for a particular/possible input. For example if it'd contain unknown opcodes, or opcodes that require additional databytes at the end of the output script. "	Clarify
320	1382491	"Benefit of allowing anything is it will make upgrading easier.  I don't see any harm in leaving the TxOuts unparsed until they're spent.  I suppose you could arge that syntactically incorrect garbage could bloat the block chain, but it is almost as easy to create syntactically CORRECT garbage to blo"	Clarify
320	1385089	"As long as you understand, I also don't see any harm either.  I'll close. "	nAnswer
320	1471237	"Upon further inspection, I think that the TxOut scripts are parsed before being included in the block chain.  Because of the way the TxOut structure is serialized the length *of the script* is included in the serialization.  The length of the script is pretty much impossible to compute without parsi"	Clarify
320	1493623	"Ah no, I was right origianlly, TxOut scripts are unparsed. "	nAnswer
319	1403240	"Should be possible to implement this much more cleanly using the MULTISIG opcodes.  Also, what do escrow transactions look like in the GUI?  "	whQuestion
319	1408254	"> Should be possible to implement this much more cleanly using the MULTISIG > opcodes.  I overlooked that MULTISIG allows for less signatures than keys.  I will go ahead and rewrite the script.  > Also, what do escrow transactions look like in the GUI?  My plan is to make the display look reasonable"	Clarify
319	1408451	"I personnally don't feel this should go into the main client implementation, but in some sort of extension instead "	nAnswer
319	1433736	"I would like to see some rethinking of IsStandard, but IMO that is quite a way down the road.  I would like to see the codebase generally cleaned a ton before that ever happens. "	Statement
319	1464945	I modified zamgo's  https://github.com/sacarlson/bitcoin-webskin to support and help document  sendescrow and redeemescrow and also incorporated the changes into MultiCoin https://github.com/sacarlson/MultiCoin so that people can start learning how to start using escrow services in the furture.  Mul	Clarify
319	1465679	"@gmaxwell just my personal opinion, it doesn't matter that much, and consensus seems to go the other way :) @TheBlueMatt +1 "	nAnswer
319	1472447	"Changed:  - Rebased on latest head - Renamed all instances of ""escrow"" to ""multisign"" because this is not really escrow in the traditional sense - Switched to CHECKMULTISIG which did not clean things up that much because of the need to check hash160s - Added unit tests - Fixed some unit testing issu"	Clarify
319	1472505	"Oh, I found a bug in CHECKMULTISIG.  It drops one too many items from the stack, so I had to push a dummy value to work around that.  "	Clarify
319	1496716	Todays  tests with me and groffer on his bitcoin branch https://github.com/groffer/bitcoin for multisign transactions were a success on commit d260515fba3ee09841701e854eeba7f419c006d6  to see detailed IRC session of tests see http://paste.ubuntu.com/637841/  I also merged this with my bitcoin branch	Clarify
319	1714884	"@gmaxwell - good point, and actually it already works this way.  If you have none of the keys, it will create a tx without any signatures.  To increase visibility into the signature collection process, the latest commit adds the list of addresses that have signed the tx to the output of the RPC call"	Clarify
319	1714888	Also added some unit tests for script.cpp. 	Clarify
319	1864017	"Can you write up a description of what the values in the TxIn are, and what operations are being done to them in the TxOut to redeem?  My puny brain is having trouble figuring out what the ROLL SIZE NOT OVER HASH.. is accomplishing.  Looking at:  http://blockexplorer.com/testnet/tx/a17b21f52859ed326"	Clarify
319	1872219	"There's a bit more operand stack detail in comments on line 1575, and a writeup below.  This is a 2 party out of 3 spend, with one party not participating.  The scriptSig (TxIn) is (reading from right to left): OP_0 (to work around a bug in OP_CHECKMULTISIG), then two participating signatures, then "	Clarify
319	1880395	"Unless I'm grossly misunderstanding CHECKMULTISIG, the simplest form of a 2-of-3 CHECKMULTISIG would be:  TxIn:  sig1 sig2 TxOut:  2 pub1 pub2 pub3 3 CHECKMULTISIG  I've been working on schemes to hash the public keys so that people can use shorter bitcoin addresses...  "	Clarify
319	1880594	groffer: appreciate comments on:   https://gist.github.com/39158239e36f6af69d6f 	Other
319	1881328	"An alternative way for handling N-out-of-M multisig with addresses, without CHECKMULTISIG at all:  scriptSig: * for each pubkey/signature that is provided: [signature] [pubkey] * for each pubkey/signature that is missing: OP_0 OP_0  So for 2-out-of-3, with the second one missing: * [signature3] [pub"	Other
319	1881564	"groffer: is sipa's suggestion close to what you started with?  I'm thinking about whether or not I like the ability to create a multisig address if all you know is the hashes of the public keys.  If I'm understanding, use case is:  + I know 3 bitcoin addresses, create a (say) 2-of-3 address + People"	Clarify
319	1882482	"I think this works (somebody check my work) if ""we"" decide that redeem-with-only-m-full-public-keys is important:  TxIn: s1 s2 2 p1 OP_0 p3 TxOut:   3DUP    -- duplicate public keys so we can check hashes   HASH160 ... EQUAL TOALTSTACK   HASH160 ... EQUAL FROMALTSTACK ADD TOALTSTACK   HASH160 ... EQ"	Clarify
319	1885913	"@sipa - that's actually very similar to what I had before switching to OP_CHECKMULTISIG in dc2dfbab6a0f75070fc3 (search for OP_TUCK).  I can revert to that if it's preferred.  @gavinandresen - yes, otherwise you have to distribute the pubkeys ahead of time.  "	Statement
319	1886527	"(sorry for the skew - my response was before I saw last comment from @gavinandresen)  Yes, CHECKMULTISIG is okay with a malformed pubkey (CheckSig returns false, and the loop moves on to the next pubkey).  But the last CHECKMULTISIG solution above can be redeemed with just one correct signature, as "	Clarify
319	1886602	"I would love to add the case of (a AND b) OR c as mentioned in the gist, and for that matter a generalized disjunctions () OR () OR () .  This will enable emergency backup signer.  It will also enable contracts based on broadcast information.  For example with sender and receiver keys Ks, Kr, a coin"	Clarify
319	1891500	coblee's solution from the gist looks optimal:  0 OVER 2SWAP CHECKSIG SWAP HASH160 {} EQUAL BOOLAND ADD // n times m GREATERTHANOREQUAL 	Other
319	1892535	"groffer:  you willing to take a stab at implementing JUST the new transaction types as a separate patch or patches? It doesn't make sense to roll this out all at once, because the RPC calls won't work unless the transactions are relayed and included into blocks.  "	Clarify
319	1893352	Do you mean just the IsStandard part?  I can do that.  We should make a decision on a couple of questions:  * Use coblee CHECKSIG solution? * Add disjunctions?  	Clarify
319	1898521	"As long as each hash160 is used only once, you can write each boolean expression in reverse-polish notation, and use coblee's technique to evaluate it.  For example: a1 OR (a2 AND a3) OR COUNT(a4,a5,a6)>1 In RPN: a1 a2 a3 AND OR a4 a5 ADD a6 ADD 1 GREATER OR  For each address element, you need to kn"	Other
319	1905906	I would love to implement the more general solution from @sipa if @gavinandresen is on board with that.  	Statement
319	1906231	What does the code for IsStandard() look like with sipa's generalized case? How does higher-level code figure out what the heck kind of transaction it is dealing with when there's a tangle of TUCKS and GREATERTHAN?  I am NOT on board with implementing sipa's general solution-- can we please start wi	Clarify
319	1909677	"To implement sipa's suggestion we would need RPL -> Script and Script -> RPL conversion functions.  Higher level code would generate and look for transactions with specific RPL templates.  To start with, IsStandard would accept RPL code within specific limits (recursion depth and operators).  The ne"	Clarify
319	1911123	"The first step is probably adding some extra specific standard cases to the solver, like 1-of-2, 1-of-3, 2-of-3, a-and-(b-or-c) (anything else that is known to be useful?). This is relatively easy to test, and as IsStandard simpy checks for solutions to an unknown keystore, IsStandard would support "	Clarify
319	1913726	I think it is easier to check the correctness of a relatively general solution than to have a growing set of special cases.  We already have a simple general solution in the current code that does general COUNT(a1..an) > m and is pretty easy to validate.  I will switch to back to a CHECKSIG solution	Clarify
319	1913777	"At the very minimum, even if we don't go for full RPN support now the transaction encoding for the subset we do support should be in the RPN encoding ordering so that extending the support in the future doesn't result in yet another transaction type.   "	Clarify
319	1914171	@gmaxwell good point. 	Accept
319	1915276	"The right place for this discussion is the bitcoin-dev mailing list.  See Mike Hearn's concerns, and see if you can convince him that supporting arbitrary combinations of keys will be easier.   "	Reject
319	1917178	"As far as I understand it, that was about putting arbitrary such expressions in addresses, not about having them pass IsStandard(). Anyway, continuing the discussion there... "	Clarify
319	2969807	Anybody mind if I close this?  BIPs 11 12 and 13 (and my OP_EVAL pull request) are the replacement. 	Clarify
316	1372949	"blk0001.dat is not a BDB file, but a raw concatenation of bitcoin blocks. "	Statement
316	1384366	Sounds like the debian squeeze is compiled against berkeley db 4.8; the fix is to get rid of the __db* database/ and log_* files (the .dat files are compatible between bdb 4.7 and 4.8)  	Clarify
314	1355689	Chime-in from another native speaker of Swedish: these are improvement over the current Swedish translation. 	Clarify
313	1435990	"I agree, ""\n"" and other markers should be left outside. Also, leaving data (like filenames) inside translatable strings is a mistake.  "	Clarify
311	1345826	"Can you redo this pull request, and delete the *.mo files please?  Thanks. "	whQuestion
311	1345834	"I removed mo now, why do it need to be removed? "	Statement
311	1345934	"Please rebase your commits, rather than add a new one.  We do not want to add two commits to the bitcoin history, one undoing 50% of the last commit :)  Why remove *.mo?  It is a binary file, impossible to review.  Your *.po could be correct, but an attacker may rewrite *.mo to add their own message"	Clarify
311	1346653	"I hope it is right now, In my fork repo I used       git reset --hard HEAD@{2} and commited, then      git push -f "	Clarify
308	26329367	"Can be closed, as this should be rather obsolete now! "	Emphasis
307	1319488	"I don't know about bitcoin's source code, but after having a quick look inside, I believe in file rpc.c, function ListReceived(), where the is now:     if (!AddressToHash160(strAddress, hash160))  ... it should rather be:     if (!AddressToHash160(strAddress, hash160) || !mapPubKeys.count(hash160)) "	Clarify
307	1916423	"I'm having the same problem.  Seems there's no way to distinguish between receiving addresses and addresses the client has sent to using the rpc.  Obviously, the client UI is doing it somehow to create the address book. "	nAnswer
307	2009452	v0.3.21 has been deprecated: https://github.com/bitcoin/bitcoin/commit/ec74e8a44338202bfb82faa2cef4611cc37e7fa5  Please submit a new issue if this persists in current versions. 	Clarify
306	1319133	Same here. It happens when I'm using chinese language. removing locale/zh_cn resolves the problem. 	Clarify
306	1319172	************************ EXCEPTION: St9bad_alloc        std::bad_alloc        D:\Program Files (x86)\Bitcoin\bitcoin.exe in CMyApp::OnExceptionInMainLoop()         sending: inv (73 bytes)  received: addr (31 bytes) sending: inv (73 bytes)  sending: inv (73 bytes)  sending: addr (31 bytes)  sending: 	Other
306	2009448	v0.3.21 & v0.3.22 have been deprecated: https://github.com/bitcoin/bitcoin/commit/ec74e8a44338202bfb82faa2cef4611cc37e7fa5  Please submit a new issue if this persists in current versions. 	Clarify
305	1312610	+1 	Statement
305	1313205	+1e09 	Statement
305	1361154	+1  This would be a great feature. 	Statement
305	1425591	+1 	Statement
305	1531609	As an example: https://github.com/coderrr/bitcoin/commit/b32016a314bcbb15c97f14c733a8f49d43c5e8b2 (allow sending coins from specific address; group linked addresses together; allow sending from multiple addresses; show address labels). 	Clarify
305	5400736	"+1 (we need a feature section where people can vote really, rather than using issue comments) "	Other
305	6791639	raw TX API (just merged) and coin control (pull req) handle this. 	Clarify
304	1312572	"Actually, dont pull this yet, way more stuff to come. "	Clarify
304	1312696	"Nevermind, other bug is in CryptoPP ASM when cross compiled. "	Statement
304	1319679	"ACK, looks good to pull to me. "	nAnswer
302	1765154	Documentation was wrong.  Thanks for fixing it. 	Statement
301	1308554	"Can you give me an amount that the current FormatMoney doesn't display properly?  It is currently written to:   + use printf() to create a string like ""1.00000000""   + trim all but the last two trailing zeroes, so ""1.00000000"" becomes ""1.00"" and ""1.00001000"" becomes ""1.00001""  "	Statement
301	1765167	Closed.  Will re-open if given an amount that the current FormatMoney does not handle properly. 	Clarify
300	1306428	"As devrandom pointed out, tor latency could be much greater than 5s.  Maybe add if (fProxy) timeout = 20s? "	Other
300	1308021	"Maybe this can be done adaptively: start with a timeout=100ms, and each time N connection attempts have failed through time-out (and not enough connections are established), double the timeout. "	Clarify
300	1310748	I think making it a command line override option would be a better way of handling it. In general you want to avoid connecting to other nodes where your network path is that latent. That way people who have known-latent paths can manually bump the timeout but it works as expected for most users. 	Clarify
300	1311072	@jrmithdobbs: good suggestion - implemented. 	Statement
300	1319859	"I'd prefer removing the nConnectTimeout global variable and just calling GetArg(""-timeout"", 5000) in ConnectSocket. "	Statement
300	1327989	My name is phantomcircuit and I approve this patch. 	Statement
300	1329964	"@gavinandresen: I disagree - I don't like global variables, but doing parsing of command-line options all over the place is even worse. "	Clarify
300	1339951	"bleh, this is overkill.  Use select with timeout -- as net.cpp already does -- and eliminate that polling loop.  In all of linux/osx/winsock, you issue a non-blocking connect(2), and then select(2) the socket for writing.  "	Clarify
300	1351925	ACK final result.  Needs to be rebased though...  	Clarify
300	1352596	"ACK -- looks OK, but I haven't had time to compile and test. "	nAnswer
300	1353183	Now using select() instead of looping. Tested on Linux and Windows. 	Statement
299	2009425	"Version v0.3.20.01 is deprecated, see https://github.com/bitcoin/bitcoin/commit/ec74e8a44338202bfb82faa2cef4611cc37e7fa5  Also see the mining deprecation thread: https://github.com/bitcoin/bitcoin/pull/466 "	Statement
298	1305185	"Bitcoins are not ideal for microtransactions.  We do plan to lower various fees and limits, as bitcoins have appreciated far faster than expected. "	Reject
298	1410254	Is there a way to get the calulated minimum txfee from sendfrom or sendmany ? This should be an option since rpc processes the request without you knowing the fee in advance 	Clarify
297	1313492	"true it's a simplification, but it is also documentation and easier to review and change as-is.  Thanks for the contribution, though! "	nAnswer
295	1327922	This would be nice to have for Instawallet 	Statement
295	1364595	ACK 	Clarify
295	1402489	autoNAK: it is not compatible with multiple txouts in a coinbase tx 	ynQuestion
294	1299276	"Not sure if I agree with this.  Im not sure if it is useful or not.  After walletcrypter, creating new keys can be a bit slow (both created, and encrypted).  This means generating 25 in direct succession and blocking until then can generate quite a lag.  Walletcrypter will try to generate new addres"	Clarify
294	1299404	"If the feature is disliked, you can set keypoolmin==keypool.  But there is really no reason we need to top up the key pool _every single time_ we remove one key, and that creates the disadvantage that you -must- backup your wallet every single time.  Normally, pools are depleted and replenished peri"	Clarify
294	1299453	"re 1. True... re 2: No, it is worse for backup, if you backup when you have 76 keys left you might lose coins sent to the 77th, whereas if you backup when you have 76 keys now...well you cant. re 3: True, and I think you are right here, however I'd like to see manual control of keypool topup (its in"	Clarify
294	1299500	"The keypool always uses the oldest key first, on purpose.  So your lose-coins scenario doesn't make sense.  The keypool is by definition full of unused keys.  With pool low-water refill, old backups remain valid longer. "	Clarify
294	1299587	"My point was that after your patch, if you backup when you have 76 keys left, and you use 77, you might lose coins on restore.  However, if you backup when you have 77 keys left now...well you cant as the keypool will always have 100 new keys to use.  Thus after your patch, by default, you only have"	Clarify
294	1299648	"Absent tilting at windmills, the lone codger who does that can adjust -keypoolmin :) "	Statement
294	1300367	"Well maybe then keypoolmin should default to 100, and fill up to 125. "	Statement
294	1302955	"Thats what I was thinking.  Im not sure what a ""good"" default keypool is.  For a merchant, you would need some ridiculously huge amount for keypool to just last a day.  For an end-user, 100 keys could very well last a month, maybe longer.  Generating keys does take very little time and spend very li"	Clarify
294	1313490	Updated to 100/125 (and created named constants for those magic numbers) 	Clarify
294	1433245	I agree with Matt-- I don't see the need for this. 	nAnswer
294	1487840	oh well :) 	Statement
293	1299293	"I like the idea, but it depends on when this is merged.  If it is merged for the same release as walletcrypter, no need as it already does this in a separate thread (can be a bit slow to create + encrypt sometimes) in several places as it tries to fill the keypool every time it gets the password as "	Clarify
292	1296452	"Can you clean this up to match the new strings in 0.3.21, also can you only use the czech translation commit, instead of 20 that do various things? "	nAnswer
292	1296492	"Hello, I am not a developer and I am really new to using GitHub or GIT, so sorry for some troubles. I will very appreciate if you will give me some guide how to clone/pull and checkout only the right files, because everything I am studying very long time and can do mistake easily. Thanks. "	Clarify
292	1296578	The instructions from that repo are fairly out-of-date you can see http://forum.bitcoin.org/index.php?topic=8390.0 for more up-to-date ones. 	ynQuestion
292	1297166	"There is no english po file, each po file maps English strings into another language.  As that thread points out, grab any po from any language and replace all the msgstr...s with a translation of msgid... "	nAnswer
292	1300470	"Speaking as a professional translator, I'd suggest only accepting direct translations from the English. Otherwise you get into the ""game of telephone"" sort of problem rather quickly. "	Clarify
292	1302478	"No, each po has english and translated language, so you still have to translate from english. "	nAnswer
292	1303109	"The danger with the ""grab any PO"" advice above is that someone takes an existing EN->XX .po file and does the translation based on the XX rather than the EN. I confess, I'm being pedantic. I spent a few minutes trying to build a good example of how this can fail over three languages. The results wer"	Clarify
289	1302384	I assume The Right Thing happens if I:  setautocommit false send.... stop  (the Right Thing being that when I restart the txid from the send is just completely unknown and the coins that were in committed state when bitcoin stopped are available to be sent?)  	Clarify
289	1302879	"Yes, setautocommit false stores txes in a temporary map local to rpc.cpp (static std::map<uint256, CWalletTx> mapTempTransactions; static std::map<uint256, CReserveKey> mapTempPoolKeys; ) so those will not touch wallet until committransaction is called. "	Other
289	1364614	"A lot of good stuff in here, but  - standard (but BIG) usability problem: if we make it easy for users to ignore recommended fee, then we just made it very easy to create transactions that may /never/ confirm.  ""unspending"" is a very hard problem and not implemented, so any feature that makes it eas"	Clarify
289	1367071	"True, maybe that option should be removed and just the first and second commits suggested. Also, Im too lazy to do multiple pulls, and this was specifically written so that it does *not* change any fee behavior, only make it more customizable....plus it seems like the community never feels like disc"	Clarify
289	1475122	"Closing this due to several bugs found that I dont have time to fix nor the desire to fix.  Going forward I'd like to see: 2. as part of a larger upgrade to fees, which Im sure it will be. 1. probably never, though the part which upgrades the various info in the options page might be helpful as its "	Clarify
288	1372128	Rebased. 	System
287	1278327	The changes here had probably best wait until https://github.com/bitcoin/bitcoin/pull/288 is merged in. 	nAnswer
287	3497582	Is this a duplicate of the (reopened) https://github.com/bitcoin/bitcoin/issues/68 ? 	Statement
286	4961193	"I'm going to close this-- the current thinking is to implement ""deterministic wallets,"" because they're much easier to backup and are much more flexible (e.g. you can give one public key to somebody and they can generate a series of public keys that they can use to pay you without ever knowing any o"	Clarify
285	1364642	"Seems OK, but I'd have to glance at CreateTransaction() callee's, to make 100% certain there are no side effects.  The only other question I have is whether or not there is a driving need?  (yes, I did review the thread) "	Clarify
285	1387008	"I prefer an option to create transactions without committing them, allowing to inspect them, and then decide to commit+send or to abort. "	nAnswer
285	1433022	"I agree w. sipa, I like the create...inspect...commit paradigm better.  "	nAnswer
285	1468205	Im just not a huge fan of this as its an estimate and could very well be far off the estimate.  I agree with gavin and sipa here and had done it in one of the commits in #289 	nAnswer
285	1577432	consensus seems to be against 	Statement
284	1259013	"So...this adds the option to specify the rpcuser/pass at runtim instead of via -rpcuser/-rpcpassword.  I like this.   However, why use ASSUAN? Assuan takes care of mlock() and such, but how hard is that, really, to do ourselves?  I'm not a huge fan of adding *another* dependency, though I suppose th"	Clarify
284	1259018	"Maybe assuan also tries to stop keyloggers on Windows, but my short googleing seemed to indicate otherwise. "	Reject
284	1260215	"It is Pinentry, main reference implementation of an assuan daemon, that tries to stop software keyloggers when started as a separate process, capturing exclusive focus and such. The whole architecture of this system for user input looks very reliable, portable and promising to me. Researching into i"	Clarify
284	1260900	"Its not a question of whether a new dep will cause problems in compiling, but a question of is it necessary? A new dep just means that much more work when compiling and that much more memory used when it has to be loaded.    I agree assuan looks like a good lib to input password, but again...why?  I"	Clarify
284	1265788	"I definitely see the usefulness of introducing ssh-askpass style support for bitcoind. It makes, for instance, setting a one-time use passphrase for txn creation using your new wallet encryption code much much simpler.  However, I cannot get this to build cleanly with the version of libassuan in deb"	nAnswer
284	1266484	"on Ubuntu packaged deps are libassuan2-dev and libgpg-error-dev of course you must uncomment USE_ASSUAN in makefile.unix (later that can be --enable-pinentry on autotools)  just tested compilation on Debian 6.0 and you are right, doesn't works: Debian is stuck to the old libassuan-dev (version 1)  m"	Clarify
284	1272670	"forgot to mention that i'm available to fix this up to work on libassuan 1 or 2, yet before doing that i'd like to know if there is reasonable intention to pull this into mainline or not, just lemme know "	Clarify
284	1282639	I know I would like to see it pulled. 	Statement
284	1306016	you should add libassuan-dev to the apt-get instructions if this should be pulled 	Statement
284	1320368	where is the libassuan project homepage?  Is it part of something else? 	whQuestion
284	1320928	Its a part of GPG and afaict mostly just used by that.  http://www.gnupg.org/download/#libassuan http://www.linuxfromscratch.org/blfs/view/cvs/general/libassuan.html 	Other
284	1321230	The Debian archive contains a few other packages using libassuan:  ``` apt-cache rdepends libassuan0 libassuan0 Reverse Depends:   scute   libassuan0-dbg   libassuan-dev   gpgsm   gnupg2   gnupg-agent   dirmngr ``` 	Clarify
284	1340551	"yes, ASSUAN is a new, well thought and documented protocol for secure IPC by the fine people coding on GNUPG which will arguably become a de facto standard in future.  the provision of pinentry-* programs on various platforms makes it extremely convenient to use it to implement password prompt  my c"	Clarify
284	1341350	"I like the feature, but won't pull for two reasons:  1. I agree with Matt: I think the benefits of the feature is not great enough to justify the pain of adding another dependency.  2. It is under the GPL license, which is more restrictive than bitcoin's MIT license, and is unacceptable.   "	Clarify
284	1341809	re: point 2 -  what is under the GNU GPL?  the code i'm contributing is licensed under the same MIT license as Bitcoin.  you mean the dependencies? is your intention to avoid any library dependency licensed as GNU GPL?   	Clarify
284	1342033	"Yes, we avoid an GPL library dependencies.  LGPL is OK.  "	Accept
284	1342395	"But libassaun is gplv2+ OR lgplv2+ ?  Actually, I'm wrong. From the README the source is straight up lgplv2. (The rest of the gnupg packages are gplv2+.)  See COPYING.LIB on how to share, modify and distribute the software itself (LGPLv2.1+) and COPYING for the documentation (GPLv3+).  "	Clarify
283	1256785	"The problem is that some (intended) indetermism is present while generating a transaction, which may influence the size of a transactions and thus its fee according to a certain policy. I believe the correct way should be that payment RPC's take an additional argument that states that no actual paym"	Clarify
283	1256834	"Can you rebase this into one commit? Also, I agree with sipa on the proper way to do this.  I'm hoping someone redoes all the UI for transaction fees for 0.4.0. "	Clarify
283	1257756	"Sipa - so, you're suggesting we update the send payment RPCs to return transaction details, instead of just the Transaction ID, then include a new flag that indicates a fake transaction?  Or, would we have a non-committed transaction that I could still query by txn ID?  Alternatively, we could keep "	Clarify
283	1258965	"Accidentally closed while trying to rebase, opening new pull request. "	nAnswer
282	1364684	non-committal (neither NAK nor ACK)... 	Clarify
282	1364996	Meaning? 	ynQuestion
282	1367509	"heh.  Well it's a long list that I'm not sure will be of much value over current setup.  Fixing warnings can be useful, or it can just be a compiler being dumb and we're working around it.  So if Gavin or sipa or tcatm wants this pull, I would not object, but I'm not gonna click 'merge' myself... "	Clarify
282	1369742	"Ah, well I suppose it was half a pull to hopefully bring attention to some (potential) bugs we might have.  Also, it would have fixed a coding mistake or two of mine...but that is really just because Im in idiot. "	Clarify
282	1400740	closing the half-a-pull :) 	Statement
281	1313494	Can you please do two things?  1) Resubmit on top of current bitcoin 2) Do not include *.mo files.  We will rebuild those. 	Clarify
280	1253542	"The problem is still present, will have to investigate. "	Statement
276	1253629	See http://forum.bitcoin.org/index.php?topic=10064.0 	ynQuestion
275	1246410	merged by matt 	whQuestion
274	1242750	"NACK, why did you change the spacing so much? "	whQuestion
274	1243153	"I didn't change the spacing, Poedit did this. This is because it's easier to read, I think. But why should the spacing be a problem? "	nAnswer
274	1243355	"It isnt, I was just nitpicking, and it makes the commitdiff much harder to read, which isnt good...also, my poedit doesn't do that unless I put spaces in there. "	nAnswer
274	1246414	fixed by matt 	Other
272	1262198	This is a very good idea. The GUI's would improve rapidly (most users only see/understand pixels anyway) and would allow light weight clients interacting with Engine servers (I just burned my monthly fixed limit in one day! :( ). 	Clarify
271	1312566	Great idea - I was just thinking the same thing.  This would be a very important feature allowing one to safeguard a high-value savings wallet. 	Clarify
271	1363932	"just some more clarifying comments.  tx import/export is a useful feature, /in addition/ to address import/export. it allows one to keep 100% airgap on a savings wallet, by creating and exporting the transaction, then transferring just the tx data via usb key (or even a re-typing) over to an online "	Clarify
271	1364073	"This will likely become a priority item.    - http://forum.bitcoin.org/index.php?topic=16457.0 ""I just got hacked - any help is welcome!""   - http://forum.bitcoin.org/index.php?topic=16650.0 ""What to do if your computer is compromised""  "	Emphasis
271	1364134	+1 	Statement
271	1364206	+2 	Statement
271	1364462	"@nanotube if i get you correctly, it's hardly possible for an offline client to just create a tx from thin air without knowing which outs it's allowed to pick-up since it's not always perfectly up to date with the blockchain ?  I don't really get how the key import/export could be potentially danger"	Clarify
271	1365508	"@davout: obviously, you'll have to periodically insert the latest blockchain snapshot, and run -rescan. once you do that, it is perfectly fine to create transactions.  danger of key import export: well, where are you exporting them /to/? obviously, to take them somewhere with an internet connection."	Clarify
271	1376717	"@nanotube take the example of bitcoin-central, one thing that would be great would be that the internet accessible client can generate addresses at will, only have knowledge of the pubkeys so it can track incoming transfers, and have an offline client which also has the private keys in order to be a"	Clarify
271	1382040	"@davout: The idea of having a wallet with 'only public keys', and thereby being able to monitor your balance while keeping your private keys secure, is a great idea :) but it is a /separate/ idea (and i think it deserves its own github issue).  the ability to import/export transactions would be usef"	Clarify
271	1424314	+1 	Statement
271	1436931	+1 	Statement
271	1436976	This is a great idea.  +1 	Statement
271	1456919	"@gmaxwell:  ok, and once they figure out how to trigger a bug in blockchain parsing... what are they going to do? the wallet is airgapped! even if they manage to create a bunch of txns to try to spend the coins, they won't go out to the network. so with a wiping of the wallet and a restoration of a "	Clarify
271	1457221	"@gmaxwell: aah, very nice - copying private keys into signature fields is nice and sneaky - and since a user cannot easily check by inspection whether it is a signature or private key data, since they both look like gibberish to the eye... bam, you're hosed. ok, i buy that.  re: needing to know txin"	Clarify
271	5298067	Related:  BIP 10 describes a standard that guarantees interoperability of all programs that implement transactions that are broadcast:  - http://en.bitcoin.it/wiki/BIP_0010 	Emphasis
271	6791235	raw TX RPC API covers this. 	Clarify
270	1246416	merged by matt 	whQuestion
269	1241420	No upnp built: USE_UPNP= upnp built but disabled by default: USE_UPNP=0 upnp built and enabled bt default: USE_UPNP=1   	nAnswer
269	1241433	"Please read build-unix.txt, it explains this. "	Statement
269	1241436	Is UPNP enabled the intended default behavior? 	whQuestion
269	1241440	"Built in, but disabled by default ie USE_UPNP=0, which is the intended default. "	nAnswer
269	1241444	"USE_UPNP=   no UPnP support, miniupnp not required; USE_UPNP=0  (the default) UPnP support turned off by default at runtime; USE_UPNP=1  UPnP support turned on by default at runtime. -from build-unix.txt "	nAnswer
269	1241460	"ahh, it's also the flag for the default runtime setting, didn't realize that. "	Reject
267	1238949	ACK 	Clarify
267	1238988	ACK 	Clarify
266	1364692	"The ""_"" function for translation strings is standard.  This patch sure does stir a lot of code, as well as moving us away from that standard.  Seems like c pre-processor magic would be more appropriate than changing all that code. "	Clarify
266	1442243	I think search-and-replace was a nice function here 	Statement
266	1795462	"Yea, this needs to be done cleanly...or just move to qt. "	Clarify
264	1237762	This should fix https://github.com/bitcoin/bitcoin/issues/263 	Other
263	1237759	See https://github.com/bitcoin/bitcoin/pull/264 	Statement
263	1304693	pulled sipa's fix 	whQuestion
262	1237934	Pulled via https://github.com/bitcoin/bitcoin/pull/265 	Statement
258	1258562	"Overall transaction handling in db.cpp is terrible.  BDB has good transaction support, but it is only used in one or two places. "	Statement
258	1259092	"I looked into this a bit: I think disabling fsync for the address database is the way to go, but since we need to leave it enabled for the rest (?) of the databases, that will require creating a separate BDB [DbEnv](http://download.oracle.com/docs/cd/E17076_02/html/api_reference/CXX/envcreate.html)."	Clarify
258	1386562	This appears to be at least an order of magnitude worse in the OSX build than in the Linux build. Might OSX be handling the fsync'ing differently? 	Clarify
258	1393242	"Yeah, it's absolutely abysmal on osx. "	Statement
258	1395233	"I didn't really notice since the macs I run it on all have SSDs. But yes, it is demonstrably worse on OS X. "	nAnswer
258	1433733	"With a high-end Mac Pro (gobs of RAM, 2 quad-core CPUs) this issue makes Bitcoin essentially unusable in conjunction with other day-to-day use of the machine.  It causes the HD to click noisily all day (with brief pauses) and degrades performance of other applications - web browsing etc.  I keep Bit"	Clarify
258	1469020	"You might try -noflushwallet, but that probably wouldnt work and could lead to the loss of data in the wallet or the corruption of the wallet if the bitcoin client crashes while it is writing to the wallet. "	Clarify
258	1526591	Does every address need an fsync?  It seems that just fsyncing after key/wallet operations would be more than acceptable.  Can the address cache fsyncs be batched into blocks of 1000 or something? 	Clarify
258	1714541	"With OS X adding addresses is *much* slower than with Linux: it takes a very long time until it starts fetching new blocks after startup. Note: I'm using an encrypted *.dmg for all Bitcoin data (inclusive debug.log), which could make things more worse.  Just to confirm this as a serious problem (0.3"	Clarify
258	1773052	Try with some revision that is more recent than 24271c542b9a0d6016badf5438fb7e5ff7961ace. This patch reduces db commits when addresses are added. 	Clarify
258	4044303	"Addrman (#787) fixes this completely, as it only writes addr.dat asynchonously. "	Statement
258	4961056	Addrman pulled.  	System
257	8553093	Hopefully searching of addresses will be in 0.8.0 Closing this issue (duplicate of #623)  	Other
256	1220949	"Can you split the russian translation to a new commit, and maybe update to latest git (as per http://forum.bitcoin.org/index.php?topic=8390.0)? "	Clarify
256	1221144	I am a newbie in GIT. Must I fork&clone your branch? 	ynQuestion
256	1225632	"No, just the one russian file.  Just make your own branch (off master) and grab the russian bitcoin.po file from my repo (downloading via github should work fine). "	Statement
256	1225678	Just published a .po file: http://forum.bitcoin.org/index.php?topic=8390.msg138197#msg138197 	ynQuestion
256	1232661	I hoped that your po-file is based on the last translation file but it seems that it is not.  https://github.com/lzsaver/bitcoin-translation/blob/master/locale/ru/LC_MESSAGES/ 	Statement
256	1232883	"https://github.com/lzsaver/bitcoin-translation/blob/master/locale/ru/LC_MESSAGES/ - April 02, 2011 https://github.com/TheBlueMatt/bitcoin/tree/translations/locale/ru/LC_MESSAGES - May 15, 2011 What is more recent? ;) "	Other
256	1251586	"Anyway, I hope that -purgetx will be in the official client. :) "	Statement
256	1364702	"indeed, needs rebasing to remove the translations "	nAnswer
256	1367165	"IMHO this belongs in Bitcointools or other similar software, not in Bitcoin (feature creep and its more wallet recovery which IMHO should be encouraged not using Bitcoin, but using external tools as there is too much chance to make it worse), but maybe others disagree? "	Clarify
256	1387514	I think that it may be used with -rescan option... So I think it should be in Bitcoin. 	Statement
256	1593255	"Instead, perhaps, there should be a needsrecan key that tools can set?  That would be generally useful for tools that modify the wallet.  "	Statement
256	1593620	"-rescan only adds transactions not already in the wallet - it will never remove things from the wallet.  Also, it is possible to force bitcoin to do a rescan by clearing (= setting to a singe 0 byte) the ""bestblock"" entry in wallet.dat. "	Clarify
256	3224140	"Agreed, that this is a bit of an esoteric option, that will not be widely used (or tested).  It does make more sense as a bitcointools add-on, as BlueMatt suggested. "	Clarify
254	1217938	Can you rebase this into a single commit? 	ynQuestion
254	1218166	It's clean now. 	Statement
254	1237949	pulled manually 	Statement
253	1364709	"ACK  and I think Gavin is in favor of this, too "	Statement
253	1490461	"NACK, it would appear code was ripped out of uibase.* without modifying the uiproject.fpb file meaning no one can edit the wxUI in the future. "	nAnswer
253	1559512	"Also, please update for latest changes (lots!).  We wanted to pull wallet crypto first. "	Clarify
253	1560610	"yeah I will, first have to get this wx dialog editor tooling "	Statement
253	1593259	Aww. The removal of this would mean we can't run a lottery for nodes running the most recent version of bitcoin as an incentive to make people upgrade. :)  	Clarify
253	1593434	"Wow, you probably hit upon the first actual useful application for send to IP transactions. But watch out for people MITMing you to steal the incentives :) "	Clarify
253	1593448	"Well, if they are going to go through the trouble of setting up something that _pretends_ to be a current node it would be easier to actually RUN a current node.  The lottery could do some reasonable health checks too. :)  Like make sure the winner can feed the block chain and forward a transaction."	Clarify
252	1227197	Here is an example of the XOR metric used to bin IP addresses by distance (using IPs from #bitcoin IRC): code: https://gist.github.com/988452 output: https://gist.github.com/988443  My hypothesis is that bucketing connections like this would lead to lower overall latencies by dropping the average di	Clarify
252	1258991	"Chosing which nodes to make outgoing connections too could use an upgrade like this, as could general connection tactics (being more aggressive couldn't hurt this insane times for bootstrapping that have been seen recently).   @stuhood might you consider writing that into the Bitcoin client for us? "	Clarify
252	1259084	Yes: I'd be happy to implement this in the next few weeks. 	Clarify
252	3002163	@stuhood how is the implementation coming along?  :) 	whQuestion
252	3200366	@laanwj It's not... sorry! Got caught up in other obligations. 	Reject
252	4961097	Closing this; sipa's CAddrMan has a well-thought-out policy for which potential peers to connect with. 	Clarify
248	1214447	What's the difference? 	whQuestion
248	1241566	"Do you have a reliable test-case for this, something that always fails on the first and never on the last? "	Emphasis
248	1319938	"Yes, test case(s) please? "	Other
248	2792628	"Whatever this was, was my fault. I think. "	Statement
247	1764621	"Not sure if you saw this in the pull request: If you want all of your json strings to look pretty, use the latest version of simplejson that fully supports Decimal JSON values; e.g.  import decimal import simplejson simplejson.dumps(decimal.Decimal('10000000.000000009'), use_decimal=True) '10000000."	Clarify
246	1210866	"Hm, not sure why we need to change our indentation format.  It is one of the most common types of indentation/code format (though possibly some different bracket positioning is more common).  Though some of the removal of random spaces at the end of lines and cleaning up number of spaces at various "	Clarify
246	1210965	"I thought that no standard has been used regarding the indentation of code, so you're right we don't have to take this commit in account even if I like a bit more this style in my Emacs ;) "	Clarify
246	1214460	"Removing spaces and cleaning up is fine, but the project has well-defined code style rules, which I don't think should be changed without discussion. "	Clarify
246	1215423	you are absolutely right. 	Statement
246	1256521	"the indentation and code style was declared and we are all already adapting to it, why change it?  i'm also disagreeing with the ""whitespace cleanup"": while that is an easy trick using the emacs extension, it does provoke unnecessary conflicts when merging master into branches.  ultimately i don't s"	Clarify
246	1256748	"jaromil, are there any rules regarding the indentation and code style defined by the community of developer around the project ? If yes can any one give me some directives to respect these rules in the future ?  Thanks. "	Clarify
246	1256757	There should be in docs/coding.txt 	Statement
246	1256852	Thanks. 	Statement
246	1263955	"i see one good thing in this operation, but then it should split from all the rest and be proposed as a standalone pull request: in addition to the changes you mentioned, you have also added #ifndef / #define to headers, a common practice to avoid multiple inclusion and redeclarations. as that would"	Clarify
246	1272910	"I will separate the change you mentioned from the rest of the pull. If there is anything else to keep, go ahead ;) "	Clarify
246	1313498	"we have a metric ton of pending patches, and unfortunately this pull request is very low priority compared to other changes which change a lot of bitcoin code.  whitespace diffs tend to require merging and rebasing downstream for very little value.  So this pull request is, and will continue to beco"	Clarify
245	1364716	I think we would prefer this pull request: https://github.com/bitcoin/bitcoin/pull/220 	Clarify
245	1366817	"I'm happy with it.  I think a simple tool could convert PEM to Sipa's format.  I appreciate your digging through this stuff!  -John  On Tue, Jun 14, 2011 at 5:05 AM, jgarzik < reply@reply.github.com>wrote:  > I think we would prefer this pull request: > https://github.com/bitcoin/bitcoin/pull/220 > "	Other
245	1433216	I'm going to close this; a tool to convert PEM to sipa's format would be nifty (and could be shipped with bitcoin in the contrib/ folder). 	Statement
244	1203842	"Oops, already been posted here: #240 "	Other
243	1241766	"Based on my quick googleing it is not possible to get DPI from wx.  A system-dependent version could be implemented.  All that should realistically need done, is multiply the size of each window by the DPI/96, I think. "	Clarify
242	1201363	"send/receive/generated do have txids; you mean for ""move"" transactions? Because there is no txid for move transactions, they're internal to the wallet. I suppose bitcoin could generate one for moves, but it is not immediately obvious how.  What do you need it for?  moves always come in pairs; I assu"	Clarify
242	1203376	"You're right, I was looking at a move, so a txid wouldn't apply. Non-issue, closed :) "	Statement
242	2507449	"I need this to reconcile ""listtransactions"" with an external db, also would be helfpul to detect if i need to go back farther than the last ten txes for synchronization  I would be content if the txid was merely the direction(eg receive, send) combined with the timestamp "	Clarify
242	2507653	@DataSurfer: try upgrading your client and you shall find what you're looking for :)  https://en.bitcoin.it/w/index.php?title=Original_Bitcoin_client/API_calls_list 	Clarify
241	1200855	"I know it's weird, but -testnet reads bitcoin.conf from the datadir, NOT datadir/testnet.  "	nAnswer
241	1201272	"gavinandresen: well... shouldn't this be fixed, so it stops being weird? :) "	Other
241	1765204	"Won't fix-- it is what it is.  (for the record, Satoshi re-wrote my initial implementation to put the .conf file on top of the testnet/ folder, so I agree with y'all.  But changing it again now isn't, in my opinion, worth all the confusion the change would cause). "	Clarify
240	1203043	Both warnings in util.cpp are false positives. I'm not going to dive in the GUI. 	Reject
239	3005537	"This concerns the old Wx GUI, closing the issue "	nAnswer
238	4044345	"wx GUI has been removed, closing. "	Statement
237	4044341	Does this problem still exist? 	ynQuestion
236	1198435	"Seems like a nice, well-defined problem for somebody new to tackle.  Conversion of difficulty to floating point isn't a critical function (internally it is all uint256's), and we're not going to get to 2 billion difficulty soon, so not high priority. "	Clarify
235	1197106	"This is the descriptor that should be used for 0.3.22 builds, it should be updated for autotools, but it might work even then. "	Clarify
233	1765229	"Smarter people have been thinking hard about this for more than a year, with no solution apparent.  I'm going to close this; if somebody smart does figure out a way, we'll hear about it.  "	Clarify
232	1193878	Forum thread: http://forum.bitcoin.org/index.php?topic=8728.0 	ynQuestion
232	1363969	Instead of using EVP_BytesToKey for key derivation I think scrypt (https://www.tarsnap.com/scrypt.html) should provide a somewhat better security against brute-force attacks. 	Clarify
232	1364980	"@sysfrog Im not sure.  Though it may claim to be more secure, 1000 rounds on OpenSSL's algorithm is also very secure and I think I'd rather use a more common/well used/well analysed algorithm like OpenSSL's entire code base is. "	Clarify
232	1364981	@dizzyd Ill take a look at updating to your other recommendations when I have a chance. 	Clarify
232	1366011	"re: the unused IV -- ""may be some kind of crazy issue.."" is not a logical argument. Being paranoid about security is good, but there needs to be some basis in reality for it. Otherwise, you wind up with a lot of code that doesn't do anything and may obscure what's _really_ going on.   re: calls to S"	Clarify
232	1367956	Is there a reason you are not using a random salt? 	ynQuestion
232	1382512	"witkamp: > Is there a reason you are not using a random salt?  Yeah, password data should be salted - I mean we DO already have a giant network of people with high-end GPUs and the drivers/software necessary to brute force such things ;) "	Clarify
232	1382673	"@TheBlueMatt As far as I understand scrypt the main advantage over older techniques is that it not only adds computational complexity to calculate a given key from a password, but that each calculation also requires a given amount of RAM. So it's much harder to parallelize an attack with, e.g., an A"	Clarify
232	1382749	"@witkamp mostly because it would be a pain to store.  This patch already uses the public key as the IV for the encryption of each private key so any kind of brute force/dictionary attack is already ridiculously difficult, I dont see a major advantage to adding a random salt to be used for a given wa"	Clarify
232	1382789	"@TheBlueMatt gotcha, didn't see the public key = IV bit but it makes sense and stops dictionary/BF attacks at least as well as a random salt so I'm happy with it as a solution. "	Clarify
232	1383776	"On Thu, Jun 16, 2011 at 11:24 AM, TheBlueMatt < reply@reply.github.com>wrote:  > > @dizzyd Still planning on updating with some of your original > recommendations, but I'm on vacation atm and dont feel like doing much > coding. >  No worries -- I read your last reply first and was confused. :)  D. "	Other
232	1395236	It would be best to use AES128 and not AES256.  The key schedule in AES256 is known to be weak.  http://www.schneier.com/blog/archives/2009/07/another_new_aes.html 	nAnswer
232	1400798	Please salt that passphrase properly as suggested in gmaxwell's forum post. 	Clarify
232	1407446	"@phantomcircuit That attack is effective against 11-round AES-256, but not full 14-round AES-256. It'd be better to increase the number of rounds (he recommends 28 or more in that article) used instead of using a smaller key size. There are plenty of attacks on AES-128 as well, many of which were pu"	Clarify
232	1443388	Closing this in anticipation of the new branch. 	Statement
231	1194051	"This is a manifestation of the error fixed in 2f62b1299f1d2d8e56ff9096017b1f3835b41642.  That said, it is still an indication of a more underlying error which should be investigated.  Probably an issue in SendMoney. "	Clarify
231	1195621	"As an addendum to this issue, the client first displayed a message box telling me about a transaction fee (0.01) for which I pressed the 'Ok' button...it is at that point it displayed the error message above... "	Clarify
231	3019190	This bug is related to wxGTK which was removed in 0.5.0. 	whQuestion
228	1203732	I believe this is the same as issue #185 - see that issue for some analysis 	Clarify
228	1203760	"Sorry, I had thought that was already closed...Ill close this as a duplicate. "	nAnswer
227	1171737	This issue has already been fixed in current upstream git (by deleting the asm code). 	Clarify
226	1173815	Thanks - I didn't see that with g++4.3/amd64 - could you please tell me what platform and compiler you're using? 	Emphasis
226	1174103	"OK, I fixed the issue. "	Accept
226	1179436	"OK, issue should be fixed for DGUI now as well. "	Statement
226	1185789	I've rebased the above fixes for further review. 	Clarify
226	1187881	"All patches look OK.  I would elide the *.d commit, because we'll be doing that via GNU autotools as soon as jaromil's branch is pulled (post 0.3.22 release). "	Clarify
226	1194024	.d commit elided. 	System
226	1352602	ACK- should be pulled for the release-after-0.3.23 	Statement
225	1165441	"You can return to a previous commit in git with git reset HEAD~ --hard, and push that again using git push origin -f master. The pull request will automatically adapt. "	nAnswer
225	1165500	"Thanks! now it's back to one commit (uhm, sorry for pressing the open/close buttons, that goes too easy!) "	Statement
225	1165886	"ACK, looks good to me.  We need to move off of headers.h and this looks like a good first step (plus if it helps with QT compat, and we do eventually move there, Im in favor) "	Clarify
225	1166064	Compiles and runs fine. This is a nice step towards cleaning up the code. ACK 	Clarify
225	1166565	"ACK, good idea.  I'm going to pull.  "	Clarify
223	1162918	Can someone verify this compiles under mingw? 	ynQuestion
223	1162947	"Builds now, though shouldn't addrIP, at a minimum, be different depending on the sizeof(unsigned int)?  "	Other
223	1163024	"Well, bitcoin already used unsigned int for IP addresses. Maybe something to look into when we switch to getaddrinfo() and/or IPv6 support. "	Clarify
221	1157857	"After my dnslookup patch, CAddress's constructors changed to take host-order ports as arguments, so no need to do htons() on its argument. "	Statement
221	1157998	"Hmmm...I think pulling this would cause even more complaints, as using a non-default port means no incoming connections (probably a 1 connection per a.b.x.y thing considering I would be running 2 nodes) and (in almost all of my testing) reduced outgoing ones (ie no outgoing connections, but this pro"	Clarify
221	1158022	"Did I screw up?  I thought I got all the htons() spots, and I did test with a couple of -testnet nodes.  And I rebased to current git-head (BlueMatt, are you up-to-date?)  "	ynQuestion
221	1158065	"Ah, yes now it is rebased, I wrote that comment long before I posted it to do some more testing of connections. "	yAnswer
221	1165250	Yes please merge this. Depending on one port is kind of backwards in this age of ISP throttling and blocking. 	Clarify
221	1166078	gavin: my dnslookup patch changed the port argument of CAddress to always take a host-ordered number. Your line 1556 still calls CAddress with a network-ordered port number. 	Clarify
221	1166525	"sipa:  thanks, I didn't realize CAddress had changed. BlueMatt:  I missed a GetDefaultPort() in the UPnP code (fixed, if you use -port UPnP will map that port). "	Clarify
220	1150172	"Nice!  I'll have to find some time to try to break it... rpc.cpp is getting way too big; maybe this would be a good time to start breaking it up into separate .cpp files with related functions (most of this code could be rpcimport.cpp, maybe....)  "	Clarify
220	1160577	Another feature that would be really really handy would be the ability to specify an account for the importprivkey command 	Statement
220	1217795	Discussion is here: http://forum.bitcoin.org/index.php?topic=8091.0 	ynQuestion
220	1400743	"I think this is useful for wallet security (print out a private key, stick in safety deposit box), so prioritizing a rebase for this would be appreciated. "	Clarify
220	1438452	"Rebased against master, a few bugs fixed, and split off into separate source file.  TODO: known wrong balance cached when importing keys "	Other
220	1508261	"Since this uses the ifstream class, it needs to include fstream in headers.h to build in MSVC. "	nAnswer
220	1546463	"I've rebased the code against Matt's newenc, plus some other refactorings. I'll close the pull request until those are merged. "	Clarify
220	1561703	"Ok, reopened because github doesn't seem to track updates to the branch while the pullreq is closed, but this still depends on #403. Also, i'm not convinced how stable the wallet dump format is yet, so I've split the last commit in two, allowing merging of only key import/export. "	Clarify
220	1590491	@lachesis: should be fixed 	Other
220	1721111	"Rebased against master, and now includes a feature-complete 'removeprivkey' call (should remove the private key, the address book entry, redundant transactions, and account information). I don't have time to test this the coming weeks, but if  people want to try it, be my guest. "	Clarify
220	1987636	"rebased against 0.4.0rc1, not tested after rebase "	nAnswer
220	2150228	"@gmaxwell: What part of this functionality constitutes an exploit?  The idea that one should be able to have their own private keys on paper, or on bitbills, or on physical bitcoins, etc. should be something that enhances security, not detracts from it.  Please explain how security is compromised. "	Clarify
220	2160082	"@sipa: Nice mod! @gavinandresen re: testing: Works beautifully on Debian squeeze i686. All added functionality tested and working properly. @casascius: +1 for adding Mini Private Key format. It should be pretty easy to implement. Also, I believe the problem @gmaxwell was addressing is that scammers "	Clarify
220	2160269	"@enmaku,@gmaxwell: I wasn't sure if keeping the private key was the concern here, because bitaddress.org appears to have been created with that concern in mind.  The generator at bitaddress.org is actually quite novel from a security perspective: the generation is entirely client-side and implemente"	Clarify
220	2160324	"@casascius: I think the concern is that while you and I might check the source, 99% of folks won't and eventually one will crop up that phones home and makes a big database of privkeys ripe for exploitation. Realistically though this isn't our problem any more than any other product or service whose"	Clarify
220	2160427	"@enmaku: I share the concern, and am appreciative of the fact that the author of this website makes no attempt to explain what his website does to newbies.  You have to know why you're there and what the number means, otherwise it is just a gibberish generator.  And the part I appreciate the most is"	Clarify
220	2164700	"One more thing... the bigger the block chain gets, the longer importprivkey takes to run, mainly because of the calls to rescan the wallet.  I want this in the main client badly because I use it all the time and believe that keys on paper will help solve the black eye Bitcoin has received over secur"	Clarify
220	2165944	"Keeping a database of all addresses and all outputs to them would be a massive cost that isn't justified for just somewhat faster importing of addresses. Take into account that when more complex scripts are supported, this becomes even harder, as there could be outputs with several possible addresse"	Clarify
220	2166885	"With respect to the massive database of addresses... I could see myself trying to implement that down the road as my familiarity with the code gets better, but possibly in the form of a patch or an option that is turned off by most people because it's only useful to a specific audience: server opera"	Clarify
220	2183678	"OK, here are the goods.  Revised mini private key support that consists of adding two SetSecret functions to CBitcoinSecret to override the ones in its base class  and no modifications anywhere else.  I suppose this is a lot cleaner, and it requires only modifying base58.h and not rpcdump.cpp.      "	Other
220	2183844	What do other people think about support for @casascius' mini private keys? 	Other
220	2183902	"I think it could be a useful standard for short keys, though as a contributor on casascius' deterministic wallet generator I may be a bit biased ;) "	Clarify
220	2184173	"It's a reduction to be sure, but a namespace of 22^58 possible keys is still pretty massive. That's what, about an 8.7e-63 chance of finding a specific collision at 200 MH/s running for a year? Even if a million addressed existed to potentially collide with that's still ~8.7e-57 for a single 5830, a"	Clarify
220	2184308	"The total keyspace is 58^21/2^16 keys: 21 characters with 58 possibilities each, and of this total one key in 65536 will pass the validity check.  It requires (65536*1 + 256*716 + 1)*58^21/2^16 = 2^124.94 SHA256 steps to generate all minikeys. "	nAnswer
220	2184386	"On the other hand, I'm not sure why we are giving up any level of security at all. A 29x29 pixel QR code can encode 56 base36 characters, which is equivalent to a full 289 bits (256 + 33 bits crc) of information. Printing 22 base58 requires a similar number of pixels, i believe. "	Clarify
220	2184416	"First, let me comment on the ""birthday paradox"" argument.  I believe this is a good argument that has been misapplied.  If this were a hashing algorithm that had 21^58 possible outputs for 21^58 possible inputs, then it would definitely apply.  But we are using SHA256.  We are mapping 21^58 possible"	Clarify
220	2184519	"@sipa: Do you suggest that a 56-character private key format that uses only uppercase be implemented instead of, versus in addition to, the 22 character format I propose?  You make a very good point, in that with such a scheme, a smaller QR code becomes possible without any question as to whether a "	Clarify
220	2184526	"* I misunderstood one thing: the 0-byte tests are OR'ed; that means indeed 7 bits of error correction instead of 16. This does mean that if I were to attack, I'd just try those strings that hash to a 0 byte after 1 step first. Otherwise said, I can calculate half of all minikeys by only doing 256*58"	Clarify
220	2184557	"The ec multiply is just slow on our existing cpu implementations.  Gate count wise it's _much_ faster than sha256. (of course, you'll still also need  1x sha256+ripemd160 to get an address)  I think you've missed the point on the birthday paradox issue: I'm not proposing that this somehow makes it e"	Clarify
220	2184564	"@sipa:  If you calculated half of all the minikeys and ignored all the ones that needed 717 rounds to generate, you'd only victimize those who elected to use the ones that passed on the first round.  Those who follow the best practice of only using only the ones that pass on round 717, and not on ro"	Clarify
220	2184680	"@gmaxwell: I used the ""either or"" check so that there would be a means to generate a crappy key if you only need it for a short time for a crappy purpose.  In other words, if you have the means to select a key that passes the 717 check and not the 1st check, then by all means do that.  That means, t"	Clarify
220	2184920	"Example: use PBKDF2 whenever SHA256(code + '?')[0]==0x01, and further, use the next byte (sha256()[1]) to encode the number of iterations needed to derive the key, exponentially (2^n), so that its difficulty is easily scaled (or 2^(n/4) to increase the useful range of choices).  So a code whose sha2"	Clarify
220	2185128	"OK, there it is.  Proof of concept with PBKDF2, at least, at casascius/bitcoin.  For testing purposes, I have commented out the wallet scanning, so all the delay experienced can be attributed to PBKDF2 and not the wallet scanning.  I also got rid of the 717-round stuff.  I haven't used any such code"	Clarify
220	2690578	"@sipa: ""What do other people think about support for @casascius' mini private keys?""  Sounds like an extra feature which will need extra attention. Maybe it should be added as an additional commit on top later and should be further discussed under a separate pull request after the ""straightforward"" "	Clarify
220	2722546	**EDIT: I got rid of the below error by adding an include in bitcoinrpc.cpp for boost/filesystem.hpp**  I get the following error when I try to build the showwallet branch with gcc 4.6:      g++ -c -pthread -Wno-invalid-offsetof -Wformat -g -DNOPCH  -DUSE_SSL -fno-stack-protector -fstack-protector-a	Clarify
220	2722622	Thanks for reporting - an include was missing. It should be fixed now. 	Statement
220	2722857	"Thank *you* for adding this feature. I just tried importing a private key using this version of bitcoind on an offline computer, running Linuxcoin from a USB stick. I am now back in my everyday OS, Ubuntu, and everything seems to have worked fine - and I received no errors when importing the key, al"	Emphasis
220	3204437	I just pulled the other dumpprivkey; is this one now obsolete? 	Statement
220	3204692	"No, this one still contains removeprivkey and dumpwallet/importwallet. I've rebased them against current master now, but I'll close the request until it's more clear what dumpwallet/importwallet should do (there's talk of including addresses, for example). "	Clarify
220	3204699	closing 	Statement
219	2049616	This issue is closed pending any commits or additional commentary. 	ynQuestion
218	1142845	Looks cool and it seems the consensus is/was that this is a good idea. 	Statement
218	1142935	"maybe separating the minimum txout value from the CENT constant would be a good idea as well?  another suggestion: maybe to be more descriptive, TX_FEE should be called MIN_TX_FEE? "	Other
218	1142940	"Looks OK to pull to me, if you can get somebody else to sanity test and bless then I say pull it. "	Clarify
218	1144073	"looks good, compiles and runs; ACK "	Clarify
218	15325063	"This is about the smallest payments permited before triggering required fees, not the amount of the fees... and it is a reduction from 0.01. "	Statement
218	15327802	"If the fee is too high, which it is, bitcoin cannot be a micro payment system anymore. The fee should just disincentivize spammers.  @Gavin: I get SEPA for free, even the mTAN SMS is on the bank. If btc exchange rate is rising further, 0.0005 btc is too dear. "	Clarify
218	15329037	Bitcoin was never a micro-payment system to begin with.  	nAnswer
218	15334447	"But you realize how tremendously important the fee is. In terms of product policy it is ""make or break"" for a potential future micro payment capability. "	Clarify
218	15715634	Does mai77 have a point? I would be interested to hear reasons for not reducing it further. 	Clarify
218	15716129	The transaction fee needs to float; changing it arbitrarily every six months is not the right way to handle it.  	Clarify
218	16004223	"As an interim stopgap solution, the anti-DoS fees could be updated by signed broadcast message. It's conceptually the same as having the fees be set by the software but means fees can be updated outside the release cycle and you don't get failed relays due to version skew.  (yes yes, centralization,"	Clarify
218	16364629	"I see 3 options, -Set it in the code and update with every release. -Have it broadcast via central control. -Set it via user input.  For obvious reasons only one option is in keeping with 'no central control'.  Simple idea.  Two text boxs on the main interface of the client. -One for the current pri"	Clarify
218	16422117	"im talking about user input, not about a 'service' that pipes data into the client behind the scenes. "	Reject
217	4044352	Implemented by the getmemorypool RPC command. 	Statement
216	1129850	This is a feature to prevent the remaining 0.00XXXX from being lost as you can't send that without a 0.01 fee which you can't have if your balance is <0.01 	Clarify
216	1130107	"Yes, but if I have 10.01999999 bitcoins, and am in a pool, I could safely assume that I would be able to make 0.00000001 bitcoins to then have whole cent within a reasonable amount of time. The feature should be to simply not allow you to send a transaction if you have less than 0.01 rather than sen"	Clarify
216	1130591	"You cannot send a coin smaller than 0.01 without paying a transaction fee.  So if you had a 10.019, and you got a 0.001 payment (whoever sent that would have had to pay a fee), you cannot resend that 0.001 payment without paying a 0.01 bitcoin fee.  I know it looks like you have exactly 10.02 BTC in"	Clarify
216	1134090	"In that case, it should notify users that, if they have a balance of 1.01999999 and they send someone 1 BTC with a 0.01 TxFee, they are sending them their subcent balance with it. "	Reject
216	1134810	"Yep, the GUI should definitely notify the user, so lets keep this issue open until that is fixed. "	Clarify
216	4044411	I believe the current Qt GUI behaves correctly now. 	Clarify
216	4091361	@laanwj Does this problem still exist? 	Other
216	4098878	"Nope, bitcoin adds the fee at most, nothing more. "	nAnswer
215	1149420	"ACK. The """" account can already go negative because of simple sends anyway. "	Clarify
215	1149430	ACK 	Clarify
214	1247248	This works great for me as is and is a good first step to fixing this. 	Statement
214	1257837	Can you rebase? This doesn't apply to current tree. 	ynQuestion
214	1259583	Rebased to current tree. 	Statement
214	1319552	"Using this patch on a heavily loaded bitcoind, I am getting quite a few: reservekeyfromkeypool(): read failed from send transactions.  I backed out the patch and so far so good but time will tell. Are you aware of any wallet locking issues with this async code? "	Clarify
214	1339522	Can you rebase with latest version?  With transaction fee 0.0005 ? Why this important pull still not merged with upstream? 	Clarify
214	1364748	"Any updated test results, from heavily loaded bitcoind's? "	ynQuestion
214	1385997	"I'm running this patch on a loaded server. It works fine, but I've seen one problem. If I do ""bitcoind listtransactions"" I get a correct list of transactions. If I do ""bitcoind listtransactions """" 1000"" I get: error: couldn't parse reply from server  "	nAnswer
214	1386030	"Any chance you can look at wireshark output, or some other way of dumping the network traffic, and see what's going on?  Sounds like output was truncated somewhere. "	Clarify
214	1386043	"Yep, I'll do that in a day or so and report back. "	Statement
214	1387943	I don't have the dumps I made handy but I've seen this issue as well. It only seems to happen on large RPC calls like listtransactions. I actually ran across it testing out sipa's showwallet branch for privkey import/export and didn't make the correlation until seeing your comments.  Reverting this 	Clarify
214	1388936	Thanks for the testing guys. I'll look into this issue. 	Clarify
214	1393618	"Some more info. It also happens on RPC requests *receiving* a lot of data. Eg, sipa's importwallet. The ""alot"" seems to be around the 1k boundary or so from my very brief testing. "	Clarify
214	1439471	I'm willing to pay to get this fixed and working in production use.  Also looking for a keep-alive solution which would reuse connections to bitcoind. 	Clarify
214	1458085	"See comment above. A possible fix: http://pastie.org/private/d04wwgdsk881yl70k1g  I'm not familiar with boost though, so there might very well be a better solution. "	Clarify
214	1491109	"If your plan is to optimize the RPC code, you're kind of barking up the wrong tree. The socket I/O is only about 3% of the load coming from the RPC code. If you just want it to handle more than one connection at a time and keepalives, just dispatching the RPC to a thread (and fixing the protocol han"	Clarify
214	1491134	"@JoelKatz:  you missed the point.  This is not an optimization, but a big step towards correcting a major design flaw.  The current RPC code executes HTTP requests in order, in a FIFO queue.  You can find examples of this logic in ""My First TCP Server"" style code examples, but never in any productio"	Clarify
214	1491258	"As I said, that issue is more easily solved by simply dispatching the RPC to a thread and making the trivial fixes to the keepalive logic. There aren't enough RPC connections, and the operation order is always accept/read/write, so you don't get any benefit from asynchronous I/O. In contrast, in the"	Clarify
214	1491260	"One thread per RPC connection is unscalable in many modern workloads.  That is also potentially DoS'able, if you're not careful. "	Reject
214	1491291	"I don't think many people, if any, expose their bitcoin RPC connections to the world. So I don't think the DoS issue is particularly important. I guess you could argue that they don't because they can't, and if they could, they might. But I think most people run a bitcoin client on each machine that"	Clarify
214	1577433	Any rebase / update for current tree? 	ynQuestion
214	2247130	"The pull has become unmergeable (without conflicts), and will be closed in 15 days from this message if action is not taken.  To prevent closure, kindly rebase the pull to merge cleanly with the current codebase. If a time extension is needed, please respond to this comment or contact QA@BitcoinTest"	Clarify
214	2249488	"Sorry guys, I don't have the time to maintain this pull indefinitely. Anyone please feel free to rebase and maintain yourself. I think it's an important patch. "	Clarify
214	2464974	Closed pending rebase / additional commentary. The rebase label has been applied. 	Clarify
213	1125080	"This is not correct.  The point of fUseUPnP is that it should always evaluate to false if upnp is absent.  That puts the #ifdef in a single location, rather than requiring an ifdef at every site, crapping up the code.  "	Clarify
213	1125101	"ah -- perhaps ths change should actually be ""#ifdef"", not ""#if""?  It looks like fUseUPnP is only defined if USE_UPNP is defined -- quoting main.cpp: <pre> #ifdef USE_UPNP #if USE_UPNP int fUseUPnP = true; #else int fUseUPnP = false; #endif #endif </pre> ...though it's declared unconditionally in mai"	Other
213	1125228	"Probably should be, though it doesn't cause issues unless you have stale outputs in obj/* "	nAnswer
213	1125332	"OK, this latest commit reverts my original changes, and instead groups the ""USE_UPNP undefined"" situation in with ""USE_UPNP=0"" situation, for defining fUseUPnP.  > Probably should be, though it doesn't cause issues unless you have stale outputs in obj/*  It actually did cause issues for me, the firs"	Clarify
213	1125446	What compiler version?  The only ones I've ever seen don't cause problems there.  Did you not start to compile with USE_UPNP=0/1 then stop and go back and compile with USE_UPNP= 	Reject
213	1125661	"> Did you not start to compile with USE_UPNP=0/1 then stop and go back and compile with USE_UPNP=  Sorry, yeah -- you're totally right.  I thought I was building from scratch, but I think what happened was:  * I initially built using stock bitcoin source (no makefile tweaks) * That failed since I do"	Clarify
213	1125766	"Well, it doesn't matter that much as the autotools stuff should fix all this. "	Emphasis
213	1149373	"Can someone roll these into a single commit, please?  It is ready to pull, otherwise.  We prefer not to pull in situations where we're pulling ""commit A, now commit B fixes commit A"" type situations, to avoid cluttering the upstream bitcoin git history. "	Clarify
213	1149432	"I can do that, sure - should I just do that as a fresh commit & fresh pull request, then? (sorry, I'm new to github) "	Other
213	1149438	"Did it for you :), fUseUPnPfix branch, ACK. "	Statement
213	1149440	"ah, thanks! :) "	Emphasis
213	1149472	pulled bluematt's fix 	whQuestion
212	1125078	This issue is fixed by the changes in this pull request: https://github.com/bitcoin/bitcoin/pull/213 	nAnswer
212	1149482	This has now been resolved in issue #213. 	Clarify
209	3269558	Perhaps there's a way to compare the two systems' hostnames? 	whQuestion
209	3290333	"@midnightmagic: But if the host is remote/tunneled, wouldn't it make sense to use a fully qualified path in the first place?  I think, in general, with this API you always want to send a fully qualified path to make sure the backup ends up in the right place.   Maybe the API should be similarly chan"	Clarify
209	4046031	"What about retuning a serialized version of the snapshot of wallet.dat through RPC, and let the RPC client store it somewhere? "	whQuestion
209	4046051	That opens up a whole new level of security issues. 	Clarify
209	4059408	"Would it make a large difference, security-wise? You can already request all the private keys through RPC isn't it? "	Clarify
209	4060908	Forgot that was merged. Nevermind. 	Statement
209	5016814	Sending more than a few megabytes over RPC becomes a problem though - and there are certainly wallets that large out there. 	Other
209	5098236	Agreed.  What are we going to do here? 	whQuestion
209	5586301	"Closing.  Please either  1) Update code to require full pathname, or  2) Update code to send entire wallet via RPC, which @sipa admits is a mostly-rewrite "	Clarify
208	1122013	i suck at github. 	Statement
207	1301526	Same with 64 bit on Ubuntu 11.04. 	Statement
207	1302028	Just got that error on 64 bit Ubuntu 2.6.32-32-generic 	Statement
207	1304391	"All kinds of similar errors pop up if you are running the 32-bit version on 64-bit Ubuntu, Im assuming you are all running the right version for you machines? "	whQuestion
207	1304713	"The 32 bit version does not run (core dump) on my machine.  I just turned off the errors and the gui does seem to work.  On Sun, Jun 5, 2011 at 8:34 AM, TheBlueMatt <reply@reply.github.com> wrote: > All kinds of similar errors pop up if you are running the 32-bit version on 64-bit Ubuntu, Im assumin"	Clarify
207	1304746	"The 32 bit version does not run (core dump) on my machine. You shouldnt be trying the 32-bit version on a 64-bit machine.  And you didn't answer my question, do you see these errors on the 64-bit version as well, or only when you are running the wrong binary? "	Clarify
207	1305036	"According to your first comment, you are on a 64-bit machine, correct? When you run the 32-bit binary, it is expected that it will not work.  Thus what you are saying is not a bug. My question is...when you run the proper (ie 64-bit) binary, does the same problem present itself? "	Clarify
207	1305252	"You are on the bug-tracking system.  Anyway, sorry for the confusion, just wanted to make sure as it was not clear from the first couple of posts.  Can you give any more info on your system, as I dont see this error on a clean Ubuntu LiveCD.  Are you running Kubuntu or some other flavor, what packag"	Clarify
207	2352660	WX is now deprecated. Please update this thread if the problem persists in the QT build. 	Statement
205	1120477	"Good idea.  Can you squash the 'remove debugging printf"" commit into the main commit?  (git rebase -i 5ca978c and then git push, I think) "	Clarify
205	1120722	"Okay, I think I managed that :) "	Statement
205	1121430	ACK 	Clarify
204	1187886	Can you please rebase and re-open this pull request?  Thanks. 	ynQuestion
203	1120096	"I see you took into consideration the issue of the password/key being swapped out but didn't actually write any code to prevent it. You should use mlock (unix) or VirtualLock (windows) to prevent memory from being swapped (the correct way of doing this is: allocate, mlock/VirtualLock, use the memory"	Clarify
203	1120108	"Yea the whole ramdump to see password/key is pretty much impossible to prevent no matter what you do, so I'm really not going to try to fight it.  Though, I'm planning to add more security to the encryption later, but having it now really isn't worth it for several reasons (see the original forum th"	Clarify
203	1120196	"As a side note, preventing any kind of key leakage is pretty much impossible in C++ when the user is entering the key in wx.  If nothing else, the current value of the password dialog might end up in swap.  I'll try to add a bunch of memlock's and memset/fills tomorrow but I don't think its possible"	Clarify
203	1121346	"I guess so, unless we also patch wx in the process. "	Statement
203	1122111	"Now with more mlock().  Note I made a conscious decision here that I only bother to keep the actual password entered by the user out of memory/swap as much as possible, not the derived key or the private keys themselves.  I have a separate branch which encrypts private keys in memory (much easier th"	Clarify
203	1122114	"Note that any password longer than 100 characters will only have the first 100 mlock()d, but if you can't derive the key without all of the password, so I'm not concerned. "	Clarify
203	1122137	maybe adding some comments about this might help (eventually also mentioning that currently there's no way to stop another process from peeking and that we don't deal with hibernate-to-disk) 	Clarify
203	1129745	"Now with more comments to clarify the purpose of mlock()s and such.   Now the question: I have a WIP branch which decrypts private keys only at spend-time (or it will in a couple days).  Still a couple things to tighten down, but the question is which would rather be seen in bitcoin? https://github."	Clarify
203	1131896	"well, keeping the keys encrypted in ram as a method to prevent other processes from reading it is pretty useless unless we manage to lock out all other processes from accessing our memory. reasking the password at spending-time is a good opt-in setting, but doesn't require keeping the keys encrypted"	Clarify
203	1197019	Superseded by #232 closed. 	System
202	1116977	Now with less USE_UPNP removal. 	Statement
202	1116979	FYI These are syscalls and system lib deps that shoud be available to any linux distro running 2.6.32+. 	Reject
202	1118922	Can you create a forum thread about this? 	whQuestion
202	1119294	Done: http://www.bitcoin.org/smf/index.php?topic=7582.0 	ynQuestion
202	1573730	Isn't it possible to use setcap to choose exactly which capabilities shall be kept and which shall be drop ? What's the point of modifying them from bitcoin code ? 	Clarify
202	1577455	"I just don't see many other security-related/crypto-related programs using this, and guarding against running as root is really tilting at windmills.  There is a long list of dumb things you should not do, such as run wallet software as root, and I think it's low on the priority list, as it does not"	Clarify
202	1612708	"This has nothing to do with guarding against running as root. That is just a side effect?!  Also, quite a bit of software uses these mechanisms. For instance: (off the top of my head) bind uses it. The entirety of the priv escalation code in the kernel (setuid binary processing, etc) uses it. The bo"	Clarify
201	1116965	Did not mean to commit that removal of USE_UPNP:=0 my bad. 	Statement
200	1116903	See issue #147 and #128 for resolution. 	Statement
200	1117074	closed per BlueMatt req 	Statement
199	1115449	How did you test that this does the right thing through a block split/reorg? 	whQuestion
199	1115931	"I didn't, since I'm not sure how I could create such a situation with the amount of computing power I have.  I believe it will do the right thing since I've read the CBlockLocator sources. "	nAnswer
199	1116108	"You should be able to pretty easily simulate block splits by setting up a small ""testnet-in-a-box"" network -- see https://sourceforge.net/projects/bitcoin/files/Bitcoin/testnet-in-a-box/  Process would be something like:  Send a transaction or three while generating on testnet-in-a-box.  Verify that"	Clarify
199	1118931	"CMerkleTx's (and by extension CWalletTx's) support looking up in which block they are (see CMerkleTx::GetDepthInMainChain(CBlockIndex* &)). I believe it is better to loop over all wallet transactions, and filter them by looking up where they are in the main chain, than to loop over the whole block c"	Clarify
199	1237464	"Gavin, I did the test today and the command does do what I expect.  This was after modifying the command's implementation per sipa's suggestion. "	Clarify
199	1299420	"Patched 322rc4 with this the other day. Seems to be working, great feature. Merge :D "	nAnswer
199	1452128	"Might be useful to have block id against each txn, not just the last block id. For example, perhaps I'm searching for all txn's with confirmations > n. If I find some txn's with confirmations <= n, I have to note them down in the sync'ed database and recheck them later. But if we got block id's back"	Clarify
199	1458399	"@pixelglow: I had that in at some point and Gavin asked that I remove it.  :)  But it's a one line change to add it.  The transactions should be listed sorted by block.  So in terms of the time that the blocks were created, you can infer that from the time the transaction happened.  If all you care "	Clarify
199	1460011	"I suppose there are two ways of adding block id's for txn's. You could tag each txn with the block id e.g.[ { txid: 1, block: abc }, {txid: 2, block: abc} ... ] but since there are multiple txn per block and you are already sorted by block order you can do a more normalized { block: abc; txns: [ { t"	Clarify
199	1467210	"Block chain re-orgs change what blocks a given transaction is in, which is why I'm dead-set against putting them in transaction information.  Transactions already have confirmations, which tells you how far back in the best-block-chain to look for the block that contains that transaction.  "	Clarify
199	1468848	"I'm thinking that a ""minimum confirmations"" parameter would solve this nicely.  If you only want transactions with six confirmations or more, you call ""listsinceblock (block-id) 6"" and all of the recent transactions with 6+ confirmations would be reported.  The ""lastblock"" property on the result obj"	Clarify
199	1471413	"@cdhowie that is an excellent idea and solves exactly the issue I have with confirmations. I can't see any other reason why someone would need to look at earlier blocks than the last, other than checking confirmations. (But then again, I'm a newbie when it comes to bitcoin :-) ). "	Clarify
199	1514952	"I've implemented the requested change; the second parameter specifies the depth of the block you want to obtain as the ""lastblock"" return property.  The default of 1 will return the latest block ID, while 2 will return the second-latest block ID, and so on.  The command now outputs transactions with"	Clarify
199	1593253	I've integrated this into my bitcoin exchange (currently only as a JSON API to the backend) and it works quite well in replaying transactions into the PostgreSQL backend. Thanks. Can't wait to see this in the mainline.  http://forum.bitcoin.org/index.php?topic=29057.0 	Clarify
198	1111967	Forum thread: http://www.bitcoin.org/smf/index.php?topic=7421 	ynQuestion
198	1422247	"Made it work with the re-organized CWallet codebase... ... but I'm not 100% happy with it.  I'm not sure it properly handles block chain re-orgs and dependent orphan transactions. Would be nice to write some tests to exercise those edge cases, and figure out what it SHOULD do in those cases. "	Clarify
198	1424215	"I believe it will only do the callback for newly arriving blocks when doing a reorganisation, and not for replacements of older blocks (didn't test it though). If that's not what you want, the call to monitorBlock() should go in CBlock::ConnectBlock() (called for each block that's being added to the"	Clarify
198	2197996	"Closing this for now; code is still in my github tree, but I'm working on what I think are higher-priority things right now. "	Statement
196	1108453	I'm getting kind of tired of explaining this.  USE_UPNP=1 means UPnP is on by default.  USE_UPNP=0 means UPnP is compiled in and off by default.  If you undefine USE_UPNP by building with USE_UPNP=  UPnP is not compiled in any the errors go away.  Please do a bit of searching before submitting bug/p	nAnswer
196	1110047	"OK, thanks for the clarification! Now if you pull my revised patch, people will get this clarification in `build-unix.txt`. "	Emphasis
196	1110390	Now that is a great idea.  (and here I was thinking that was already in there) sorry for going off on you. 	Statement
195	1112323	Forum thread: http://www.bitcoin.org/smf/index.php?topic=7330.0 	ynQuestion
195	1577459	"Needs an update/rebase, since we're wanting wallet import/export? "	Other
195	2198249	"Needs an update indeed, I'll close the request until then. "	nAnswer
193	1105474	"ACK, looks good "	Other
193	1106041	"Compiles, works, and doesn't seem to touch any non-GUI code. "	nAnswer
192	1093984	"This is a recent rough draft, but it needs improvement.  Think about the object structure a bit.  You want a ""CAddress factory"", that will create one or more CAddress's from a DNS lookup.  Supporting a multiple-address lookup from *inside* a singleton address object is awkward, because DNS lookups h"	Clarify
192	1099269	"I agree, actually. I moved the lookup code to a NameLookup function that creates a CAddress or a vector of those, and is used in the (single-address only) lookup version of the CAddress constructor, for convenience. "	Statement
192	1106091	"ACK, thanks for revising "	Emphasis
192	1110829	Forum thread http://www.bitcoin.org/smf/index.php?topic=7123.0  	ynQuestion
192	1110871	"My finger was hovering over the ""Merge pull request"" button, but I found a last minute issue.  Eventually, we do want to support IPv6.  Satoshi reserved space for it in the P2P protocol address storage area, and it will be needed in years to come, to connect some clients.  As such, please separate h"	Clarify
192	1110891	"I actually started writing this patch by using getaddrinfo, since its interface is much cleaner and supports seamless upgrading to IPv6. Not knowing what the compatibility of that is with other operating systems, i sticked to gethostbyname.  Considering IPv6 hostnames, I would suggest first trying t"	Clarify
192	1133776	Added string+port number constructors. 	Clarify
192	1133800	ACK 	Clarify
191	1090862	proposed patch is http://dpaste.org/OwYT/ 	System
191	1099241	"I've tried to compile bitcoin with your patch applied, but got an error  g++ -c -O2 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -DNOPCH -DFOURWAYSSE2 -DUSE_SSL -fPIC -I/usr/lib/wx/include/gtk2-unicode-2.9 -I/usr/include/wx-2.9 -D_FILE_OFFSET_BITS=64 -DWXUSINGDLL -D__WXGTK__ -pthread -DGUI -o obj"	Clarify
191	3002151	"Detect128BitSSE2 and CallCPUID have been removed from the bitcoin source, closing this issue "	Statement
190	1082553	I've done a bit of looking around and see I have to update my strings for translation a bit. Will post again when that's done. 	Clarify
190	1083214	Fixed. Please take a look. 	Statement
190	1083239	Great idea!  Looks good to me.  	Statement
189	3002170	"This was implemented with the merge of bitcoin-qt, closing issue "	Statement
188	1246691	"+1 (and why not a wallet as a directory of addresses, or a single plain text file, so we can recreate, merge, split wallets very easily, without special tools) "	Clarify
188	2465357	Please see https://github.com/bitcoin/bitcoin/issues/68 and continue the discussion there. 	Statement
187	1071186	Stripping binaries now. 	Statement
187	1071197	Lurking here. 	Statement
185	1050927	"This is on Debian Squeeze, with libdb4.7 and build with USE_UPNP undefined "	Statement
185	1051225	"ArtForz was able to track this down further: The problem is that GetAccountAddress() in rpc.cpp starts an atomic db operation with walletdb.TxnBegin(); If may then happen, that GetKeyFromKeyPool() is called and when the key pool is not topped up, new keys will be generated and written to the databas"	Clarify
185	1923391	Seems to be fixed. I can't reproduce it anymore. 	Reject
184	1050304	"hm, I can't reproduce this anymore... maybe I didn't do a clean compile. I'll close this, sorry for the noise. "	nAnswer
183	1051317	"Can you start a forum thread about this?  There was some concern about possible attacks revealing private keys if the attacker can send arbitrary data to be signed.  Also some nits:  indentation looks messed up on the git diff, and isn't there a better way to get a string into a vector<unsigned char"	Other
183	1052498	Forum thread is available here : http://www.bitcoin.org/smf/index.php?topic=6428.0 	ynQuestion
183	1094397	"Can you squash the 4 commits into one please?  It'll make the commit history cleaner. (other than that, I agree this is a cool new feature and is ready to be pulled) "	Clarify
183	1106251	"ACK, once rebased as Gavin requested "	Emphasis
183	1106847	Also: consensus on the forums seems to be that making the padding:   address+padding+message  ... wouldn't hurt. 	Statement
183	1111528	Here is the rebased commit plus address used as padding (cool feature the rebase/squash commands :p). 	Clarify
183	1115733	"Nice work, khalahan; thanks!  I am not familiar with the JSON RPC protocol, so this may be a silly question: is it necessary for the server to echo some of the parameters back to the caller? (e.g. `address` when signing and `pubkey` when verifying.)  > $ bitcoind signmessage **1GsDU...** hello {    "	Clarify
183	1118947	"The pubkey can indeed not be inferred from the address. I suggested on the forum to encode the pubkey in the signature output, so the verifymessage interface can take an address. (see http://www.bitcoin.org/smf/index.php?topic=6428.msg108668#msg108668) "	nAnswer
183	1202304	amiryal > there is no real need to echo some of the input parameters.  Should i remove duplicates ?  sipa > i replied on the forum 	Statement
183	1629731	"The pubkey can be inferred from the address plus the signature value, however.  "	nAnswer
183	1764211	I resurrected discussion on forum thread:  https://bitcointalk.org/index.php?topic=6428.msg443377#msg443377 	Statement
183	2241956	"Closing, sipa has a more refined version. "	Statement
182	1303002	"Does this work ""out-of-the-box"" on Windows/Mac/Linux in Firefox/Chrome and Safari(mac) and IE(windows) ?  Does it do something reasonable if you click on a bitcoin URI if you don't happen to have bitcoin running?  And is there a solution for bitcoin URIs that works if you use an online wallet servic"	Clarify
182	1303020	"Windows? yes, should work in any app which uses Window's native uri mapping, that means safari (win) IE, Firefox, etc, etc, etc. Linux? That is always done at the packaging level.  For this to work, Bitcoin has to be packaged for the distro (as URI mapping depends on the distro).  If wx2.8 gets merg"	Clarify
182	1309314	I did a bit more research on doing URIs in OSX as I would like to see this merged some time and there is no way to handle URI/Ls in OSX except by using their native APIs (they dont just pass the URL as a parameter like every other OS) or some kind of wrapper script which handles URIs and opens Bitco	Clarify
182	2292955	Implemented in bitcoin-qt 	Statement
181	1083241	I've been testing a similar change as part of a larger (still unresolved) bugfix.  	Clarify
180	1047442	"Small aesthetical error:      checking for wxWidgets static library... no     checking if compiling with debugging symbols... no     no     configure: creating ./config.status  The name of the generated binary seems to always be bitcoind, whether or not a GUI is included. If you're going for the ""on"	Clarify
180	1049848	"hi sipa,  i've investigated the issue behind double binary build: bitcoin and bitcoind the solution to it becomes groovy, to the point that makes me wonder about changing this naming scheme.  long story short: if we keep this, then all code in src/ will be compiled twice by make, with and without #d"	Clarify
180	1051099	"Several things: 1.  If you are making a pull request, you might as well just git push -f to overwrite the old commits with new ones instead of making new pull requests all the time.  Github will change the pull request accordingly (unless you change the branch to match master, at which point Github "	Clarify
180	1052327	" hi TheBlueMatt,  On Sun, 24 Apr 2011, TheBlueMatt wrote:  > 1.  If you are making a pull request, you might as well just git > push -f to overwrite the old commits with new ones instead of making > new pull requests all the time.  wow! i didn't knew that and it saves me quite some time clicking aro"	Clarify
180	1052374	"speaking of which, i've just noticed the 'distcheck' target fails to compile.  that compilation target actually is there to facilitate tar.gz releases, but also to verify that the autotools packaging is well portable and working in all situations... so i'm having a look to fix that now in the next c"	Clarify
180	1052590	Pull request is now rebased to an acceptable state. 	Statement
180	1106370	"Looks great!  One final blocker:  cryptopp should not be built using the libtool machinery.  All that accomplishes is making it slow, and creating an annoying build process where ""make -s"" does not work properly.  All references to libtool should be removed, and cryptopp should be built via noinst_L"	Clarify
180	1124684	"I support this re-org; jgarzik, can you do the pull when you're happy?  The READMEs and build-*.txts should mention running autoreconf -i to bootstrap if you're building from git. "	Clarify
180	1124697	"The re-org should be pulled, but autotools isnt quite ready...I was hoping (and jaromil seemed to indicate that he would work on) support for mingw cross compiling before pull (discussed after pull request was submitted).  And the whole ridiculous sed action required now (4870f7d) is not really pull"	Clarify
180	1124735	"NAK the mingw stuff from Matt -- it is absolutely not needed.  That stuff varies from system to system, and hardcoding it into configure _breaks_ platforms other than the one Matt's using.  @Gavin:  can do "	nAnswer
180	1124803	"@jgarzik Isnt that the point of autotools, it finds the stuff to include and link and uses that.  As I said, the stuff in this pull request from my repo really should never be pulled (because of what you just said) "	Clarify
180	1124863	"You provide OS-specific details to a configure script via environment variables (or occasionally, command line arguments).  The script takes it from there.  That's how mingw32-configure works.  It sets the configure variables correctly for the limited set of systems it knows about.  configure alread"	Clarify
180	1125172	source tree reorg pulled 	Statement
180	1126304	"you did not pull, you actually did a ""manual merge""  i'll past here my reaction on irc:   22:59  <jaromil> oh, did you merged autotools? 23:00  <jaromil> jgarzik: i'd prefer to actually appear in the git tree with my commits. why a manual merge? 23:01  <jaromil> i did separated both commits as indic"	Clarify
180	1126416	"@jaromil Your commit was merged. https://github.com/bitcoin/bitcoin/commit/84c3fb07b0b8199c7f85c5de280e7100bad0786f is your commit in the repo.  Its the same pull methods used in every other pull, the merge shows up as done by jgarzik, but your commit is back in the repo by its original date. "	Clarify
180	1126593	 It takes two seconds to verify that commit 84c3fb07b0b8199c7f85c5de280e7100bad0786f is in bitcoin/bitcoin.git.  Maybe three.   	nAnswer
180	1129705	"i was tired and almost going to sleep when i saw your merge message, apologies for my abrupt reaction. ultimately i care that all the documentation so far written in the commit messages goes into history as it has been reviewed here, else this huge movement of files will look too suspicious. i did n"	Clarify
180	1136543	seems now everything is fixed  i'm rebasing the second commit of this branch into something presentable    	Clarify
180	1260322	"updated to apply on current HEAD  updated to add BlueMatt's fixes from https://github.com/TheBlueMatt/bitcoin/commit/1852b89adbaae4d3f6aea1011a7b06217c832556  I can rebase it into one commit, or leave like this. "	nAnswer
180	1400747	Looking for confirmation that this builds w/ mingw32 and OSX...  	Reject
180	1409841	"It does build. i'm also asking more people to test it.  meanwhile this patch was contributed to fix build issues on BSD/OSX  https://github.com/jaromil/bitcoin/commit/086b93fff425d95b3c2e461901f22a2912cbc663  i can rebase it into this if you agree, yet i'm asking because this patch changes actual bi"	Clarify
180	1410128	"I would like to see that patch as a separate commit, in this autotools pull.  Makes it easier to look through, but the patch has my ACK. "	Clarify
180	1448987	OSX Broken? (10.6.7 xcode 4):  mith@dair:0:~/src/bitcoin$ port list autoconf automake miniupnpc boost wxWidgets-devel autoconf                       @2.68           devel/autoconf automake                       @1.11.1         devel/automake miniupnpc                      @1.5            net/miniupn	Clarify
180	1448999	Get the same thing running with autoconf 2.61 out of /usr/bin instead of macports. 	Clarify
180	1449141	"Yeah, it fails on Fedora as well, missing the WX macros and similar errors to OSX "	Emphasis
180	1449677	"BlueMatt said use autoreconf -i; and that seems to work. If the mechanism to rebuild is not just ""autoconf"" it needs to be stuck into an autogen.sh / autoget.bat please. "	Clarify
180	1449706	"You also seem to have reverted all my stuff that made MinGW work, its not in the current code and wont compile. "	nAnswer
180	1450153	Also the resultant distclean target after autoconf/make does not remove the autoconf output.  Can that be fixed? 	Clarify
180	1450406	"@jrmithdobbs:  that last is standard.  you want AM_MAINTAINER_MODE + ""make maintainer-clean"" (or ""make maintainerclean"", I forget)  ""distclean"" is only supposed to return you to the state of a freshly-unpacked dist tarball "	Clarify
180	3224097	"Closing as outdated.  We __do__ want an autotools configury of some sort, but with Qt the picture changed a bit.  So, ACK'ing the concept but NAK'ing the current pull. "	Clarify
180	3247100	"On Tue, 20 Dec 2011, Jeff Garzik wrote:  > Closing as outdated. >  > We __do__ want an autotools configury of some sort, but with Qt the > picture changed a bit. >  > So, ACK'ing the concept but NAK'ing the current pull.  IMHO the problem with this pull request has been waiting too much to merge it "	Clarify
178	1083322	"The problem is mentioned here http://wiki.debian.org/qa.debian.org/FTBFS#A2009-11-02Packagesfailingbecausebinutils-gold.2BAC8-indirectlinking, and I confirm that adding -lpthread makes it work with both ld and gold. "	nAnswer
177	1041189	"One important practice for git...  When everything is just a single commit, it is difficult to review, to see if the submittor has inserted a tiny bit of malicious code, in all that code movement. I'm __not__ accusing you of this, just speaking generally.  So, this commit should really be two, eithe"	Clarify
177	1041239	"sry i forgot to mention: for building run first 'autoreconf -i' and then the usual ./configure (--enable-upnp recommended!)  sure, ok for ""convert bitcoin build system to autotools""  re: multiple commits, we have now two branches: the one with the FULL history of my activity in autotools, and this o"	Clarify
177	1041821	"i'm rounding up on devs comments, then will break this commit in two parts, following these recommendations:  23:26  <jgarzik> jaromil: and each git commit needs to be buildable on its own, in order to keep 'git bisect' working.  sometimes that means an intermediate step requires a bit of extra work"	Clarify
177	1047093	"ok, closing this and re-filing another pull request with two commit steps, as jgarzik suggested:  a) move files around under old build system, verify that it builds and works under old build system b) convert to autotools "	Clarify
176	1037033	Forum thread here: https://www.bitcoin.org/smf/index.php?topic=6205.0 	ynQuestion
175	1037401	"What is the issue?  -DUSE_UPNP=0 is correct, that means ""compile in support for UPNP but do not turn it on by default"" "	Reject
175	1037889	"My mistake. I was assuming its purpose was defining whether to compile in UPNP or not, and apparently it does do that as well. I built bitcoind with and without UPNP using the makefile ifeq I specified above and setting 1/0 respectively which I could have just commented it out instead. Sorry for tha"	Reject
174	1034690	"Is there a reason you didn't use the HTTP methods in rpc.cpp?  bitcoin already knows how to make http requests.  Also, fetching bitcoin addresses via http is insecure-- you're vulnerable to a man-in-the-middle attack.  Fetching securely means https and (probably) shipping bitcoin with certificate au"	Clarify
174	1035641	"I guess methods in rcp wasn't available in the GUI (because they are not used by the GUI, right ?), so I inspired myself by the GetMyExternalIP function (in net.cpp) that retreive remote IP with a GET request. I'll have a look at them (I need a GET request with an uri and Host, I may create one so ?"	Clarify
174	1036719	"No, falling back on http is a huge security risk (MITM attackers can easily block https). "	nAnswer
174	1038827	"A bitcoin user is vulnerable to a MITM attack because of DNS resolution not using DNSSEC (irc connections, dnsseed and dyndns) and TCP connections to ip not using SSL verifiable certificates. Once he controls all connections... Possibilities for the attacker are : - make the user believe he has been"	Clarify
174	1041618	- Use of rpc methods the read the request - use of HTTPS only to fetch address - using .json instead of .txt 	Clarify
174	1045543	Do you have any additional comment on this pull request ? 	ynQuestion
174	1045564	"Did you figure out how to get SSL to verify the identity of the server?  Just using SSL isn't sufficient to prevent MITM attacks, SSL has to actually verify that the server you're talking to presents a valid certificate. "	nAnswer
174	1047247	"TheBlueMatt > the port here was not used, but i've cleaned it up, thanks.  gavinandresen > this new patch checks certificate against locales certificates. It is currently configured only for linux by searching in '/etc/ssl/certs'. I don't know if other OS have a common path for certificates or if we"	Clarify
174	1110897	"The only remaining issue with this change, IMO, is privacy.  This change enables easier external observation of the precise moment when a bitcoin user is making a transaction.  As such, these lookups should be disabled by default, and proactively enabled by the user via command line switch or GUI op"	Clarify
174	1111049	"I don't know what kind of work would be needed, but it would be really nice to get this to work on OSX and/or Win32 "	Statement
174	1111125	Include a list of root certificates with bitcoin i guess. Is-it an acceptable situation ? 	ynQuestion
174	1111173	"That is what many browsers do, but I don't think we want to support that, do we? eg, Mozilla had to ship an update to firefox to blacklist certificates when one CA was compromised recently. "	Statement
174	2390768	"There's no secure way of doing this. If someone wants to send bitcoins they have to have an address to send to. It's their problem how to verify that the address is correct. The bitcoin client shouldn't try to do this because it's too hard and when it is compromised, it will be blamed. I'm reminded "	Clarify
173	1033417	Forum discussion: http://www.bitcoin.org/smf/index.php?topic=6178 	ynQuestion
172	5763861	"Do you know if there is any applicable workaround ?  I have a case where I imported a lot of private keys into a wallet, and there's starting to be a very significant discrepancy between what `getbalance` and what `getbalance '*'` report, I suspect that this issue might be somehow related as the dif"	Clarify
172	28302942	"Was fixed by #2272 a long time ago, closing "	Other
171	1029710	"That's what the gettransaction API call is for (to get the details of the transaction).  So you'd:  bitcoind send  if no error, then bitcoind gettransaction {txid}  "	Statement
171	1033105	I think this operation (display of the amount of fees) should be atomized into one request with sendtoaddress. Otherwise it is not clear what to do if the transaction took place but then gettransaction failed for any reason and this greatly complicates everything: need to create a database with tran	Clarify
170	1027912	"Low-priority transactions (where priority is determined by bitcoin amount and age of the inputs) require a fee.  You sent a very-small (0.03 BTC) transaction that came from a few-hours-old transaction.  That is by design, to discourage sending lots of very-small transactions (also known as ""penny fl"	Clarify
170	1035230	"The pop-up display when you want to send such low priority transaction, however, is very misleading. It says ""This is an oversized transaction that requires a transaction fee"". I spent quite some time (and had to look into the source) to understand why such small size transaction is said to be overs"	Clarify
170	1037413	"I changed the message to:  This transaction requires a transaction fee of at least 0.0N because of its amount, complexity, or use of recently received funds  ... and I'll recompile to pick up this change for the final 0.3.21 release.  "	Clarify
169	1038777	"12:14 < sipa> genjix: i mean even further, it should be clear that you're able to have a name-lookup service without any ability to log in on a server, fiddle with                public keys, know that it uses rsa signatures, ...  FYI there are several parts to my branch:  - It's a simple name looku"	Clarify
169	1038802	"more info here: http://www.bitcoin.org/smf/index.php?topic=5938.msg91331  this patch also adds libcurl as a required library (good IMHO, and useful for more things) "	Other
169	1110912	"I do not have any specific technical objection, but I just don't think this belongs in bitcoind.  It does not seem like a feature that would be used by more than a few people, especially when considering https://github.com/bitcoin/bitcoin/pull/174 may get merged (I think it will, anyway). "	Clarify
169	1112436	"Why? My branch has much more technical depth than that other one. It's also written cleaner and much easier to extend. The other branch is simply looking up an address, whereas I have signing the requests and an example server for setting your address written in PHP. "	Clarify
169	1112542	"IMO there is not enough security in something like this.  It suffers from the same problem that IP-based transactions do, namely that it is subject to MITM attacks.  This approach is further subject to DNS poisoning attacks.  If this is going to work securely, the request must be made over HTTPS, an"	Clarify
169	1150355	It's already using HTTPS. 	Statement
169	1468887	"> It's already using HTTPS.  Are you sure about that?  I see this:      string strRequestUrl = strDomain + ""/getaddress/?nickname="" + pszEncodedNick;  And strDomain does not start with `https://`.  I don't see any curl option forcing HTTPS either. "	Clarify
169	1875834	"I agree that this sort of endpoint-to-address discovery should _not_ be in bitcoind.  There are several big problems:  1) Lack of widely-deployed DNSSEC means this is hard to secure 2) It doesn't use SSL, and probably shouldn't use HTTP(S) at all.  DNS SRV or TXT records would be better for such a s"	Clarify
169	2969665	No consensus that this is the right way to to; I'm going to close.  	nAnswer
168	1433025	I'm going to close; doesn't seem to be any interest in this.  	nAnswer
167	1024681	Closing. Should have discussed this on forum first. 	Statement
166	1022135	"Hmm, smells like a wxWidgets-on-10.7 issue.  Any Mac wxWidgets experts in the house? "	ynQuestion
166	1765312	This still happening with the released OS X 10.7? 	ynQuestion
166	1765567	"No, it's been running fine for me.  I'll close, thanks. "	nAnswer
164	1014638	"There was a privacy concern raised before about the servers being able to monitor who pushes addresses and who fetches addresses being able to infer IP addresses to Bitcoin addresses by means of the blockchain. After much consideration and chatting with topi`, I decided on the maxim that there's a t"	Clarify
164	1022703	"Yowza!  That is a long history :)  For ease of reviewing and clean git history, we request that you rebase your pull requests once the history gets long like this.  Closing pull request for administrative reasons -- but you are welcome to reopen at any time, with a rebased and review-friendly set of"	Emphasis
163	1014746	Oops didn't see this when I added https://github.com/bitcoin/bitcoin/pull/165  Oh well that is this one + one other small thing. 	Clarify
163	1017047	Superceded by another pull request... https://github.com/bitcoin/bitcoin/pull/165  	Clarify
162	1011207	Comments:  1) This is duplicating work at https://github.com/jgarzik/bitcoin/tree/autotools which was mentioned on the forums at http://www.bitcoin.org/smf/index.php?topic=2772.msg82737#msg82737  2) You arbitrarily changed the license to GPLv3.  NAK.  3) autotools conversion does not require a total	Clarify
162	1011225	"BTW please to meet you :) i'm new on github, but not to code. i'm friend with genjix and running a bitcoin related project on http://dyndy.net see other repos i'm active on http://code.dyne.org and software on http://freshmeat.net/users/jaromil  willing to cooperate on maintainance of the C++ source"	Clarify
162	1011237	"1) ACK. will read that 2) autoreconf -i does that (adds COPYING when missing) and i didn't noticed. 3) true. i just went for standard code separation in src/, not sure about other approaches. "	Clarify
162	1011257	looked at your branch: not so much duplication since we're both just at the beginning.  yet you might like the use of libtool in my branch :)  hack on 	Clarify
162	1011316	" Well, FWIW it is unlikely that this branch will be pulled.  All these are the sorts of changes we -do- want, but in general you're wrapping way too many major changes into a single pull request.  The right way to do this is with small, incremental changes, in separate pull requests that can be eval"	Clarify
162	1011341	"i don't understand what you mean with Grand API Designs: since bitcoin has already an API, i have no illusions of grandeur here. code reorganization needs stuff to be moved around and there are guidelines and standards for that. however i see we have different views on more things: code splitting ne"	Clarify
162	1011420	"There is no reluctance to libtool; it is a simple, binary decision:  libbitcoin does not exist, therefore libtool should not be used.  When libbitcoin exists, libtool should be used.  libtool is the wrong choice for bitcoin's libcryptopp, because that is simply linked directly into the miner.  Doing"	Clarify
162	1013480	"On Fri, 15 Apr 2011, jgarzik wrote:  > libtool is the wrong choice for bitcoin's libcryptopp, because that > is simply linked directly into the miner.  Doing anything else -- > particularly moving it to a shared library -- simply reduces > performance for no reason.  my use of libtool for libcryptop"	Clarify
162	1016711	"so far so good: compiles on linux providing --enable-upnp and --enable-gui=wx  code itself was never modified, just moved around, with two exceptions: 1) 9141f2c renamed cryptopp/config.h to settings.h 2) c929bae code namespace change: (int)VERSION renamed to BITCOIN_VERSION in headers.h so just one"	Clarify
162	1017045	"pull requests are for finished patches, not actively hacked projects.  "	Reject
162	1019539	sry i didn't knew. can you specify that in the documentation? thanks. 	ynQuestion
161	1016378	http://www.bitcoin.org/smf/index.php?topic=5982.0 	ynQuestion
161	1402555	"Miner threads are already low priority, and there seems to be no interest in this feature.  I'm going to close. "	nAnswer
160	1008020	Please start a thread on the forums about this (if you haven't already): http://www.bitcoin.org/smf/index.php?board=6.0 	Clarify
160	1009016	http://www.bitcoin.org/smf/index.php?topic=5888.0 	ynQuestion
160	1083248	Did you test calling this from command-line bitcoind?  I don't see a call to ConvertTo down around line 2090 of rpc.cpp to convert the third param from a string to an integer.  	Clarify
160	1115775	"whoops! nope, I didn't test the command-line. fixed. "	nAnswer
160	1125174	"In the future, please test your patches before submitting.  This broke the build, and the feature was broken, too. "	Clarify
160	1125950	"Fixed and tested (linux-x64). You may want to pull because I also forgot to change the number of incoming parameters (see https://github.com/CAFxX/bitcoin/commit/80d9115d9820a884955e82db7d41662c4dd53758#L0R1085 ) Sorry about the breakage, I assumed a number of things that in the end turned out to be"	Clarify
159	1005360	note: -nicestart is a no-op on non-windows systems because setpriority/nice require superuser privileges to raise the process priority (even if just to bring it back as it was at the start of the process) 	Clarify
159	1005379	"Seems like too much of a special case.  Will any user ever use it, given that it defaults to off?  "	Other
159	1005440	I didn't want to make it the default because I'd use it but I'm not 100% sure others will want the same. It might be sensible to do it by default if we're starting in GUI mode. 	Clarify
159	1005453	There you go. Thanks for the suggestion. 	Statement
159	1005484	"I messed up a little with the history, so I'm closing this pull request and creating a cleaner one. "	Reject
158	2247183	"This issue has been flagged for inactivity, and will be closed in 15 days from this message if action is not taken.  To prevent closure, kindly comment as to why the issue should remain open. If a time extension is needed to commit code, please respond to this comment or contact QA@BitcoinTesting.or"	Clarify
158	2465066	Closed pending commits / additional commentary. The inactive label has been applied. (I'm guessing this may need an update after reviewing QT) 	Clarify
157	1017763	"Reworked a bit, AddToWalletIfMine() and AddToWalletIfFromMe() and now merged into AddToWalletIfInvolvingMe(), simplifying things further. "	Other
157	1033479	Pulled via cherry-pick 	Statement
156	999354	"Apparently attempting to check the checkbox is unnecessary. All that I need to do is open the settings when UPnP is already enabled, wait a moment, and then get the segfault above. "	Clarify
156	999364	"It keeps getting better and better.. All I need to do now is leave the bitcoin client running on the main screen without even opening the settings, and it segfaults as above within a minute. "	Clarify
156	1003902	"net.cpp:940 gets called when no router/UPnP port mapping device has been found.  I don't know what the UI could have to do with this.  Is it possible the box (un)checking timing lining up just happened to be a coincidence? Also, do you have UPnP on on your router when this happens? "	Clarify
156	1005355	"Yup, I think clicking the UI checkbox has nothing to do with it, since the segfault occurs if the client just sits there for a while doing nothing (see my comment above).  UPnP is enabled on my router, but no port forwards are enabled. "	Clarify
156	1005738	"Hm, I can't reproduce.  What router are you using (do you happen to know what UPnP library it is using?) Does the miniupnpc example client work (it comes with miniupnpc, upnpc_static/shared, try it with -a your internal IPv4 8333 8333 tcp) "	ynQuestion
156	1008472	"My Linksys WRT54GL router is running dd-wrt. I'm not sure what UPnP library it's using. Interestingly, upnpc doesn't appear to find the router:      $ ./upnpc-static -a 10.0.0.2 8333 8333 tcp     upnpc : miniupnpc library test client. (c) 2006-2010 Thomas Bernard     Go to http://miniupnp.free.fr/ o"	Clarify
156	1011176	"Hm, I still can't seem to reproduce this issue.  Can you narrow it down to one individual or set of iptables rules? "	Clarify
156	1011583	"If I add a rule to just drop all input packets, and then I start bitcoin, that will trigger the segfault:       $ sudo iptables -F     $ sudo iptables -A INPUT -j DROP     $ sudo iptables -L -v     Chain INPUT (policy ACCEPT 1350 packets, 1561K bytes)      pkts bytes target     prot opt in     out  "	Clarify
156	1012191	"Still cannot reproduce, maybe someone else can? Do you still get the segfault if you comment out net.cpp:940 (FreeUPNPUrls(&urls), probably creating a memleak)? "	Clarify
156	1014324	"Yes, commenting out that line does prevent the segfault from occurring. "	Reject
156	1014371	I updated to commit bf3a0902ef98365d803e4a03853dbf0f83511026 and the segfault still occurs. 	Statement
156	1014505	"I think I found the problem. At net.cpp:909, UPNP_GetValidIGD() is called to, among other things, initialize the urls parameter. The documentation for miniupnpc.c's UPNP_GetValidIGD() is as follows:      /* UPNP_GetValidIGD() :      * return values :      *     0 = NO IGD found      *     1 = A vali"	Clarify
156	1014743	"Looks good to me, added a pull request for that and one other small thing at https://github.com/bitcoin/bitcoin/pull/165 "	nAnswer
155	998793	"Nice, thanks! "	Emphasis
155	999004	Thank YOU! I'll issue new pull requests as I get more stuff done. I may tackle the CSV export now just to get my feet wet in the source code. 	Clarify
154	998887	Looks good 	Statement
154	999186	"Looks good, but BlueMatt says it crashes the GUI, so that's a blocker "	Statement
154	1003772	"Just missing a "".c_str()"" in ui.cpp:1817. "	Statement
154	1005643	Updated w/ BlueMatt's fix.  	Clarify
153	997184	ACK 	Clarify
153	1008562	"Tweaked this:  Use ""C"" instead of ""POSIX"", I'm not 100% sure ""POSIX"" is supported as a locale name on Windows. "	nAnswer
152	995674	"One thing I did not test, is the slowdown. Continuously creating CBlockLocator's and writing them to wallet.dat may slow down initial block download. "	nAnswer
152	995763	Nice!  RE: block download speed:  I'd suggest a check for if IsInitialBlockDownload() and don't bother writing best-block-index during the initial block download.  	Clarify
152	996067	"Ok, updated. "	Accept
152	1008586	"Looking at this again and thinking about pulling, it seems more complicated than it needs to be-- CBlockLocator can already serialize/deserialize itself, is there a reason for the ReadBestBlock/WriteBestBlock methods?  Why not just Read/Write the CBlockLocator instead of CBLockLocator.vHave? "	Clarify
152	1017374	"I didn't realize db.h did define classes from main.h as well, to use them. I added CBlockLocator to those and simplified the patch. "	nAnswer
152	1033443	Pulled via cherry-pick. 	System
151	993268	looks OK to me 	Statement
150	998822	Forum thread: http://www.bitcoin.org/smf/index.php?topic=5752.0 	ynQuestion
150	999266	Removed ValidFee() check  	Emotion
150	1008943	"Yeah, trying to future proof it a bit.  Can remove, if you really don't like that. "	Reject
150	1123325	"This is good, since it sure beats restarting bitcoind. But.. I'm going to open a new issue. "	nAnswer
150	1124647	"Is it true that <amount> is rounded to the nearest 0.01?  I don't think AmountFromValue does that any more... While you're fixing that, remove the future-proof-CriticalSection, too, please.  "	Emphasis
150	1124689	"re AmountFromValue: that was copied from elsewhere in rpc.cpp...  sendfrom, maybe?  I'd like to be consistent one way or the other :) "	Statement
150	1125322	Fixed sendtoaddress/sendfrom: 8adcf8 / src/rpc.cpp : Help for sendtoaddress/sendfrom was wrong: amounts are rounded to 0.00000001 	Clarify
150	1125372	Updated commit per comments. 	Clarify
150	1125470	ACK 	Clarify
148	990908	"As far as i understand the network protocol, clients are only informed about the existance of extra blocks in the chain by a 'headers' message, which includes at most 2000 extra blocks. So if you want a counter ""55123/118009 blocks"", i suppose you need to change the network protocol to somehow infor"	Clarify
148	1068274	sipa: The client doesn't need to talk to other clients. It could pull up data from bitcoincharts or some other place. 	Clarify
148	1070375	I don't think we want to default client to depend on a centralized service. 	Reject
148	3002178	"As I understand it, this was implemented with the merge of bitcoin-qt, closing issue  "	nAnswer
147	980646	I can confirm it. No gui either using the sf.net version on the one compiled from latest github sources. 	nAnswer
147	984859	"I did some more investigations on the issue not showing up and..  a) `xlsclients` list bitcoin as an X client. Good so far b) `xwiininfo ${windowId}` gives      xwininfo: Window id: 0x4600001 ""bitcoin""        Root window id: 0xb4 (the root window) (has no name)       Parent window id: 0xb4 (the root"	Clarify
147	987769	Some more details. Bitcoin on Ubuntu Natty works with metacity (wm) but not with compiz.  I've filled a bug against compiz and if it is confirmed (as a compiz bug) this issue could be closed. 	Clarify
147	989154	I think this is a bug in bitcoin certainly related to this bug report I made earlier: https://github.com/bitcoin/bitcoin/issues/128  	Statement
147	1077318	I can confirm this too. Seems like a bug in natty 	Statement
147	1080460	I can confirm this too. No GUI in Natty (Unity). 	Statement
147	1080885	I do not have GUI in natty too 	Reject
147	1089556	After reading the comments on https://github.com/bitcoin/bitcoin/issues/128 I rebuilt bitcoin 0.3.21 against wx-Widgets trunk and was able to see the GUI again in Ubuntu Natty. 	nAnswer
147	1202148	Could someone then package a version built against wxWidgets trunk? 	Other
147	1202171	I just got the gui working with the *22-RC. Close maybe? 	Clarify
147	1203793	"Starting with 0.3.22 RC2, Bitcoin is built with wxWidgets 2.9.1+r67496. The patches can be found at https://github.com/TheBlueMatt/bitcoin/commit/a44f3475cdcec8581c87f8264b846955467a582e This should be closed. "	nAnswer
146	977911	"Testing is a good thing, absolutely.  Picking a unit test framework, and figuring out how to best integrate that into the tree, is best left to a forum discussion post, IMO. "	nAnswer
146	978000	Looks like there has been some discussion about unit testing and related refactoring issues on the forum:  http://www.bitcoin.org/smf/index.php?topic=4277.0 http://www.bitcoin.org/smf/index.php?topic=2244.0  Maybe a more incremental approach would be preferable rather than a huge refactor-the-world 	Clarify
146	978007	"The answer to that last question is almost always ""yes"" :)  "	Clarify
145	966761	See the dumpprivkey and importprivkey rpc calls in this branch: https://github.com/sipa/bitcoin/tree/walletdump  Disclaimer: not ready for production use :) 	nAnswer
145	967532	"Wow, glad you're working on it. Do you plan to release it for 0.3.21? "	Emphasis
145	981311	"Well, I didn't want to close this issue, sorry. I have one idea to implement. Instead of importing private keys a transaction is created which sends money from supplied private key to any of user's address. That's how retrieving of bitcoin paycards may work. Party A generates a new address and sends"	Clarify
145	982638	"What you're suggesting is partially implemented already, see http://www.bitcoin.org/smf/index.php?topic=4555.0 and http://bitcoin.modernjob.info/print.html  What I'm working on now is a export/import function for entire wallets (or selected parts thereof). I can imagine some use cases: backups, shar"	Clarify
145	2247180	"This issue has been flagged for inactivity, and will be closed in 15 days from this message if action is not taken.  To prevent closure, kindly comment as to why the issue should remain open. If a time extension is needed to commit code, please respond to this comment or contact QA@BitcoinTesting.or"	Clarify
145	2465069	Closed pending commits / additional commentary. The inactive label has been applied. 	Clarify
144	2352641	WX is now deprecated. Please update this thread if the problem persists in the QT build. 	Statement
143	960699	"Added sendmany fix, spotted by Gavin. "	Other
142	951660	Forum thread: http://www.bitcoin.org/smf/index.php?topic=5353.0  	ynQuestion
142	1022843	Updated branch to ignore fGenerateBitcoins stored wallet setting (see forum thread) in GUI version of bitcoin. 	Clarify
141	951626	Forum thread: http://www.bitcoin.org/smf/index.php?topic=5351.0  	ynQuestion
141	1110945	pulled 	Statement
140	27688049	"Just verified that this works fine now, closing "	Emphasis
139	949465	"I like the idea of writing a PID file.  It is good practice, at least on *nix.  I also like that you made the default the bitcoin data directory.  Review comments: 1) pid file should include a newline 2) have you verified the PID written is post-daemonize?  I am too lazy to check right now, and it i"	Clarify
139	949658	"1. newline is fine idea, I'll throw in a \n 2. the pid always seems to match the bitcoind -server process for me so I believe it is accurate 3. this I realized as soon as I did the pull request. do you know a crossplatform method I should use to delete the file? I always run into trouble with unlink"	Clarify
139	949670	Check the boost docs... boost does everything :) 	Clarify
139	992287	"Nice.  Can you rebase so the two commits are one, and maybe commit --author='gjs278 &lt;blame_me@somewhere.com&gt;' instead of 'root' ?  "	Clarify
139	992901	ugh. I hate working with git. I can't figure out this master pull rebase crap. I'm just going to make a new repo and put my changes into one commit. 	nAnswer
137	923431	Can I remove commits from a pull request? 	ynQuestion
136	928245	"FYI:  stress-testing bitcoind with this patch using a testnet-in-a-box I managed to hang one RPC server thread.  What I done did:  In one shell window: for i in 1 2 3 4 5 6 7 8 9 10 11; do ~/src/integration_btc/bitcoind -datadir=/Users/gavin/testnet-box/2 sendfrom """" $(~/src/integration_btc/bitcoind"	Clarify
136	928313	Your hang is verified to be a CRITICAL_BLOCK deadlock?  	ynQuestion
136	928505	"Update:  yeah, definitely CRITICAL_BLOCK deadlock.  Reproduced  with a hacked CCritcalSection that spits out its name as it waits/locks/unlocks, and hung process is waiting on sequence cs_main / cs_mapWallet, and I see lots of the other order.  "	nAnswer
136	928637	Definitely missed a few-- see https://gist.github.com/891544  	Other
136	942713	"IMO, cs_main should always be acquired before cs_mapWallet, as it is the ""bigger"" lock.  I'll look at how difficult it is to change the code to follow that ordering.  "	Clarify
136	957134	"closing, superceded. "	Statement
135	926153	Crash on startup log:   Process:         bitcoin [5818] Path:            /Users/evgenipetrov/Downloads/bitcoin-0.3.20.01/Bitcoin.app/Contents/MacOS/bitcoin Identifier:      org.bitcoin.bitcoin Version:         0.3.19 (320) Code Type:       X86-64 (Native) Parent Process:  launchd [104]  Date/Time:  	Other
134	933275	jgarzik pointed out that bitcoin used to properly daemonize on 0.3.18 on Windows (only bitcoin -daemon not bitcoind -daemon).  This needs more research. 	Clarify
134	937508	Hadn't seen pull 131 	nAnswer
133	933178	"Comments:  1) The community poll and I seem to agree, upnp should be disabled by default (USE_UPNP==0)  2) Rather than all those ifdefs, it would be nice to define  'static const fHaveUPNP' and test that where possible.  The compiler will optimize out code that is known never to be called.   "	Clarify
133	937652	"Although I disagree, UPnP is now set to off by default in all makefiles.   fHaveUPnP is used in many places now, however #ifdef USE_UPNP was still used in several. "	Clarify
132	908667	"We should keep the miner, as a reference.  People might start their own block chain, or perform research.  BitcoinMiner() provides all that in a self-contained package.  Just hide it from the user in the GUI and command line help, IMO. "	Clarify
132	908671	"Sorry, didn't mean to close the pull request, just comment.  "	nAnswer
132	922752	"The built-in miner is darn useful for -testnet (and testnet-in-a-box) testing.  Before removing it or hiding it in the client, content on the wiki and website needs to be updated, too.  "	Clarify
132	922824	"I pretty much agree with removing the miner from the client. Before mining gets removed, though, we should have a separate stand-alone miner as a reference implementation. "	Clarify
132	923937	Forum discussion here:   http://www.bitcoin.org/smf/index.php?topic=4828.0  	ynQuestion
132	933163	"IMHO: remove 4way code, hide miner from GUI, leave reference miner in codebase.  "	nAnswer
132	1110948	Obsoleted by removal of 4way miner code 	Statement
131	940269	"Works for me, though isn't the standard to check for __WXMSW__ instead of WIN32 even on bitcoind in most of the code? "	nAnswer
131	961905	BlueMatt is right-- #ifndef __WXMSW__ would be more consistent with the rest of the code.  	yAnswer
131	976672	"Pulled, after testing on multiple machines.  Also, I modded the commit slightly, to call setsid() inside ui.cpp, which is a second Daemonize site. "	Clarify
130	1116911	Have you tested this on 0.3.21? What method did you use to download? 	whQuestion
130	1129338	Just downloaded 0.3.21-beta from http://www.bitcoin.org/ and it still happens 	nAnswer
130	1201797	I have had the same issue with 0.3.21 as well as with the new 0.3.22-rc2. Clicking 'Cancel' allows the Address Book to open. The error does not appear on subsequent opening of the address book until bitcoin is restarted.  I am using Windows 7 x64. 	Clarify
130	1254821	Confirm this bug exist in 0.3.21 windows 7  64 bit aswell. 	Clarify
130	1254868	"This is a bug with high DPI settings, but it shouldn't appear on a standard 96 DPI machine.  Might you have some kind of theme which makes the icons in the corner of your windows larger? "	nAnswer
130	1254890	I don't think I have any settings different from whatever the Windows 7 defaults are 	Clarify
130	1255067	Have you tried 0.3.22 rc5+? 	ynQuestion
130	1255328	Issue appears to be fixed in 0.3.22 rc5. 	Clarify
130	1985393	Issue closed pending further comments/commits 	Other
129	982020	"Are you talking about the delay the first time you run Bitcoin? If so, then I agree - there should be some kind of indication that the program is still downloading the block chain.   "	Clarify
129	992278	Precisely. 	System
129	1923206	Closed. It's very similar to https://github.com/bitcoin/bitcoin/issues/148 	Statement
128	1083763	"This is a problem with wx, works fine with wxWidgets-trunk. "	nAnswer
128	2352640	WX is now deprecated. Please update this thread if the problem persists in the QT build. 	Statement
127	961888	I combined the two commits and merged into master.  	Statement
125	922780	"My first reaction:  this violates the KISS principle. My second reaction:  if the consensus is that more complicated logging is needed, then why not use boost::log?   "	Other
125	922811	"I forgot to write my motivation for the patch. I wrote it because I got tired of having to sift through hundreds of ""IRC got xxx"" messages while I was trying to debug some other changes I was making. Plus I was concerned about the size of the debug.log file - after running for only 12 hours, the fil"	Clarify
125	1023200	"This seems to match logging systems from other complex software projects.  The sheer number of messages in a complex system begs for something like what jhyslop has submitted.  BIND uses logging channels, giving you the ability to mask-in and mask-out certain types of messages.  syslog has LOG_{ERR,"	Clarify
124	910090	pulled 	Statement
123	896691	"I haven't reviewed the code thoroughly, but it looks reasonable.  In order to ease future changes to the wallet format, how about adding a key/value pair into the wallet indicating its data format version number? "	nAnswer
123	896714	"That's certainly a possibility, which may be useful in the future, but it's not really necessary now. The old format used a dedicated byte for specifying spentness, while the new code uses a key-value entry (using the dedicated byte if not present) and keeps the spent-byte updated as well. "	Clarify
123	896757	"Well, I mildly disagree that it's not necessary now. The time to implement versioning is now, before it's needed, so that when it is needed clients will have the version-checking code in place. But on reflection, that's what the nVersion parameter to the Serialize family of functions is for, isn't i"	Reject
123	896839	Don't get me wrong - I merely mean that for this particular issue there shouldn't be a problem. 	Reject
123	962237	"I pulled this and ran it against a testnet-in-a-box, and there's something seriously wrong-- look at this getinfo output: {     ""version"" : 32100,     ""balance"" : 103514.73287496,     ""blocks"" : 1479,     ""connections"" : 1,     ""proxy"" : """",     ""generate"" : false,     ""genproclimit"" : 3,     ""diffi"	Clarify
123	964462	"Sounds like you have a lot of (used) high-value transactions whose output is yourself, but are for some reason not marked spent. I'm not sure how that is possible but I'll check the wallet in that zip file. "	Clarify
123	966022	"FYI:  Wallet is from a 3-node ""testnet-in-a-box"" that I ran a bunch of ClearCoin escrow unit tests against.  Typical use was  Sending wallet -> escrow wallet -> receiver wallet, then between tests send coins from receiver wallet back to sending wallet.  Sending wallet is the one I posted.  I haven't"	Clarify
123	988541	"I tried running a testnet-in-a-box with your wallet and block database, but everything runs fine here. Could you post your corrupted wallet/blockdb as well?  "	Clarify
123	989238	"I just tried again after cloning and compling directly from your git branch and got similar results.  Bad ""after"" wallet is at:  http://www.skypaint.com/bitcoin/spentpertxout_after.zip  (this one is the entire datadir in a directory called 'd') "	Clarify
123	989241	"Interesting, though:  balance is different from first time I tried:    {     ""version"" : 32100,     ""balance"" : 60605705932.90255737,     ""blocks"" : 1455,     ""connections"" : 0,     ""proxy"" : """",     ""generate"" : false,     ""genproclimit"" : 3,     ""difficulty"" : 1.00000000,     ""hashespersec"" : 0,  "	Other
123	990743	"Bug fixed - fAvailableCreditCached was not initialized, causing arbitrary reported numbers on some systems "	nAnswer
121	887133	Resubmitting with longer commit messages 	nAnswer
120	910089	pulled 	Statement
119	880343	That would be my fault.  Ill fix it. 	Continuer
119	896250	fixed 	System
118	882085	"Please resubmit, changing only the *.po file.  We will merge your change rapidly, after that! "	Emphasis
116	886184	"We definitely want this change -- but can you please resubmit a rebase against latest upstream, giving us one (or a few) clean commits? "	Clarify
114	862497	Cool!  Thanks for being persistent.  Two comments:  The appropriate copyright notice should be added to uiproject.fbp and uibase.cpp; I think building the next release with UpNP support compiled in would be a good idea.  Having both -noupnp and -upnp options (and tri-state USE_UPNP) is confusing and	Clarify
114	862552	"Didn't realize Luke added -upnp in his commit, sorry.  The original intention was to have USE_UPNP as a compile option as to whether or not one would compile with UPnP or not and a single -noupnp where UPnP defaults to on.   Currently the Windows makefile doesn't support any UPnP (some have suggeste"	Clarify
114	862722	Please start a discussion on the forums about whether or not UpNP should be on or off by default; I think you will find strong feelings that it should be off by default among Linux folks.  	Clarify
114	862766	Forum thread here: http://www.bitcoin.org/smf/index.php?topic=4392.0 	ynQuestion
114	877908	"Consensus seems to be ""off by default"" "	Statement
114	880293	"That's the interesting thing about UPnP, for an individual, having UPnP on by default is bad - potential security problems down the line, increased traffic, etc.  For the network as a whole, having UPnP on by default is good as it creates more nodes which accept incoming connections ie good for netw"	Clarify
113	862393	Is github broken?  The diff/commit looks completely messed up to me...   	ynQuestion
113	862402	"Oh goddamit, well after today I'm done trying to submit patches. "	Clarify
112	862319	Again my lacking of understanding of standard policy means this needs closed and resubmitted. 	Clarify
111	861443	"Oops, this breaks makefiles on everything but UNIX.  Will fix later. "	Clarify
111	861685	"Plus, I would rather not import a lib wholesale into bitcoin without decent justification "	nAnswer
110	855259	"jhyslop mentioned that he is doing a full rewrite of logging (separating debug of various parts, etc).  I'd assume wait for him to finish his code before doing anything here. "	Clarify
110	857270	code looks good to me 	Statement
110	879270	Opened an issue related to this patch: https://github.com/bitcoin/bitcoin/issues/119 	Statement
109	852241	"Brief chat on IRC seemed to indicate that almost everyone is in support of this option, most saying it should also be on by default.  I agree with them. "	nAnswer
109	852247	Though maybe it could just be included alongside the standard seed node list? 	Clarify
108	847429	This seems to be a duplicate of https://github.com/bitcoin/bitcoin/issues/99 	Statement
107	853270	Same comments as with https://github.com/bitcoin/bitcoin/pull/104  I agree with the recommendation about bitcoin (recommended) and bitcoin (64-bit).  Maybe open an issue for that?   	Clarify
107	857264	Things are fine as-is 	whQuestion
106	845440	Forum discussion at:  http://www.bitcoin.org/smf/index.php?topic=4254.0  	ynQuestion
105	853259	"Given that -port is oft-requested and oft-implemented, and a standard option on other servers, I think we should include that.  However, I am not sure we should be removing penalties until things like ensuring diversity of incoming connections is handled. "	Clarify
105	853473	"Phantomcircuit started a topic on the forum to discuss Sybil attacks and what, exactly, we should to to prevent them (http://www.bitcoin.org/smf/index.php?topic=4335.0).  I would, however, like to point out that the penalties removed here have nothing to do with incoming connections and the penaltie"	Clarify
105	857022	"After the discussion on IRC and a bit of soul searching, I came to the conclusion that having a -port option is bad for the overall network.  The problem rests with the ability of people to more easily run multiple nodes on the network.  This should be discouraged as it increases load on IRC, etc.  "	Clarify
104	841178	"This seems quite unlike how other Linux apps are distributed, and function. "	whQuestion
104	842329	The script doesn't seem to care about arguments or bitcoind. 	Reject
104	844007	"I agree with jgarzik, though most are distributed as chose a version at download.  Should we do that? In any case you should add $@ to the end of the lines which launch bitcoin to pass arguments. "	Clarify
103	2009384	"https://github.com/bitcoin/bitcoin/pull/220 wallet import and export should resolve this issue, please contribute to that thread.  Also see https://github.com/bitcoin/bitcoin/issues/68 for more feedback on this issue. "	nAnswer
102	840168	"I like the idea of popping up a dialog box the first time they turn on generation, explaining what their chances of generating any coins is.  Although the right time to do that might be when 'headers only' mode is implemented, because the first time you turn on generate the client will have to downl"	Clarify
102	1217971	"This option was removed, so this bug is not needed anymore. "	nAnswer
101	853266	"How do deployed clients behave, in reaction to this behavior change?  "	whQuestion
101	870132	"Deployed clients behave just fine-- they just wait for the connecting node to send a version message first, instead of both ends sending a version message right away.  I'm going to run this (along with several other patches) on the Faucet machines, then plan on pulling it.  "	Clarify
100	1167155	"Only one problem with that, different languages (yes, verbal languages, not programming languages) have different ways to separate each field. This is because the comma , is used as a decimal . everywhere besides the US and UK.  ````*US and UK* Hi,Hello,Sup 3,5,3 ````  ````*In other countries* Hi;He"	Clarify
100	1273208	"I really wish to see this implemented, and I don't want localization issues to be a roadblock. You can just use . as decimal and , as record separator, and anyone who wishes to change it can just do a search-replace with a text editor. Polish like allowing choice of separators, or even detecting the"	Clarify
100	1274483	"CSV is not necessarily intended to be human readable.  Europeans writing floats in source code use the period as a decimal, because that's the spec.  It would be fine to do as MeniRosenfeld suggested and output decimals using . and , as a field separator. "	Reject
100	1285956	">MeniRosenfeld: >I really wish to see this implemented, and I don't want localization issues to be a roadblock. You can just use . as decimal and , as record separator, and anyone who wishes to change it can just do a search-replace with a text editor.   I think it's far better to support such a thi"	Clarify
100	1666044	">That's the problem, it is. If the specification was just ""use . for a decimal separator,"" there'd be no problem. The problem is some people said ""hey, we want , for the decimal separator,"" so they did.  I don't think that's a big problem since Excel (and probably all other popular software) allows "	Clarify
100	1705558	The Qt GUI can do this. See https://bitcointalk.org/index.php?topic=15276 	ynQuestion
100	2369722	"As @WakiMiko mentions, this was merged with the Qt UI, closing the issue "	nAnswer
98	837716	Good idea. 	Statement
98	837721	"Shouldn't it throw JSONRPCError(-5, ""Invalid bitcoin address"") like getreceivedbyaddress does? "	Other
97	839314	"There are a couple of major problems with this change - which isn't necessary in the first place.  First off, the transaction will not get accepted into the memory pool, because AcceptToMemoryPool verifies that the transaction has enough fees embedded in it to satisfy GetMinFee(). But when you creat"	Clarify
97	843692	I agree this isn't necessary and encourages anti-social behavior (transmitting fee-less transactions and hoping that either you'll generate a block to include them or somebody else will accept them).  	Clarify
97	982001	"In the Bitcoin forums, Luke-Jr showed me that my analysis was incorrect. This patch works ""as advertised"" (so to speak) and will cause no harm including it. Whether or not it is anti-social is a wider community decision :-)  In any case, I think this pull request can be reopened. "	nAnswer
96	847320	Tested this. It works well. 	Statement
96	857321	looks OK to me 	Statement
95	15690660	Does this value need increasing again? I'm regularly getting errors such as:  socket recv flood control disconnect (5033101 bytes)  in the debug.log and causing the node to disconnect. Usually the number of bytes are around this figure. 	Clarify
94	831764	"Since that commit stripped out the inclusion of WXINCLUDEPATHS in the defs and moved it to the obj/%.o location instead. This means the nogui option compilation doesn't receive the __WXGTK__ define, which is #ifdef'ing out the daemonizing fork() call. (Which itself is probably the genesis of this bu"	Clarify
94	831940	bugfix: https://github.com/bitcoin/bitcoin/pull/96 	Statement
93	837957	See https://github.com/bitcoin/bitcoin/pull/95 Cherry-picked and released as bitcoin v0.3.20.2 	Statement
91	845223	"I like the idea of timestamping log entries. Personally, though, I'd rather see a human-readable timestamp. "	nAnswer
91	852899	I agree with jhyslop: https://github.com/TheBlueMatt/bitcoin/commit/fe460d47b06d10095b882d7a9ea8a98ad0079bbd 	Accept
91	853273	"That's fine with me.  I'll close this pull request, and hope that someone submits the human-readable timestamp patch instead.  Also:  there was a privacy concern related to universal timestamps, so maybe add an option -logtimestamp, thereby defaulting the timestamps /off/ by default. "	Clarify
91	854558	"Actually, I plan to rework the logging slightly, so I'll add the optional timestamp when I do that. And since I'm adding a flag, there's no reason it can't be '-logtimestamp=<off | numeric | human-readable>'.  What was the privacy concern, do you remember?  My plan is to modify OutputDebugStringF to"	Clarify
91	867037	"Jeff, I've been working on the code as mentioned. Can you elaborate on the privacy concerns? I don't really see how the timestamps in the log could be a privacy concern. "	Clarify
91	867066	"Quote from IRC, <gavinandresen> Concern was from satoshi... I shouldn't try to read his mind, but I THINK what he was thinking is somebody subpoena's N bitcoin services for their debug.logs to try to figure out where transactions were originating "	Other
91	867270	"I wondered it might be something along those lines. As a side note, it would be an interesting challenge to figure out how many nodes you'd have to subpoena in order to determine with any degree of certainty the origin of a coin.  My revisions to OutputDebugStringF will, by default, NOT log anything"	Clarify
91	867276	"In general, incremental approaches tend to work better than grand rewrites, so I would rather test the waters with BlueMatt's patch.  Then, we can look into something more invasive if the community is happy with the general direction. "	Clarify
91	867714	"OK. My changes are orthogonal to BlueMatt's, so it will be simple to merge. "	Statement
90	828751	"Danger! Danger!  The close and re-open will cause core dump because it's not thread-safe.  I went down that rabbit-hole, and it's not pretty (don't be tempted to just wrap the printf in a CRITICAL_SECTION, because that causes issues during shutdown).  I like the timestamping, though. "	Clarify
90	828982	timestamping moved to https://github.com/bitcoin/bitcoin/pull/91  	Statement
89	940365	You can get Bitcoin.app to load by deleting the Bitcoin folder in ~/Library/Application Support/ 	ynQuestion
89	1307476	"I tried deleting the Bitcoin folder as suggested by Mr Burns. Unfortunately, still crashing.  Process:         bitcoin [306] Path:            /Users/johnhoward/Downloads/bitcoin-0.3.21 2/Bitcoin.app/Contents/MacOS/bitcoin Identifier:      org.bitcoin.bitcoin Version:         0.3.21 (321) Code Type: "	Other
89	4145136	"Closing as ""cannot reproduce"" "	Emphasis
88	857291	pulled 	Statement
87	837920	"Your first paragraph seems to duplicate https://github.com/bitcoin/bitcoin/issues/#issue/71  Transferring your address book for outgoing can already be done through RPC: do  listaccounts on the source, then setaccount in a loop on the destination. "	Clarify
87	1985425	"Sipa's pull request would implement this, please contribute to https://github.com/bitcoin/bitcoin/pull/220 regarding this feature "	Other
86	820868	"Is there another potential issue here?  For transactions that, for one reason or another, don't get into a block in a reasonable amount of time, is there some criteria for which the network will drop (and thereby cancel) such transactions?  (like a certain amount of time passing without being includ"	Other
86	822157	"afaik, there is currently no mechanism that would drop transactions from local cache. They just stay there until found in a block.  It's been suggested to do that, though (like limit local cache to 5MB), in order to avoid DoS attack. It's probably not that simple, though.  Don't know if there's a gi"	Clarify
86	822490	Lets discuss on the forum:  http://www.bitcoin.org/smf/index.php?topic=4009.msg57469 	ynQuestion
86	828831	See pull request at https://github.com/bitcoin/bitcoin/pull/88  	Statement
85	820806	"Looks good at first glance.  Can we brainstorm test cases that we think might cause problems?  E.g. Wallet with (only) available transactions of +1  +2.0001 +3  :  Send 6 bitcoins; what happens?  Same wallet, send 2 (I think you'll get a 2.0001+1 spend with 1.0001 change)...  Any other tricky edge c"	Clarify
84	816783	"It's important for this to be a ""move"" operation rather than a copy or export/import.  For the user, it should feel like moving value between wallets (like a transaction, but without the need for it to enter the block chain and possibly incur fees).  The wallets should be both presumed to be active,"	Clarify
84	816832	What you are describing is exactly what bitcoin transactions are for. It's impossible to break a coin into two smaller ones without making a transaction. 	Clarify
84	816993	Except that transactions will eventually cost money...I'm talking about moving private keys between wallets in order to consolidate bitcoins into a wallet without having to use a transaction and potentially incur a transaction fee. 	Clarify
84	837910	"I suggest generalizing this to a much more useful feature, the ability to create a bearer transaction that includes the private key (no need to mention amount), and obviously a text box to copy the transaction from instead of broadcasting it to the network.  We'd need an input field to paste in the "	Clarify
84	1985428	"Sipa's pull request would implement this, please contribute to https://github.com/bitcoin/bitcoin/pull/220 regarding this feature "	Other
81	809553	There's already a very similar pull request: https://github.com/bitcoin/bitcoin/pull/52 	Statement
80	905767	My walletdump branch (https://github.com/sipa/bitcoin/tree/walletdump) should contain a fix for this. But there are still a lot of edge cases that need to be tested. 	Statement
80	1035119	0.3.21 has a fix for this; please test and let us know all is well and we'll close this issue.  	Clarify
79	803266	Forum thread to discuss:  http://www.bitcoin.org/smf/index.php?topic=3786.0  	ynQuestion
78	801526	The error message needs fixing-- having the bitcoin.conf file in the main datadir (not in the testnet subdir) is the way it is supposed to work. 	Clarify
78	801607	"ok, but then you can't put rpcport=xzy in bitcoin.conf and run two clients in parallel, right? "	Reject
78	801726	"Right, you need to specify a different -datadir.  Changing the default -rpcport if running -testnet is a change that should be made, so you CAN just run bitcoin -testnet without messing with other confusing options.  So proposed fix would be:   + change error message   + change default -testnet rpcp"	Clarify
78	1403267	"I got the same problem with the latest git version, so I think this issue is not solved. "	Clarify
77	1238368	"Done, currently done via gitian on the 0.3.22 rc/s releases. "	Statement
76	896498	Submitted pull request: https://github.com/bitcoin/bitcoin/pull/126 	Statement
76	1116929	"Aside from the typo in the code, is there a reason why this pull request was closed? "	whQuestion
76	1116934	"No. I submitted a second pull request (#127, https://github.com/bitcoin/bitcoin/pull/127) with revised code, which was merged on April 5th.  On 05/07/2011 08:11 PM, TheBlueMatt wrote: > Aside from the typo in the code, is there a reason why this pull request was closed? >  --  Eric Swanson http://ww"	Other
76	1116939	Can we close this issue then? 	Other
76	1116944	"Yeah, the bug is fixed in the current HEAD, so close it.  On 05/07/2011 08:15 PM, TheBlueMatt wrote: > Can we close this issue then? >  --  Eric Swanson http://www.alloscomp.com/ GPG Key: 7A96 A45E 1603 6FCB EA72 146D 33D6 60E9 FFC7 420D "	Other
75	1532209	init.cpp:308  ```#if defined(__WXMSW__) && defined(GUI) // wxSingleInstanceChecker doesn't work on Linux ... #endif```  Probably the whole block should be removed so long as lock file works right on windows. 	Clarify
75	1533126	"Seems that single instance check is older than the lock file code. The whole block is obsolete. Just tried it, locking works fine without that checking.  "	Clarify
75	3002132	"This is no longer relevant with bitcoin-qt, closing issue "	nAnswer
74	799236	Good Idea.  	Statement
73	1243748	"Starting with 0.3.22, I'm gonna get everyone to build with ssl enabled, as well as static link crypto and ssl on Win32, there is no reason to be shipping our own libeay32.dll as well as bitcoin. "	nAnswer
72	779241	"ACK, thanks "	Emphasis
72	780320	"Tested by re-downloading entire block chain with -maxreceivebuffer=500 -maxsendbuffer=100  (no issues), after trying with even smaller limits (there were issues-- disconnections due to running out of receivebuffer space-- but no crashes, it handled the disconnect then find another peer gracefully). "	Clarify
70	771725	"RE: add address:  Adding a sending address to your address book you have to paste the address that you're sending to.  If you click on the Receiving address tab you don't specify the new address, bitcoin generates it for you.  Organizing would be a new feature.  "	Reject
70	799178	Rendering issues were resolved by building with the mingw toolchain. 	Statement
69	774815	"I'm seeing something that's probably related. When Bitcoin is underneath a window, and then brought to the top, the background of the tool strip appears to not get repainted. See this screenshot: http://i.imgur.com/uSkud.png "	nAnswer
69	788315	"Please try 0.3.20.01 (binaries at SourceForge, replaces the first candidate 0.3.20 release).  It is built with the mingw toolchain, we I hope fixes these issues. Let us know if it works for you.  "	Clarify
69	799174	Rendering issues went away compiling with the mingw toolchain.  Go figure.  	Clarify
68	788340	"Need to be very careful about accidentally corrupting the wallet.dat file by pointing two running bitcoins at the same wallet.dat file.  Berkeley db doesn't do any automatic multi-process locking.  Right now, a lock file is created in the -datadir Bitcoin is using, but if we allow the wallet to be a"	Clarify
68	841031	"I second that. There should be an option to set the location via GUI. It would also be nice to be able to specify a secondary location, where a mirror of the wallet could be saved, possibly on a network path. "	Clarify
68	994401	"I had suggested a -walletdir parameter here: http://www.bitcoin.org/smf/index.php?topic=2730.0  Would probably also be necessary to start with a -rescan then when switching between wallets, right? "	Clarify
68	995105	"This is useful, I think. You can create an additional lockfile in the walletdir, to prevent multiple processes from accessing the same wallet. Furthermore, it's relatively easy to detect the ""switching back to an earlier wallet"" case, by storing the best block index in the wallet as well (suggested "	Clarify
68	996949	I wonder if just using wallet.dat as it's own lockfile would/could work...  	Clarify
68	997732	"Judging from boost::interprocess:file_lock documentation, it should... "	Statement
68	999439	Will you also give an option to replicate the wallet to a secondary location? 	ynQuestion
68	1246699	If the wallet were composited of isolated static keys (plain text or as separate files in a wallet directory) then would there be any concern for corruption? Couldn't every address/key be write-once-never-modify? 	Clarify
68	1248127	"@alexgenaud: the wallet is much more than a collection of keys - it also contains transactions, accounting information, settings, and information about the block chain "	Emphasis
68	1249314	"Can most of that information be recreated from the network? Presumably we want to specify different wallet locations because we'll have many of them, likely stored on different media, backed up, encrypted, etc. If that's the case, I would think some isolated entities (the keys) should be write-once-"	Clarify
68	1258872	"Yes, the list of transactions can be easily recomputed (and are fairly sanely).  The settings, no...but those are just the things in the preference dialog.  Accounts, well that also not, but those are so broken anyway...anyway, those are tied to the list of addresses, so that also shouldn't be a pro"	nAnswer
68	1258874	"Also, this bug should be long closed, we have -datadir=... "	Other
68	1258878	"I believe this is about a the location of the wallet specifically - that's useful, and/or is a step towards general wallet management. "	Statement
68	1258942	"Ah, well then yea. Is there also a bug for separate -conffile= location, as that falls under the same category. "	Clarify
68	2009347	"https://github.com/bitcoin/bitcoin/pull/220 wallet import and export should resolve this issue, please contribute to that thread.  Edit: reopened per Sipa's advice "	Other
68	2010625	"As the author of pull #220, I'm not convinced this is about the same problem.  Having the client manage different (or even multiple) wallets at once would be a very useful think imho, independent from the ability to import/export them. "	Clarify
68	2011102	"I have added the wallet label so that these issues are grouped. Some of them overlap, and it makes more sense to group them than to condense them.  Cheers Sipa, and kudos on the Wallet work =) "	Clarify
68	15730503	Any work done on this? I read on the forum that since the blockchain doesn't use BDB it will be easier to add this option now. Thanks! 	Clarify
68	15730620	@keystrike  it's likely going to get subsumed by the multiple wallet support.  	Statement
68	17150936	"Does that mean you're volunteering to do it @APerson241 ? Otherwise, please spare us your judgements as to how easy or difficult something is. "	whQuestion
68	22745779	"Closing; 0.9 release has a ""-wallet=filename.dat"" option.  It must still be in the -datadir, though.   "	Clarify
67	772743	What version of bitcoin ?   I compiled the windows 0.3.20 bitcoin with boost 1.45.0...  	whQuestion
67	788326	"More info:  m0mchil couldn't compile boost 1.45 with mingw, he downgraded to 1.43 for the windows bitcoin 0.3.20.01 release.  "	Statement
67	816760	"I successfully compiled with boost_1_46_0 on my Mac (OSX 10.6.6).  I suggest trying with that and if it works for you, maybe it could be added to the Mac build instructions that version 1_45_0 may not work. "	Clarify
67	3002111	Is this issue still relevant with the new releases? 	ynQuestion
66	788350	"The account commands manipulate the same internal data structures as the GUI's address book.  e.g. listaccounts  shows you all the address book names.  setaccount  assigns a bitcoin address to an account (== address book name), etc.  "	Clarify
66	837834	"This is a documentation terminology issue. I was confused too.  We now have three terms for the same thing.  1. Address Book Sending tab uses ""Name.""  2. Address Book Receiving tab uses ""Label.""  3. Documentation Wiki and API method calls use  ""account""  to mean both.  The term ""Address Book"" does n"	Clarify
65	770933	I would also suggest unique IDs per transaction 	Clarify
65	772753	"0.3.20 listtransactions returns time (unix timestamp).  Generated blocks during maturation is a good idea-- maybe reported as category ""generate"" with a negative value for number of confirmations (e.g. newly generated == -100  ... or would it be -99... anwyay)  Every transaction has a unique txid. O"	Clarify
65	2247167	"This issue has been flagged for inactivity, and will be closed in 15 days from this message if action is not taken.  To prevent closure, kindly comment as to why the issue should remain open. If a time extension is needed to commit code, please respond to this comment or contact QA@BitcoinTesting.or"	Clarify
65	2465008	Closed pending commits / additional commentary. The inactive label has been applied. 	Clarify
64	766047	"May I suggest operating Bitcoin from the command line? The documentation on this topic is somewhat sparse, but a reasonable summary may be obtained by typing 'bitcoin help' or at <https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list>. "	Other
64	4091463	@laanwj I read compatibility with NVDA was recently added? 	Clarify
64	4098806	"Yes; Qt has native support for NVDA, but in windows (with static linking) it was not yet enabled.  I don't know how usable it currently is with screen reader, though. It might be that some hints etc still need to be added.  "	Clarify
64	4960944	"I'm going to close this, because accessibility support was turned on.  If there are still specific issues new issues should be opened.  "	Clarify
63	767128	"I understand the motivation, but this seems contrary to satoshi's original intent.  Recommend deferring this for a year or three :) "	Clarify
63	767223	"And what would the motivation be? It would allow others to be compatible with the mainline client, without having to create a new version each time the mainline is updated, just to ensure compatibility? It won't be the last change conflicting with Satoshi's original intents. "	Clarify
63	839229	I second cdecker's question - what is satoshi's original intent? Is his intent that there shall be One True Client? 	Clarify
63	853049	"Satoshi was clearly brilliant, but that doesn't mean we have to follow his original intent religiously.  I think this is a good idea, especially as we move towards more clients in more languages, on more devices. "	Clarify
63	853125	"I agree with the intent -- differentiate client & proto version -- but not the implementation in this pull request.  And in general, the current protocol does permit some flag-based extensibility beyond simple protocol versioning.  We could simply freeze the as-exported proto version, and add flags "	Clarify
63	863899	Can you elaborate on the flags? I don't think I've come across the code you're talking about. 	Clarify
63	863971	"Just to respond to the criticism on the patch. I myself found it strange to ask for a patch for a thing that isn't solvable with a patch, but I was asked to do it. It is not difficult to add protocol extensibility, as discussed on the Forum, it just needs either a new message (capabilities?) or an e"	Clarify
63	864056	"The ""nServices"" bitmask is sent with each version message, at the beginning of each TCP connection between two P2P nodes. "	Clarify
63	864193	"True, I had forgotten about the nServices bitmask, my bad. I have a few criticisms about that too, but I'll create a new Forum thread for them, since this is only to decouple protocol versioning from client versioning. Estensibility should be left for a broader discussion. "	nAnswer
63	864225	"The two issues are coupled, as I indicated in my original reply. "	Statement
63	864497	"Ok, I think we aren't thinking about the same kind of extensibility. My goal basically is to have a minimal protocol that is standardized (let's say the current protocol), it is simple and easy to understand. The protocol version should indicate that if a client supports the protocol version it'll u"	Clarify
63	864558	"Anyway, to get back on track with this pull request: jgarzik, if I understand you correctly you agree with my point, right? Keeping the protocol version distinct from the client version allows us to differentiate the implementations and thus grow and secure the network. I don't care if this pull req"	Clarify
63	864575	"Alternative clients, nor mainline clients, have -never- had to release a dummy update, due to the current release scheme.  That's a red herring, and an invalid justification.  The network protocol has always been backwards compatible, even way back to ancient client versions.  I understand the desir"	Clarify
63	864657	"Sorry you feel that way. I see that there is no point in continuing this conversation, consider the pull request withdrawn. Although I maintain that my points are still valid. You were the one who brought up extensibility, whereas I maintain that protocol evolution is different than protocol extensi"	Clarify
63	864823	"To use an absurd example, it is trivial to see how we can create a flag ""use a totally different protocol.""  There is no limit to extensibility through flags.  We could simply freeze currently reported protocol version, while still incrementing client version. "	nAnswer
63	1307605	"I don't know if it is still possible to merge this but this is ridiculous that this has not been merged. As a developer for an alternative client I don't want to depend solely when the mainline add GUI features and calls that an update. ""Add flags""? I assume you meant software versioning flags and n"	Clarify
63	1308334	I would like to see this issue addressed. As someone starting another Bitcoin client it concerns me greatly that the core Bitcoin client is trying to monopolise what should be decentralised currency. How are we supposed to differentiate between protocol version and client? A client shouldn't be the 	Clarify
63	1309470	"As original author of the issue it is in my interest to have it adressed, but I have to correct a small misunderstanding: the flags are a good way to identify capabilities as jgarzik pointed out. It is a bitfield in the version message which allows boolean announcements about the capabilities of the"	Clarify
63	1315584	+1 	Statement
62	767124	no objection 	Statement
60	746469	Rewriting user-created config files is always error-prone and tricky (you don't want to overwrite a user's carefully crafted bitcoin.conf).  And it seems like the desire to do this is really some other feature in disguise (like backing up and encrypting private keys).  I do like the idea of RPC to c	Clarify
60	746504	Be careful of the downgrade + upgrade scenario. 	Statement
60	837935	Consider using an existing configuration repository like gconf. 	Statement
60	839223	"I think this proposal has merit.  I was quite surprised to find, from reading the source code, that the wallet contains both money and configuration data. Keeping the two sets of data separate makes much more sense than lumping them together into a single file.  If it's implemented correctly, there "	Clarify
60	3002130	"I like this idea. I don't necessarily say that the options should be re-written to bitcoin.conf, some other config file is OK too, but they should not be in the wallet.  This will become especially apparent if we implement multiple wallet support. "	Reject
60	4960908	Settings were moved out of the wallet into the Qt settings file. 	Reject
58	788325	Done; thanks m0mchil.  	Statement
56	735161	Why add CUDA and OpenCL stuff to bitcoin? We decided (on IRC at least) to use autotools in the future. I think jgarzik is working on that. 	Clarify
55	779244	"Does this really need its own, single-file directory? "	ynQuestion
55	780838	"I'm thinking there should be a standard directory structure, similar to the debian packaging conventions, that would make it easy and predictable to build a package given its source tree.  Since bitcoin is the first project that is interested in adding this to the source tree, you are free to set th"	Clarify
55	780866	"From bitcoin's perspective, we don't want to end up with 10 files for 10 different systems (gitian, debian, fedora, ...) each in their own directory.  Having bitcoin/contrib/gitian.yml seems preferable to bitcoin/gitian/just_this_one_file.yml. "	Clarify
55	780958	Sounds good to me. 	Statement
55	789972	"updated pull looks OK to me, but I'd like to poll gavin's opinion on contrib/ top-level dir as a place to throw things like this "	Clarify
55	856894	pulled 	Statement
54	736228	"Lets pull this for the 0.3.21 release-- I want to get 0.3.20 out, and don't want to pull anything that has even a slight chance of causing problems. "	Clarify
54	779246	ACK 	Clarify
53	726926	Did I get the difficulty adjustment backwards? D'oh!  	Emphasis
53	726938	"Why 21 hours:  it is exactly 1/16th the 2 weeks/2016 blocks of the main chain, and is more than 120 blocks (seemed like a good idea to allow blocks to mature and get spent before difficulty adjusts).  "	Clarify
53	731268	"I think I prefer exactly 1/14th the 2 weeks.  Make it 24h, then we're aiming to change difficulty at the same time each day, and can see whether the actual change times drift forward of backward on the clock.  Unless there's a good reason not to?  24 hours is 144 blocks. "	Clarify
53	736135	"There's no consensus on changing the difficulty rules, so I'm closing this and will pull davouts just-change-the-genesis-block patch.  "	nAnswer
52	724215	"You should use $(...) instead of `` (like it's done in makefile.osx), also see http://www.electric-cloud.com/blog/2009/03/23/makefile-performance-shell/ "	Clarify
52	724602	"Ok, rewrited. "	Statement
52	799936	This patch works great for GUI builds but outputs annoying errors (wx-config not found) when building bitcoind. Can you fix that? 	Clarify
52	811432	"The problem is that the makefile is using "":="" instead of ""="" to assign those WXINCLUDEPATHS/WXLIBS variables. This calls wx-config whether it uses it or not. But even fixing that is insufficient.  I have put up a [new pull request](https://github.com/bitcoin/bitcoin/pull/82) which fixes this issue."	Clarify
51	724712	Nice!  I'd like to make this part of a set of changes for the 0.3.21 release to deal with sub-bitcent amounts consistently across all the RPC methods and in the GUI.  	Clarify
51	724848	Would it be possible to pull it in for 0.3.20 ? I'd really like that in order to keep the double balance check that occurs on BC before any transfer.  Also is there a way to manually fiddle with account balances other than moving bitcoins around until achievement of desired accounts statuses ? 	Clarify
51	803274	See: https://github.com/bitcoin/bitcoin/pull/79  	Statement
51	828754	I pulled the more generic rounding patch. 	Statement
50	723290	Duplicate of #51 	System
47	2247165	"This issue has been flagged for inactivity, and will be closed in 15 days from this message if action is not taken.  To prevent closure, kindly comment as to why the issue should remain open. If a time extension is needed to commit code, please respond to this comment or contact QA@BitcoinTesting.or"	Clarify
47	2465071	Closed pending commits / additional commentary. The inactive label has been applied. 	Clarify
46	718700	"I think encryption should be limited to wallet.dat, so one could have multiple wallets with different passwords. This patch seems to encrypt blkindex.dat and addr.dat, too.  Also, a GUI prompt to enter the password would be useful. "	Clarify
46	718831	"It is not possible to selectively encrypt parts of the database environment with Berkeley DB. There is several possible solutions but the best long term is to encrypt everything and add a export/import wallet feature.  The gui prompt was a good idea, remember to add a non-GUI prompt for running head"	nAnswer
46	719158	"From http://www.bitcoin.org/smf/index.php?topic=2698.msg36793#msg36793  First, unless I'm reading the bdb docs wrong, you specify a password at database creation time.  And then can't change it.  So, at the very least, somebody would have to write code that (safely) rewrote wallet.dat when you set o"	Clarify
46	719177	"Gnonthgol: if you're motivated to solve this right, please jump onto the forums and work out a good approach; I think this is a very important feature to get right.  "	Clarify
46	719183	"Also, database encryption can currently be accomplished using something like encfs or Truecrypt to encrypt the whole .bitcoin directory. That's probably a better workaround until we know how to get this right.  Closed. Further discussion should happen on the forums as Gavin suggested. "	Clarify
45	2467645	QT has been merged. 	System
44	718248	The target is 'bitcoind'; I added comments to build-unix.txt about that.  	Clarify
44	742723	"This issue seems to be resolved. If not, re-open it. "	Reject
39	1072814	Any french translation needed ? 	ynQuestion
39	1073142	Coordinate with folks here: http://www.bitcoin.org/smf/index.php?topic=3773.0  	ynQuestion
34	693936	"This can be closed because it is the same as issue 35, which has been merged.  I didn't realise that making a pull request automatically made a new issue, so I made this issue first. "	Clarify
31	694049	Thanks for the fix. 	Statement
29	693764	Fixed: https://github.com/bitcoin/bitcoin/commit/1aefe491fb1b1311973c9561493d201c7504a120  	System
28	673555	"possibly in other RPC methods, too. It died with getaccountaddress in debug.log, but didn't get glibc message as the terminal was closed.  Version: 009d5fb41f3aa39baeeb3f72454cdc14459fc67e (Merge branch 'listaddresses' into integration) with CORS patch (shouldn't cause it, though)  bitcoind: ELF 32-"	nAnswer
28	676280	"I just noticed the following (line numbers might not match, I discovered this while re-ordering some code):  In getaccountaddress() rpc.cpp:361: warning: control reaches end of non-void function  edit: ArtForz and lfm on IRC said, that code should never return inside a CRITICAL_BLOCK()  "	Clarify
28	680612	"Returning from a CRITICAL_BLOCK is OK.  CRITICAL_BLOCK uses local C++ objects to do the locking, which are guaranteed to be properly destructed no matter how the block is exited. "	nAnswer
28	788353	"More data: there have been a couple more reports of bitcoind crashing under heavy RPC load, although nobody has been able to reproduce. "	Clarify
28	837941	how do we know this isn't a hardware problem?  does bitcoin check the consistency of its files and repair them automatically? 	Emphasis
28	845313	"gavinandresen, were those reports from different people, or from one person? If they were from different people I'd push hardware problems further down the list of suspects. I wouldn't rule out hardware problems, of course. "	Clarify
28	854099	"jhyslop: bitcoind crashing/hanging reports were from other people (slush was one, I believe).  I still haven't seen it, running 3 or 4 instances of bitcoind on 2 or 3 different machines (Mac and Debian Linux).  "	Clarify
28	1764872	"No further reports of this, I'm going to close.  "	nAnswer
26	676234	"This may be caused by the same bug as the ""sum(accounts) != getbalance"" bug.  "	Clarify
26	694043	"This is related the the other bug. They are both symptoms of having a wallet with private keys in it that the bitcoin client thinks haven't been used yet, but that actually *were* used.  I just committed a new command-line flag:  -rescan  ... that scans all previous transactions, looking for any tha"	Clarify
25	665433	Eek! 	Emphasis
25	665439	"Before I lose them:   http://pastebin.com/evGiRVw2 and   http://pastebin.com/wxCnw5SF ... are listaccounts and gettransactions '*' output.  getbalance returns 850.05, sum(accounts) is 853.05...  I'll be debugging this more tomorrow. "	Clarify
25	665453	"txid 22c1af3bc7f21a1ee74fbe63fcc58d0433ce2c574cf042a8f9129f989ebac68d has two entries associated with it, one of which is for BTC 3, and this is the only BTC 3 transaction in what you pastebinned. Maybe a place to look. "	Statement
25	666759	"Thanks, mike, it looks like that is the source of the bug.  There is 3BTC in ""change"" that is being miscounted, because the 'change' address was assigned to an account (using setaccount <change address> """", I assume).  The good news is that unless you dig out change addresses from block explorer thi"	Clarify
25	666836	I never used setaccount so something else must have caused it. 	Clarify
25	674754	"After looking more at this, I'm puzzled.  The 3BTC transaction is definitely weird, but I don't think that is the cause-- the accounts code thinks it is a multi-send-to-self, and it doesn't affect the account's total balance (it is +400 in, -400 out). "	Clarify
25	674782	"Wishing I had the stones for c++ anymore... still, some thoughts:  - maybe that tx isn't to blame. - does the bitcoin wallet implement a proper semblance of a double-entry ledger? If not, that's an enhancement request. (the pastebin records sure look like one, but i'm no accountant) - is there cause"	Clarify
25	676231	"I asked Satoshi, and he has a very good theory and what happened:  Wallet clone ""A"" spends some coins.  Wallet clone ""B"" (this is the one I'm debugging) comes online, runs ReacceptWalletTransactions, sees the spend, and marks the previous transaction (where it got the coins) as spent.  HOWEVER, it d"	Clarify
25	693781	Fixed. https://github.com/bitcoin/bitcoin/commit/1d23c7436164faa0b1822acf5ce9507bf6ff257a https://github.com/bitcoin/bitcoin/commit/d9574c2f14028297ad5121695a0c10e517bf638e  	Statement
24	662307	Hooray! 	Emphasis
23	668598	"I think this needs to be explicitly allowed from the bitcoin client side, otherwise any website could start quietly bruteforcing the username/password out of a client. "	Clarify
23	668912	Lets continue this discussion on the forums: http://www.bitcoin.org/smf/index.php?topic=2672.0  	Emphasis
23	696234	"Not enough support for this right now... and there are SSL issues, too... "	Statement
22	744304	"updated with a list of 320 fresh seed nodes, and made a pull request. guess this should be closed any day now. :) "	nAnswer
22	745863	Merged. 	System
20	658519	"I'm proposing a simpler api; see http://www.bitcoin.org/smf/index.php?topic=2647.0  I believe you can build what you want on top of the lower-level ""tell me when there are new blocks and transactions"".  For example, note the transaction ID when you get notified of a new transaction.  Then when you g"	Clarify
20	658540	"Hey Gavin,  I can see there would be applications for what you're doing with that API.  Seems like it would be painful to work with for e-commerce, though. Right now I can just poll an account/label linked to an open purchase order to check the balance and confirmations. Using this API would require"	Clarify
20	659336	You could replace polling every N minutes with a monitorblocks callback that did what you are doing now-- because you know that transactions won't get more confirmations unless new blocks have been received.  You should end up with more accurate results (you'll update as soon as bitcoind sees a new 	Clarify
20	659367	"I see how it could work, sure. But the sample JSON output you provided on the forum post showed the callback passing some general block info and then simply a list of transaction IDs.  For each transaction ID, I would have to determine if it's relevant to my open orders, then check each relevant tra"	Clarify
20	661975	"I submitted a pull request today to add ""details"" to gettransaction output.  You'll get one or more objects that give category (send or receive), account, and address.  "	Clarify
18	647117	"Wow, I just sent 50 BTC, and now the client is reporting zero balance... "	nAnswer
18	650074	What happened:  Send 50.006... was rounded to 50.01 (amounts get rounded to two decimals).  Causing insufficient funds message.  Send 50  ran into special-case code for micropayments; if making change would result in less than 0.01 coins (which would trigger the you-must-pay-a-0.01-fee transaction s	Clarify
17	644279	"minconf=N only credits coins received that have N or more confirmations.  It still debits all sent coins, regardless of how many confirmations they have.  The reasoning is:  you can't be 100% sure that coins you are receiving are single-spent.  But you CAN be 100% sure that YOU are not trying to dou"	Clarify
17	673548	"You were right, I was wrong-- listaccounts N was completely broken.  I've got a PULL request that fixes it. "	Reject
17	676428	Pull request is: https://github.com/bitcoin/bitcoin/issues#issue/27 	System
16	936829	"There is also a slight issue that hide window does not hide the window when first pressed on the keyboard or clicked on the dock, instead the window's elevation is altered.  If the hide button has previously been pressed, then pressing it again successfully hides the window. "	Clarify
16	1105603	"I don't see a ""Hide Window""/""Hide Others""/""Show All"" menu option at all under the app main menu (in OSX 10.6.7). Could also use an Edit (for cut/copy/paste) and a Help menu.  "	Clarify
16	2820904	"GUI is completely different for 0.5 release; going to close this, because I'm sure it has its own completely different set of Mac UI issues.  "	Clarify
15	676534	"Does bitcoin use whatismyip.com ? I have read some code, it seems to be using the external address reported by IRC, which should be quite reliable.  "	Clarify
15	697674	"net.cpp uses:   addrConnect = CAddress(""91.198.22.70:80""); // checkip.dyndns.org and   addrConnect = CAddress(""74.208.43.192:80""); // www.showmyip.com if it wasn't able to get the external IP address from IRC within 2 minutes.  Note it hard-codes the IP addresses of those 2 sites too, which is proba"	Clarify
15	1092818	I think that option to specify external port is needed too. For NAT users for examle! 	Emphasis
15	1361179	I agree.  What happens if those sites go down or change their addresses?  Or what happens if you are behind a restrictive firewall or ACL? 	Clarify
15	4044553	I've added this functionality to my multilocal branch (#829) 	Clarify
15	6791177	"Implemented, as -externalip "	Statement
14	654419	Forum references for URI scheme discussion:  * http://www.bitcoin.org/smf/index.php?topic=1877.0 * http://www.bitcoin.org/smf/index.php?topic=1840.msg24927#msg24927 	Other
14	937950	"You might want to include various options.  Example mailto: URL: mailto: astark1@ unl.edu?subject=MailTo%20Comments&cc=ASTARK1@UNL.EDU&bcc=id@internet.node (From http://www.ianr.unl.edu/internet/mailto.html, spaces inserted to not be interpreted as link)  Possible bitcoin URL scheme: bitcoin:1GJKkkd"	Clarify
14	1013971	I've started working on a Firefox addon for that. This is why I opened https://github.com/bitcoin/bitcoin/pull/160 	Statement
14	4091435	@TheBlueMatt BIP21 compatible URI's are now supported; can this issue be closed ? 	whQuestion
14	4091646	"Yes, this should be closed. "	yAnswer
14	4996094	Should this be working with Bitcoin-qt 0.6? Implemented URIscheme on a webpage but nothing happens so far. Re-open? Or is #982 the follow-up. Missing in the info.plist (mac). 	Clarify
14	4996872	Disabled for on Windows due to a bug in boost::interprocess. Never implemented on Mac. 	Statement
14	5003028	"ok. should I open a feature request for this on the mac? imo, important functionality to make bitcoin a popular alternative to other services. "	Clarify
13	659395	"There's definitely something to this.  I think the spam potential of your first use case is too nasty to contemplate. I'd be satisfied with commerce systems including a business rule which says ""if you want further notifications, attach an email address to your order"". The spam problem is already ad"	Clarify
13	915124	"Is the bitcoin receiver address equivalent to a public key? If so, it could be used to encrypt a message that only the recipient could read. Together with the ability to sign the message with the sender's bitcoing address this could be the basis for a very simple (but secure) out-of-band messaging s"	Clarify
13	915417	The receiver address is a hash of the public key; you don't see the full public key until the transaction is spent.  	Clarify
13	915438	"The receiver address is a hash of the public key; you don't see the full public key until the transaction is spent.  In this case, we can still sign messages regarding any payments we made, but we can only encrypt them, after the recipient has made any payment himself (at any time, potentially eve"	Clarify
13	968450	The receiver address is a hash of the public key; you don't see the full public key until the transaction is spent.  So one thing that you could always do is to send an encrypted thank you message to someone who has sent you bitcoins (send = broadcast in case you don't know who that is) 	Clarify
13	4204254	Part of this is implemented through message signing. 	System
13	4206068	Closing; I think the message signing/verifying gives enough low-level support for interesting things to be built.  	Clarify
12	658512	Discussion here: http://www.bitcoin.org/smf/index.php?topic=2647.0 	ynQuestion
12	754635	"If `debug.log` showed full transaction IDs in the ""got inventory"" line, one could do:      tail -F debug.log | grep ""got inventory.*new"" | my-script  to monitor for new transactions and then run `gettransaction` to see the details.  For some projects, this would be easier since no HTTP server is req"	Clarify
12	758186	Suggested monitorblocks API posted to forum. 	Continuer
12	6791162	"The current -blocknotify seems to take care of this.  Addressing $IssueText directly, HTTP callbacks seem to have lost favor over program execution. "	Clarify
11	629871	"Could you post a [PULL REQUEST] about this on the Dev&Tech forum: http://www.bitcoin.org/smf/index.php?board=6.0  Until we figure out where we want to discuss pull requests (on the forum or maybe directly here), I figure it is best to do both. "	Clarify
11	632251	I'm a little worried that if this feature gets popular the IRC channel and the 'addr' messages flying across the network might be overwhelmed with the IP addresses of clients that aren't listening.  New nodes joining might then spend a long time trying and failing to connect.  I'd be more comfortabl	Clarify
11	633521	"I had originally made a forum post, with the patch attached, but the forum decided to eat it due to (invalid attachment type .patch). Then I found out about this feature :) But I'll make a new post and simply link here.  Valid issue about the IRC channel. I had considered that, and was under the imp"	Clarify
11	633522	"Ah, I see the new commit (don't connect to IRC on -nolisten) was automatically added here. "	nAnswer
11	641454	"Seems to me as trying to fix an intermediate problem, I'd much rather see a patch adding the ability to specify a listen port. But the patch to disable IRC bootstrapping seems nice. "	Clarify
9	625035	"Small, correct, if it breaks on Windows I'll be extremely surprised (and will back it out).  "	Statement
8	839225	I disagree with this. Bitcoin keys should be used for one purpose only - creating bitcoins. Any other use will erode the anonymity that the system can afford.  Sounds like what you really want is GPG. 	Clarify
8	840712	I don't see how this erodes anonymity if you don't use it.  And being able to prove that you own a given bitcoin address can be used for all sorts of interesting things for cases where you specifically do NOT want to be anonymous.  	Clarify
8	841329	"OK, I'll go along with that. "	Statement
8	845259	"I've been thinking about this some more. Rather than sign an arbitrary message (which is generally frowned on by those smarter than me at cryptography; as I recall, a carefully-crafted message can make it easier to perform certain types of known-plaintext attacks)... um, where was I? Oh, yeah, what "	Clarify
8	2026523	"What if you created a temporary key, signed the message with that and then signed the signature or the address of the temp key with your main key. Would this be more secure?  "	Clarify
6	624388	"We already have generic keystores on Linux machines, why not adapt Bitcoin to use them and provide a really simple one for systems that do not provide their own? "	Reject
6	624408	"See my python bitcointools for code that can read and write the key/value pairs in wallet.dat (fixwallet.py reads the wallet and writes out a new wallet, leaving out any keys that seem to be mis-formatted).  Merging wallets is hard because you have to teach bitcoin to re-scan the block chain for tra"	Clarify
6	624421	Just delete all the block data and redownload the block chain. 	Statement
6	624966	"Deletion is not necessary, doesn't it already happen anyway when wallet is replaced ? "	ynQuestion
6	754604	"Easy import and export of keys would make it easier for trusted vendors to sell Bitcoin stored-value cards (USB sticks, mini CDs, etc) with a private key on them.  The buyer then just imports the private key from the card.  Easy import/export also addresses parts of issue #2 "	Other
6	816774	"Easy import/export is an important feature for the day when transactions are no longer free on the network.  People won't want to pay transaction fees when consolidating or moving btc value between different wallets they own.  Also, easy import/export should be treated like moving (rather than copyi"	Clarify
6	2009365	"https://github.com/bitcoin/bitcoin/pull/220 wallet import and export should resolve this issue, please contribute to that thread. "	nAnswer
5	742740	Anyone thoughts on this? It's now one month old. I'll close it in a few days if no one comments on this. 	nAnswer
5	743634	"Well we do have 4 upvotes, so it is something that has some interest. Generally we should distinguish better between the Protocol and Satoshis client. "	Statement
5	744034	Can you make a patch? 	ynQuestion
5	744041	"It's not really something you can ""patch"", it's all about not increasing the version number in the version message if the update does not break backward compatibility. instead of using the version number use the version string to identify the client and client version. "	Reject
5	744050	"Well, a patch would at least add a constant PROTOCOL_VERSION = xyz, wouldn't it? "	Statement
5	744074	I'll look into it ^^ How should I submit it? 	whQuestion
5	744096	pull request :) 	Emotion
5	760089	"Ok, submitted the pull request. Please review :D It's not much but this is more of a design change than a code change ^^ "	nAnswer
5	767127	This seems to be opposite of satoshi's intent. 	Statement
5	767224	Comments moved to pull request. 	Clarify
4	624435	"Is this useful at all if there is no matching import? (export is pretty easy, the import is what is hard...) "	Other
4	624969	"Yes, I forgot that "	yAnswer
4	625251	Duplicate of #2 	Statement
3	676264	I think we can be creative about the way to input the password. IMHO it should be similar to the Android. It is really awesome and forces you into thinking about something more abstract. :) 	Clarify
3	704564	How does Android do it?  Got a reference? 	whQuestion
3	722969	I jotted down some thoughts here:  https://gist.github.com/803170  	Statement
3	762047	"I think this is a key feature. Manually backing up and securing your wallet really sucks, I think this keeps a lot of users from using BitCoin. Also there should be possible to specify wallet location. This way I would keep my wallet in my dropbox and therefore would take care of backing up. "	Clarify
3	769319	"The Andriod way of inputting your passcode (assuming you mean what you think I mean) is kind of a 'connect the dot' system, where you slide your finger from the first digit directly to the second.  This has the implication of actually being less secure than using the traditional tap per digit system"	Clarify
3	804745	"Suppose we encrypt keys with the public key of a separate private key. That private key is encrypted with a symmetric algorithm, whose key is derived from the passphrase. I believe this is how GnuPG works. When we store this encrypted key in the wallet, we also store a reference to the associated pr"	Clarify
3	839341	"Fnordsoft, I hope the GPG mechanism is simpler - the pass phrase is hashed into a symmetric key, and that key is used to encrypt the sensitive data in the wallet. Much simpler, and you don't have to worry about storing a private key anywhere. The user enters the pass phrase, and the program checks i"	Clarify
3	839377	"jhyslop, but many of us already use GnuPG with public key cryptography, so we're already storing private keys which we use for other purposes. Adding one more key is trivial.   I see no reason why both symmetric and public key cryptography couldn't be available as an option.  Aside from the obvious "	Clarify
3	840031	"OK, I see what you're getting at, Jeff. Yeah, that could be an option. The default, I think, should be to use the hashed pass phrase as a symmetric key, with an option to allow advanced users to provide a public key. "	Clarify
3	840093	"By the way, just to clarify - when I said ""the default should be to use the hashed pass phrase as a symmetric key"" (HPPASK) I wasn't necessarily pushing HPPASK as The Solution. To generalize my statement, what I meant was ""the default should be some password mechanism that keeps the wallet self-cont"	Clarify
3	850304	"Couldn't find how to assign myself tickets, but I'm working on this. So give me a couple of weeks (focus on other issues) if possible ;)  (don't like duplicating work). BTW I'm using a symmetric key (AES now, but easy to switch to blowfish .etc) with the passphrase hashed with RSA using OpenSSL. If "	Clarify
3	911394	"An alternative (or stop-gap measure) to encrypting the wallet could be to allow the user to specify where the file should be. This way, he can place it on an encrypted volume (that he may already have for other important documents). "	Clarify
3	1071393	My proposal: wallet.dat zipped and encrypted. How effective is break password by brute force? One step can require verify all file? 	whQuestion
3	1092188	"First time user experience. I am a developer, but would like to shed light on what I encountered when discovering the world of Bit Coins.  After reading a taste of what BCs were I download the client (developer side) and fired it up (OSX). I was met with a string of characters not too frightening fo"	Clarify
3	1092524	"If TryCrypt give anything? It joins file as disk. This disk is readable to other programs (trojans), only advantage TryCrypt is defense against read wallet.dat when someone steals computer. "	Other
3	1093972	"As far as I see, this discussion was not about malicious software on the device in which the wallet.dat file was being stored. Trojans could be a problem now, and you are correct, they could be a problem when using True Crypt. To clarify, the goal of using True Crypt is as you said, to protect again"	Clarify
3	1246585	"Encrypted or not, I strongly advocate a plaintext wallet. Encryption DOES NOT help backup the wallet. It does mean (to a minor extent) that you don't need to be quite as careful with where you backup, but you should ALWAYS backup.  As it is, I've got multiple copies of three wallet files on the same"	Clarify
3	1389561	"I'd love to see a scheme like in SSH, where the private keys can be encrypted, and a password is then required for using them. Make it optional for all I care, but personally if someone should be able to obtain my wallet.dat it should be useless to them without an extensive amount of work (say brute"	Clarify
3	1764850	Encrypting private keys pulled.  Closing this request. 	Clarify
2	625250	File should be human-readable 	Statement
2	780992	"Seconded. I have been using Bitcoin for a couple of days, and while many users will not care about the details, I want to know (at least during my initial testing of the system) exactly how it works. This will help me, and other tech-savvy users understand the security implications.  To me, the bigg"	Clarify
2	838824	"Agree about human readable, I would love to actually understand the contents of my wallet.  "	Clarify
2	840714	See my bitcointools tree for a (python) tool that dumps out the information in the wallet in a human-readable form.  	Statement
2	864570	"I'm currently working on a patch that will allow export and import of wallets in a human readable form.  The format i've been using currently has lines of this form: [privatekey] [block nr of earlest unredeemed output to this key] # [address] [available BTC]  The part after the # is optional, since "	Clarify
2	864895	"There has been some discussion relating to a so-called "".bitkeys"" format, which would be a standardised human-readable text file format for storing Bitcoin private key data. It seems to have been suggested here by [mike]: [http://www.bitcoin.org/smf/index.php?topic=3638.40](http://www.bitcoin.org/sm"	Clarify
2	864958	"Sure, that thread is where i got the idea, i couldn't remember where it was. The code for importing and exporting private keys also already exists, see http://www.bitcoin.org/smf/index.php?topic=3906. The hard part is keeping the data structures in bitcoind intact and up to date when importing thing"	Clarify
2	17040180	+1 on human-readable. 	Statement
2	17056823	"No +1ing here please. If you comment, add something substantial. Otherwise, code or gtfo :)  "	nAnswer
2	17056871	"I think this issue is too vague and outside the scope of what we normally consider issues/pull reqs, these days.  Recommend closing. "	Statement
2	17063592	@jgarzik ACK 	Clarify
1	745944	"Yes, very important. If we enable mobile devices, pocket wallets will be soon obsolete ;-) GUI for smart-phones should include some QR reader, such as portapayment.com  "	Other
1	968464	"Submit signed transactions to the network  I want that as well, for Google App Engine, where you cannot participate in the regular peer-to-peer protocol, because you cannot open sockets. Having something like an XMPP proxy that pushes signed transactions into the peer network would be cool. Maybe "	Clarify
1	2103909	"I offer 1 BTC bounty.  Regards, Carlo "	nAnswer
